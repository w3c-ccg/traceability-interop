{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c3ae5549-019b-4af9-8e28-77328ed194fa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9c81fbef-bb2b-4bf5-854a-776e27e8fc95",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2258b1d7-36d6-4299-897c-b14f09ddddfd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0e2426b4-d474-4e21-ad39-70bf1bcf9ab4"
                }
              }
            ]
          },
          {
            "id": "f1d32eb4-e420-4a12-9903-16ea072afd01",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eecb3d00-397b-4ea2-9fcc-291f0e06f4e9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "891495c0-fef1-45ef-a90f-8d3f5e253b18"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "832c4251-23bf-4ac3-b152-ec7996391bb0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5532ca0f-b18b-44ff-a7da-e74f056225bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83c030a7-3da3-4fd2-9694-dd5a84a2896c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f514b5e3-ebfb-4855-8d2d-d26f43755d4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a49d41c-39bf-4f98-8707-6f1cb84be65b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1dec44bf-226d-4022-8158-200cdbf0ef5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "071b5c02-be9b-4c90-8d1d-efc00718c504"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e90f902f-60a3-4c16-a0e7-5d4892176399",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b57315be-81b7-4198-875a-f6398d452a13"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18febff0-d317-42d9-94df-12d641525279",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "56d64c3e-6cf4-4c1f-aad0-de9092a18cbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba4529f1-6047-46e6-b5c9-0596f2a76036",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd461dc8-468b-427c-9ffd-a7fe823ccdaf"
            }
          }
        ]
      },
      {
        "id": "8a4c68cb-633b-41d9-9d20-0478195d2ecd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b47090d7-da36-4404-adc6-9d1d243170e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7badfa40-4c54-4c71-ae49-7e8ae0e16e2e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1947190-caff-4769-8b8d-f7986427b081",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abff691-9bca-4e47-be13-1ec4ae8589ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7de94e89-4ae5-49bd-9945-7079a93168bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f81d6c-a9ce-45f2-9246-e99ed316f194",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5077b8-3fef-4dc5-bab0-ae736c202a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f3fb931-7115-4f67-bcb0-f953f8d0ae9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a507d434-8c5a-4fbf-8681-c33f5b695f4b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587d7156-f8f9-402b-b65a-c7b52b7ffe1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d2846d2-0442-4db5-85d2-eeefdfe7bf82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66a38934-9f39-4011-8e6c-df50a93f416a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca32bb58-0053-4d86-b2ab-55fd117855e0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfce99c-e3a0-442b-bbcd-eee5509e8b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de80464b-cd80-4184-be8b-e9ab02caca9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97c2fe2-ac31-4990-b50d-ff30699d1523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de1afb6-0b36-43d0-8b05-2478ecc550c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede4581e-a3ff-4211-8804-46fed34cf1d0",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136325f9-c99b-4a6b-b7bf-d26323b7029e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bda9f86-c1f1-438e-a56a-fa0ea4546617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d662326-d6cc-4562-99aa-186246f54b19",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "49c65ec2-a3af-478e-b1c9-8ff2fa6f5638"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ced4942d-ff3c-4ac8-8ead-0170c2ec0bbc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8cf1b7c2-ce88-41b0-a53c-ee586d319da9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97861f00-fdbe-43f9-86ca-ec3cb07d91ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ec3946aa-6d0a-4076-9e4d-93951bb35fc6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cf72a34-4af9-4e07-8b8b-798ffcf57f2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9f2fe47d-ec39-47ce-a318-b434b0096c17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a54e79fc-eff3-420d-adb4-256e7ad69479",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b158d6c-ea65-4a00-be0d-8b5fc19b5464"
            }
          }
        ]
      },
      {
        "id": "e4ef15d8-74bf-4214-9573-7e084f618ddf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "64e782da-91ce-4b53-8856-89463d63819d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8caf39ef-d3d8-472b-85a9-fbc7d8733ced",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fc04be25-8a03-473d-aa2f-a79f2ff7284d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5134314b-d11c-4a14-9a41-68eee2fb0a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de739a7a-3d26-4bd1-9f7c-12836ba47924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc41371-a945-48cc-a7e0-33e0c9ab515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86923969-af6b-45fe-b61e-ed0cb0aaad80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfccffe6-c114-484e-a3a4-cada3f2ea24c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dc945c-8708-4a5c-898e-91e176a412a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d626c9d-67b2-447d-bfc5-704c54864e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d7c092-1af1-4343-b2d2-7fd195351d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a786969b-3254-47cd-89cd-8b2b2414dfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2679e9a6-57d9-48a4-80f4-c3bfd38e4461",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86915d6-987a-4c81-a65a-2e4494acfcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227c9f09-14d8-4fb0-b8e6-8115c317575d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83f317f-50d5-4cc4-bb6c-9c5ea00a30b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc7a2765-bf46-4c9f-8853-c1943d26672d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5655e8a3-ef3a-46c7-9cc2-52b43cfed2c1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16905ce1-5a5d-463e-b831-bcab18dfdac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdafe056-5504-465c-b1b5-acf4ffcc4f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe5929b-37f0-4ebc-b663-347c28c7ec2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4915870a-46b6-4eb1-8c11-e8dfeef39539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4c558b-0134-41b7-b3f4-656cc1ebe17b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290b6097-b51d-4fdf-a4fa-d20e000af77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd12eb2-7248-4f02-9f4b-f3d2693b970c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adfea7b-dc2a-49b5-b003-e55aeb308716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c8dc84f-a3ee-4be2-8e95-f6aff9a1df92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c46460d-98e7-4f91-b2f0-37291a4eb090",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62224420-d847-4fad-ab36-e80892c5ea06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63980dfe-9510-41b1-9dcf-378ef0f52dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fec31a0-867f-4531-81e5-ac233bb3dfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a278821-eeaa-4859-b574-1cb781792af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed78519e-f733-40a3-99dd-3ff6fe1ecc03",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f5a47c-9950-4c50-9d21-539cbd8afb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e582f2ec-6a43-4b4d-bf65-6084028f97f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d447e13-73ca-45e6-b21d-40525075337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c2ffae7-f856-407d-b820-6b58eb576d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c8fe4d-770a-4b74-b5f6-41099b541342",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea88f6e-58d8-4a7a-9ea4-ac2b243423d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdc64dc-597a-45ac-8aea-9fdcb964978e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4390c91a-f0e4-486b-9fc6-ff88db35ee9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db7779cc-1949-4c90-b485-bae5d730fc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a2f279-821a-485b-b9f1-040a0835a856",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c74d081-e0ae-4540-99ca-2f7336ee6370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac5ad96-c96c-4120-8911-2649042b8e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a183982-653c-484e-977f-8a4760a1d4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad56b7ad-1d14-42c3-9b1f-de7627c7baa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0766f0f2-f5be-4ba8-a212-b86e21fcee9b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1194aeae-b01e-4ccb-bf0f-0495d11e5a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb8777a-e34d-4aa4-9cda-a6379545fe59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19003a6c-7cc9-4fa8-9a07-77b6399724ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78051c50-1012-4c2a-a031-190bcbf801aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e592a55a-9d8c-4358-a144-006e05c2d9bb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92190b8-b021-4226-a41e-d5c55dcd5011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f101735-8604-4755-982b-7f3e4d214224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455f081b-3786-4fd2-a63f-f57d78c984dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47cac8e7-f3a8-4df6-a6ab-51744da29f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b455a4df-8b62-4563-984e-b1e93c7a746f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4293d050-0ca7-40ea-b3b7-d07ddf13d53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e01d941-96d3-4fdd-ae00-20d552cb8d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa36c25-9094-42c2-b3dc-7dff0fb319dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2bd6909-0c6e-4452-87d2-e478ce7b07f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc69ce1-c537-416d-aa47-d6fd2299bcf8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439200bd-82e6-4209-91ea-f2c17a402ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076d8ed8-57f9-4e85-aacc-91781e9d74dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad73e0d3-5d76-4e8b-8e2f-f6e71ff4bca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bf2ee7b-a9ef-47a3-acf2-9d2a2d5be226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d342865a-57a5-4679-8761-794659eab97c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a74d3b-a7e9-41ec-9198-be432fced876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148e2c1f-a53c-4e4a-b3a4-e16f1d074100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef27989b-69ab-4e81-a924-cd931ee8c631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4b0d91c-bed5-4e8f-a58f-ee204dcfbf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23215bf7-1a38-4952-8637-da2e2ddde9f8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801bb727-1f2e-4c0e-920b-fb3a282b81ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f097102-e14f-48e4-94c3-37c09e504d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c3c4a9-acf4-439c-8574-59f3428ab597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "074b64fb-3fd9-456e-89a0-c4131829f72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee42fe8-c653-459e-896e-a038dbb92ae0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d0cd52-5351-4857-bfc1-a1d7b3a4d7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2693a0ef-84d9-42db-82f1-4100e5aeb8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71895809-96f2-4bf8-8f37-5676421212d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "425a6ac3-8b47-4dcc-9aeb-4b801960a9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22760895-a960-4014-a160-91f62b778ec5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8d2fdd-4cbc-4268-90f8-12bd5b29e390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1f6ff8-4968-49af-9c9f-cd3ca44db34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d66c6d-258a-40a8-8891-a27bf8c0ccd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "856eff1b-0945-4d72-bb3d-6d6f806fc3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faa6add-1fc1-4ecb-9b7d-de890b82b90a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0daab63-4765-47db-9257-b0b81b5298e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af323bab-377a-4570-a9d5-ba881f83a860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ede13a-a3f1-420b-8715-e7df0f254e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3363b30c-6ab4-489a-8065-c8257b5b5f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73f20c6-5b0c-4f6c-acc8-1e839cf61613",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248cc1c8-ab38-46c2-b602-ecc415cb4e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dffd8d-036f-4163-8387-31342f2f7e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1473b3d4-dc2b-4c10-8b4d-0a056a60b5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73bb9047-1dfb-4978-a690-f0eaf6b2a85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a913db55-43bd-45f8-9f86-498ac4f2b895",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6661a5b-df70-4769-b801-8fb8cea04ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9227fb63-f945-4658-9a31-534a7e9c2402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10feb75b-2f62-4b7c-9199-043a0dcadbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3faab4-a854-4dd2-bab3-66b3d71c1278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162c1bf7-9a7c-4ac1-920d-b3077df9abdf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcb5a76-e000-4640-a669-bc0aec21b10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224a22e1-01ed-46b8-b140-60e4b2e4c731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9cfaee-7b3e-4c73-9ae4-3bc84347d412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "038ee9d0-7fb3-4aec-ac9b-c6c2c2e38f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f181629d-b54b-4134-94db-286130f0fc3b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579b19db-03e9-4f8e-8d9d-a2e9a4662562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1430d4fa-2670-454f-86af-e8ed1bc3e743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2363642a-03b0-4537-ba5e-260111b208fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d17752-1965-41c5-bf53-83c8ad0ccf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45a857f-e4a8-441e-bfbd-5f7059a841bf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d084c5-2e90-4f4f-8664-34e435fe10e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb12754-2603-406c-ae60-25f16dfa3ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee019af-f98f-42ef-9e67-adc2445ff0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f24cc5bb-b62a-4ee4-be89-7af82d9a5609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff036f4-56cb-4d15-8ba0-9aee9e295f68",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d11ebf8-1d01-41ec-a40d-ebcecaddf4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482c20ab-0df8-4fa8-8672-9c19f47dfde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97176ba-dc64-4fe2-b370-efdaae6a5438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d82cd2e-d7a7-45a4-b6bf-1472e5bfa08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd736be-1bbc-4710-9317-e295e367aa75",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccfcbb3-ed83-4b3e-ae4f-a9fd84e90799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55d5e66-0873-45cc-a402-0d284f8897ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3e04af-cfb7-4854-bf5a-da195fb3c0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74350705-c6d9-4b66-a482-bed06af2f307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468e7806-1a35-4bd1-ac08-85dde9922915",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3692cec-0999-4224-87e0-b7c3569dd3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d7761b-d099-4611-9837-d56efc422d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc31996c-bdd8-4dca-bff6-8a7ad1ab1683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f72c01b7-91ff-4cf9-8d46-08a49b0b8cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59f7b17-8ab9-4177-85e2-ffd002106880",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db8e35f-790f-48d8-8362-ed60bf615c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f1127e-2b6f-407b-b06b-f8135833a183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c9c8e0-3615-4992-b7fd-59aca0caabfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d62365b0-6721-4340-b36b-029f4000f404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec590540-1f68-4c73-8aec-144e30f26458",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b060aa23-8776-4418-af2d-7156ffeb59f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e102693f-f743-48cb-8b56-d71330a2f4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e03de9-b15b-439a-93e3-b6da46d5d520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81655a49-31ce-4f2d-a1b8-c8e232e5acd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bfe570-ae3e-4b39-8b52-637ee0de7e00",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92be11ef-35f1-45d3-a946-7562d873ef11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0746bbfa-ac77-46af-b38f-22aa2c1fd9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4677510-0cd2-4e5e-974e-df1fa1e9f0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffcb9690-7795-4d1c-bc53-59816d087a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b446792d-e895-401a-a05d-2ea2cead79bf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589ec380-b199-4de8-91e0-fdb75f80ba2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c89088-7351-44a5-9c3f-ce8115ed476a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cd6eb5-cc00-4aee-8a38-4acbb7de92c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0532357-5037-4b56-b0d2-a3637f368987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eb18c8-fae3-496b-86e2-aca1015850fc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ad3eed-56a3-4175-a2c3-cdc3ce245de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d882d36a-ec9a-4ce7-9d60-10b22d4bd2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37999cc-9078-4fb0-8f8a-cd8c79001fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c483cb42-d9a0-4cad-8c1a-dbc90a68a55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e39d8a-121c-405b-9356-35f4d524ca1f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7ce52d-6995-4105-87cd-de9dd4dd5739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b333a7c3-f778-4e14-905c-9badf774f379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafc062c-a563-449c-8ef3-168792de1b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5a4217-e7e5-4fb3-997b-444bb4b417c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff515bc-3e7c-4c91-ae28-3ef7fcfcd4ba",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abf2b46-2c22-48cc-b43b-d49d42612c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80dc43e-97b5-4416-bc47-1f4135cd3dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf645612-73b5-4ec6-9a95-f82dea93602b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "844641e0-522d-4fde-97f5-7b9a1bfb699d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6edc55-913b-4d38-949b-47860fdbe63e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37807331-73e5-48a6-af86-5d606937eb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b6bc9f-602a-40e8-a53f-81401031f2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137c874c-3ba7-4262-860c-22b9d5954c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e97bcdb8-45c7-4ad3-a177-fce5792dd836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bc8ade-a99f-46be-b80c-5b5891e46125",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b0a93c-70f2-44a2-a312-b72e313d69f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294e30d8-9cff-4aab-8410-46a9fa0ebd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad5177b-7d42-46ff-b7e6-c010ce30b978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f9a8e7-a220-48f8-884e-f0c9f3e088b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd860905-580a-409d-8576-d7fe69c39324",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1192bf-f74b-4ff5-9a97-648f4786093f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fae9b7d9-18ce-4054-9891-c279b5f1afb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7036423b-9dde-4594-bec4-ea601babdf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d015f9d-d204-47bb-aa5c-a1176ed5ad08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b9ac42-a231-41ef-91ee-71740739672d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b28751-6837-4178-8349-5659df8a9b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6af99bd-5c54-4080-a1b5-2bcae5ccb691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38113852-acaa-4aed-9be8-2c1ca3334ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5201533-db4e-4785-a3d8-d876ac3ae304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad46809d-e7db-4a2f-8d12-7e407e3d69ef",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc3989f-ac24-47f2-9c0c-4be8a8ff4c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1295ab94-0a8e-44fa-a1b5-fa4ce0482ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a06a3f-413a-4ff4-be22-9af9da48de44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a715416-ad52-4789-97ea-600a818bafc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b5857a-502d-4812-86af-2d9cfff51bd4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd78292a-55c8-4016-9ad1-c82d52993cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cba6762-d068-4d12-8880-73c41cb3860c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2fa74a-18a4-4d82-8c5f-2dfff1248fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a300d6-54a5-4165-80aa-49c000fc853f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94c5b76-25e4-40f0-b2e4-30f4bf1d694b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067a3eba-3822-4b1d-b541-fde4b3e8b241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da31875-94f5-4e02-9c00-5e1f46ccbeb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe06c9e-1930-43bc-b0b8-840336992953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bde27c4-3d00-4d77-b2f7-7e4c3e000258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7605d2aa-e688-4a97-82a7-2c81dbc7b492",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dede8845-1f00-4141-90e9-872dc0bdd53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7fad4e-8c6a-41a4-b696-8b72f16cd752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f087f4-6cc5-49c4-afff-9f0636af7f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3208ce-3b7c-4008-a583-725e801308b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb76903-b9d5-4812-8249-61eac05f0011",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de607ec-86fd-4073-8c87-bffd95d36635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4aa905-b99f-4478-890b-2c62f28ab13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d136ff-b19c-41a1-9dfa-414cdff3f1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e80d6cc5-9466-48f8-807a-2df78c8d74af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28fa2b1-dc06-4e10-ba15-1f40ce3001e5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70104762-89db-4aeb-8594-e7b06002b9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3d1253-56b6-4500-8ec5-56bef7dbd4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d74a68-4203-477c-8b3e-56b4a8a49cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "72a07be0-a795-4f3b-930f-efc20e6c70bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0958676-23e5-41b5-9662-ef859232cd3a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482700c3-c03b-4677-8f3c-be3f583586da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9737062f-2f46-4fe8-b49a-12fe44b41d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4ffe4d-372d-4d90-925b-c41e902f26b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "11d55769-2f62-4214-904b-f6d8605270c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae813de-13b6-4092-86aa-e4762fc34249",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747768c7-3c6d-4c3e-91a9-bb34d31aae47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c6f2e0-3c52-42b3-b955-2a805ae18759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f20748d-1c61-4d2c-80cf-7da4af0f803d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1350d70e-017c-4677-91fb-6f1de7811ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8726424-6cda-4eb1-bf93-543b58830657",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69b162f-a899-46bf-afe6-5c187f101348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a3abb1-5410-49be-8740-cb7a2c86cc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d996514-b54b-4214-81fa-c2462cd9e381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb1ae2d-b73c-4b90-aa10-3c3817353d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a001efec-d07d-4f37-bf4c-e9ed57989cc2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a56732c-1927-4b5e-a4f7-a9f59a6544ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709896da-257a-4568-a3a7-001c122cce62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cad05ee-4027-4386-93b5-804bf5a2ae68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e18c074-1c4b-45ab-99f0-ffb64d623eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4086dc-d612-4e6e-9b41-840e19edd69b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b50fc62-f691-4679-94e0-148786829367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09db152a-b1eb-46f0-a231-5359d09daa12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de9ac71-07a2-4932-9fd4-266d99a46884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4431962a-1ebb-4319-afe9-55e375c1a604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a98dcde-9ae2-4879-99fa-695900916c13",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f579f77b-c6d9-4515-8b8c-adff3b195e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c12746-c102-4bf0-813a-0f6e35d285dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c1cd2a-c98c-42c8-a766-b6530311e0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f5a4c8-7cf4-42e2-9f45-640f6cbbaaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dee9b8-0a05-4b09-98e6-694394a72145",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d83b275-74a5-43a0-97c7-cc34c3a8f51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc36fa8-626e-47f5-86f2-a3d094eb8b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e024ad6c-c98d-4bf6-831a-46e20af0541b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "730bb7ab-d1c1-4ce0-9228-79f1c0d549db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c097cab-accb-4c9e-af75-2add6b2f9386",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203ed17e-65f0-479d-8f61-ae82ff46ed9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcb2251-be3c-47a7-8f76-243ec1028271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d098059-469d-49bb-9f19-6ae3332c9168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "07baf672-2fbc-4919-954d-362dae558109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc0b588-cf81-4780-a816-f172e26632d7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf598e9-6dfb-4679-b92c-fde5b89a05dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b410d27d-b187-4eaa-a2f5-266060c0c41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7af8c5-4bec-469c-b841-30ec3ee86752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db896fd1-0ece-4ef3-8351-ed8c80674b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddda258-e5ea-4e44-a9e4-9a28e126b3df",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8a388d-daa8-4bfc-baca-a3db05f18ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437c7c83-e0bd-4048-bf62-1d69e4b0fe50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94771ac1-f77b-407e-8242-aa8e40f5f3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c153266-e9fc-4539-b190-a10e8379cbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9dcbc3-cddc-4069-9fd6-f5193405e135",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf87c1fa-65ae-4e9d-8f2c-0506d48072e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c94cce-d83d-4f14-bd8c-419726f53d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8064b4bd-74ce-4ced-a51c-2182d85570aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea56758-ee9c-45d4-8cfb-b17db3a82ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6844ac1-ac62-4122-8b77-30802f746e49",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c6d7cf-3f3f-48d3-bc6c-9ef7a83ed0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584d4019-e6c6-4789-bd71-2dbceb0d041b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8819bd-ccd8-4456-b76d-9df9bd777483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6810ae-34f5-4131-911b-362d242d6768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60df3b8d-c589-4d05-9003-8ae8548779a2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02c53d1-481d-4730-95ec-7fc4d8031125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07ff8e0-6aba-40ac-84b7-ed192a41db5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a85b3b-02cf-4cbf-be0a-66286a831566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9e070555-c7f3-4565-b29d-de10bc392962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77da1af-ff1b-4b57-9c3a-2998f14db527",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6471d1-d912-41a4-ada6-407bbf18c46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99a30e0-e378-447b-ab6d-90e9fb7e273d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103bbe1d-62c8-4485-a10f-2fb59884b30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1fdbe9-4599-4f97-b91a-ebfed6d0c030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ed95a6-d3a3-4b87-895a-b7d4aff4e5a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe80ccb-ab95-474f-b4ab-599609148bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccacbfad-6b2a-46da-b15f-ac1ce8b0cfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988d7964-27ef-4c42-9d8c-4b58186af67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc167431-57e8-41f9-9abc-08ec2204592e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4197852-cbb2-4c1f-87b3-8c714372a8c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9373ab-dac8-433f-acdb-d8a74d10591d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c5e73d-0c8d-46ba-a878-7b42d48ec90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f19d04c-da7d-4f1a-abad-04f542159b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe319da-616c-4185-9dbe-7cd10910128a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d69f89-156c-4466-88cf-24b8ef5bafa5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ab18f7-caa6-4a21-aaea-a79b9a31c1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25c642f-4186-4c15-bb54-d48976912a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34c06b3-3bcd-46b3-a754-3e689b55bc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd22316-eb8e-4544-b2eb-1b3fd1c842b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457db19e-056a-4ea0-854e-b168f012ba31",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2c46d9-2f47-405e-97f2-5bd7acc08f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5c511b-8a9e-4bb5-aa8c-60b18ac1b5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a61105-3157-4a38-8635-c5c9c4f3870b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec135719-4140-4b94-9256-3df30de6a16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df374a1-732d-49d1-9f8b-bd93eb74a409",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158d37aa-d8ae-442c-ae39-11abe04a7aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0375a39-b091-4e5c-8354-33a44328e48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6ad661-55d9-4eb6-b747-fa024597a4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a13721-3462-479e-8195-361916a8702c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8393a991-f8df-42d6-af0e-247beda40ecf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4c132e-3913-45d4-bef2-49682fef8b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e443695-830c-4f8d-9de3-0757d57bd9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d05747d-48fd-4123-9136-a6389a9a8c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b40b284-d5e8-4e4e-8f53-c2c8a4c61f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8a8c91-dd40-41f0-a403-c74a41bf63fd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934c01f0-7552-4b59-af70-cd536bbf4061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97329fd9-fa1e-4c86-b4dd-448ccac4b9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad7b0dc-2069-436c-ba08-17c4bb22520a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d5b66e-f087-419c-8c01-bb8414cfb4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a274d51c-6742-413b-9beb-04d3a04cdb05",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b39dadc-fa3e-4347-bae7-b9bdbbe7ed0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3609647-f92b-4fc0-805a-43c577fc57cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b01dc7-eb22-45e0-86e1-778c6a1d46fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1176cb-b5b8-411e-a23b-5a9edebc3455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec124de-f18b-45f5-bf93-2e25822ed0c8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba55223-a3a4-48f1-9421-d83b49f6ad18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bb4f4e-ab9d-4931-99c7-7ea46f7f040f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477ff77a-17af-427b-a1e7-6fceb5a618af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4d8e7c-4bd1-49be-b329-e1f4b12b1ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b3a02d-decd-4e2e-8acc-0805f1769826",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd01cdf-66d9-4410-a531-23120e2b9202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22644440-df8c-4e4d-92b7-b146345d8cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634a30cc-54d7-4edc-a5d8-9049635c15d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a027cd4-8cf8-415a-b67e-5681faa4d444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0069e4db-6984-4c49-ae80-4ea5b31e186a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1dc9c6-dd49-4fac-aad1-22c9875e3647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017945ff-1cc3-4793-a296-958efc9c010e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e221d6-3a63-48e9-b95b-9214192c1411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9ab16a-67a2-446d-b0b1-1a546e6ca579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe305c0-3d9a-4435-9b99-5f3f74255388",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c244da8c-870b-4731-88dd-f518fdbe5acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c654de3-358d-47ab-9768-4c90c6a0bfce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3f2486-7687-4f26-a0d8-686b11d1a98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "243d7242-2f47-4f4d-be0f-41b22f142377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604b608c-a4d1-4f11-8f8f-2c051a1b471e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8326be-1eed-4402-9e31-d604c4adbf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b50d32-4fd5-4da7-905e-d14622d64f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c2cbc3-37f7-4169-a408-cfb6e59aa830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d21ff790-dd5d-4e0d-9054-7765b84560bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f41830-d9ac-4442-9585-786949b4e7dd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40631b0-84f0-4634-81ef-298fcbe69ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bade2cf-2645-4fc4-ab0f-307cfda86677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628afa80-3f80-4180-81a2-3b1cee7ec42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd957c6-52ae-4c11-b395-98e08796d73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07947f80-9b32-40e6-9709-5c33e2545ca9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9d2c64-2076-4a26-9164-9b028a90ee05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5a223b-d820-4417-b8dc-f903dc370786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0417f098-5057-45ae-ad63-07928b473277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "965160b1-377b-46a6-bcea-473084ef744a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fd8edd-0b26-4509-abbe-9be40abb5531",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d10492-df87-4f62-8986-5f371e87cd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7345ac1e-2c95-4877-a61d-ce9871a9ecaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0401d5-9978-4431-81f7-2a6e73c4b942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b96773-88af-46ab-8f47-7c352080b719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d66612-dfc6-4b10-b4cf-85d0077c2a85",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca94f38d-f50b-446d-ba19-9045524fbe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a1190f-3d35-4ab1-b6ae-8beabb2c3b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c57824-4319-49b4-bd11-fb1a8f2e6c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d468112a-052d-4a59-99ad-d6748b71f983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c282756-b099-400c-9f58-92dcfc777cc6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f256c0-b62d-4c37-b93e-d5848f930be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a19275d-4869-4937-b184-ca2b22e34403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131328fc-27cf-4ca9-9aab-51615abc43ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca66983-38ba-4b1e-b6ee-823f68319560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3693dd6-01f2-49eb-b76e-e1473c42b6db",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfc225d-0dd4-449d-9aa4-f47590a2b422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b43de17-cef8-4978-92da-8d47e358e224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4016833-3faa-4721-98d8-c6ff4676b5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c39d3020-7497-4652-8279-d812f00495ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eefba9d-472d-4b07-a940-2e86879f545c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89a751b-f59c-4ceb-bed7-14b712a52c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a647f0a2-1ff2-4257-9d19-56736cc94093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f803fb64-4192-4ea3-8593-dbe670abe562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bd3fb4-8a65-444e-a425-93065747229e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a516332-d521-437b-a5e3-cbc92cb3edc0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dead6a33-a339-4457-b9a4-65d29d55a11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb36361b-d507-4ddc-9a04-2d3a8d41e75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e39d7f6-f980-4549-ac09-98ec005f4a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb569fe7-d819-4801-be79-e749cbda0642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cd3738-5af8-4e91-9fec-aceac66882e8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a1fad3-676f-4018-a871-4d444a5af9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3047ef0d-6226-40a0-b735-5aef7b4248e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d311a791-8583-496a-a584-59d08777a6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32beb543-7cc8-4365-831e-8e35e5d631dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddae5e40-5d7d-4282-9f71-9bd484ae548c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e50533-6b19-4200-bf31-371e7a33ab81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265bd14b-7579-4c6f-b50e-613591f178f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9458752-647e-41ca-a732-ba072e4f1c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8894f63e-b92b-4a1d-8160-f6474a0bcac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b9e6d9-5c21-4b46-a478-bc1dbe783439",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e818d4-44ee-4f52-a91a-c322d8a08090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05083001-6547-4446-afbf-97c30e213fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508ded7f-d49f-44c5-af82-138c19bc6452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddaa091-af05-4f30-8c65-83a6094895d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a85448-cf0e-4fea-93be-321f56467394",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd32ae14-f7d1-47f1-bbcd-f0cf7e88caac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5336227-d85a-44b1-bd93-3e1f75cb5597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ceaec8-4ced-4b25-ad3c-f8dd26360164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "942c9325-1029-46ed-833f-3c73dfb634e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e38533-a496-443c-8d9b-1844f2e84afd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed291b6-fd40-4f22-bbc9-70bd4cdcba51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcb7a06-6759-408e-a91f-f77e158d898c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1115da-5b26-4322-9528-d8c193095082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "643155b0-3fbc-4d79-ad6c-1d4122667496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3135e0a3-a369-43de-a59e-e08829c92942",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cd2ac2-8e31-4a12-9b47-df86a1db8f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89509eb-bf03-4945-91a1-cdb8802072ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6ee411-ff44-4bbc-970b-f007eb94500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1161cc68-1285-478f-9155-89deda164967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdcdebd-caed-474f-a5a9-683c3826d828",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5beb9515-a005-45b8-abcd-69ff71fd6ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ea7dea-0fde-46c3-a32c-a509065d5ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6a9339-d55b-40a1-9e81-08372d823d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7269144-4c26-48a6-9a8d-3a3343e1928a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5345f3-f163-431f-819a-00b85bc8457b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3711e2-56be-45dc-a19f-bcac1d3c79b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c94012-bc6f-4ee0-9a16-aeb7090ad8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ff925a-42ad-4860-b23c-f43648768df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb078ca-1516-442b-9c4f-2b078623b896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bf80a0-d334-43c4-99e8-f5eec4e9067f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9388525-b865-47df-9c61-595961ac9566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1312b7-a6b5-47e4-bfb8-a03f7d4a93fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1012673-1dee-4f25-aaf2-09bec015665b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dfbf20d-e266-4fb9-b4a1-a6b9f04a56b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad1b4e7-a4dd-41d5-b5af-312180ba0ec7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bb3a2c-d7ec-4c25-a9cd-b2b9a519bded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7392688-2a54-4120-bf5a-3ed2adb142fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ea97d0-4f5c-44dc-a826-de8ecfdc3588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "530066fa-9464-4820-a135-cf976809b54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d00e65c-9b91-411d-90ec-bc8c862fd692",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c193e1fb-7aec-4773-9a29-627a60be060c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7111935-13c6-47e3-a081-6405be346347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b5cb2a-8d98-4cf5-b093-5728cd30245c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4acbd133-3013-4de5-b60d-b06fd62eda9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc815234-3535-4768-aec1-7f084ed8128c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5e0b17-4df2-48c4-8d37-c64cc009c49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbda4b3-d441-4b14-a7a1-978b7bcf7df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87259cc8-d112-4b79-a6e5-f9e4b2ed1dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b5b6a6-77e7-4e8f-b7ee-05a0fa6d3074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ab78a7-41cd-4282-a662-538d5495b021",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743159dd-87f1-40ef-b76b-d3b22d29e64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae95da5f-8cae-4a1f-aff8-e62ee77dcb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf40e4b7-c189-4f0b-8df7-1a98f538e6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0fa0b9-a3f5-4f0c-b886-af4267b7bbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69468d0-5a82-4872-b8a1-f3f12244fd34",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47507e5e-0f79-41a3-ac6c-6e237a51d3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f873a0f4-7d46-42d0-b61e-137ae196bf3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab019cfe-8632-459d-ad22-3d0bec1702c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1427e28e-92a4-4398-8116-800d915b8baf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62f1cb8c-630d-4a3b-bef6-58dc3d4c85eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a5a0d91-9533-4bde-942b-5f4234dc2af5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c358fa-10d6-48ef-9b19-011880ceedb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "642afb50-6f56-4911-9cbd-ac22b63a6421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8305208-a77a-426a-a546-9d502e83f021",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13f869a3-44ea-4aef-8088-a3b43e954a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3aba5f-e43c-4d99-816a-0cba7e89dc98",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1237967c-13e4-480b-822c-145b6cb209ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c33bff2c-2936-4f4b-97b3-2bd705bc66d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32159142-0624-4ae2-bead-863707db7a41",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f42a8c48-4098-4f91-ac0f-86d84a384c7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef0e2fed-c38f-43cf-9f10-236ebdc2324b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbd71f68-fa2b-42e6-818f-18ac4e79d7e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a1f4689-241a-4592-9a39-4bc43706b17c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83a03a29-2c51-4a7d-9155-578e6d4b289b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "257a14a0-a0c3-4d1d-8933-5e6a2c3f7f7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b7e3645-6143-4e25-9ba5-9c03a8e4b806"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca21981a-f207-4d9d-b1cb-babc98684a79",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb346f62-abba-4243-896b-59928950971d"
                }
              }
            ]
          },
          {
            "id": "5292a74c-8081-4050-b4ff-944a0799ddd0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "47758963-5238-4b4c-b3c9-b8e1dff9397e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19bdabd5-d112-4c06-8581-38c0a06c3398",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e2d6249-08d1-44e5-bef5-510acd70c564"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2795111-3d4e-4a10-b79d-4a475d8d4fea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2bb01f3-cb37-4b0a-add7-06a5801b2cc1"
                    }
                  }
                ]
              },
              {
                "id": "1d95a83e-dab2-40b5-82e5-b0e11f40cb21",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22c398b3-bafb-42ae-9b58-c0122e994114",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "460abc82-1ffb-443c-9843-689d970b70b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18b9ac7a-bfaa-4f8a-ac14-355102209764",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9c5e9463-7180-49dd-9d50-0193d9bd1d43"
                    }
                  }
                ]
              },
              {
                "id": "c7aaea69-d321-42f6-8248-f41f6946833c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bd1d869-6b4a-40af-9f81-69f438c8fce6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f78b418f-948c-4bd4-bf61-614cd371ca25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e4f6a9d-fa9a-4620-8ceb-cb54c3d50abe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67e93401-c7c0-4f6d-9c59-12c067d46579"
                    }
                  }
                ]
              },
              {
                "id": "276d1f88-3e74-49e0-9cd9-2b5555163a58",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66b87bc9-8554-4df1-93db-7c00a86f5cf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f534aaf0-f9e2-4ca9-8e8e-e1d91aa1dc19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c56e7669-378c-471e-9bf7-abf552877cd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "20727910-8a97-46ac-95f0-dd3648c677da"
                    }
                  }
                ]
              },
              {
                "id": "5e0c6944-207b-4200-b61c-ea6dc12fd0a6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa124caf-91e8-4e62-b5f5-5d41f18385f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8573eaed-0978-4a58-86f5-21f065a9c9bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c163d287-f88f-419c-9ec2-6a693adb3a90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ade3e01c-f012-48ec-9fc3-b4cc0516d1bc"
                    }
                  }
                ]
              },
              {
                "id": "4327ac2c-5258-4874-9f5d-394452487972",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a91e60c-bd04-45f8-b505-d2fc2849599d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "936bb409-dbb1-4e2c-87fc-080d9a5c3c6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c68776c0-c449-4a18-a9b1-015da8a41b1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a62e4fff-d1e3-4475-ae13-e6b6810dbe0b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb0484cb-6f2e-4eca-a3d3-c91a934142e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95b13872-3f45-4753-ade3-1497f1a3e65b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1beeed8-cf19-4981-acd5-496c061a1bde",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73d2ae2e-3b75-4ba2-903b-4fd1fbe7db60"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1b84737-a53f-4ee6-b3af-ab311d7efd15",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cd0138f2-8f2a-4f5c-8438-e5affaf013ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd4e82ac-1bfa-45bb-ad32-1e55d704a8b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e2612ca-0f83-44aa-a512-396efed44085"
            }
          }
        ]
      },
      {
        "id": "151592fd-6a63-4afa-8f10-689f92d07943",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1db64e55-5dd5-4f20-b99c-7fdd6c1db5ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45ab45bb-2f6b-49d3-999a-9ef613f90ceb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95f1f336-c043-4ecd-b169-c75168eb8ffa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd94930-8c34-46d9-8904-142d6ed96695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cd4a1c-4aba-41b5-bf99-3a4efe15defd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3dd1f8-5420-4233-ae65-05d964f91434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52f7dd7-cad3-4498-a814-32661266c357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da3d2ff-5b35-43f2-a8e0-31b257e9468e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3a44f9-cbd7-4b85-848a-07ba53407c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4160d941-06b8-4b59-90bd-de6c2f089e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6528ea6-fb72-43f9-9aea-c48dc6d1273e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "008354f1-3c91-4ddd-a9e6-8d3c600cf456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd83d13-cb1d-4524-b8f1-c77ea768bc85",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd9b927-34a5-4b36-bf4f-c959d0024406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83fb217-6bed-46cf-bfba-bbc40853712c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d3374a-89a6-4f56-b165-f1237eb5f020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4c1657-0057-418d-bd12-373b09edc41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce75dba-83d4-4b35-b7ba-3f341bf6c82c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6446fa79-09b9-46dd-a7af-8c86b80eed12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f1588a-015f-4d67-ad4d-f3334bbc7662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137b371d-5070-46fe-828f-fdfe7af08873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b96e178-bfdf-4447-b1b2-54ca8419f363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8881c71-77b8-4994-ab50-9c6c25b5ecb4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58782a39-55d7-49cf-867c-405daf1af5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a9d1f7-3443-4fa2-b292-f2fedce3d981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6711965-3c5d-4fee-b547-0899351c6194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba7b358-518c-441f-805d-23aa8b1bd4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370395e5-00b4-4ce4-82e9-51eab2a4e7d9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c4c809-3243-480e-9466-07289f1f7f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b7cd99-d84b-4eee-be8b-3334640174be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea53de1-534f-4d64-92f5-37de01ca7866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61f01eec-7771-4482-9f17-adf5557bea37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9470f0a5-826a-451b-b593-f4517fdc1449",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecba22e-cfa3-470a-b035-d8e6d38c6bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc15a97-c45f-42fc-a9ee-ef5ed26693d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf52d26e-742b-4a05-917a-15e0af55d185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "89f33990-435c-45f4-ae2a-5a14ec63f271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d86838-fe20-4b1d-b046-d607843bf778",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efa0158-7a5a-4817-abdb-4cd010e72cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4ffed0-0dc1-48c4-a8e3-ac3d125b6182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8b4a81-4dbf-43d8-801e-fad833ca8290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3a111c-3b71-4f04-a7ef-4731798b4b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93f9279-1691-42c6-abfe-6e2657f91692",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eb2559-7969-41ad-9114-5c8ca2a8ce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c1e309-a1f9-44a7-9296-2438fc762e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e9fc30-2aa4-41f7-b675-e5799d2572ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b89164-6fa2-4ba1-9036-c3ef756c23de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd87fb8c-064c-4a5a-9936-f1e0a498377c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5566a580-2146-419f-a848-34c777c6f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc59f2e-7083-43ab-96ff-e24a3c9c8e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764e4004-8911-4d69-9edc-26ab194817ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6451fa89-e38a-464d-8226-ae8f24773dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a08ee7-a7d8-4338-b145-27972b518ad2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d23ca83-b197-44d2-b8bb-1a75d9dc0878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372fd2e8-e770-4633-a1d1-58dcf89869fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5c29bb-8932-4fc7-b582-ac58c241c426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b5725c2e-c3e6-405e-83d0-92906d041969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d519dc4-612e-4912-a3c0-3e6c820f97d8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6369b5f3-d3ef-42ce-9746-21363c272b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7c8f12-5377-405b-8dda-a88f4139c8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee47f7cb-8d1a-42a4-bd9d-f5f2db5f00a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f71972c-8544-4d18-b710-61a2c6de2d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc4b769-53fc-4efc-88ca-5e9c334972ba",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426d723f-650b-43ee-9f3f-fe4eb6731fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a01ae81-f8fe-49a0-b43f-5e303f0a1ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a552e26-866d-418e-bddf-2d116f703c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "badbfefb-857d-43a4-9c74-70ab13208ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a738fd48-9795-4a36-8c3d-4c4899cf7f34",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18cf42b-3056-460d-a06d-deeca6e3453f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024807f6-ed0c-4134-8b51-f7ed9a304ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3046691e-b81c-4c9a-9c06-6b4d43967443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcba3107-0b13-4149-a004-4c65da09b5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1af3b5-b15d-4a67-8c7c-fb633ba929ec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a4090b-c520-4b37-a88f-9072c207aa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34484afe-c6f2-4448-93e3-6f6a720abb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19ee7bf-0dad-438d-9ae6-eddbeb2a9561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "de43db42-bb8f-481a-a033-0067a0afb39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10efb89d-6bf7-49d9-a47e-513484bc3496",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b622c8-7b8a-4380-a55f-4378f54126ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b21925-fa19-416d-b0d4-b1cce73eb97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791d2cb6-27d9-4532-9ec7-76b9eac6af46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "547484fb-eb56-4451-8a07-45e6b02a032c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9c0450-3732-424d-8a66-a76ad2c84ae2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff3589e-53ba-453e-afa2-10bd002126ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6382eca5-ac16-492e-ae74-0212a559b048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8249ae3e-f15e-4e98-ac0a-6fb47205dcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b8d942-5edd-4297-8a88-f1cb5e366572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e52c261-181e-44df-b82d-dc5197f7a305",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecd4496-87f5-469f-bdbc-39088302e6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b25dad0-1907-4d75-b095-0eef072adaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76177ef-ffec-4465-856e-0d856f851c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d66d19-801e-4fa4-bfb6-9a6a5291c2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4781ac67-a7a1-4f06-b568-8059d2ab69c1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b87301-738a-4a55-a613-aa813b3bff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd225b54-a34d-48e2-aa75-955ceaa99182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de482f6-31d6-4855-aaae-a8dfe3af70e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81442538-901a-4032-8868-067905d690d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe94a2d-77d7-4451-8eb0-dac6ed9711be",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795a2ea8-8951-4da9-b3f0-85d6f4801135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0479bb3-44dd-4837-8f13-55b7d7711202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c422013-499d-4c60-9a33-7dab27b2b56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "251f9280-40ad-4d90-8e65-04eb6ff2b5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ab098c-c76c-4d68-b8d5-946a426dd23d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8319f708-4fd1-48b9-a37a-7500db575099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c763d0f8-8df2-4e4a-ac27-b2c21066078d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e193e783-26c2-4a29-9de8-92f052f4bae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd14069b-5157-40bb-9b7d-c9688d8a9a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ff3cc4-667a-441d-9f28-098c0832ce1b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ded2c1-9bd1-498b-b248-c59e7941c443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd79934d-fa5e-424e-9c1b-701804774282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d6c2a7-23d9-4fb6-9cb8-080dbcd6d383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51eae319-d863-4905-90d2-829c25c1e8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efc2169-f535-4129-ae91-fabee1ac5449",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1a3194-f27e-4ea9-b488-44d510ec6b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff52a01-4d40-4d7a-a3d5-18ab9b0afa26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa83b17-c087-427c-a6d2-52662ae7d427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1540d063-9bce-4dd8-9786-8ab41103341d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd710bb0-e264-498b-a178-2f13b9ebe26a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44beacb9-f112-4d4a-860d-a9e491cd10a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53df730-3f82-4850-9909-9954417f29eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3512d3fa-9358-46d1-903d-0303bf6299af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbd8e8b-6faa-407e-a6d7-5b38618c3ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b23bb7d-e4e3-496f-b8e0-1d57bb387304",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4110c3-1050-413a-a3a1-f2adeca179f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afb1cf2-9c96-4a3c-b18b-41b4b008e56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aebbff-1808-494b-a722-a83b6e6acbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2fd528-5cce-4d46-b2fb-17d0ff35dd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d9144f-807f-4f06-ad77-c1eff648e1f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cee1b4-2c24-4773-954c-e954d43e85ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bdc704b-c73d-4771-8204-9482ebc433b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e4bc3e-0d9f-4660-b975-ac1f1233dafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5504c0-151b-4d8b-b790-620adc957a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ad6f50-2330-4d90-8847-867edef73a8b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a90813-742e-45bf-abe5-1f2e12cefb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51dcbfb-069b-4f7e-a5d6-045d67c4fa58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa830759-c1b8-431c-8611-019b8dcfb4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "696f6c56-00be-4ede-81b8-f31cabd24c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9d2834-47c1-410c-aaef-5e438ae0ce2b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c22f6a-cf0c-499f-9826-28537c7f6625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75806ba-ea24-4e40-adf5-8d628f775995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cc4556-36b9-4da9-9083-e675aec592bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5d73d4-b301-4dde-832d-4bdfd9c38742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54c9cf3-6dea-4c4a-8f3f-3e31a239e05e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5202af66-118b-4fd7-8ebc-c13d49b0d25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db600a84-e2c9-4bc6-b9fe-1be3c67b1d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43f1834-0ccd-4eb2-b617-52bf25ae7f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ae975c-5223-48dc-8ef9-d79bb77eb9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c583c72-1592-4c5f-aeb4-d3316b708040",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf568f9-0b42-40b4-bd1a-d39dbcb33b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4239e3-96a0-45c4-baa1-9668d7ad3c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b63422-f7c2-41d9-9a3e-599a5a6ece91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "858c53c5-9686-4e66-b710-4f3184073c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2d796f-bee7-4002-b0b9-3cbfc4cfa851",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148628a6-1feb-4d22-a2b1-f3335f68125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b79faec-b483-4d98-9e12-43217f45d6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e435dd84-e8fc-4094-bc54-0081c64a23a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "620f90a3-4873-46e1-8fbb-04793ce090d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c9f59f-8e85-44c9-a04b-5ac8cdbe8531",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e129a19f-8cb5-4585-a585-280055083300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73201bb6-6caa-468f-baa7-7a68b319cfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3276ba-0dba-4b31-8f02-69d9ada84b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "268d68ac-91c6-40cc-98ad-802e4722069b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "48ea2f1e-e9dc-480a-b6b0-5b1c8b3ce90a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae9e22d2-29b8-4781-a0d8-7aa6f8c770b9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b084341-7598-42f3-b5d1-7563b3568d1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7daebbe3-bd14-4788-b61e-74a90f9ef9c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e16275b-3144-4cc6-b0d6-fd37d0417caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e8084d4-bebd-4efe-bd7c-03281a5a3091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee01f26d-b6f6-45f5-a6b4-6bba1a7ca44c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6dcdb8-473d-49f9-9234-a9cad508e8e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "847e2a13-4ac8-4c4d-a656-d6102d33a36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b66f27-7a44-4cfa-bae3-323ab609e4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd9073fc-0e7f-4b69-b116-98a03e891acf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6644d9fa-a14e-466b-a5b8-33f45692b4d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5db7489-723c-45aa-98fb-fe20a7e65972"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72718c0c-39ce-4d97-955c-f03041ffb208",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "782f710f-34fe-41d9-beda-5670fb2935e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdd725ea-5b6a-4f41-8934-7614592188f7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1d0913d-2fd9-47a0-bffe-721e770fc512"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aca07acd-5650-4ec4-b053-9051f1a023a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2949a35-7940-4296-8c90-c22164a1e540"
            }
          }
        ]
      },
      {
        "id": "d7660d8b-869d-4045-8528-258294d13269",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7b9c4443-c8bd-43d9-b162-e68f37722fb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84162a58-af4b-4470-9ae7-5a8577d89827",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "26c07c7b-9aa8-4fae-a174-cf501462e5a8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b544ffeb-3280-4f82-9190-aefa9b58db2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2befcf-a38e-47fc-a127-5c465777e078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1e5bb0-dd4c-4250-afc7-ae24a967596f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869f168c-e8db-4b57-a398-84c20c584f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5b538d-6e01-47c2-a9e0-117a177946f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99f45fb-68f2-44fe-92ee-58ea3c23fe3f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2214b745-aae3-4dab-9a9b-86bc49e8a818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6317fe51-4ba2-4ddc-81a9-b66032a90d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a419cc5-8633-4cef-85c2-6a9fe520a01e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7c5b20-f168-4f05-962c-0735bca4e789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77663d3-d2ad-49d5-b1d7-452665d8f54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b20715-347c-4a10-8fff-ce6218fb656f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5804998b-3b34-4372-8702-3c430d37d7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbf64a7-91c7-416c-9f74-e769aca50dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd878e1-9be5-4d91-a8b2-bf3bc7a14113",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e3a8e1-b66e-42b4-916b-0ac48b650d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd48a84-67d6-4f1d-9c6f-01046959f059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4f70ee-58f2-4c65-8065-6988ad8705a4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad61b69-2d77-420c-ba3c-f45613f83a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af2fabb-5c59-4dc2-a3c7-4f10f8e9c707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d154a0-13cf-4f62-8d40-a6f0f585f3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76552de-0d9c-4b8b-add1-46b16e643d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ed1977-03f3-431a-b3e1-24c849dea086",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf62e975-76ab-4fc5-a74d-917ada7912b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e8050c-3058-4369-9dd8-4ae8a7e0d34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806382b6-b7d6-4420-9237-31d475e542d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bab86b-6114-4cf2-87f0-310da0694b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a79487-f5e7-45eb-8411-3f1eabb4d73c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33182893-a8b9-4e5b-9f90-e5491ef5fb2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d88ee58-5986-488c-af31-345697ee02bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cfa546-6af8-4fc3-be35-7bced30dfeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea4fde9-1852-4413-ab04-5276c3fad234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bed612-2a33-450d-84b6-b607dd7c249c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5097784-cebb-4e08-ad67-5cbc4eea6808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd1d65b5-65c9-4ff4-b7eb-ecb72aa5f48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d174c920-0d86-4f56-a426-65f92861e718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909ada3e-48de-4375-a75d-317e1844642d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bf2427-1589-4c13-905c-5a469ca18363",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849bcfe5-b9f7-41c1-8eab-fe25fe153323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2e857c-f1b0-43e2-b3f7-76ec982b6dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a55bb1c-32cf-4d15-add2-65bfb058ab64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83135850-6611-4b7d-b4bd-4860ae2ae045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2447ce-ec58-434a-aff0-e6d3552992eb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5a5de8-ee04-4e82-8c25-5a6a4742c20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f475f383-b005-4781-b411-af59a87c7dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b35fe0-e729-409d-acfd-3679dbb996b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4849bf29-6887-4968-b931-2190a926841d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc6aea6-5545-4936-98fb-a29fcb56a7a5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50542113-8552-42c6-8a9c-4ca460399cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed13a96d-3040-4383-b3ca-465a23426097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079b4870-a6f0-4392-a170-08cb0738e866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5004aeaf-86ce-4894-813c-aa0f5aca9bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b84815f-3565-4db8-bd91-baf014a30469",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9230d4b9-038f-4c1e-9813-41c8f701f0cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7f753f-d84a-4d06-845f-a329abf6035e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2107545-897a-4af7-91fa-b34125615627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc037d4e-d8af-4e94-a010-0c197e4b07ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f013b43-daed-4087-bbca-f6fdedd61d72",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca972b84-9672-4611-91d8-44634e6c77f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00255f6c-85c6-43ec-a61d-b0b79fadce18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b4c845-a1fd-49ad-b042-1be2f6026e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e850f943-9279-435f-bee5-02df1cb822ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd09376-6cb1-4e24-b8f4-70279c1408cf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87c5c21-4d14-4ed4-b843-0fcc3424429a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b14ae051-0b64-4271-88bb-2a21dc0a33fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320442d2-5142-4456-867f-59b466cee6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93aadc4-9c6e-403c-867f-0ef41517afd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1a4a33-e02b-42ef-aa26-bf9491289985",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f34480-a85c-4b91-a758-7b2fb29c2c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1627f0a0-c9c8-455d-83ab-0505f5acea4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82a14f2-1e06-4b39-9791-0b898e47ccba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0192323f-1225-4c86-9d36-cc13bc3621c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee0c7ef-2c9c-44ea-9990-1aee95032898",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327d7e8c-08e8-43ae-8835-515117ca8032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c937d6-9162-464e-a3f7-8941623a13a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed75d00-598b-44fc-9eb2-c189b3e02f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33628fbb-d76f-4eda-b12a-11b103e6001d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacde808-4ee1-4aac-98ac-8794c9181e65",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f1db1b-5468-4b06-abb2-6549903cb765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bb4dd1-6a3a-415d-a313-3848de3e572c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22991ba7-1354-4cd4-81a1-c8bb95506edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636423fc-d90b-428c-aa24-2069da5974a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9dec24-9c26-4e76-97ba-fd7c1d669668",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de22c06b-c403-4704-b573-b5ad438f18e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dcb5f0-4e70-47d2-918d-5282da2a19de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e6fceb-5cdc-4042-a0cb-b2732816a6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cad101c-0b90-4940-b84a-15fa85ea2193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd9bce5-2bc5-4c75-86d9-f089870a9dd5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e30e83-d186-4828-80be-477c5906ceb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9333c2-97f6-44cc-8582-adf3ee401aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c17185-ff4d-47fb-8766-2c21a5a6b78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c8a9c5-2b4a-4a78-89b2-ad32e73f9918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0aa3a7-d42f-4108-a40b-7a402d18ee14",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0398a591-046a-4394-b3e6-e5869c6cdc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e04147-556c-4fd9-b348-f482437acec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb6acb2-7f05-4ae8-93fc-88968e9bc44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3daeccf-b602-4b15-befb-b486ddec2992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a43f26-de37-45bf-a45f-677ec4fcf7c3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b37a968-eee4-4cce-b9c3-0729c36aa8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d96a01e-5e50-463e-bcc5-c5cd796c71ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db009ea-aa5d-4376-bbfa-32db0a152481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf551ee-3ed3-4504-a32d-4ad043f23efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf615ba-1a35-4d4f-b7d6-0cee526e57df",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d0341d-f091-4e0a-a684-e552893b2976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7647cf-b434-45be-a2da-7ef9b0be9707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394c2c31-0a0d-42d3-a244-ecd7044d4287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3fb49f-7910-422a-a666-5e2d43a63bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e14422-2a57-4ec5-bce8-bf63f89ba057",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f08d60e-9b91-4161-92ea-e36208b5747f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15e6158-e85a-4ef0-85bc-088040055f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1c7135-ea57-492f-9702-c9fcc2382366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7557573f-b8c0-48db-a98b-307d034b9468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7462c3-7747-491f-ac93-6717ca1c8015",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140bd0d6-7d1d-40ee-b0a3-36794996d9d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ffeddeb-5f0d-44be-8f41-019df3b3bd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72efa65b-4e48-4125-b932-1032bdc391eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7265ef-04b3-45af-9f47-4a41f698f9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65f8854-3659-4353-997c-368200c8ef1d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83b3388-1ac1-4849-992a-6c3e552f4a88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6477405-4512-4e61-bf4e-9cb06990b18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba756f99-7c8a-4e66-a1df-0868b580cd25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd58dea-6af6-4bb1-998a-d29c878641a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2ba22d-dd20-4a4d-96e4-3b71a0a429dd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec6fd08-9a0a-4dfc-ad6a-8eb383a6ec69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba5d330-22ec-4685-9693-321cbe907622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e6e865-80c0-4735-b04c-3ddb4373e36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c355ee-9b65-4963-911f-2acee11e2d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f1697f-eabb-48a7-9fa5-617872bce026",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da1906e-4476-4bac-9f03-0b8a74cc3b63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fbaa3a3-c85a-4181-9307-3eb7765d1a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1bade5-cba7-457f-b411-a7784c2ee039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6be38b-b44e-4189-80a1-bb2108da5ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fac508-e9ca-4fec-ae82-f4eccd0534ec",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d610efc5-7b30-4d12-b054-dfb59b53cb6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "736ac3ed-389d-47eb-80e3-0c02dd583557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2d34b7-ba52-4f57-8b2d-f0f8ca979c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f9f496-0e58-4fdc-ba10-879ddef7c728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc47ffbf-b41d-490e-981d-f8a8ce7a0ed3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08abb7b0-3981-4998-900b-63a743b0f963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffdf21bc-16b9-4257-8edb-45ed10e9322f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a1176c-84e8-4df3-8352-5132a42fc919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b835d3d-4ad9-4a21-95d7-956ec2df9b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b3a251-527e-442a-ad00-df4a0488b671",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6fa1e7-b3ed-4995-897d-b40e002e985a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bdeb945-b7cd-4aad-9236-fbfdf18c3951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6ee65d-b15a-45c0-8408-a8c600dda9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7828ab1c-e63c-42c9-9a30-ed7327db571c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d522e5b-6ff3-44cd-a558-6936321295db",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099ee4a7-9871-43be-9149-b754c24c26ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "686a3db1-baf6-4e71-9fba-6e7b96390ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617ee55f-3825-48d3-86ba-c1350256bbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4cafb0-1ea0-408f-ba86-c3f478f9d512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de5004a-da92-45fc-a83c-406a104e3034",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b62c11-02d0-4d5f-807c-fad753116734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a5f6bc-bf72-44e5-ac12-2846579fad1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d362899-c0b6-4050-8b8d-2d38e99ef804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ac3db6-e199-4ada-8385-a68645388579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6280a6-e391-4ff9-b891-3793684f9884",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f701eb55-ef21-4a35-a781-65df17df29e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b20d7e6-fd76-4058-8f22-2cca6ea6d13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a8d3e8-bd2d-4223-a5f9-6d85b924341e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623e9165-8471-43ca-bb7e-a868b9fab990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca84469-8539-49c9-a20f-803d888ab85c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf640e8-75e6-478f-acde-a65366ca30f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14af16d7-ce02-4983-8290-9c6b7a176b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a46983-dd5f-4659-b3a6-853ba1bb986e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a129a2f-d64a-45a2-ac66-2425de602c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec49f890-46c2-4de7-bc80-d9e3e5b06bb7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e860991-7071-48d8-b2c4-a31d07eb5f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdaa68a-3ac2-43e2-b6f6-f08b0be05bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fae53d5-6b69-4f40-a6db-8adb7103667c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84c6da2-7db3-466e-b29d-e89be5c77168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cd987a-741f-4d31-afcb-9d0ebf4739af",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fff3a84-ac2c-49ad-bc07-a786570e6762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e76ac7f-3217-48f9-849d-4385400ceeb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570f930e-092e-4ade-8220-4ac4a75594d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2323062c-e797-4922-9577-5fc8f5234ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fb5e6c-87ff-41fd-8502-94a889b0cc50",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9f98da-0aba-4c83-afbf-9542f3d905e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71075f25-85b9-44c4-9461-72f1cef107b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9755b045-3943-47e5-b893-a8a4ee8c21f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ba3571-4524-4754-989a-38ab0bd24f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ce5fc4-d4c1-4c56-ae24-d5b032a6ba42",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab44342-ff33-406f-853f-7957e329b497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b462439-5e26-4278-8f14-bf02c71e0573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b92f052-e406-4f51-a88a-6a2f7c281bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855251ef-2af0-4fd1-915a-2ae137384a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdfb487-3835-449e-a97a-24930cb2bd05",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3655204-2116-4e57-82b6-d7b67c53f972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc174682-a876-4519-a63a-f6cc23311946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f104f8a-1023-432e-ad68-314da4422b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa371fe4-c18c-4d84-8ba3-8e4108f94850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951b141a-0ab6-487d-b57d-a10ad436f333",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c316c8-29aa-4c5c-9b45-846bb42926f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11f9f73-747a-4609-b384-2e352e012cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3363d0-8c6e-4f54-a272-82b5728b3c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78c5b89-920f-4024-a0d5-7cbd78324d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941eb158-393a-43db-82b9-39a2726aae81",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011b7fc4-c582-4fa6-80b5-3b6b908fc4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b901ef-c77c-487c-95e5-04622571f649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fde500-0e31-4f69-aef9-2f6e3b08dcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e98009-420b-41e2-a826-28e26fd0d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0fc0aa-9ff0-4c06-85b3-3fcd9c518909",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2537f6d3-a7dd-443b-8613-35f201dba9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1737371-3ffe-49eb-9ad6-a1c2fe3cd692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84bd224-82cf-4dfd-9300-1cf7a689f350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943f3425-a1da-4942-9308-ec2154a4edb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11047fea-285b-457e-a28b-99ecf44153b3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3925b3-0e22-4ff9-8df7-230a8b2a4edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc81bd1-cb77-4748-b300-fe862881327f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f94deea-2f1c-4c8a-b4db-6949882a0143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3a70ee-23c2-4172-bc2e-343f1460ddcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c39472-dbb2-42bb-9e9c-1a7d2f6d6a20",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df52159f-0e91-4f58-b99d-e0db8dab5640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dad8a33-465d-4407-9d6b-efe1e77353d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d0e54e-ef91-4115-bf46-93a6ae61d025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13af327b-6041-4334-bf16-1ccc4ca6e10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d38397-8d40-428f-8c9c-0b1b7ccce12d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af021b0-bfd6-4673-b255-cce0a797e97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028fe973-5f0f-48a0-ba47-fa7d4c8d015a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88390cb-e2a7-475f-b4a1-48efe7f494ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2b982d-2988-4c77-a4c0-4e932681ab2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b6760f-12f7-45e5-81bd-69fc692d68a6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9360512c-3e4a-434e-9d7a-158c61e3af82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ee65a4-dca0-4ac9-b6e8-76b359cad4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9123526-0075-4ab9-a87f-70e23e1d2d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2957aa08-6e90-43bb-b590-af02bebbc930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e371611-a80c-4ebf-9b12-b47d4e67466d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76a6e01-45d0-4733-94c5-d9f0fcfbd7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172ccbea-fcc0-4080-b05c-34057e3c3d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a44cd3f-2e20-4faf-a31a-9f7a8e668be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c92ae3c-7ccb-471c-b943-5eec0d30a446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ffd566-1484-42c6-b434-441565d1a46a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811b8cbf-06c4-4c17-9fe4-075ed6bd33fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c5d132-48b5-473f-bbf2-b1cf50c61cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2d694f-dd5c-490c-b047-591dfc53fe1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad037808-1c21-47e2-af81-8ff63849ba8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd40562c-8616-4633-822f-4d017ce06d66",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff2ed30-a9bb-4fdb-8b00-808c95ab9c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4411b3-2c24-42f0-a107-aa743a203258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be36f2e6-f733-4337-aa58-3c4f1fa74f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a432a41e-4006-42c9-96b8-e5ed58c32476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ea4a11-80c0-44dd-bf7e-64d0a4641470",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a33a63b-24dc-4d24-8285-fccea6cf74dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351e20bc-bb7d-480b-8370-44bec743c3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2021dd69-2c21-4235-b999-b6b4289c4a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d75fcd5-8b97-468c-a0d7-3e65ff79a6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbd1dcf-9d0f-43be-8a9f-07a7a2ad8979",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad13d10-0afd-4976-ba6d-645d9f3ccfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c11945-7d61-419b-a4fa-d16c6b3955a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cad195-aaba-48cf-89bb-c05dcbc721d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4771949-0940-4721-bbce-f29c7c865813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0187502-5c3c-4166-91ed-f371c9c6a8ae",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12799675-0114-4157-a5c8-5915ef3406be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9312d151-5eac-4027-9d86-2e9c8c791a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b43d9be-2027-4815-b63c-aca284a9436e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd244032-5510-4b23-a1c1-20922adb7b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7c938d-fdfd-4c1d-997d-7d434cbc41af",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94526d5f-d3b2-484d-8d1b-8e9bfafd691f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0806c0-3f4e-400d-a61e-a6caa66e55a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0883c453-ae58-4363-853b-2660d953307e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc829361-6abb-429a-ae77-ce07a78412e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa68d6b-0a8f-4b18-83e8-ed2d1c4ab91f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4d85d5-6b69-41f2-98a8-b938c0cf1c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4321651-8e5e-466d-8e38-2ff337bd74d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1495dc-8e82-4bb0-89f1-ac8802fed1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcc69bc-9ede-4b39-9264-c43f5cec3c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f749b18-cf3a-42cb-8fee-ff4470856170",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759057be-c0fd-43f8-91f5-8cc470fe30c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36fc663-956b-49fc-954f-465ec806955a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99507b3f-7255-4b2a-9813-5b2ab0b8b7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a7ee1f-16b0-40b2-a737-5ed77a77d1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e3f843-ffe7-4d21-9691-1dbf6f2a110b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcd2ad3-a3df-47f4-a0d6-d6604c4c79cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c0701f-1f11-4673-91ab-c96638813284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d039ddc-0bf9-4741-bbf3-44779447a6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e8629e-dcb8-45c1-8b39-d29ae3828c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101de460-2667-4b2a-8ff7-c680a9b3cfc7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e15898-fcac-4d8a-b098-7bb42bb79dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14568ae-20d5-495c-8308-815ea4ac6be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76294dcc-4fca-4346-8b83-376dd0896430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560d7053-99fb-4d35-ba09-769a0cb890f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84848a3-909b-4024-bc6d-29e1415f4976",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab2e6ef-926e-4333-bdd6-617cbf160f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63bbe4e-2dfc-45cd-ad15-6bc00588283c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edd56fa-5292-440e-b68d-e5970ea08215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85f61e3-47d5-4b05-920e-1b829fd19d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f100b19-168b-41a9-95b1-3ebcc8d0fead",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3788292-d1ef-476e-a377-e1fb8516c907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3807c701-0f31-4d7b-89fb-7114302dcebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdfcfc2-9713-40c9-bd93-c6b9281cc4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50560e5b-445d-4e0d-a1ce-633b88c8d81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13b6131-9c09-4e2b-bb0b-0532ef21004d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e0bae4-d542-451b-8ff8-1bcdc683de10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4994ff21-1781-43ea-946e-3fdb4b108a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7bc4dc-d8e9-49f6-b0c9-4d1d8aea34cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c479ba6-8cca-4827-a592-16beb07d1b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae708dbb-b9ce-4703-b946-1b787b9ebaf8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3feaab69-09a6-451d-967f-a95dacff2783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0653e1-2f80-4d7e-9dce-ec794d7d725a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e8e2d7-134b-40ea-99d0-eb5dfa75e4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa665699-2971-4457-b937-3959a4512195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47f107e-6ca4-41bd-a1ee-c3481d77d181",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d915a29-abef-4071-9207-aeb849818a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a886e03-7f54-4efd-92d2-db0078d72c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632f37ba-5865-49c4-a0e1-08229e36cdcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b552f17-f9de-431c-bed3-0b3b6a073d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1404528c-6322-40bc-96fa-a472071c93a8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f6e213-6560-47d0-9177-7c3cad83bdf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b733070a-ae7a-4627-b6d4-89ca194fd085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b20f290-e241-419e-bc81-ae6b130af088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ee3421-953d-4b5e-a5ae-be9df95a6eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65af1695-1226-4589-a4bc-364291a9aae0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e17e1a-9c07-478b-8cf1-fb1b307eb1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb323f35-4fb5-4f98-a008-bf03a5b0c6ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2436d6-97db-409a-9edb-4f5048ba9afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c9a5d2-4b5f-4e43-a5b7-a53b94edffcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02398fad-30c2-4ee9-b467-4917a507e65f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4acec2-cad3-44f2-bbc7-b82dd284687a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e7e630-90ee-48b9-9c9b-a35862b88f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ea233e-7680-475c-805b-51556831f693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bfae83-e58f-4ae6-8048-20356c54c9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62ec7ab-ccee-4ae1-b62d-00f87b19a5d9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ae1d48-cce4-46de-875b-a1905a0cb2bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24145333-32f0-4a06-b3b9-ca69589d1cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff9b27b-e395-4ed4-8ed8-3dd041cf2f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c29175-872a-4f59-85cb-a041f37999c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca6b0ed-53cf-4618-b0b1-99bcfc4e0e72",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc9a112-a7e7-4e9a-b20e-67f3c58c33a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c9e873-8eba-4a8f-b1bc-8ff9c57a12c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b545db-a7d2-4784-8115-d4d52700d1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30981085-3d09-40e8-bcfd-62ba1a00eadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f185ee-ac9f-4fb2-a4ac-c31d4ab22bea",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5923f2cd-23b2-46ac-a526-dc43487eb4c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5dd204c-5eb8-4644-82a6-29982e2d49b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4a11c2-da7e-459d-89c0-aa41e8ea60c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f11331e-5b88-4657-80a9-d243faba5bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7455d814-0fb7-43b2-83e9-48eb688b2dfe",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed16b591-cced-41ad-a755-111cd33f641d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a5d2d5c-925c-457f-8131-a8fd2b4a3285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403564f1-f21d-4379-ba4b-7ecaba346cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4967286-88b7-48aa-b29c-d8404d547e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fcda00-70b8-437d-9cd6-8185688ee4d5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170f33c1-5c16-44ad-852c-36878db5bae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f02bbd7-4703-4fdf-ab9e-c2f37ea721a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1effa23c-102a-42c3-9f06-7932bd06e436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8e2022-7dcd-41b1-9ecc-007e43971b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89681a84-3977-4e5a-96e8-e5216361affc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d86320-533f-499c-922e-9dca705fdc26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d732d5-9e97-4ad6-9544-4b5818d549df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e62f34-15ef-43d9-a4ab-9ebfdb9ad56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28bcd2e-0c72-4a8d-8077-3eb49eb76b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45b238d-23ad-4438-8072-08213ed6c4e8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a9ffeb-3977-48b2-83fc-c952417bf3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b54e84-87e3-45e8-a979-0126c99af2d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6d8ebf-d518-4c29-8201-016774822d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b50f67-5454-4b5e-ac4f-ff5439fbddfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1587983-c7c3-48c2-81cd-78a730097339",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f93b7b7-7a0d-4344-ad3d-8a26132393ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b065f724-59b9-4095-8790-b8f393d153ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b46db4-6b96-41b4-a222-c038a3e6f31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4a4178-ac3c-4f9b-ad8a-50c78238b1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20b125d-85c3-4753-93a9-adc58e5eb933",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26ffab9-8e60-45c2-b634-5a22db54ac82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f1b2ed-ea99-42d8-a0bb-e250ff9bd6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9aa1bcd-cd47-44c8-bf4c-08aacce48b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3968cab4-5c5f-401e-93af-1cea22c66ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32259011-788b-4410-9df4-dfb150fe749f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a80c66-3093-46ce-9242-cf4868445056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a40e552-175f-4721-8ddd-4873639cdaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f28867-328e-4ff6-ae03-b5319debd243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d8331b-4284-4096-9641-41651e2cd726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b7858a-903c-4f8d-9d87-a644412240aa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66f7104-8bde-43bf-8e58-089daa761aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb109342-ce86-4d75-aae9-f79b1a5687bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff4d0ba-4d44-4c4b-8d4a-109381dc6a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5570061-d897-434e-9554-bea9df9d729e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ee2b9f-2e0a-4a08-93c0-8f567e66520c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8746d5af-2e6d-4391-b0fc-c672730b7650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fbb4904-617a-411c-bd4f-9891e4a9223b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f29b2b5-23cc-44d5-8b65-f996faa21695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3332fa7-c65a-4d09-8afc-0878ffc426df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d0fe12-232e-42db-85bc-8d740f0fd981",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c4f9d3-e224-4070-86d0-ccf981331d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22bbaf26-981c-496f-8e88-ee2622b26a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb319b8-1209-4582-aca2-801586f16781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0987c440-33d5-49d5-9174-a36a17b14b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea677261-5ec1-4332-88f3-035468d0b6b6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82b8221-3370-4a48-a025-85c2349f741e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0d632e-fa00-4305-96ae-000f403c41bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d408c4-68ad-4bc6-9219-0bb4f5f04bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f2834b-470f-480b-9298-b55b609324c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb0bb3f-b9f1-4703-9916-47bc553d22e7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3c9246-d44f-45a7-adc0-7781955ea1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecea45fa-3c46-4ab7-b4a4-75eac5383f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c9d282-5371-4d78-a7f7-29b0445f81b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab37922-fc39-4c48-b480-55a0ab8d394f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc138e82-8598-46a4-bc84-0cbf5dbb7218",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d455df06-2a24-4118-92e7-7646f2311679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbd2718-40dd-41c9-b33f-26d2b39b3782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39dd99b-b6f3-4df4-999f-74501cdd59f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43167b6b-92dc-4231-8e02-363bb0180c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7442df6c-6e80-4aca-ba12-4bae12dbd9dc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb41d9dd-fc6c-459a-ae7c-fefe39ef492e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86dac10e-46cc-4537-b077-37f2a2fcbe38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea18c20-3734-4385-a946-15eb5293e760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492dbe54-ae7b-43e3-ad16-720b26843244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57df881d-c29e-42a2-a1e0-f79bf662b67c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a37cc9-2533-4c9e-8ecd-c2780a328d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ddec3ee-a65c-425e-904d-79869b63b7df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7de8d76-84ba-47c2-bb38-4a236612f998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f020a39a-31a9-4dcb-bd5d-ce640ccca6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233b6842-cbdb-46cf-9b33-e3d17e81b355",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4cb9fd-e1d7-4d23-ac9b-9407af1d40ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e43d076-09de-421d-9427-fd47fc503c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba2634b-8da6-4104-8d40-22fe97b07eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962b7471-899c-4d68-a3ba-363145511e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ff1b02-9556-43a9-9300-3d5bceaf6ad5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996b44bb-9623-4dd8-a8e8-ac92f4520015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d785c92-2a5e-46da-8b56-dae48c06e012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bfd773-e84e-48aa-b41c-f188f6cc1482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae302f7-07e6-4c45-be2c-dea38fbc65f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67b2c49-b595-447d-8d30-00156619bfc5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c176b435-1666-460d-92ac-a5d20eb5cc6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa18c095-2802-4010-8e6b-040be0578f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9416825d-7656-4f97-8742-fce3f6e236f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c8796c-9981-4d9d-ba28-48146785eb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f835730-b906-43f4-a732-181673815f2d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5cc5aa-bfc7-41bf-b2f2-19a02d1a19de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb587e53-1b10-49f4-864f-c74ab5048ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6c6f44-164e-427c-9dd7-63b9c5057838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57c2038-9e12-4102-8e39-56a32ab23393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a781e6f1-db79-4cea-84b5-fbbe49563660",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bd268b-9e6a-40f4-93c2-8da9089d9500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef887f66-5818-4499-9e24-1b40cca21f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e197c195-a69b-454c-9086-02476f1e22ae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a5ad97-7dbe-4d5c-bd89-3c62e10c8e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe5eecc-7959-414e-a0c9-91cdd8e82aa8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2793fb48-1617-4e9d-a302-f2210e346203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203268e4-a134-40d6-a192-7b03876a6122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccabcbee-0700-4487-b5a2-ba87903de206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191b3402-d594-43e4-8c25-8a0dfc8dee2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66284162-4216-443c-a4fd-3d71412ba55d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fcaadf-1538-48e7-9e08-c853883077be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef49de7-61d9-4a29-9414-fca63425194d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e86eba-4455-4a2e-8406-0821304011f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91879e7-6973-4ed2-90bb-391c02dca503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570149e7-dd43-47c2-8aa2-b9993064850d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385c0614-cd58-4c74-b2d6-91cf02d261fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d417b766-97dc-4702-a70f-48e87397405f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fa5c9f-a633-40be-99f4-fdde5dd9b5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a0f0a7-09a7-4c95-98b5-e6f5a5e15002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ad4985-5255-48ce-aea4-d5bcce800e20",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a85aa50-7bf8-4504-83df-f73cef2b408e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f34b72-1bca-4bf2-955a-2553fe5f1e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a5980d-0392-4250-825b-612359ca19aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f60319b-36bb-432f-a135-251e8e137db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66abbd7f-3fee-4c95-8731-afd69b64842c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a57c03-0d50-4943-b4e8-2f67e86a8ec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "608427f1-1eed-4266-b792-3be7df938d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6929ffcd-88b3-49b4-aaf6-603360f8ddc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c0de35-69ff-42f5-9646-8826009fc86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bb8ae6-27c2-4cdb-9540-29187f1aadd6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fe93f0-58f9-4c06-9417-efd9a68aff51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7ed0fd-2a01-42a0-b973-1934f12aa38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08de37d-812c-414a-bb61-8c25d4692de7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a764058a-a461-4f34-b940-8a38176a6a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c06cce-1e3b-422e-8e1e-eb4073493fb9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b87f51-f5ff-4fab-a89c-e82ba5400dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aab16102-e54d-44cb-bb22-f227fa8f1145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a189c239-2842-4443-ac3b-8e9b4d9e071b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1350836-4708-4616-a511-bae70bffb2be"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa014295-0dcc-448f-bf8a-e31b9111e34a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69a2ee1f-68c8-4e73-a25c-fb58d869a258"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dfc0c84-8ba0-4b65-81c4-92aeaf8d2f30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0551512-2d9d-434d-9143-4d6668551c23"
                    }
                  }
                ]
              },
              {
                "id": "e8cfa226-5ebd-42e9-bc52-2ff346f429f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "faa50940-e431-4fa4-8f2b-59a6ea97daf5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48b1896-fcc3-4aea-9293-807ad0c30960",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2ce2c7f2-4ed5-4969-8fa2-b18855a73c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee50bc6c-f4a3-432d-a4e8-e3f77896369b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4a7f81f-032a-48bb-876f-fb06748992a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decc7077-1eaf-46aa-a911-2c6a58388c90",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faadb82-a15e-4379-a932-e9d6ae6a7894",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5a0231e8-74dd-47c2-bedd-ce4cb5347804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1ca105-dcd6-456d-bbb0-c9a368ae2c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e511e9c-329e-4fd5-bcd2-98bf4d5b6c25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96e22552-72ce-4db7-a03a-eeca5c2e0c11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26545abd-2150-4abd-b4eb-f1eba830cd56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba2e3d90-efda-4d76-94fa-de38b73662df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9deb667c-e926-440a-a762-f709b1a7f43a"
                    }
                  }
                ]
              },
              {
                "id": "c16c5f83-2000-4b80-a067-659d647db024",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4fb739e8-f024-4293-8f27-63d9c3888be5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729561a6-3adf-46a8-b091-9f521d363a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9a8db0aa-73c5-4594-879a-9bbacbd2750c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc7369d-e0fd-4a0b-8a12-db9752bdb161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd74f50-51a2-4a9f-b0ee-eadbcf4f530c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bdc6d854-63b2-446d-b4b0-a117b224cc75",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a4191f3-30eb-4e97-ba29-7f2330b5b6bc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bda5ec4-81a4-4286-8f6c-ae50873b1e3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "10538a7c-eec2-466d-88e6-d50c94091221"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24fe8ae2-48fb-4f24-913e-315fb021d6fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adf0b4e5-dfc9-4fbe-bdab-d6ecf59e448a"
                    }
                  }
                ]
              },
              {
                "id": "f497471c-61f5-4e36-a330-ce6a44499456",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39468af4-2502-46d4-af90-e10e51c06589",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "787698cb-f6d0-4302-83dd-761cd8990bde"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "733ef694-bed2-46e5-ae6c-8d3ede54d6b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "508583d1-c3e8-4989-bb29-47a3a58363d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f8ac25a-7536-4204-ba16-09af687e1895",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c7dac2ed-fdb5-42dc-a080-d9d5d0d48c28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "575dc1a2-802f-4302-80d9-67284f597839",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef47ec31-932f-4fe5-b4e7-98e2113d55b4"
            }
          }
        ]
      },
      {
        "id": "022e86eb-2283-4638-88e8-2b669c288e05",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4b9c94f2-4355-4209-b261-dc6657f4dae2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85c420a8-b182-42db-b5fd-d296d3e49390",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb39061a-0b32-46d7-971e-90420dd1b8b7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9753a78e-7804-465b-9c18-763fe4fe95b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5b7b3f8c-e285-4fa5-b337-57c58675b1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d69351-7150-4090-822b-1270b95dfa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91a4bf41-41b5-45b2-a199-955fe2c09056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ff5c60-36ab-451b-bf60-e6e063809613",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8e6e55-1a5a-4401-a5ee-7907891fea75",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "02e515bc-7eb2-473f-81f0-d56ac8a61a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc3d927-2f16-4f3b-9387-3866c9773f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dfc40f7-8a75-46f5-a388-ab456ff24160"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7033a53-68dd-412b-ac5c-97eb56505187",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecad4e3d-e795-4bd3-87c6-aaf62537ccc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e4c2924-f9df-41cd-9808-144ad2fcc2de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7f741b4-ce58-4f3d-8012-523389c3d703"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9074457f-344f-4e5e-8f47-59fe3582776e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "85314f06-e8b9-4808-9546-895b42e6e45f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3613582-82e2-4567-a55a-f264a2f8e072",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "010dcc74-cfec-4a4c-ba56-5118a4111c84"
            }
          }
        ]
      },
      {
        "id": "24c0eea8-a4cf-4ea8-97b7-30cf5bded844",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ed229db1-86c3-4b5d-aba0-77ce97ffe57e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f8502c3-b65d-4b10-9dd8-1e5b97b97245",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3327b87-e72e-4f86-97da-e047ebd267b6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976be2ed-c1b5-487d-9d75-94e6bd20d4c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b62309c-ebee-464d-ac78-f5bd4c12515f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd2e194-a142-4bf3-8a33-32d2a5121944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a206c0eb-ff00-4c29-864d-17da6374a5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e8cc3d-c48a-4025-bf40-c254b9524c47",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603ed84c-892f-4dec-a2b2-0570a4df84a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a97d750d-a0bf-4437-96d9-e2ecc016529d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c0c877-2c7a-4e9d-99d4-cc5bc7a1dd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "860c2c4e-a5c9-40fd-9adb-b450719fe686"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2b4a50e-bfcf-463a-962a-2258db34f878",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba1fa83d-d7c8-434e-b719-418ee737eb10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b21fefb3-5238-4731-8544-6bafc4fbd2ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5312290b-3186-43d2-86eb-7080b95192b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea06cc48-6be2-43ea-819c-4a0997fe3092",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67d2da85-fb8e-49a5-9d65-e404134ecd5b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6055ebb5-b138-41cb-aa8f-7fa037d1d4f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1755c70-b7cb-444e-ad42-8ec23d562a8e"
            }
          }
        ]
      },
      {
        "id": "c436f17b-6f3f-421a-a3c2-4841899d30d3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1c53c23d-46c1-4166-8411-baa85adbae87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4c25a8a-a61d-44b2-8e4f-978f81636cfb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00da7181-0236-4e4c-a844-50367234a762",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf295a7-957d-4a56-8d35-993d4f97871f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3de173ed-45c3-4953-afa2-55cadf0b5377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97671309-6cc9-4564-ba46-72638d7d656c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6691c268-b9b4-472d-8171-e6186bfd04e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32642e41-00f8-4db5-b145-73f0f37f5a78",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425cd535-457d-41b3-8094-420cf04da9fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e2305b85-3544-4322-8e4f-2e6152ac4455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d5b9cc-8f5a-4585-9c10-237171ee3e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59d5d0f8-47ba-4cdd-b0c9-9200d4215fd6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6651ca6-6d65-4ad8-829c-533cfa3bbaaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ba645ca-35ae-4009-8e01-2a7398f325be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e569956b-3cc5-4e58-8919-0a2e0800618b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0606623e-3106-4a0a-ad04-d4694ee43a8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a02f7c7b-72bb-42c2-aa86-e1fa525d7146",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f539d78a-92a0-4752-8d8e-1419fd376d07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d52120a-32b7-46ab-917b-b61d00612694",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efdcb5e9-22b9-4b86-8109-6f8a047d3606"
            }
          }
        ]
      },
      {
        "id": "81553063-8464-4163-b495-1a08779ee83e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5392b40-5d7e-4718-be2c-c59bdc83f234",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cb9b5d2-03e8-4eb6-bd38-cd788b759041",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2ce4b188-18c6-4306-b47c-258fafc46320",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acbfa7d5-1ddf-437e-b179-797208399eac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a57cf231-c671-4f46-8e03-42b50eaba489",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 906.9192307692308,
      "responseMin": 7,
      "responseMax": 9698,
      "responseSd": 1087.1935170319643,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683419916896,
      "completed": 1683420163619
    },
    "executions": [
      {
        "id": "9c81fbef-bb2b-4bf5-854a-776e27e8fc95",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "29049361-8182-4250-94e3-c848dc3fc057",
          "httpRequestId": "419fe8e8-3430-4e25-b508-4d51ecda6cec"
        },
        "item": {
          "id": "9c81fbef-bb2b-4bf5-854a-776e27e8fc95",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0b3629cf-c253-46c3-aa09-7ecacb9a3865",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "f1d32eb4-e420-4a12-9903-16ea072afd01",
        "cursor": {
          "ref": "e8b51c3b-99a5-466e-b044-2f99798ae818",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "afeb7217-8878-499c-afdd-b3c300ed048c"
        },
        "item": {
          "id": "f1d32eb4-e420-4a12-9903-16ea072afd01",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "75d9d5b1-8a2f-43ee-9e7f-2d86d65a1eb5",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "83c030a7-3da3-4fd2-9694-dd5a84a2896c",
        "cursor": {
          "ref": "0954e9c2-f8a1-4226-a9cf-01bf06f54aa5",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0b5d2853-2f37-47e0-bbfc-16f084a7259a"
        },
        "item": {
          "id": "83c030a7-3da3-4fd2-9694-dd5a84a2896c",
          "name": "did_json"
        },
        "response": {
          "id": "f8137e9c-df4e-483a-a15a-538144cd5bd8",
          "status": "OK",
          "code": 200,
          "responseTime": 967,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1947190-caff-4769-8b8d-f7986427b081",
        "cursor": {
          "ref": "41c28151-5716-41b6-9d91-4b06f6bcc504",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f21b5750-c652-40ed-a065-033aed4709e5"
        },
        "item": {
          "id": "c1947190-caff-4769-8b8d-f7986427b081",
          "name": "did:invalid"
        },
        "response": {
          "id": "d26d6530-8537-444c-87cb-893471d1d2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1498,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1947190-caff-4769-8b8d-f7986427b081",
        "cursor": {
          "ref": "41c28151-5716-41b6-9d91-4b06f6bcc504",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f21b5750-c652-40ed-a065-033aed4709e5"
        },
        "item": {
          "id": "c1947190-caff-4769-8b8d-f7986427b081",
          "name": "did:invalid"
        },
        "response": {
          "id": "d26d6530-8537-444c-87cb-893471d1d2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1498,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f81d6c-a9ce-45f2-9246-e99ed316f194",
        "cursor": {
          "ref": "5c3a65e6-c4c3-4178-87d8-04b70380fefc",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "44c22a21-8612-4ce7-8e0e-d980f86dd49a"
        },
        "item": {
          "id": "d0f81d6c-a9ce-45f2-9246-e99ed316f194",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "be461261-041f-4248-b9e3-85fb5020c917",
          "status": "Not Found",
          "code": 404,
          "responseTime": 866,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a507d434-8c5a-4fbf-8681-c33f5b695f4b",
        "cursor": {
          "ref": "74db1c3a-316e-4ea2-8ac4-4c355e39e2e4",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5a5b012e-11d0-4b34-8cf8-74968219b59a"
        },
        "item": {
          "id": "a507d434-8c5a-4fbf-8681-c33f5b695f4b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0697a2a2-d7ae-47b7-a6e9-934a5ee3b9e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 718,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca32bb58-0053-4d86-b2ab-55fd117855e0",
        "cursor": {
          "ref": "2dd2d4c0-ab8c-4206-9f2d-82abc7e3f225",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a5268722-34dd-4290-8e5c-489cbdc42721"
        },
        "item": {
          "id": "ca32bb58-0053-4d86-b2ab-55fd117855e0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9a4d0e28-1158-4130-96e9-616cabf20f7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede4581e-a3ff-4211-8804-46fed34cf1d0",
        "cursor": {
          "ref": "0e3dfa6a-a888-4d1b-8221-bf7127aa824a",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "42ad4cc6-a257-42bb-b10c-b94f1fa949f7"
        },
        "item": {
          "id": "ede4581e-a3ff-4211-8804-46fed34cf1d0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "17bcff58-0e85-4c97-a0d4-8bbfd7a04255",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 669,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede4581e-a3ff-4211-8804-46fed34cf1d0",
        "cursor": {
          "ref": "0e3dfa6a-a888-4d1b-8221-bf7127aa824a",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "42ad4cc6-a257-42bb-b10c-b94f1fa949f7"
        },
        "item": {
          "id": "ede4581e-a3ff-4211-8804-46fed34cf1d0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "17bcff58-0e85-4c97-a0d4-8bbfd7a04255",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 669,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf1b7c2-ce88-41b0-a53c-ee586d319da9",
        "cursor": {
          "ref": "ab4467c4-4260-4657-920f-37c02738c313",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6c79628c-3a9f-4b54-bc22-f2ee693ca7dc"
        },
        "item": {
          "id": "8cf1b7c2-ce88-41b0-a53c-ee586d319da9",
          "name": "identifiers"
        },
        "response": {
          "id": "1c697a3b-3080-422c-8975-9180f8ef6900",
          "status": "OK",
          "code": 200,
          "responseTime": 1247,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc04be25-8a03-473d-aa2f-a79f2ff7284d",
        "cursor": {
          "ref": "eafae37d-9c1a-4906-bf1e-be32af690ed8",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7b348deb-1690-4fa5-92b3-23f7c6b2eeb4"
        },
        "item": {
          "id": "fc04be25-8a03-473d-aa2f-a79f2ff7284d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "720e6e68-f425-4cf4-9d0a-efaad33dbd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc04be25-8a03-473d-aa2f-a79f2ff7284d",
        "cursor": {
          "ref": "eafae37d-9c1a-4906-bf1e-be32af690ed8",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7b348deb-1690-4fa5-92b3-23f7c6b2eeb4"
        },
        "item": {
          "id": "fc04be25-8a03-473d-aa2f-a79f2ff7284d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "720e6e68-f425-4cf4-9d0a-efaad33dbd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfccffe6-c114-484e-a3a4-cada3f2ea24c",
        "cursor": {
          "ref": "ce708951-354a-4565-96f6-eaadb2b74c60",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1b582075-fa07-4341-ba8a-4a35740ffb9c"
        },
        "item": {
          "id": "cfccffe6-c114-484e-a3a4-cada3f2ea24c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b721db8f-7016-48aa-92e7-cb8eded95d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2679e9a6-57d9-48a4-80f4-c3bfd38e4461",
        "cursor": {
          "ref": "4420a69c-8a1f-43c8-afb2-41bd7704b869",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cd7aba81-663b-4729-a5c6-696eda03a8a8"
        },
        "item": {
          "id": "2679e9a6-57d9-48a4-80f4-c3bfd38e4461",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9122096d-4410-4076-9867-989a478c5ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5655e8a3-ef3a-46c7-9cc2-52b43cfed2c1",
        "cursor": {
          "ref": "97e7fa87-9b16-4719-a934-8048baa4031b",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "392e39ac-2b65-475c-9774-b1a06ba2f5aa"
        },
        "item": {
          "id": "5655e8a3-ef3a-46c7-9cc2-52b43cfed2c1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1d642d12-adf6-48d7-ba59-ce58249fe63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4c558b-0134-41b7-b3f4-656cc1ebe17b",
        "cursor": {
          "ref": "749c1dc1-2431-481f-a041-b235e0ddfb0f",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2bcf72a3-965c-47fe-b02f-d7fc1c738509"
        },
        "item": {
          "id": "3a4c558b-0134-41b7-b3f4-656cc1ebe17b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1ed2cf7d-1040-4daa-ad5f-00697b20849e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c46460d-98e7-4f91-b2f0-37291a4eb090",
        "cursor": {
          "ref": "c869d99c-a9c6-466f-b7ef-40f1b34b6be7",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8decd6c9-1bad-4b75-b69e-92946d346d0f"
        },
        "item": {
          "id": "5c46460d-98e7-4f91-b2f0-37291a4eb090",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9dad2a5b-c0aa-4878-b1dc-4be57e209f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed78519e-f733-40a3-99dd-3ff6fe1ecc03",
        "cursor": {
          "ref": "cc8da7b3-0ff8-4967-98d8-6d7bbe4a3fc1",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3b638cda-0d65-4000-876b-7241b8542478"
        },
        "item": {
          "id": "ed78519e-f733-40a3-99dd-3ff6fe1ecc03",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "61203604-74f4-4de8-98b7-49fd74ff1e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c8fe4d-770a-4b74-b5f6-41099b541342",
        "cursor": {
          "ref": "3544ff72-4e70-46f5-a699-cf8a5e9cda2f",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "91b08ba1-857e-40f5-8260-85058b68cec9"
        },
        "item": {
          "id": "59c8fe4d-770a-4b74-b5f6-41099b541342",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e983b03c-c284-4f03-bea9-3b5c9837a97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a2f279-821a-485b-b9f1-040a0835a856",
        "cursor": {
          "ref": "c2a9ec79-fd8a-4d91-8226-acf89a0c1b8b",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8124faba-c67b-41e8-a784-6151750e1fd5"
        },
        "item": {
          "id": "51a2f279-821a-485b-b9f1-040a0835a856",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2187e584-6372-4109-b6a5-0321fcf7386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0766f0f2-f5be-4ba8-a212-b86e21fcee9b",
        "cursor": {
          "ref": "7e2425c6-0882-4bee-8a20-9aeef7edd064",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "de663814-f135-4c23-99fa-58155f871356"
        },
        "item": {
          "id": "0766f0f2-f5be-4ba8-a212-b86e21fcee9b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "62468e46-a3fd-46f2-8ef9-6d8f1932d837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e592a55a-9d8c-4358-a144-006e05c2d9bb",
        "cursor": {
          "ref": "886c992e-5c83-47d2-a095-db653ddcd34b",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "94acb47a-19ca-452e-a84c-e4d9ce012d8c"
        },
        "item": {
          "id": "e592a55a-9d8c-4358-a144-006e05c2d9bb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "210700c3-6279-426c-adc9-497217fa2171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b455a4df-8b62-4563-984e-b1e93c7a746f",
        "cursor": {
          "ref": "7ca3d191-cf6b-45be-af51-483a21823c81",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "46d48500-c8c3-4f40-83d8-12443abfaafc"
        },
        "item": {
          "id": "b455a4df-8b62-4563-984e-b1e93c7a746f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "06d82293-a275-45b4-b239-5ef6044eb31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc69ce1-c537-416d-aa47-d6fd2299bcf8",
        "cursor": {
          "ref": "525c231e-f195-4ad0-89ae-d58053797c15",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "95acbaf0-31c2-4ce0-9846-280f1a7f2edb"
        },
        "item": {
          "id": "fbc69ce1-c537-416d-aa47-d6fd2299bcf8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5e2b3005-5188-46be-a617-ce67bc0413e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d342865a-57a5-4679-8761-794659eab97c",
        "cursor": {
          "ref": "b37ca5a2-5a8c-4030-8221-d4d701e1c6ab",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "94ed02fe-0df3-49ef-954c-4ce00312c24b"
        },
        "item": {
          "id": "d342865a-57a5-4679-8761-794659eab97c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "24337d5e-4cba-42fd-9ad2-ccfe3c7c2b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23215bf7-1a38-4952-8637-da2e2ddde9f8",
        "cursor": {
          "ref": "f372dc7c-186f-4863-9183-f0ef14566b8e",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "720c5cf8-23ba-4e15-a36e-3e7547c83366"
        },
        "item": {
          "id": "23215bf7-1a38-4952-8637-da2e2ddde9f8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0c524ecc-abc3-428b-a924-707db2e9a628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee42fe8-c653-459e-896e-a038dbb92ae0",
        "cursor": {
          "ref": "fe6793fe-878f-4b7f-94ca-55390e90e00c",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "be6d7ada-fd96-4305-8ca8-7a0a3c75702b"
        },
        "item": {
          "id": "1ee42fe8-c653-459e-896e-a038dbb92ae0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "821841a6-41e4-4218-bf0c-46f5c076e23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22760895-a960-4014-a160-91f62b778ec5",
        "cursor": {
          "ref": "0743616e-20c6-4867-9a3e-d3bfa3a42388",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0b646f1c-edc4-4a7b-87a6-09d1a90abb5d"
        },
        "item": {
          "id": "22760895-a960-4014-a160-91f62b778ec5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3220670c-a46c-4d8b-811c-9172880276ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faa6add-1fc1-4ecb-9b7d-de890b82b90a",
        "cursor": {
          "ref": "7eb85c40-8cac-4233-a7c7-590b654aa288",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1a3e58ad-2b0c-46ef-b7a4-7000d8dc8911"
        },
        "item": {
          "id": "8faa6add-1fc1-4ecb-9b7d-de890b82b90a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "12bd0e0f-63f9-47b9-8652-3672770424ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73f20c6-5b0c-4f6c-acc8-1e839cf61613",
        "cursor": {
          "ref": "c3b5a482-29c3-409a-8463-2b928bf1895c",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6af122dc-5637-42c9-a85c-4ce4e0b76694"
        },
        "item": {
          "id": "a73f20c6-5b0c-4f6c-acc8-1e839cf61613",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "230ae950-d15c-4b6d-af2c-5427efdab880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a913db55-43bd-45f8-9f86-498ac4f2b895",
        "cursor": {
          "ref": "c44eef17-7270-44df-aa79-d9895e8373ec",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "07be6bd8-9487-4626-8187-9eec92abeca7"
        },
        "item": {
          "id": "a913db55-43bd-45f8-9f86-498ac4f2b895",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9542e6cd-7ef1-47c6-9ac3-05182e7cb853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162c1bf7-9a7c-4ac1-920d-b3077df9abdf",
        "cursor": {
          "ref": "de8b31c0-915b-412a-b4ab-a730563c2b98",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "af596a73-646c-43f1-bfe7-e3b415efbd1c"
        },
        "item": {
          "id": "162c1bf7-9a7c-4ac1-920d-b3077df9abdf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5daaf0f1-2ceb-47ae-908d-c882726600d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f181629d-b54b-4134-94db-286130f0fc3b",
        "cursor": {
          "ref": "6f9363bb-68f2-4597-bd13-5830f564e2f1",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "abde63ad-711e-49c6-90f6-5c83170b2947"
        },
        "item": {
          "id": "f181629d-b54b-4134-94db-286130f0fc3b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c0994b34-2115-41be-8077-a3bcaae77753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45a857f-e4a8-441e-bfbd-5f7059a841bf",
        "cursor": {
          "ref": "53a5d05d-c612-4358-96d4-23a6f49ec5ab",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c5a856f5-ab66-4212-92e8-38cd3f5a98e9"
        },
        "item": {
          "id": "c45a857f-e4a8-441e-bfbd-5f7059a841bf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "61b75c90-ad1a-492c-b691-9f2f253a0056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff036f4-56cb-4d15-8ba0-9aee9e295f68",
        "cursor": {
          "ref": "a9ec49bb-8077-458f-a516-649855787647",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1ab75dd0-0d12-41fb-8f8f-ac5865458834"
        },
        "item": {
          "id": "0ff036f4-56cb-4d15-8ba0-9aee9e295f68",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2fc8e0ca-3542-4c60-a467-d65f819a38af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1258,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd736be-1bbc-4710-9317-e295e367aa75",
        "cursor": {
          "ref": "b9bca7ed-68d2-477b-a816-62f678cca1ef",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ce4e4c34-9036-4d85-9bca-a42cfabeace4"
        },
        "item": {
          "id": "8bd736be-1bbc-4710-9317-e295e367aa75",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e16b57e2-86bf-4faa-a3d8-c0cf08274384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1164,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468e7806-1a35-4bd1-ac08-85dde9922915",
        "cursor": {
          "ref": "812ec929-18d9-441d-8482-33a759c36a6f",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "28b0a220-8b70-4464-b896-16006c57767b"
        },
        "item": {
          "id": "468e7806-1a35-4bd1-ac08-85dde9922915",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fbd75961-4c85-4b9f-95cb-6451743a4d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1776,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59f7b17-8ab9-4177-85e2-ffd002106880",
        "cursor": {
          "ref": "36b6a392-7521-48f1-8fea-69c17e292441",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "eca25572-832a-4186-bccd-7994ba1b4b89"
        },
        "item": {
          "id": "d59f7b17-8ab9-4177-85e2-ffd002106880",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0886ec9e-6105-4bcc-b8f0-6b42f824b531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1663,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec590540-1f68-4c73-8aec-144e30f26458",
        "cursor": {
          "ref": "5573f94d-554c-4da6-8428-1375db693c47",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "45eab11f-8e73-467a-b183-749197eccd60"
        },
        "item": {
          "id": "ec590540-1f68-4c73-8aec-144e30f26458",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d057b5ba-d913-4d31-ad88-bcae67d33474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1212,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bfe570-ae3e-4b39-8b52-637ee0de7e00",
        "cursor": {
          "ref": "7433604e-c431-4260-8a1a-83677cd9164c",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c3d650f5-1042-4fe3-a130-22c949d7d7c3"
        },
        "item": {
          "id": "55bfe570-ae3e-4b39-8b52-637ee0de7e00",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a83244e3-b900-4041-90d0-7c8d2311e3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1101,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b446792d-e895-401a-a05d-2ea2cead79bf",
        "cursor": {
          "ref": "e07081df-c2b3-4127-9944-31ae76fbeb5e",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5cea2fd8-47f4-44f7-ba39-f69d21c90fe0"
        },
        "item": {
          "id": "b446792d-e895-401a-a05d-2ea2cead79bf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9cb1f93b-f66c-453a-bc60-a00aae33c2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eb18c8-fae3-496b-86e2-aca1015850fc",
        "cursor": {
          "ref": "f6774dff-5cd9-4ae3-aec1-47728745d697",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "66160698-8c4b-46a9-93ec-869708bc8f31"
        },
        "item": {
          "id": "93eb18c8-fae3-496b-86e2-aca1015850fc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "707ed234-4ab5-4fef-a4bb-04ace8845810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e39d8a-121c-405b-9356-35f4d524ca1f",
        "cursor": {
          "ref": "23b0b922-1cf0-4766-84e2-f58d98ad2dd6",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "644b6d38-6d2e-4c7b-8f97-9847251f450c"
        },
        "item": {
          "id": "f3e39d8a-121c-405b-9356-35f4d524ca1f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2f1cf5f1-4d9d-4616-a1b2-8565e578830b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff515bc-3e7c-4c91-ae28-3ef7fcfcd4ba",
        "cursor": {
          "ref": "3e937c92-c0e3-4763-883c-9cd19b2ced29",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fbc9bb6d-ca87-4e90-897f-1e8bc946d402"
        },
        "item": {
          "id": "cff515bc-3e7c-4c91-ae28-3ef7fcfcd4ba",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5bdec522-3bfe-43b8-a512-7c70c872c33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6edc55-913b-4d38-949b-47860fdbe63e",
        "cursor": {
          "ref": "81bc9b8d-0d16-4929-abb7-22a22a9d96e1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2e751fb6-e21e-40ed-a615-9fc529808d50"
        },
        "item": {
          "id": "db6edc55-913b-4d38-949b-47860fdbe63e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5080b912-d60a-4be4-a0be-848a8463d275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bc8ade-a99f-46be-b80c-5b5891e46125",
        "cursor": {
          "ref": "9a43f384-9ed3-4146-b113-415bd1de5820",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4e0d111a-c4a9-499b-a553-72ce4cecb76f"
        },
        "item": {
          "id": "b9bc8ade-a99f-46be-b80c-5b5891e46125",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1d7c6c25-0a29-4d0a-a7f3-d2328bf1ada2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd860905-580a-409d-8576-d7fe69c39324",
        "cursor": {
          "ref": "2acc3ec6-8734-4933-bf98-eaee9aff4847",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "53784307-a3d6-482e-9971-d983a73a7d7d"
        },
        "item": {
          "id": "cd860905-580a-409d-8576-d7fe69c39324",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "79774260-a12a-4f8a-8473-9b83b0d1d9a3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 857,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b9ac42-a231-41ef-91ee-71740739672d",
        "cursor": {
          "ref": "a5f19686-b93b-4258-aa62-42a303d09042",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "de2096a4-54d8-495f-81c1-dc24ac110f88"
        },
        "item": {
          "id": "27b9ac42-a231-41ef-91ee-71740739672d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f2690d6c-8ecb-412b-bc0b-e2cc502004b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad46809d-e7db-4a2f-8d12-7e407e3d69ef",
        "cursor": {
          "ref": "7e33edce-9b31-4831-a026-e35f4a75e60c",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7ada9ea9-9e65-4854-b2fc-e93a1fbe473a"
        },
        "item": {
          "id": "ad46809d-e7db-4a2f-8d12-7e407e3d69ef",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6104fb7d-8ddd-482d-922e-306c8799de8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b5857a-502d-4812-86af-2d9cfff51bd4",
        "cursor": {
          "ref": "a909151b-3c03-419c-93c6-e7a5a5a161d7",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "da27a553-4b58-4d31-af23-8b346b832b77"
        },
        "item": {
          "id": "c4b5857a-502d-4812-86af-2d9cfff51bd4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "16677945-2942-4e2a-9eeb-b40877eaf151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94c5b76-25e4-40f0-b2e4-30f4bf1d694b",
        "cursor": {
          "ref": "18cd8530-a353-4119-9688-91ffca608e01",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bf4f356b-2e79-46fd-a810-7111bb8efb02"
        },
        "item": {
          "id": "f94c5b76-25e4-40f0-b2e4-30f4bf1d694b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f4c7380c-de4b-40e1-bbe7-419806b65c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7605d2aa-e688-4a97-82a7-2c81dbc7b492",
        "cursor": {
          "ref": "f2419381-31ba-4e5c-ba36-df36d0f3d303",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "636d6ed0-743a-4693-8449-7b4af6b42083"
        },
        "item": {
          "id": "7605d2aa-e688-4a97-82a7-2c81dbc7b492",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a86d40da-6dc4-4e06-8e25-5d2004578829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb76903-b9d5-4812-8249-61eac05f0011",
        "cursor": {
          "ref": "26bf9532-bd51-4c36-a978-a4a7b7d079d3",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9f708353-bb31-4d20-b77c-766aeaa13070"
        },
        "item": {
          "id": "adb76903-b9d5-4812-8249-61eac05f0011",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "90f3f4cd-0976-4e2a-8078-8017e8618aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28fa2b1-dc06-4e10-ba15-1f40ce3001e5",
        "cursor": {
          "ref": "55dc553d-7fb7-4263-8cfb-8ea62a71ff37",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2b7a1131-5973-49eb-b15c-2a9c236666cf"
        },
        "item": {
          "id": "d28fa2b1-dc06-4e10-ba15-1f40ce3001e5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "359a28cb-f4f2-4555-b0ea-c2a744e69a92",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 981,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0958676-23e5-41b5-9662-ef859232cd3a",
        "cursor": {
          "ref": "01c0c2ab-20e4-4c53-8b77-c587bae5cedc",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e1720e2b-c3dd-48ab-a6bf-0f42158a6af7"
        },
        "item": {
          "id": "d0958676-23e5-41b5-9662-ef859232cd3a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "314eaa8e-2a29-4546-b2e0-7db9ab5e03d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae813de-13b6-4092-86aa-e4762fc34249",
        "cursor": {
          "ref": "ac0a3a06-cc6e-4cb9-8927-63bb2c626482",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "76e97bcb-cbbd-43e9-915c-9eb5c5f098b1"
        },
        "item": {
          "id": "cae813de-13b6-4092-86aa-e4762fc34249",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1d2e4c4d-9c63-44eb-8060-8151bef8459f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8726424-6cda-4eb1-bf93-543b58830657",
        "cursor": {
          "ref": "5708865e-1450-4357-b12e-23c3429ec59b",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "72322fd6-839d-4609-a0f9-7f2f2f5270ec"
        },
        "item": {
          "id": "e8726424-6cda-4eb1-bf93-543b58830657",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b5a1869a-d6b2-4545-b178-c11894bc5d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a001efec-d07d-4f37-bf4c-e9ed57989cc2",
        "cursor": {
          "ref": "c7b22e83-20a8-4572-bbca-5fa5beae1012",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "731dff48-c7af-43b5-af95-9f4124e0944b"
        },
        "item": {
          "id": "a001efec-d07d-4f37-bf4c-e9ed57989cc2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6fd955dc-cf17-4a5f-a646-2a5fa4962987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4086dc-d612-4e6e-9b41-840e19edd69b",
        "cursor": {
          "ref": "347db77e-1567-4b15-8edb-89d38a78c3f2",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c7ce78bf-0aba-4c26-99a5-8dbb2c032c7c"
        },
        "item": {
          "id": "4a4086dc-d612-4e6e-9b41-840e19edd69b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "464d6269-c186-4855-a0fb-645f1e28a16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a98dcde-9ae2-4879-99fa-695900916c13",
        "cursor": {
          "ref": "541a10e9-2905-455f-abc3-435d6f1a8266",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "14516323-9a8e-4fe9-92be-b336b0be3946"
        },
        "item": {
          "id": "1a98dcde-9ae2-4879-99fa-695900916c13",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "505f7e8e-a72f-4300-a3c7-4c3eb5894dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dee9b8-0a05-4b09-98e6-694394a72145",
        "cursor": {
          "ref": "fec51494-45c7-4414-be0c-9a34040e108f",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "27c65b7b-decc-4658-bdcc-2c89f485213e"
        },
        "item": {
          "id": "69dee9b8-0a05-4b09-98e6-694394a72145",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d4ba6dfb-3b3e-469f-b749-68a2b61fa665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c097cab-accb-4c9e-af75-2add6b2f9386",
        "cursor": {
          "ref": "5d806bff-eeda-411e-ac67-e6a4102b6311",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ecfbd5d8-a443-4edc-a630-ffbf3baeb0f7"
        },
        "item": {
          "id": "1c097cab-accb-4c9e-af75-2add6b2f9386",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6d73e4e0-43e3-45f8-850f-4a5cb88cb204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1016,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc0b588-cf81-4780-a816-f172e26632d7",
        "cursor": {
          "ref": "ecd0571d-157c-4753-8e3e-3b1374c0ae83",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "445cca59-7665-4f50-b758-c23ba3eae310"
        },
        "item": {
          "id": "4cc0b588-cf81-4780-a816-f172e26632d7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8ea13635-3658-47b5-9e7f-de5de46e33c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddda258-e5ea-4e44-a9e4-9a28e126b3df",
        "cursor": {
          "ref": "6162dfdc-9341-474c-80b0-a9412c3ac64b",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "625c67a2-90dd-48d1-b7e3-f0cc5eaf1ec4"
        },
        "item": {
          "id": "0ddda258-e5ea-4e44-a9e4-9a28e126b3df",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3505e025-bd46-4840-896e-f081680c7873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9dcbc3-cddc-4069-9fd6-f5193405e135",
        "cursor": {
          "ref": "c010e0e6-ef29-45cf-9f31-11912eeaee04",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2df8ccc1-9a3c-4ff4-afbc-510050e9418a"
        },
        "item": {
          "id": "2c9dcbc3-cddc-4069-9fd6-f5193405e135",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4e451a77-ddd3-4fc7-8e21-f04abddd41af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6844ac1-ac62-4122-8b77-30802f746e49",
        "cursor": {
          "ref": "69c98282-0bea-44be-9e9d-4956afa4bc91",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7946c8af-230d-49a0-a1d9-f89c562decdc"
        },
        "item": {
          "id": "f6844ac1-ac62-4122-8b77-30802f746e49",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1974b484-9f13-413a-9ee8-115915909c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60df3b8d-c589-4d05-9003-8ae8548779a2",
        "cursor": {
          "ref": "7640803d-ed74-429b-b319-2f81221a998a",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f68c00f1-707c-4d69-bb8b-c68b2f3eb488"
        },
        "item": {
          "id": "60df3b8d-c589-4d05-9003-8ae8548779a2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "414d018d-0851-4b37-9ab3-8d666d5b8d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1045,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77da1af-ff1b-4b57-9c3a-2998f14db527",
        "cursor": {
          "ref": "fb5967c2-7254-4d84-9729-28abb4f4dbc6",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5b7a1c8f-8048-4f04-8c4f-3aecb50851ce"
        },
        "item": {
          "id": "d77da1af-ff1b-4b57-9c3a-2998f14db527",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f2556a90-af80-4534-8d53-c71ca83b6a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ed95a6-d3a3-4b87-895a-b7d4aff4e5a1",
        "cursor": {
          "ref": "022ae59f-2477-4d4f-971b-be0c7c529dcb",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ffb712de-96ff-4d36-8113-c5567b54d515"
        },
        "item": {
          "id": "f2ed95a6-d3a3-4b87-895a-b7d4aff4e5a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e44f159f-22a7-4002-bed4-b254da7fc9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4197852-cbb2-4c1f-87b3-8c714372a8c4",
        "cursor": {
          "ref": "0403589d-49af-4277-9648-f9fae3ba87f8",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8de34def-a9a8-4977-b494-ae38c5731f94"
        },
        "item": {
          "id": "c4197852-cbb2-4c1f-87b3-8c714372a8c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8b29acbf-367e-4233-bbe1-07749667243d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d69f89-156c-4466-88cf-24b8ef5bafa5",
        "cursor": {
          "ref": "b29f3357-d764-47d4-b936-2e61fd6ae23a",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a22434de-7de3-4dbe-ac3d-58bf432c6222"
        },
        "item": {
          "id": "36d69f89-156c-4466-88cf-24b8ef5bafa5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aff9a092-5e72-4ad7-aae7-d0db2bca2e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1721,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457db19e-056a-4ea0-854e-b168f012ba31",
        "cursor": {
          "ref": "ef1a6841-2530-47f4-88a0-38541b470934",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a1086c73-5f79-429a-9e55-aef1b5347679"
        },
        "item": {
          "id": "457db19e-056a-4ea0-854e-b168f012ba31",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9aba4a0d-9dad-426f-834b-659377290568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3022,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df374a1-732d-49d1-9f8b-bd93eb74a409",
        "cursor": {
          "ref": "766ccb64-ea5b-4654-9898-09ca7b2ce2de",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3a3b3f27-c6bf-4956-b2ee-84dd680a162b"
        },
        "item": {
          "id": "8df374a1-732d-49d1-9f8b-bd93eb74a409",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e0abe401-5d00-481d-931b-547393e5f53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3296,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8393a991-f8df-42d6-af0e-247beda40ecf",
        "cursor": {
          "ref": "a73b208d-57f7-4a21-9575-b35efbfc6e5d",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ec443c32-726f-4fed-b022-44c2b57d7f1b"
        },
        "item": {
          "id": "8393a991-f8df-42d6-af0e-247beda40ecf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7bba79e5-71d3-409f-acbd-9341f9dbe70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2096,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8a8c91-dd40-41f0-a403-c74a41bf63fd",
        "cursor": {
          "ref": "d8b40320-cdde-4bbb-8d2f-6d06b112aea0",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "45fbfb35-6581-4105-b005-e18f363357dd"
        },
        "item": {
          "id": "8f8a8c91-dd40-41f0-a403-c74a41bf63fd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "51821c3b-f0ef-4300-8596-6f9b5f9c2bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a274d51c-6742-413b-9beb-04d3a04cdb05",
        "cursor": {
          "ref": "c4598dfa-316e-4207-90f0-0820af1e666e",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8aace935-3c25-4089-b772-e240eab516ca"
        },
        "item": {
          "id": "a274d51c-6742-413b-9beb-04d3a04cdb05",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "83b6570f-7a98-4115-bff1-d9686b07b625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec124de-f18b-45f5-bf93-2e25822ed0c8",
        "cursor": {
          "ref": "28557b0f-d074-4395-b634-44f74ae407ed",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "65461055-f1cd-43a5-aba7-a636fe3f9077"
        },
        "item": {
          "id": "eec124de-f18b-45f5-bf93-2e25822ed0c8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c527cd6e-8c71-48cf-bfb5-71a321c91f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1324,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b3a02d-decd-4e2e-8acc-0805f1769826",
        "cursor": {
          "ref": "dfe91bd4-386b-49dd-8ee6-800906d0e869",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "01658224-b6cc-463a-a94c-2b55810ffe72"
        },
        "item": {
          "id": "30b3a02d-decd-4e2e-8acc-0805f1769826",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "17c73da6-80aa-49be-bcbb-19e93d2d82ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0069e4db-6984-4c49-ae80-4ea5b31e186a",
        "cursor": {
          "ref": "b7632a62-91f0-427c-b14d-bd450dc9c184",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "abddb9c8-e32f-44bc-a749-fbb181e7978f"
        },
        "item": {
          "id": "0069e4db-6984-4c49-ae80-4ea5b31e186a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "842ecc3b-9ade-4f77-97e9-89f50e8ba161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe305c0-3d9a-4435-9b99-5f3f74255388",
        "cursor": {
          "ref": "56cc82c2-1388-4ba0-8ac6-63edf3ea79e8",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7ff8fb2e-b2f3-4f3f-9d12-9ad333a1b93b"
        },
        "item": {
          "id": "7fe305c0-3d9a-4435-9b99-5f3f74255388",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7e4ebfe2-63c5-40f1-9e6d-6f79a1536150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 941,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604b608c-a4d1-4f11-8f8f-2c051a1b471e",
        "cursor": {
          "ref": "2b4233b0-a6b2-442c-b462-9972e9ac7fe4",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "06973bcf-d23d-4345-9485-60be062778e6"
        },
        "item": {
          "id": "604b608c-a4d1-4f11-8f8f-2c051a1b471e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9f50b17a-aed5-49e4-9205-40fa37f2e39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f41830-d9ac-4442-9585-786949b4e7dd",
        "cursor": {
          "ref": "11fd09ee-f4d1-460f-8f11-71dc99cd8b30",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "25626695-cfd9-4e58-99a5-d8a8183874bd"
        },
        "item": {
          "id": "56f41830-d9ac-4442-9585-786949b4e7dd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0f8948f6-0632-4615-a69a-9c11f5438646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07947f80-9b32-40e6-9709-5c33e2545ca9",
        "cursor": {
          "ref": "f43f8ac1-e2eb-4430-8861-83be2a36e094",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "136f65fd-7ae0-4315-a119-733f1fd59a40"
        },
        "item": {
          "id": "07947f80-9b32-40e6-9709-5c33e2545ca9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "64eb0c7a-a685-403c-934e-4a898007c4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fd8edd-0b26-4509-abbe-9be40abb5531",
        "cursor": {
          "ref": "5266bb05-4228-4518-9393-c7de35248f12",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3b394fdb-f0a4-4675-8718-4844ad85f1f5"
        },
        "item": {
          "id": "c8fd8edd-0b26-4509-abbe-9be40abb5531",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bdeabc9e-9868-457b-b408-90715cb6ac52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d66612-dfc6-4b10-b4cf-85d0077c2a85",
        "cursor": {
          "ref": "44441a3d-2e0d-4c10-a4b0-8de8ef25b04d",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2faea851-f383-40a9-869f-9c84df243f9c"
        },
        "item": {
          "id": "56d66612-dfc6-4b10-b4cf-85d0077c2a85",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "80162009-9ed8-4273-9f87-701e13f63360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c282756-b099-400c-9f58-92dcfc777cc6",
        "cursor": {
          "ref": "9f8b0360-a6b8-466e-8728-a1c25a42d559",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "719b53b4-b37b-438e-add7-06470fdc3e28"
        },
        "item": {
          "id": "2c282756-b099-400c-9f58-92dcfc777cc6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9735d9d5-84cc-47be-9755-302af7b633ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3693dd6-01f2-49eb-b76e-e1473c42b6db",
        "cursor": {
          "ref": "05fa4f33-a557-4d8d-8dba-2f13eed881d5",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fe4f5bef-7f07-4613-8aea-292e29e1d0c3"
        },
        "item": {
          "id": "b3693dd6-01f2-49eb-b76e-e1473c42b6db",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e2853fec-5d76-4e2a-b8cd-f494cb0fc3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eefba9d-472d-4b07-a940-2e86879f545c",
        "cursor": {
          "ref": "bbb4efb5-d18c-4143-8345-0c5f2d83c395",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b5a3f0b6-fde8-4147-a0e2-81a98df4d05d"
        },
        "item": {
          "id": "2eefba9d-472d-4b07-a940-2e86879f545c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d8b4f2c5-2a2b-41e7-9f4c-b6250e1b426c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a516332-d521-437b-a5e3-cbc92cb3edc0",
        "cursor": {
          "ref": "b300c9bf-b6d0-4e27-bc60-c3f273c00a64",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0b99d82b-0492-481d-9343-19ca31d92aae"
        },
        "item": {
          "id": "3a516332-d521-437b-a5e3-cbc92cb3edc0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ec2b09a6-5501-4fc8-b109-d312aca28d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1182,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cd3738-5af8-4e91-9fec-aceac66882e8",
        "cursor": {
          "ref": "de3a1333-6538-4832-b479-5b638c492fd5",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "29b4eccb-ac4c-41d5-a069-c250d71aa6e2"
        },
        "item": {
          "id": "81cd3738-5af8-4e91-9fec-aceac66882e8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "77d93ef5-b1c2-4781-93ed-d655ace6518e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddae5e40-5d7d-4282-9f71-9bd484ae548c",
        "cursor": {
          "ref": "1cf291d1-df61-442b-89e6-a9735e5b2864",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "280a7252-b440-4b8f-b713-1908dedfb677"
        },
        "item": {
          "id": "ddae5e40-5d7d-4282-9f71-9bd484ae548c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "00b1a981-d4af-421d-b563-d736000dd47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b9e6d9-5c21-4b46-a478-bc1dbe783439",
        "cursor": {
          "ref": "2d91c4e9-a226-496f-ba0b-75c5e3861a24",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e9ac1b59-9cf4-45a9-ad71-1a026d94831d"
        },
        "item": {
          "id": "c3b9e6d9-5c21-4b46-a478-bc1dbe783439",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3becc7e6-5e95-4d00-8459-8695e98d4079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a85448-cf0e-4fea-93be-321f56467394",
        "cursor": {
          "ref": "7d1f57ac-b738-41ad-9320-117e183b3134",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f1a5b6e1-672e-4b99-8966-d065491af562"
        },
        "item": {
          "id": "52a85448-cf0e-4fea-93be-321f56467394",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9cc32d15-5dad-45f8-b652-db79912e0946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e38533-a496-443c-8d9b-1844f2e84afd",
        "cursor": {
          "ref": "be363927-d679-49a0-8ffb-3515a889c194",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "de2fd945-4f8a-46de-a7a4-520ac06761b3"
        },
        "item": {
          "id": "43e38533-a496-443c-8d9b-1844f2e84afd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b91dc811-f086-4da6-8996-274f83d79a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3135e0a3-a369-43de-a59e-e08829c92942",
        "cursor": {
          "ref": "f8105fdc-7a5f-47f4-82a7-e51dc998a356",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f85b7dda-4bb6-4cf4-be4b-9e75d1caf3a2"
        },
        "item": {
          "id": "3135e0a3-a369-43de-a59e-e08829c92942",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d99db3a9-581d-4447-a56c-91a1331bab73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdcdebd-caed-474f-a5a9-683c3826d828",
        "cursor": {
          "ref": "15c3b741-a117-4f6d-b6f7-e7b58158f2b9",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "72397945-bfa5-4dfc-acf7-3694bd4f43b2"
        },
        "item": {
          "id": "8bdcdebd-caed-474f-a5a9-683c3826d828",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9c333a17-1731-420b-98e4-89a6103a26a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5345f3-f163-431f-819a-00b85bc8457b",
        "cursor": {
          "ref": "6acdf19d-06af-4ac5-a717-8536ffa5934c",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c8b41b15-b36f-4504-b2e8-20b30c7120e8"
        },
        "item": {
          "id": "aa5345f3-f163-431f-819a-00b85bc8457b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8534c922-41d9-4081-aaf8-5a91ba82838f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1064,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bf80a0-d334-43c4-99e8-f5eec4e9067f",
        "cursor": {
          "ref": "c18213b8-dff9-45bc-9af9-ae14dc532794",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d17752c7-f741-4698-a27a-4340028bbdff"
        },
        "item": {
          "id": "11bf80a0-d334-43c4-99e8-f5eec4e9067f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6f469d37-dff9-4a1d-93c3-13f25d1f0545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1346,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad1b4e7-a4dd-41d5-b5af-312180ba0ec7",
        "cursor": {
          "ref": "7293d236-816c-43bb-83af-83a84bfdbfe4",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b4aaac6e-aeaa-404f-b3ee-fc100eeb93cf"
        },
        "item": {
          "id": "0ad1b4e7-a4dd-41d5-b5af-312180ba0ec7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2b55c938-c021-4bce-a369-04fabf17170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1196,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d00e65c-9b91-411d-90ec-bc8c862fd692",
        "cursor": {
          "ref": "24c391c4-339b-4763-8a60-fdb0a08fef8f",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "582796e2-8d02-476b-95df-8a84c957795d"
        },
        "item": {
          "id": "2d00e65c-9b91-411d-90ec-bc8c862fd692",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6873e925-b916-486d-85ef-474353d43fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc815234-3535-4768-aec1-7f084ed8128c",
        "cursor": {
          "ref": "382ed932-551f-4f2f-a0d2-62ef948656fa",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0a73158d-e246-4053-b717-ba9c756111b3"
        },
        "item": {
          "id": "bc815234-3535-4768-aec1-7f084ed8128c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8237d11b-c76c-4f02-b4a4-4d6a100e8d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ab78a7-41cd-4282-a662-538d5495b021",
        "cursor": {
          "ref": "3f621f39-08db-4d55-b30f-21d454a7ff1d",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "92db9016-8941-4df4-a580-b8ef7519a521"
        },
        "item": {
          "id": "96ab78a7-41cd-4282-a662-538d5495b021",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c7423a45-a686-454f-958c-46ee90998d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69468d0-5a82-4872-b8a1-f3f12244fd34",
        "cursor": {
          "ref": "326c7aa1-1e18-433f-9a5a-df9e07667e06",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "098ccadd-77a5-410e-8aa4-452c696db73b"
        },
        "item": {
          "id": "b69468d0-5a82-4872-b8a1-f3f12244fd34",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f33128ac-4d72-44b2-8b81-411d6cd5ed7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5a0d91-9533-4bde-942b-5f4234dc2af5",
        "cursor": {
          "ref": "cfcba7bc-f49d-431c-b43a-bcc6be5695c3",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f0156efe-8bf7-4072-8fc5-938365f4ddfb"
        },
        "item": {
          "id": "8a5a0d91-9533-4bde-942b-5f4234dc2af5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "70df89e5-28bc-480a-bc39-ec2da577a9cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3aba5f-e43c-4d99-816a-0cba7e89dc98",
        "cursor": {
          "ref": "740d0d2f-bf35-4d60-a5ee-ec3e9e1e2483",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f791c6cc-7f3e-43b5-9703-276e92a3b0c9"
        },
        "item": {
          "id": "7b3aba5f-e43c-4d99-816a-0cba7e89dc98",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "11251fb9-7818-499d-af1c-71b86189ab37",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 732,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47758963-5238-4b4c-b3c9-b8e1dff9397e",
        "cursor": {
          "ref": "210e90fd-a6a1-4986-815c-6c3b186e48a5",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "06af3756-c626-4e44-b85e-d63f95ae2e25"
        },
        "item": {
          "id": "47758963-5238-4b4c-b3c9-b8e1dff9397e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "68529925-0ca6-43b6-bbb1-81f2a0ee2077",
          "status": "Created",
          "code": 201,
          "responseTime": 9698,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d95a83e-dab2-40b5-82e5-b0e11f40cb21",
        "cursor": {
          "ref": "1dff4356-a14b-4651-9cbd-c6cb96c78032",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "75fb8c7c-4837-4903-a47b-a7d1a5c6b753"
        },
        "item": {
          "id": "1d95a83e-dab2-40b5-82e5-b0e11f40cb21",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f8417719-4c7e-4766-8213-bf919f28977b",
          "status": "Created",
          "code": 201,
          "responseTime": 6093,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7aaea69-d321-42f6-8248-f41f6946833c",
        "cursor": {
          "ref": "f7d6c77e-b8c6-4e0e-8856-235db3537d5e",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2d44c0f5-8c98-4197-b756-17e3714a32ad"
        },
        "item": {
          "id": "c7aaea69-d321-42f6-8248-f41f6946833c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bf1140c3-ee78-4d34-b09b-08ebf78f3649",
          "status": "Created",
          "code": 201,
          "responseTime": 6274,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "276d1f88-3e74-49e0-9cd9-2b5555163a58",
        "cursor": {
          "ref": "d0d1db3e-2aad-4d19-abb9-c8549ce3ca9a",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "095df1a5-5687-4006-9940-6bda6caf305b"
        },
        "item": {
          "id": "276d1f88-3e74-49e0-9cd9-2b5555163a58",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2b14fc1b-72fa-4c60-b039-b883c6d0b06c",
          "status": "Created",
          "code": 201,
          "responseTime": 6634,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0c6944-207b-4200-b61c-ea6dc12fd0a6",
        "cursor": {
          "ref": "9a9a33c8-8d3c-4469-893e-5ba7a2ae5da3",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a653c9d3-7626-49e6-893d-328095918383"
        },
        "item": {
          "id": "5e0c6944-207b-4200-b61c-ea6dc12fd0a6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2f3a3dfc-f678-41b0-a45f-317d2fc234c3",
          "status": "Created",
          "code": 201,
          "responseTime": 5683,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4327ac2c-5258-4874-9f5d-394452487972",
        "cursor": {
          "ref": "d524e1ad-6335-4a6d-87ad-f29d0497fd8d",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7a179963-47bf-4a03-939b-94807a01b2bf"
        },
        "item": {
          "id": "4327ac2c-5258-4874-9f5d-394452487972",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f9595c00-9c98-4fda-b78c-50ad8b3b004c",
          "status": "Created",
          "code": 201,
          "responseTime": 9284,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f1f336-c043-4ecd-b169-c75168eb8ffa",
        "cursor": {
          "ref": "6ef68703-3093-4673-b437-5ad7e8bf5b59",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5404f137-49e3-43ea-9c27-0433b7bb70ad"
        },
        "item": {
          "id": "95f1f336-c043-4ecd-b169-c75168eb8ffa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c012af3b-c0ae-4677-b0f1-eaab2a8d1644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f1f336-c043-4ecd-b169-c75168eb8ffa",
        "cursor": {
          "ref": "6ef68703-3093-4673-b437-5ad7e8bf5b59",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5404f137-49e3-43ea-9c27-0433b7bb70ad"
        },
        "item": {
          "id": "95f1f336-c043-4ecd-b169-c75168eb8ffa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c012af3b-c0ae-4677-b0f1-eaab2a8d1644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da3d2ff-5b35-43f2-a8e0-31b257e9468e",
        "cursor": {
          "ref": "7bb50f9f-35cc-45b6-aeae-78a7b598812e",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e581899f-f500-4345-828e-f145f5faf9b7"
        },
        "item": {
          "id": "0da3d2ff-5b35-43f2-a8e0-31b257e9468e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "952f584b-0fab-46b1-8684-1ef2f4cb1eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd83d13-cb1d-4524-b8f1-c77ea768bc85",
        "cursor": {
          "ref": "fc032283-8da2-4499-ac9f-4d25a59abcc1",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "43917425-b73a-4ba8-a25c-342810a5fb0f"
        },
        "item": {
          "id": "abd83d13-cb1d-4524-b8f1-c77ea768bc85",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "094a7ad3-74af-443f-9f9d-635b4ecb594c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce75dba-83d4-4b35-b7ba-3f341bf6c82c",
        "cursor": {
          "ref": "ef1efbbb-fca2-45d1-ab55-c4ee2f6f3a69",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3eb3adc2-bf5c-4b19-b019-9bd333b8203e"
        },
        "item": {
          "id": "3ce75dba-83d4-4b35-b7ba-3f341bf6c82c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d5c394d1-b80f-4718-b573-39d295fb295b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1391,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8881c71-77b8-4994-ab50-9c6c25b5ecb4",
        "cursor": {
          "ref": "bb7c8c7d-6dd2-4105-a28c-749b589ba586",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6269a3cf-5e5e-49a8-a00a-c729474f1ae7"
        },
        "item": {
          "id": "e8881c71-77b8-4994-ab50-9c6c25b5ecb4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a896cbdd-53da-489a-931d-752f4cc31cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1279,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370395e5-00b4-4ce4-82e9-51eab2a4e7d9",
        "cursor": {
          "ref": "c48a1322-2a58-4734-a09b-8cb17b904049",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e6fc4912-d7da-4782-8da1-f8ede526b731"
        },
        "item": {
          "id": "370395e5-00b4-4ce4-82e9-51eab2a4e7d9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bed7c7e5-87d4-42c7-a02b-f9f29a43232e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1159,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9470f0a5-826a-451b-b593-f4517fdc1449",
        "cursor": {
          "ref": "977ce208-0d66-49be-80c6-d2b87b688a0e",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bc0270f3-1284-4cc6-9bdd-55ba2a8b3e93"
        },
        "item": {
          "id": "9470f0a5-826a-451b-b593-f4517fdc1449",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "519b4b80-7cac-46d1-8ffb-2d6bfee5fbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1336,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d86838-fe20-4b1d-b046-d607843bf778",
        "cursor": {
          "ref": "90bf3b66-aea2-425c-a358-63798f3a3b83",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d1218844-7c5d-4e54-95ad-37db8154f354"
        },
        "item": {
          "id": "37d86838-fe20-4b1d-b046-d607843bf778",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "804b2055-704a-48f2-ae33-82f24eba568f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1088,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93f9279-1691-42c6-abfe-6e2657f91692",
        "cursor": {
          "ref": "f710ad71-2d72-4330-9f14-06b2cfe91cd3",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4d444776-fc72-4591-987d-6b3a7a3ea915"
        },
        "item": {
          "id": "d93f9279-1691-42c6-abfe-6e2657f91692",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0a5cfa53-09f6-45bb-8639-4a679e6312dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1175,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd87fb8c-064c-4a5a-9936-f1e0a498377c",
        "cursor": {
          "ref": "fe950d90-c560-44d9-83a6-f49b754efe57",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d7450e21-52c4-45ea-844d-555dd48d2143"
        },
        "item": {
          "id": "dd87fb8c-064c-4a5a-9936-f1e0a498377c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "00755e1b-d025-4af2-a50e-30841d90bb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1302,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a08ee7-a7d8-4338-b145-27972b518ad2",
        "cursor": {
          "ref": "796a5c8a-656c-4608-afb5-80ed96fdee0c",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "144cbc18-b78d-4530-b7ec-2caeff118187"
        },
        "item": {
          "id": "13a08ee7-a7d8-4338-b145-27972b518ad2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0cbeb1e5-8680-4f89-b230-a9321d61b6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d519dc4-612e-4912-a3c0-3e6c820f97d8",
        "cursor": {
          "ref": "456eaaf8-8e87-4f31-a8db-d16f527aa047",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d4db8ac2-7550-468c-9899-1ab6e094082a"
        },
        "item": {
          "id": "6d519dc4-612e-4912-a3c0-3e6c820f97d8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c3436af7-03fa-48bc-9891-ed1572ce49df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc4b769-53fc-4efc-88ca-5e9c334972ba",
        "cursor": {
          "ref": "76c22c79-5ff8-4ad4-bded-149186e324b3",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "072f4716-702f-42bb-a22f-c6141568b77b"
        },
        "item": {
          "id": "8cc4b769-53fc-4efc-88ca-5e9c334972ba",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "80aee285-a351-4b33-835d-5c7b79e08603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1136,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a738fd48-9795-4a36-8c3d-4c4899cf7f34",
        "cursor": {
          "ref": "403ee72e-7dba-410d-b5a2-59dabe493ea1",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "18eca337-3e37-4712-b578-e7f5fc64b6bc"
        },
        "item": {
          "id": "a738fd48-9795-4a36-8c3d-4c4899cf7f34",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "348e3f62-31cc-4314-bbe0-d25ec9995c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1af3b5-b15d-4a67-8c7c-fb633ba929ec",
        "cursor": {
          "ref": "7c68aef5-bad6-4a7c-a630-12461b2412e0",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fbe31e41-d003-4fa3-9047-fcc00d7a5318"
        },
        "item": {
          "id": "df1af3b5-b15d-4a67-8c7c-fb633ba929ec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ad8ebe36-c74c-43e5-bb72-be2d507d245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10efb89d-6bf7-49d9-a47e-513484bc3496",
        "cursor": {
          "ref": "06ce98e2-a9d2-4cb3-8afe-d96636f7d8b9",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3a8b9db8-910a-4224-b4a4-278aea8d2b42"
        },
        "item": {
          "id": "10efb89d-6bf7-49d9-a47e-513484bc3496",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a7593b53-9c6a-4cc2-9346-54e97cdd0732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1116,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9c0450-3732-424d-8a66-a76ad2c84ae2",
        "cursor": {
          "ref": "94bf0094-7be2-4b30-b3b4-89fd9e602d3e",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "58a6b548-0776-4744-9419-3984effd8a20"
        },
        "item": {
          "id": "fe9c0450-3732-424d-8a66-a76ad2c84ae2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6ea65fc0-369f-41f4-9f9f-b1764504e581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1318,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e52c261-181e-44df-b82d-dc5197f7a305",
        "cursor": {
          "ref": "c766a540-a920-4ae8-9f67-85feb1fd71d8",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7083aee8-74fa-412f-ba4a-6c0aebd2a81b"
        },
        "item": {
          "id": "2e52c261-181e-44df-b82d-dc5197f7a305",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "27424e4a-a772-4f5f-a8de-ca624b5dbc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1295,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4781ac67-a7a1-4f06-b568-8059d2ab69c1",
        "cursor": {
          "ref": "d02fa9b4-3349-48d7-9583-2bfeb12e06b2",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2282afa1-12f7-4267-995b-938bd3bae78d"
        },
        "item": {
          "id": "4781ac67-a7a1-4f06-b568-8059d2ab69c1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bafd7491-0d8c-4dd4-93ea-f0837901806e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe94a2d-77d7-4451-8eb0-dac6ed9711be",
        "cursor": {
          "ref": "69f8cca5-fb2b-4cc7-a751-914d40101278",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d3e04d72-2a0d-4e08-bfef-64f3c534a431"
        },
        "item": {
          "id": "7fe94a2d-77d7-4451-8eb0-dac6ed9711be",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2f88f8b7-7912-4be9-a7b3-c957bcf2a190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ab098c-c76c-4d68-b8d5-946a426dd23d",
        "cursor": {
          "ref": "dc096619-698a-4e7b-b345-0184b5b03ad4",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "87cba845-11d5-4c10-b729-b08df4c91582"
        },
        "item": {
          "id": "c3ab098c-c76c-4d68-b8d5-946a426dd23d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7fdad5a5-678a-4203-b0fa-caed16445cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ff3cc4-667a-441d-9f28-098c0832ce1b",
        "cursor": {
          "ref": "7a75b339-9701-4935-ba73-9b5f4d173733",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d15a79c6-c183-4cec-9156-832775d025db"
        },
        "item": {
          "id": "f0ff3cc4-667a-441d-9f28-098c0832ce1b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d3d61a59-cd3f-4016-acb2-0c64b2f4d0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efc2169-f535-4129-ae91-fabee1ac5449",
        "cursor": {
          "ref": "d3f5655e-b15c-4fa8-908a-93c40812c6a6",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "41694efa-0fc0-496b-bc8c-104ccd4fc2a7"
        },
        "item": {
          "id": "8efc2169-f535-4129-ae91-fabee1ac5449",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fbf575ff-897d-411e-ab2b-418f5de5b51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd710bb0-e264-498b-a178-2f13b9ebe26a",
        "cursor": {
          "ref": "f488728e-d60c-4d4b-a883-44b21eea1bfc",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a9db5e28-1b83-4e8a-af50-e14046a68bf7"
        },
        "item": {
          "id": "dd710bb0-e264-498b-a178-2f13b9ebe26a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "08dacc90-cee3-40c8-8d62-0a2e3f27dab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b23bb7d-e4e3-496f-b8e0-1d57bb387304",
        "cursor": {
          "ref": "184d4b49-644f-48cc-bb97-cb6a5a24f2f7",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b58ed402-29fe-4eb0-9f70-a994e41f644c"
        },
        "item": {
          "id": "5b23bb7d-e4e3-496f-b8e0-1d57bb387304",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9f46cefb-0dbe-499c-b678-8b347fbeb919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d9144f-807f-4f06-ad77-c1eff648e1f0",
        "cursor": {
          "ref": "334026bd-cf02-4bde-beec-e1c87fbcc9ea",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b0ef2708-f5b8-4aa5-9622-f463b85e1d84"
        },
        "item": {
          "id": "36d9144f-807f-4f06-ad77-c1eff648e1f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "67259f54-519e-42ad-923a-c55e4e3aca97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ad6f50-2330-4d90-8847-867edef73a8b",
        "cursor": {
          "ref": "7b4bea2e-9ce9-46d3-b67c-99e2013457c4",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4639723f-2968-4cd2-b230-41dc7052a8e1"
        },
        "item": {
          "id": "17ad6f50-2330-4d90-8847-867edef73a8b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cfbc64a3-ec54-4a55-9e82-37a1de51e5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9d2834-47c1-410c-aaef-5e438ae0ce2b",
        "cursor": {
          "ref": "2edb2470-4a6e-4d1c-92d0-5a9b084e0d8a",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6acf7557-80b2-49ee-9ba4-35cd7cc07580"
        },
        "item": {
          "id": "4f9d2834-47c1-410c-aaef-5e438ae0ce2b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "760b944b-1f36-488d-91bc-e7932a082bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54c9cf3-6dea-4c4a-8f3f-3e31a239e05e",
        "cursor": {
          "ref": "3ae88fb9-0fdd-4b49-b845-16b8605f2891",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c7dc583f-1144-441f-b35d-6437eedfd85b"
        },
        "item": {
          "id": "d54c9cf3-6dea-4c4a-8f3f-3e31a239e05e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "83fba0ca-b501-4b50-81c5-4602aad48d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c583c72-1592-4c5f-aeb4-d3316b708040",
        "cursor": {
          "ref": "f83e4d30-629d-4a52-a304-d049cf1c58ad",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b7678a43-47e1-42dc-a091-faefd98f7b7a"
        },
        "item": {
          "id": "3c583c72-1592-4c5f-aeb4-d3316b708040",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "30d80cdd-bcf5-4b88-8ff0-43d48a673d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1465,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2d796f-bee7-4002-b0b9-3cbfc4cfa851",
        "cursor": {
          "ref": "d9141700-7c92-4571-9fef-7aaeb8a696a2",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0faacd36-747d-4dd8-b843-339386bfd5bc"
        },
        "item": {
          "id": "eb2d796f-bee7-4002-b0b9-3cbfc4cfa851",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5b6fbac1-1692-4f5b-84bb-452a49d5b327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1105,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c9f59f-8e85-44c9-a04b-5ac8cdbe8531",
        "cursor": {
          "ref": "0f7327fd-d04c-4268-89c9-b5188e325d5f",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "663ce6dc-5b52-4bd8-9e91-5b5fbb43c597"
        },
        "item": {
          "id": "26c9f59f-8e85-44c9-a04b-5ac8cdbe8531",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "acdeaffd-1126-40d9-9dd4-c33e463b6d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1260,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9e22d2-29b8-4781-a0d8-7aa6f8c770b9",
        "cursor": {
          "ref": "82433439-3694-422a-9e92-65d6e8fac6c6",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b1c04239-6726-4fb5-9e6b-6aad914f47e8"
        },
        "item": {
          "id": "ae9e22d2-29b8-4781-a0d8-7aa6f8c770b9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2560db82-32c6-4737-9ef8-60bbbd079d82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee01f26d-b6f6-45f5-a6b4-6bba1a7ca44c",
        "cursor": {
          "ref": "cb582a42-defc-4da6-a303-8d09c05e5496",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4aa45907-e6ef-4e80-bf76-172e22faaa23"
        },
        "item": {
          "id": "ee01f26d-b6f6-45f5-a6b4-6bba1a7ca44c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c3a1ce69-f28b-4eb6-b16a-f8107bf493a1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 683,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c07c7b-9aa8-4fae-a174-cf501462e5a8",
        "cursor": {
          "ref": "a1901faa-25a4-4464-b05f-ae20c35edb47",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a3385dcf-d6d7-4e89-be62-3cacdedd31c2"
        },
        "item": {
          "id": "26c07c7b-9aa8-4fae-a174-cf501462e5a8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "235b9ee9-2a7d-49fa-89ac-4afd02755589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c07c7b-9aa8-4fae-a174-cf501462e5a8",
        "cursor": {
          "ref": "a1901faa-25a4-4464-b05f-ae20c35edb47",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a3385dcf-d6d7-4e89-be62-3cacdedd31c2"
        },
        "item": {
          "id": "26c07c7b-9aa8-4fae-a174-cf501462e5a8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "235b9ee9-2a7d-49fa-89ac-4afd02755589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1e5bb0-dd4c-4250-afc7-ae24a967596f",
        "cursor": {
          "ref": "a3236011-5834-49ba-a3f2-0b1475e6e9ab",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3153c786-f903-494d-a781-c5ea4ce0ec96"
        },
        "item": {
          "id": "ef1e5bb0-dd4c-4250-afc7-ae24a967596f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "065f88cc-a14b-4bff-88d6-ce2fdafcba03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99f45fb-68f2-44fe-92ee-58ea3c23fe3f",
        "cursor": {
          "ref": "579862b6-8864-4fee-bcf3-93bc508b9a21",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "57b88f31-2641-42a6-9ed3-f53e920c7e7e"
        },
        "item": {
          "id": "a99f45fb-68f2-44fe-92ee-58ea3c23fe3f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4f86219a-bd36-4842-b06f-8cbb9ecc9ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a419cc5-8633-4cef-85c2-6a9fe520a01e",
        "cursor": {
          "ref": "47d5e154-f91c-4120-812b-9b5ff3270c7a",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bf939330-8d66-4faf-9839-96b5e7cd5d4f"
        },
        "item": {
          "id": "7a419cc5-8633-4cef-85c2-6a9fe520a01e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "af4419e6-11f9-48fb-8838-ef30675082d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b20715-347c-4a10-8fff-ce6218fb656f",
        "cursor": {
          "ref": "cd3d743e-00ca-4819-add4-5d21999193c2",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c6f4e070-d535-4443-8072-97940ef59f0e"
        },
        "item": {
          "id": "b7b20715-347c-4a10-8fff-ce6218fb656f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "64405945-ca11-4720-badd-eaa627696f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd878e1-9be5-4d91-a8b2-bf3bc7a14113",
        "cursor": {
          "ref": "0acb98da-d0e0-492a-bbde-7624ef9be617",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b3341d5c-d41a-4691-90e4-10e19f86838b"
        },
        "item": {
          "id": "2cd878e1-9be5-4d91-a8b2-bf3bc7a14113",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "74568d32-9664-4fcf-ba5a-0431297f8314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4f70ee-58f2-4c65-8065-6988ad8705a4",
        "cursor": {
          "ref": "1b4b62d1-c053-440c-a881-13c30c806388",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1262977f-0ba6-41f7-8c5c-106eb24e6516"
        },
        "item": {
          "id": "5f4f70ee-58f2-4c65-8065-6988ad8705a4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "94b29974-90c4-45a2-866e-79e62e1309fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ed1977-03f3-431a-b3e1-24c849dea086",
        "cursor": {
          "ref": "a71a5f27-6774-426c-b87f-87bd65815648",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b508b34f-a1ec-4357-b219-1e82df0dff50"
        },
        "item": {
          "id": "91ed1977-03f3-431a-b3e1-24c849dea086",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "81056c4c-5557-42ad-a9f5-2f3f6922194e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a79487-f5e7-45eb-8411-3f1eabb4d73c",
        "cursor": {
          "ref": "ca982664-346e-4188-8ddf-076b6779c4d3",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "37be516c-d868-48d7-b5c3-6e375f972ed1"
        },
        "item": {
          "id": "26a79487-f5e7-45eb-8411-3f1eabb4d73c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8f4ff5c0-09d6-4035-8884-8c7b424a6ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bed612-2a33-450d-84b6-b607dd7c249c",
        "cursor": {
          "ref": "3ce93d6a-b223-4117-97cd-cfeafafb2a3c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "48e35d00-9a8e-4b9a-8118-b1e39635ed38"
        },
        "item": {
          "id": "68bed612-2a33-450d-84b6-b607dd7c249c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "65487623-2b54-4cc2-acbe-b85245b1cd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bf2427-1589-4c13-905c-5a469ca18363",
        "cursor": {
          "ref": "c8c32fa7-e4f6-491c-a771-de96e20e8af1",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c0b4801e-cb03-4eac-8773-f46fc9817040"
        },
        "item": {
          "id": "81bf2427-1589-4c13-905c-5a469ca18363",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "76fe2fd6-beb7-4342-b7b1-5a1c4af9e78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2447ce-ec58-434a-aff0-e6d3552992eb",
        "cursor": {
          "ref": "99fad6f5-7d2d-4655-bb9e-52b011e5dba6",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5e0cffb4-c0bb-4be2-b8d8-b74fd7649431"
        },
        "item": {
          "id": "aa2447ce-ec58-434a-aff0-e6d3552992eb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "40de18ed-80c7-40aa-bda2-5fb0b864375f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc6aea6-5545-4936-98fb-a29fcb56a7a5",
        "cursor": {
          "ref": "b1349660-bcd1-4eeb-8cdb-0fdb185acdbb",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3c8d7e27-6c9a-4a26-9638-5b1e77af27ad"
        },
        "item": {
          "id": "bbc6aea6-5545-4936-98fb-a29fcb56a7a5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e6735281-babe-4830-be7e-953a3d6a7605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b84815f-3565-4db8-bd91-baf014a30469",
        "cursor": {
          "ref": "876d69fd-5908-4f30-93ca-fe4db7ea04e9",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f7e91b36-4868-4948-ad6c-8f316c0ea37d"
        },
        "item": {
          "id": "2b84815f-3565-4db8-bd91-baf014a30469",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d32fcd3e-f96f-4948-b72a-85eec25e1b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f013b43-daed-4087-bbca-f6fdedd61d72",
        "cursor": {
          "ref": "3d523f67-2ebf-44d2-b597-5f071082629f",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0337128f-6904-4f81-b73a-6b29b9731310"
        },
        "item": {
          "id": "0f013b43-daed-4087-bbca-f6fdedd61d72",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "08d9468a-a325-4a57-a8a2-c0ea933f82b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd09376-6cb1-4e24-b8f4-70279c1408cf",
        "cursor": {
          "ref": "42e21c2e-6013-47c4-ada6-e47bad461b6e",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "86f986d0-557e-4355-a21e-399f8cd0b358"
        },
        "item": {
          "id": "3dd09376-6cb1-4e24-b8f4-70279c1408cf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "820277c8-9d5b-4cbe-a94b-c04753289690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1a4a33-e02b-42ef-aa26-bf9491289985",
        "cursor": {
          "ref": "d66e41c8-2dae-4dc8-b3bb-12d2e3a57e6c",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "dd1f2821-92f3-4ba1-b9cd-cd6e0638ea89"
        },
        "item": {
          "id": "7f1a4a33-e02b-42ef-aa26-bf9491289985",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e8353c31-f9a4-4c14-bf9b-3e31f8398431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee0c7ef-2c9c-44ea-9990-1aee95032898",
        "cursor": {
          "ref": "65b73a0b-5057-4209-84b9-89f3cb114d1f",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "608dc67c-f0e9-4925-9789-7ded34259f17"
        },
        "item": {
          "id": "9ee0c7ef-2c9c-44ea-9990-1aee95032898",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "533c1d2e-1b51-4bb2-a0ea-1ce9f96733f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacde808-4ee1-4aac-98ac-8794c9181e65",
        "cursor": {
          "ref": "aa77755a-f67a-42a8-9ed6-5437e3b71fe6",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "22f8acb9-e9f9-4f0e-aca8-9ade427b3d19"
        },
        "item": {
          "id": "cacde808-4ee1-4aac-98ac-8794c9181e65",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4b2b8977-2be9-4bad-b1e0-412c838b4d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9dec24-9c26-4e76-97ba-fd7c1d669668",
        "cursor": {
          "ref": "c6f46e0c-3161-453b-b115-899105519d6e",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "03b34221-eb45-4f93-891d-8995b356d5b2"
        },
        "item": {
          "id": "4c9dec24-9c26-4e76-97ba-fd7c1d669668",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "15832924-0563-43e8-9ebf-a05aea487277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd9bce5-2bc5-4c75-86d9-f089870a9dd5",
        "cursor": {
          "ref": "660cf818-1a33-4e71-97cd-76f8915c9ff3",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9dddde4d-5784-4b39-8d33-9667a460b527"
        },
        "item": {
          "id": "ddd9bce5-2bc5-4c75-86d9-f089870a9dd5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "45777fd3-75aa-4498-b4de-a1f3c6ce6561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0aa3a7-d42f-4108-a40b-7a402d18ee14",
        "cursor": {
          "ref": "8e7f504a-e3dd-4472-ac25-38b8e433692f",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9a97c72f-86ea-47e6-9231-3d84440ce4ac"
        },
        "item": {
          "id": "5b0aa3a7-d42f-4108-a40b-7a402d18ee14",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fbd105eb-e699-4f47-85dd-930cbd11ef6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a43f26-de37-45bf-a45f-677ec4fcf7c3",
        "cursor": {
          "ref": "7a56bd4a-9ac9-4a4e-b13c-e4e21328d2c8",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "59b22d39-d487-45c0-826a-220a4026de2b"
        },
        "item": {
          "id": "18a43f26-de37-45bf-a45f-677ec4fcf7c3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "936f4013-d600-4243-9d94-ecacb3fde9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf615ba-1a35-4d4f-b7d6-0cee526e57df",
        "cursor": {
          "ref": "b76ba773-0aec-4e6c-888b-05a64d20b42e",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "277c5116-8e7d-4438-8bba-f98d1809a488"
        },
        "item": {
          "id": "6cf615ba-1a35-4d4f-b7d6-0cee526e57df",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "587829a6-fb92-48fb-9c6b-e7525cd84422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e14422-2a57-4ec5-bce8-bf63f89ba057",
        "cursor": {
          "ref": "5806d765-3653-4d24-aae6-3596cea474af",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "081b0641-971e-4387-a269-cac58944e9fc"
        },
        "item": {
          "id": "22e14422-2a57-4ec5-bce8-bf63f89ba057",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "89db8ac0-e5f7-4890-9fa2-72b4eae656ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7462c3-7747-491f-ac93-6717ca1c8015",
        "cursor": {
          "ref": "efd86067-8770-478f-8869-cf831cfce08f",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cfe3e154-9d94-4bbb-8374-0be3fe7fa846"
        },
        "item": {
          "id": "5f7462c3-7747-491f-ac93-6717ca1c8015",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "30ed3e96-341f-4f46-a9da-ea513cf093fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65f8854-3659-4353-997c-368200c8ef1d",
        "cursor": {
          "ref": "c9786a10-3aa4-493e-bd17-0a4b2c2ea7dd",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4906b76d-a189-40ff-b731-681675ced977"
        },
        "item": {
          "id": "e65f8854-3659-4353-997c-368200c8ef1d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "81c1240b-46a4-486c-83b6-6618772568c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2ba22d-dd20-4a4d-96e4-3b71a0a429dd",
        "cursor": {
          "ref": "2ba5cbc0-aa7a-498a-a47f-e7e023a38d1f",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fd3626b2-8d26-4061-8b2f-a59cc78b5c39"
        },
        "item": {
          "id": "7f2ba22d-dd20-4a4d-96e4-3b71a0a429dd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "70570dfa-20cf-4f9f-b145-b96bc29da7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f1697f-eabb-48a7-9fa5-617872bce026",
        "cursor": {
          "ref": "8a8f364d-06de-4fa5-88be-79bd52569bf3",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e904d3ea-c5f4-4234-a81f-d54f84376693"
        },
        "item": {
          "id": "25f1697f-eabb-48a7-9fa5-617872bce026",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3e7fc855-0486-4765-9d48-69e447c4de69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fac508-e9ca-4fec-ae82-f4eccd0534ec",
        "cursor": {
          "ref": "b63dbafd-e861-44d4-93b0-83a12816a757",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ecb3c82c-cf79-44db-ba83-f7bca1829da6"
        },
        "item": {
          "id": "90fac508-e9ca-4fec-ae82-f4eccd0534ec",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d1f0cc81-ff7a-44d3-9fc1-dcc1674ab43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc47ffbf-b41d-490e-981d-f8a8ce7a0ed3",
        "cursor": {
          "ref": "913e8bc6-b9dc-4fac-9a44-9dd97ac1b819",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "491701bd-fca7-45d8-a6cc-133dfabd76dc"
        },
        "item": {
          "id": "bc47ffbf-b41d-490e-981d-f8a8ce7a0ed3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c7f396f0-5713-4e0a-ad56-993649199035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b3a251-527e-442a-ad00-df4a0488b671",
        "cursor": {
          "ref": "cd7499b1-6af3-4a66-bc1e-caae96b15999",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "725acbae-3556-40d7-9aa0-6e772ad7b3e2"
        },
        "item": {
          "id": "61b3a251-527e-442a-ad00-df4a0488b671",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ae7a1ccf-5c4c-43cc-bde7-239aca0bb25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d522e5b-6ff3-44cd-a558-6936321295db",
        "cursor": {
          "ref": "1c5f6390-76ed-40ac-aa16-df13e65441b9",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8ec68280-b54c-4335-83b1-851395bcb01d"
        },
        "item": {
          "id": "8d522e5b-6ff3-44cd-a558-6936321295db",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "30071df7-08be-42fd-b195-a63545256f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de5004a-da92-45fc-a83c-406a104e3034",
        "cursor": {
          "ref": "dcd1302f-f005-42c5-b357-a84ec5323aa7",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2d3b53d1-5107-4708-9654-ca5610564345"
        },
        "item": {
          "id": "0de5004a-da92-45fc-a83c-406a104e3034",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7baa9d6b-ffa0-42e3-a519-851aeedd7683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6280a6-e391-4ff9-b891-3793684f9884",
        "cursor": {
          "ref": "94e82a1e-0222-4686-a45d-6c4c873812f3",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c99d15e9-df9e-4395-97ad-5d5b512b7f0d"
        },
        "item": {
          "id": "7e6280a6-e391-4ff9-b891-3793684f9884",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0598201e-9ed5-4dd7-a56d-16df1b2bff74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca84469-8539-49c9-a20f-803d888ab85c",
        "cursor": {
          "ref": "4d2dc2d9-a0d2-4f5f-90c7-8fedc2c24578",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9ab290c0-6794-4843-bfcf-48a33004f021"
        },
        "item": {
          "id": "eca84469-8539-49c9-a20f-803d888ab85c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "438d7d40-3ca1-47d1-adf8-1ebfe8fdc4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec49f890-46c2-4de7-bc80-d9e3e5b06bb7",
        "cursor": {
          "ref": "a6a690ef-9d81-49cb-81e9-f05d8303cc85",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6e1a6670-0649-41b8-be97-2ccd57e51205"
        },
        "item": {
          "id": "ec49f890-46c2-4de7-bc80-d9e3e5b06bb7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "dc965a2c-d5d6-4608-9b46-6a316ad56aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cd987a-741f-4d31-afcb-9d0ebf4739af",
        "cursor": {
          "ref": "b7501da5-7c9e-467d-9b02-7f5be790a085",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "877e146c-b4fe-41c4-abc0-e9c44e8f3c4d"
        },
        "item": {
          "id": "32cd987a-741f-4d31-afcb-9d0ebf4739af",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9bed4aaf-9905-4477-bb2a-22d30a8fd7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fb5e6c-87ff-41fd-8502-94a889b0cc50",
        "cursor": {
          "ref": "0a0a0615-3d16-470b-b0ef-78fc48f6140c",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8d0cdb1e-d819-4b8a-a9c7-2d427f6ef7dd"
        },
        "item": {
          "id": "a0fb5e6c-87ff-41fd-8502-94a889b0cc50",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b2b080d5-8a27-415f-82fe-6ed5608f67e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ce5fc4-d4c1-4c56-ae24-d5b032a6ba42",
        "cursor": {
          "ref": "f72d110f-1723-4307-be09-7eee69891d16",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f88b1795-0082-4817-a353-6440e83d62c8"
        },
        "item": {
          "id": "87ce5fc4-d4c1-4c56-ae24-d5b032a6ba42",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d809d1ce-0650-47e4-81a1-35dede6003d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdfb487-3835-449e-a97a-24930cb2bd05",
        "cursor": {
          "ref": "220ad7a9-6217-4b60-b6db-220616ffab96",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "927b5976-3644-4166-b21c-788ee878919e"
        },
        "item": {
          "id": "cfdfb487-3835-449e-a97a-24930cb2bd05",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1aea60c6-6a78-4e5b-b075-c5f2068a7fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951b141a-0ab6-487d-b57d-a10ad436f333",
        "cursor": {
          "ref": "f1bb2988-51b8-4db2-a14b-e06ce115002b",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "56edf886-b502-448b-ad21-738f0642f034"
        },
        "item": {
          "id": "951b141a-0ab6-487d-b57d-a10ad436f333",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ec0bdf43-df41-4309-9da0-1514fa1b3629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941eb158-393a-43db-82b9-39a2726aae81",
        "cursor": {
          "ref": "2a8c69f2-7ddc-4b80-a565-dd6dc2f170c1",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "78f73961-0c92-46ff-bf85-0d2af90974e2"
        },
        "item": {
          "id": "941eb158-393a-43db-82b9-39a2726aae81",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4ab73c10-8aa8-4041-8231-ed82ea301203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0fc0aa-9ff0-4c06-85b3-3fcd9c518909",
        "cursor": {
          "ref": "4a2a678c-3b06-45b3-9272-c21eed467364",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "aae24558-b4e7-4c3d-8de1-e2f747c53990"
        },
        "item": {
          "id": "dc0fc0aa-9ff0-4c06-85b3-3fcd9c518909",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "65434016-f30f-4932-8e99-21d1c7b922f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11047fea-285b-457e-a28b-99ecf44153b3",
        "cursor": {
          "ref": "88393836-1f48-4586-bc58-54e10a9d626b",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1a1dd76e-376e-4b3e-b3b9-7e7fa3159571"
        },
        "item": {
          "id": "11047fea-285b-457e-a28b-99ecf44153b3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6abd5d27-f897-4531-8049-3ae543d5fc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c39472-dbb2-42bb-9e9c-1a7d2f6d6a20",
        "cursor": {
          "ref": "14c7f7d3-924c-4f3c-a961-e87a884dd0c2",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "95445539-222d-4ff3-8f2f-b845682f5a6d"
        },
        "item": {
          "id": "78c39472-dbb2-42bb-9e9c-1a7d2f6d6a20",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2b8bd1a1-0c6a-4c27-b17b-1381b122948d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d38397-8d40-428f-8c9c-0b1b7ccce12d",
        "cursor": {
          "ref": "5c4c0624-fe92-4034-80f2-5ed7005c6665",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2b2a39c8-3f02-444c-b31b-176c62ae84e8"
        },
        "item": {
          "id": "27d38397-8d40-428f-8c9c-0b1b7ccce12d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "90067dcc-5746-4d9f-a45f-075218e111d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b6760f-12f7-45e5-81bd-69fc692d68a6",
        "cursor": {
          "ref": "a1ab8a46-6abe-48a7-bf25-14cb64993d71",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1810701d-554b-40cb-87a6-223b550ba6a4"
        },
        "item": {
          "id": "35b6760f-12f7-45e5-81bd-69fc692d68a6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "668fec4f-67dc-49a4-9020-c70b07d5dbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e371611-a80c-4ebf-9b12-b47d4e67466d",
        "cursor": {
          "ref": "407fff1c-81ca-4cd8-8a83-64b24e99fc9d",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c8090309-aab9-4ef8-99d0-2e15fff242af"
        },
        "item": {
          "id": "7e371611-a80c-4ebf-9b12-b47d4e67466d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "990cea40-1552-49cd-b629-4c7dacd7552c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ffd566-1484-42c6-b434-441565d1a46a",
        "cursor": {
          "ref": "b30e5615-9221-4679-a6cc-b6104b9559a6",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e02c95f8-a027-4f91-8923-817ebc1069d4"
        },
        "item": {
          "id": "33ffd566-1484-42c6-b434-441565d1a46a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e74c28e1-21c6-4e19-8652-0328fecdd821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd40562c-8616-4633-822f-4d017ce06d66",
        "cursor": {
          "ref": "d81ba022-9acf-489d-b2c3-d7c5c533d77f",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "44cc57af-e533-401c-8dc2-36aae6041f6e"
        },
        "item": {
          "id": "cd40562c-8616-4633-822f-4d017ce06d66",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "53dbd461-2efe-4284-a6f6-a60778feb7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ea4a11-80c0-44dd-bf7e-64d0a4641470",
        "cursor": {
          "ref": "06c9dab2-8568-4e2f-a07d-b5386e16fed2",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1f572783-bc7d-48f0-8260-a28ff3f57545"
        },
        "item": {
          "id": "c2ea4a11-80c0-44dd-bf7e-64d0a4641470",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "02495e4d-090c-4c15-ac9f-49bd31e2101e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbd1dcf-9d0f-43be-8a9f-07a7a2ad8979",
        "cursor": {
          "ref": "7fc724dc-a5f0-4c04-b12b-cc081c81b69c",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3c5afdc2-d1a9-41e1-84f3-50bfad2543dd"
        },
        "item": {
          "id": "6cbd1dcf-9d0f-43be-8a9f-07a7a2ad8979",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8cba2eba-5d83-409a-b173-04f6fc739762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0187502-5c3c-4166-91ed-f371c9c6a8ae",
        "cursor": {
          "ref": "05103e94-b554-4432-9948-ba8d3de4d9ac",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1e05dd60-b7b6-4384-8e84-78fcf9e05c4e"
        },
        "item": {
          "id": "f0187502-5c3c-4166-91ed-f371c9c6a8ae",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3772b082-beca-4662-a49f-da989de08a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7c938d-fdfd-4c1d-997d-7d434cbc41af",
        "cursor": {
          "ref": "d053d98b-05d9-4d24-97a1-43af26e204e2",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c99f9f87-c1a4-4386-b7e3-8c98208cc16f"
        },
        "item": {
          "id": "fe7c938d-fdfd-4c1d-997d-7d434cbc41af",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1f8db334-f5fb-4a2d-9a5b-5c5c4a7eb1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1114,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa68d6b-0a8f-4b18-83e8-ed2d1c4ab91f",
        "cursor": {
          "ref": "47f274d2-900b-4ef6-ae43-0b39a55c80de",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5e259b5f-604b-43c2-8386-0c8f2ff9434a"
        },
        "item": {
          "id": "ffa68d6b-0a8f-4b18-83e8-ed2d1c4ab91f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d21a07fa-e7bf-44e5-b7ef-41e3554b9a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f749b18-cf3a-42cb-8fee-ff4470856170",
        "cursor": {
          "ref": "e3526410-5fd0-451c-a842-e80c526391c2",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0dc143e0-dd11-4fef-bd28-48f82a30510d"
        },
        "item": {
          "id": "9f749b18-cf3a-42cb-8fee-ff4470856170",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f711ff9c-1fe6-4ba9-8328-d750a8f0e60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1328,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e3f843-ffe7-4d21-9691-1dbf6f2a110b",
        "cursor": {
          "ref": "66911d45-4859-4b1b-8114-5a80a04c047f",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e0974a07-7150-4272-9a47-414ccec7ce24"
        },
        "item": {
          "id": "80e3f843-ffe7-4d21-9691-1dbf6f2a110b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0f370db0-e1fa-4dca-8971-d9783a4afab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1588,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101de460-2667-4b2a-8ff7-c680a9b3cfc7",
        "cursor": {
          "ref": "fcc7e8e8-7a6a-4df2-80eb-1452e8e54efa",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9261e13e-b780-4854-9bc7-099a7d13b954"
        },
        "item": {
          "id": "101de460-2667-4b2a-8ff7-c680a9b3cfc7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "575784f8-cbf9-42d7-8314-9a176240557f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1455,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84848a3-909b-4024-bc6d-29e1415f4976",
        "cursor": {
          "ref": "68da224f-1090-4cb8-8e66-a17359bbb139",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f20ebc7b-5f88-4ad8-b6b9-e38e6f0834fc"
        },
        "item": {
          "id": "f84848a3-909b-4024-bc6d-29e1415f4976",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0b457537-af64-4794-b14c-cc2610fb1d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1111,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f100b19-168b-41a9-95b1-3ebcc8d0fead",
        "cursor": {
          "ref": "87ce0945-3a89-41e5-803c-1c6f9f6bc634",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "69c51420-78d8-4b20-9e3c-2460d965006b"
        },
        "item": {
          "id": "3f100b19-168b-41a9-95b1-3ebcc8d0fead",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "87c8cc50-d382-4021-ae5e-05d48f5534d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13b6131-9c09-4e2b-bb0b-0532ef21004d",
        "cursor": {
          "ref": "98d49354-dd29-40fc-907e-2afb2a7e2f03",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eeb7220a-045e-4628-9cd9-8d9752d9b674"
        },
        "item": {
          "id": "f13b6131-9c09-4e2b-bb0b-0532ef21004d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9d15ad19-b057-4ecb-84cc-3aa8ce065ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae708dbb-b9ce-4703-b946-1b787b9ebaf8",
        "cursor": {
          "ref": "a0c53a82-9e37-4724-a56b-22572f901ea9",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dad9c64b-77ca-44b4-9bc9-e7d90f5b95bf"
        },
        "item": {
          "id": "ae708dbb-b9ce-4703-b946-1b787b9ebaf8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c6a61dfe-2c2b-44b8-8e33-af2f5e406029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47f107e-6ca4-41bd-a1ee-c3481d77d181",
        "cursor": {
          "ref": "177809ce-c4a6-4178-b3f5-056547e2fbc4",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "09b9469f-c6f1-4267-9d84-3bccb736a582"
        },
        "item": {
          "id": "f47f107e-6ca4-41bd-a1ee-c3481d77d181",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6f5f7957-915b-47b2-b2db-b74d5717496d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1404528c-6322-40bc-96fa-a472071c93a8",
        "cursor": {
          "ref": "e038d0a6-9d14-4116-bc97-99661e415c0a",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "65ea43db-2f9e-418e-9452-9b2d903f0b6e"
        },
        "item": {
          "id": "1404528c-6322-40bc-96fa-a472071c93a8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "255df659-2845-43e3-99ae-a4938c4a432b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65af1695-1226-4589-a4bc-364291a9aae0",
        "cursor": {
          "ref": "a86673f5-a0ad-41d3-b3b1-965447a409ff",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "995f46f2-cdf7-413f-b33a-2c146918ca99"
        },
        "item": {
          "id": "65af1695-1226-4589-a4bc-364291a9aae0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d2747d63-f0f4-4593-9b3c-97fd049bb703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02398fad-30c2-4ee9-b467-4917a507e65f",
        "cursor": {
          "ref": "00b7f7bc-1f26-49fe-9d21-b39c94bcf130",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "47695e78-b315-46f5-8bb4-7e84a8337875"
        },
        "item": {
          "id": "02398fad-30c2-4ee9-b467-4917a507e65f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1c61d1a3-bcf5-493e-831a-f3aaad6c762c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62ec7ab-ccee-4ae1-b62d-00f87b19a5d9",
        "cursor": {
          "ref": "07d45223-81cb-42c1-bde5-2a10f5a0c28f",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "97bed719-f36f-4681-8113-8a4d6111b133"
        },
        "item": {
          "id": "e62ec7ab-ccee-4ae1-b62d-00f87b19a5d9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "97e42fde-ba00-4e6f-8ebd-4ce7f71b4739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca6b0ed-53cf-4618-b0b1-99bcfc4e0e72",
        "cursor": {
          "ref": "b703160b-5e36-4e5f-a7b9-b574d147a7f0",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "aa6a1fc1-d8cc-4195-9ce3-ec174cb27bf4"
        },
        "item": {
          "id": "cca6b0ed-53cf-4618-b0b1-99bcfc4e0e72",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ee3c7f2b-edbf-4eb3-aab2-189fbdb6ead5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f185ee-ac9f-4fb2-a4ac-c31d4ab22bea",
        "cursor": {
          "ref": "928151ae-2099-4636-b718-b1a4c14f9cc2",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "56fde1ae-afbd-439c-839c-9d2554cdf07e"
        },
        "item": {
          "id": "a3f185ee-ac9f-4fb2-a4ac-c31d4ab22bea",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ead8eddb-520a-4137-85f2-74d179400615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7455d814-0fb7-43b2-83e9-48eb688b2dfe",
        "cursor": {
          "ref": "d3b5f730-e987-4475-ac2f-cef0e38970bb",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8227f2b8-f06b-4dc8-ad2f-43183708625e"
        },
        "item": {
          "id": "7455d814-0fb7-43b2-83e9-48eb688b2dfe",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fcd89c94-b65e-40cc-b1f7-04c71ead435c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fcda00-70b8-437d-9cd6-8185688ee4d5",
        "cursor": {
          "ref": "ddac7e7b-f319-440f-bc2a-83e181cf1676",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b61766ed-d8f0-4822-bbd8-4527a7d581c2"
        },
        "item": {
          "id": "31fcda00-70b8-437d-9cd6-8185688ee4d5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4d2cf83f-ac6a-4ab8-b074-8c507d5fb2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89681a84-3977-4e5a-96e8-e5216361affc",
        "cursor": {
          "ref": "4093a99c-9501-42ae-bcf1-9df788e5fa6b",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ab9d0bdb-26e0-45d7-a680-020b8b877b07"
        },
        "item": {
          "id": "89681a84-3977-4e5a-96e8-e5216361affc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7d8e15ab-72ba-43c9-b464-02774e80ab5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45b238d-23ad-4438-8072-08213ed6c4e8",
        "cursor": {
          "ref": "51cab2cf-b95e-4dae-8fe2-f65b248483de",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "96c31b2f-813c-4346-8218-0d742845fe38"
        },
        "item": {
          "id": "b45b238d-23ad-4438-8072-08213ed6c4e8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a88d8e80-a692-4580-a7f2-54d63b83104d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1587983-c7c3-48c2-81cd-78a730097339",
        "cursor": {
          "ref": "b70c80e0-6651-4650-8cc0-be62ff4eaa14",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "912ad19f-6324-4bb3-8c54-dab3099c737e"
        },
        "item": {
          "id": "f1587983-c7c3-48c2-81cd-78a730097339",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f859b2af-f099-42ed-8093-29fb5f88b3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20b125d-85c3-4753-93a9-adc58e5eb933",
        "cursor": {
          "ref": "787b76c6-3c31-4e75-8c9f-3dbc662bfe5e",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9626cd7c-546f-469a-97b4-d51c9dd30b67"
        },
        "item": {
          "id": "e20b125d-85c3-4753-93a9-adc58e5eb933",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6817ef84-02a1-4fa2-a1d7-8cf925cd4db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32259011-788b-4410-9df4-dfb150fe749f",
        "cursor": {
          "ref": "aa9ba14f-169e-4ec3-a08b-fdaa60c6698e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "206be5fe-1f85-4a59-ab16-667769de1831"
        },
        "item": {
          "id": "32259011-788b-4410-9df4-dfb150fe749f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "27a2cf69-64b1-4dc4-a055-8ce3b2c617ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b7858a-903c-4f8d-9d87-a644412240aa",
        "cursor": {
          "ref": "365e5eff-f213-4b9f-ab4a-105eb5989936",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f265897a-83e3-4322-bd2d-50e3ee833672"
        },
        "item": {
          "id": "e5b7858a-903c-4f8d-9d87-a644412240aa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c24c27d7-8f6a-4e04-a723-3cf21e651787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ee2b9f-2e0a-4a08-93c0-8f567e66520c",
        "cursor": {
          "ref": "daf037e1-4871-4ff0-8fe1-c2ea16a6943e",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "45eee5c2-f33d-428d-b5ab-b1f91e52e46c"
        },
        "item": {
          "id": "79ee2b9f-2e0a-4a08-93c0-8f567e66520c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "70433630-aae8-48a6-8d06-673804bf0f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d0fe12-232e-42db-85bc-8d740f0fd981",
        "cursor": {
          "ref": "c7f27dcf-8b09-4c0d-b2e3-f2bcb648fbbc",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "32d87651-6f10-465b-b957-d54a9c3dbfa6"
        },
        "item": {
          "id": "11d0fe12-232e-42db-85bc-8d740f0fd981",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8ab8e39b-a4f0-406e-bc27-ec3edacc15a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea677261-5ec1-4332-88f3-035468d0b6b6",
        "cursor": {
          "ref": "c9780320-90e2-4336-9d5d-bbfdc6f47dd8",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "de1ffcba-06a8-413c-b371-082d9917b6f7"
        },
        "item": {
          "id": "ea677261-5ec1-4332-88f3-035468d0b6b6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d7020fa9-a608-4848-b51b-c28496c70fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb0bb3f-b9f1-4703-9916-47bc553d22e7",
        "cursor": {
          "ref": "2cbff2be-d27b-4ab9-bf40-f0d89e6601a3",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cae4edaa-3dfc-4910-8815-f66b32b5ec32"
        },
        "item": {
          "id": "0fb0bb3f-b9f1-4703-9916-47bc553d22e7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a8145c4e-4e84-4e48-b818-551e7a6487d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc138e82-8598-46a4-bc84-0cbf5dbb7218",
        "cursor": {
          "ref": "fe9d665d-ef94-4da1-8df1-a90b7125bf7f",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "501893fd-db21-4d1d-98c5-b55ef41be31e"
        },
        "item": {
          "id": "bc138e82-8598-46a4-bc84-0cbf5dbb7218",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6353f159-947c-4c22-8462-af0373988eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7442df6c-6e80-4aca-ba12-4bae12dbd9dc",
        "cursor": {
          "ref": "191dba32-db68-4108-89f0-136028ba1e66",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e740a8a1-de41-4c6d-8161-720a9a8fb018"
        },
        "item": {
          "id": "7442df6c-6e80-4aca-ba12-4bae12dbd9dc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cd9b8cae-dc3b-45ca-89b7-6f013465e820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57df881d-c29e-42a2-a1e0-f79bf662b67c",
        "cursor": {
          "ref": "e5759a19-459b-4a74-925b-70f04b7233e2",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ef992fd6-a440-479e-8923-e03aa1fce04f"
        },
        "item": {
          "id": "57df881d-c29e-42a2-a1e0-f79bf662b67c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c90f6b93-2a81-4deb-86dd-78625f754b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233b6842-cbdb-46cf-9b33-e3d17e81b355",
        "cursor": {
          "ref": "e7e1d2e6-6f28-496d-990a-5d05093a048a",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "938fca18-4bbd-4642-b7d9-a72cfa4ae71a"
        },
        "item": {
          "id": "233b6842-cbdb-46cf-9b33-e3d17e81b355",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8776e32c-16e6-49e4-8c70-fa9cb8685231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ff1b02-9556-43a9-9300-3d5bceaf6ad5",
        "cursor": {
          "ref": "3d319d93-edc3-424c-9d1c-2d9ed906260b",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3108ec86-2e41-469b-a375-78e8c89c7faf"
        },
        "item": {
          "id": "d1ff1b02-9556-43a9-9300-3d5bceaf6ad5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e42f761a-fd7b-4b06-9b8f-a8591da403e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67b2c49-b595-447d-8d30-00156619bfc5",
        "cursor": {
          "ref": "e0079d43-1de8-40b9-b0b3-971d04d441c4",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "68a85778-2950-477d-8b9a-0a8be0a887bc"
        },
        "item": {
          "id": "b67b2c49-b595-447d-8d30-00156619bfc5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0c6055ee-4a17-4911-9ea5-ad061765eb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f835730-b906-43f4-a732-181673815f2d",
        "cursor": {
          "ref": "bf2611f7-8e06-45cf-a378-868cce213bd5",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a09f8256-217e-43e9-bd28-c22e08950d22"
        },
        "item": {
          "id": "0f835730-b906-43f4-a732-181673815f2d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1431396b-7082-4fe5-a426-e5f1f5fc1a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a781e6f1-db79-4cea-84b5-fbbe49563660",
        "cursor": {
          "ref": "36817036-f1a2-468e-8b6c-8cede980ab29",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "52951f26-1918-4920-8d5b-7b928abe9c89"
        },
        "item": {
          "id": "a781e6f1-db79-4cea-84b5-fbbe49563660",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "98ffb09b-a6b9-4712-bb28-ec382c46df9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe5eecc-7959-414e-a0c9-91cdd8e82aa8",
        "cursor": {
          "ref": "edd0f5a8-ac5e-4d67-b0bf-a9b3e8fb20de",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "391df41b-b255-43cd-ba1d-da5942f74666"
        },
        "item": {
          "id": "fbe5eecc-7959-414e-a0c9-91cdd8e82aa8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e5ab5c60-e4ed-4195-aa37-1b4c4c638288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66284162-4216-443c-a4fd-3d71412ba55d",
        "cursor": {
          "ref": "9077537f-51a5-4b67-a08a-2f789b9c9f70",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8236ec5f-0fac-468b-be1c-c5a0ad060232"
        },
        "item": {
          "id": "66284162-4216-443c-a4fd-3d71412ba55d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "999fc2c3-d879-4547-9e76-488c0b775d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570149e7-dd43-47c2-8aa2-b9993064850d",
        "cursor": {
          "ref": "ade6c86a-7e7f-47c0-94e0-db4dc53a2fb3",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8e05e8bc-a5f8-4ddd-a91d-dba4d766fb22"
        },
        "item": {
          "id": "570149e7-dd43-47c2-8aa2-b9993064850d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "28d8666f-7fa7-49be-94e8-1c1a781a7535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ad4985-5255-48ce-aea4-d5bcce800e20",
        "cursor": {
          "ref": "0c9175f7-052c-46dc-b9ea-a53897c2720d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "34d94223-0cec-47e3-89f9-3b7d4c63acea"
        },
        "item": {
          "id": "68ad4985-5255-48ce-aea4-d5bcce800e20",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7f3dd4b2-ce4d-41ee-8f64-b8b2b6eb9f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66abbd7f-3fee-4c95-8731-afd69b64842c",
        "cursor": {
          "ref": "a34b7667-686a-4e66-8930-56a2042c3b79",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e38aa26f-b5c6-463d-9888-d1451e100ecf"
        },
        "item": {
          "id": "66abbd7f-3fee-4c95-8731-afd69b64842c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "642498ac-bb48-4095-a0e4-f9cd46c1b8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bb8ae6-27c2-4cdb-9540-29187f1aadd6",
        "cursor": {
          "ref": "1288c48a-e5bb-4688-a9b4-1855ffcd9b7b",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "48f5ad40-baf1-4c41-ba86-905b0c736a27"
        },
        "item": {
          "id": "a4bb8ae6-27c2-4cdb-9540-29187f1aadd6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "56aa38c4-de3f-4b20-9db0-cf4cf250ca00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c06cce-1e3b-422e-8e1e-eb4073493fb9",
        "cursor": {
          "ref": "f40c6da6-cc4a-446d-93e1-6bedb5e30c29",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9072856e-2ec1-40e2-9290-6b9c7d686ca7"
        },
        "item": {
          "id": "76c06cce-1e3b-422e-8e1e-eb4073493fb9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fce8810a-f2f3-43bc-8890-3cadc1385594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa50940-e431-4fa4-8f2b-59a6ea97daf5",
        "cursor": {
          "ref": "84d4e708-0371-436a-90ad-d453d59e2279",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0152090f-cfcb-4159-be75-1439f2558a90"
        },
        "item": {
          "id": "faa50940-e431-4fa4-8f2b-59a6ea97daf5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ca58fd8e-84a8-48fc-a40f-3b27e4f7597e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decc7077-1eaf-46aa-a911-2c6a58388c90",
        "cursor": {
          "ref": "76b0d6b1-2ccb-4a15-9e5c-56e7471da2a9",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "78ee3ea1-7594-4443-ba46-8097f2c389e8"
        },
        "item": {
          "id": "decc7077-1eaf-46aa-a911-2c6a58388c90",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "6de63cc0-6977-4baf-9533-61a657feb93e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 492,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb739e8-f024-4293-8f27-63d9c3888be5",
        "cursor": {
          "ref": "1f60679d-53cc-46c8-94f1-638d15244a1a",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "59787cdf-f46f-45c1-a9b3-0233ee57bfa0"
        },
        "item": {
          "id": "4fb739e8-f024-4293-8f27-63d9c3888be5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "134385ab-a92e-4433-bfe0-bc02b3437161",
          "status": "OK",
          "code": 200,
          "responseTime": 576,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4191f3-30eb-4e97-ba29-7f2330b5b6bc",
        "cursor": {
          "ref": "3de0944f-c553-4550-8e36-e8fa40c85a13",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0d09e173-95ae-4da6-b771-45d42a2e1295"
        },
        "item": {
          "id": "3a4191f3-30eb-4e97-ba29-7f2330b5b6bc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "37fabf3a-dee2-4706-a697-81cd3620fbf4",
          "status": "OK",
          "code": 200,
          "responseTime": 2141,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f497471c-61f5-4e36-a330-ce6a44499456",
        "cursor": {
          "ref": "9b838bcb-198c-4dd4-8f70-ee71a49f2917",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "93e3749f-63e9-488a-a38e-fd0e83d05105"
        },
        "item": {
          "id": "f497471c-61f5-4e36-a330-ce6a44499456",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "40fb8e75-5f9c-43f6-8c2e-2a7f19b2dbce",
          "status": "OK",
          "code": 200,
          "responseTime": 2232,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb39061a-0b32-46d7-971e-90420dd1b8b7",
        "cursor": {
          "ref": "28c78af8-9fd9-42ec-85b7-c6f69b234e11",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "db4e4546-2912-4874-bcaa-f7085eb33f14"
        },
        "item": {
          "id": "bb39061a-0b32-46d7-971e-90420dd1b8b7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0a9e297f-3864-440e-99d3-76c249e79d20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb39061a-0b32-46d7-971e-90420dd1b8b7",
        "cursor": {
          "ref": "28c78af8-9fd9-42ec-85b7-c6f69b234e11",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "db4e4546-2912-4874-bcaa-f7085eb33f14"
        },
        "item": {
          "id": "bb39061a-0b32-46d7-971e-90420dd1b8b7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0a9e297f-3864-440e-99d3-76c249e79d20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb39061a-0b32-46d7-971e-90420dd1b8b7",
        "cursor": {
          "ref": "28c78af8-9fd9-42ec-85b7-c6f69b234e11",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "db4e4546-2912-4874-bcaa-f7085eb33f14"
        },
        "item": {
          "id": "bb39061a-0b32-46d7-971e-90420dd1b8b7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0a9e297f-3864-440e-99d3-76c249e79d20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ff5c60-36ab-451b-bf60-e6e063809613",
        "cursor": {
          "ref": "9f20c451-1f88-4853-8562-29a97e95e188",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f3682afb-cff4-494c-aca2-686b8a227623"
        },
        "item": {
          "id": "c3ff5c60-36ab-451b-bf60-e6e063809613",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "1f680ce9-26c2-4add-a071-dca6d4360d7f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1489,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3327b87-e72e-4f86-97da-e047ebd267b6",
        "cursor": {
          "ref": "700e9618-ac6c-48ea-bc2d-2864b1771f41",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ee3731bd-f104-462b-b9a9-c87876991229"
        },
        "item": {
          "id": "d3327b87-e72e-4f86-97da-e047ebd267b6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aee9f700-29f5-4dc5-9f47-63d721b7ca3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3327b87-e72e-4f86-97da-e047ebd267b6",
        "cursor": {
          "ref": "700e9618-ac6c-48ea-bc2d-2864b1771f41",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ee3731bd-f104-462b-b9a9-c87876991229"
        },
        "item": {
          "id": "d3327b87-e72e-4f86-97da-e047ebd267b6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aee9f700-29f5-4dc5-9f47-63d721b7ca3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e8cc3d-c48a-4025-bf40-c254b9524c47",
        "cursor": {
          "ref": "0696d638-7ca3-421a-96fb-5b72431ff8d2",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ae937c61-af73-43b5-86c3-21c8117ff295"
        },
        "item": {
          "id": "84e8cc3d-c48a-4025-bf40-c254b9524c47",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "b9526e46-0fc0-4387-8276-de786c593904",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1646,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00da7181-0236-4e4c-a844-50367234a762",
        "cursor": {
          "ref": "6ae24520-2435-48aa-9f9e-3c87f501af3e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d6245034-915b-437f-a1d2-e63e013298c8"
        },
        "item": {
          "id": "00da7181-0236-4e4c-a844-50367234a762",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "75adab4c-e434-423d-baf3-a357ab3ead0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00da7181-0236-4e4c-a844-50367234a762",
        "cursor": {
          "ref": "6ae24520-2435-48aa-9f9e-3c87f501af3e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d6245034-915b-437f-a1d2-e63e013298c8"
        },
        "item": {
          "id": "00da7181-0236-4e4c-a844-50367234a762",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "75adab4c-e434-423d-baf3-a357ab3ead0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32642e41-00f8-4db5-b145-73f0f37f5a78",
        "cursor": {
          "ref": "361794bf-2f3f-41bf-8c9f-749ae09480b4",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "be27b842-fd5d-4b63-8f0d-ae042173f8a0"
        },
        "item": {
          "id": "32642e41-00f8-4db5-b145-73f0f37f5a78",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8eaffb7d-fe6b-44b9-8602-35e187dc60e7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1386,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}