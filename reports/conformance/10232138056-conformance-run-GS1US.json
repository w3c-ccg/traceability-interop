{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2338881d-7808-4993-9c24-97a64d6ca053",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c3c5d129-9a57-4cb2-9198-50a786222da8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "32c18fe3-3ec5-4f41-8a22-81358ea3a6fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "928a1edf-a084-4159-a16e-21bd76ae520d"
                }
              }
            ]
          },
          {
            "id": "96f0e84f-a34a-4ac4-9cd6-9c5283ca2e3f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "613b3670-50db-4cc2-9037-8ca06d907e55",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0d77bf27-7add-463d-92f8-43609a30e26d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "eb0212e4-219e-41c7-9406-3fcc70a8f0f6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "305f86b6-66c8-4088-a625-3f68c3ac87ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38032bbf-2cdb-419a-b2e8-2c9b91dd03c7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fd04105-b89f-467f-99c8-b9d90ad20c5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d647e58e-4934-43a9-ad5f-24a0ff26bb78"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0890c000-12c6-43e1-84c0-5a94166c0f53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24be22e1-9610-4637-aba1-6726f9420333"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bb31b78c-663c-4d14-b14e-fa19f354a7db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5169c68-4f8d-4baf-927d-7e39a5f0ade3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1907a431-b404-45e8-a305-2d47a2cffd3a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ced499f5-5e13-4e5e-b015-8b9ed9a741f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a92594ab-7eb6-471d-a386-3b68b9ebefbb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cc02874-e84a-4275-8c8b-5cbbd8baace9"
            }
          }
        ]
      },
      {
        "id": "4f47fb25-8984-4119-97d5-12e82bc61924",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c0907475-c2bb-47a0-92b5-75863cf6dfd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a115f5a9-3e80-47a7-9606-3f8a58356f42",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b9bad5f-89b8-4683-96fa-ef21e02bf79b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf718e0-a734-4c48-90bf-122cd1437bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc611bd5-c7d9-4f90-bf24-0951132b6594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a882d9ae-4653-422b-922b-92e8e5db9054",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe163a5-af3f-499e-8968-8250d8d02027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33de11b4-ac81-4e30-8c21-470190f1114d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0279b30-cc03-4be0-94f4-35a779176e44",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c99b2c-1285-42b5-8148-226f047ba8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c93c568-e549-46bd-85de-aeb267f0bbb8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4073027e-1283-4d36-be48-0b739954a3cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77fea620-3dbc-4a2b-be68-90d11de7461e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecbe0bb-d25f-472a-96d4-935859634e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92302c60-e079-4691-996c-bb657ea893eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97492da7-40cd-47b3-8595-2d2d874adc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbffdb6a-1858-4f96-81d9-629ea10037ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d698d686-b851-45c1-b130-eb8498a36166",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39271990-4a7c-4c4c-b5c8-4ac3c5d0c802",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "232366ea-b661-4a77-9b6b-b6341129d87c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "abda98b9-04ba-4672-9354-17fa021e1d78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96f13436-0d0e-4836-b04d-cf1f0db97caa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "69ce8f5e-e858-4363-94f2-41bb722978e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6977076f-16a6-4d65-a3ec-84d9788aca60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bb51ed4-2d4c-4eaa-adb8-4b3e88d348e0"
            }
          }
        ]
      },
      {
        "id": "139e42c1-ca5f-42fb-b141-739521843ff3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8beea26a-5f84-4dea-9008-c46e46f9d9ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ff4b8eb-d40d-4ff2-847f-dc180c7d32cd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1f854a92-94b3-48a8-a0d9-826ab8297b61",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c13ffd-0a24-4d96-9c9c-d9092917c341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0da9d6-76e1-4da1-b3d7-ff7611dafb70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ffeb5c-5555-4f4e-9da2-d25084c59d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6122c7ef-bbff-40cb-aa2d-e2eec292b01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ca1700-cdb2-4ed0-8d30-fb46c9f5d85d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e27f064-b505-4879-b5e8-7803d2b3a163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b073429a-07f6-4de0-a62e-eb0745eb6a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc0d724-2580-4a90-b1e7-0dd8335d0c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e90ec3ba-9692-4485-8b50-8560b54384b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d0f5ba-bc6e-48c1-bffe-06570d0e0d5b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d15dfd4-daa6-4d60-b9cc-7d8b9688b9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9eadfc-d64a-4383-93bd-253a00d7e7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6191b144-7428-40ab-b14c-2a07052a6e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f2aab5f-19b3-44d0-a740-3d29b25916b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e44045-f849-4cd6-b9eb-41b913097bcd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31e7e27-d1a1-4eb6-a42c-312206cda62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107f02de-3110-481d-be32-abcb4198c190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a47b11-73ea-472b-8674-3265a35cfa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0213836c-5bfa-4514-84db-25f8bc08946c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120d101c-f591-46c3-98ce-0583701a3e58",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d77bdc-4faa-49ab-b7b0-ef6d203bf3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b8e759-543b-4db5-8763-f8f909230987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae85375-6a38-4a7f-aaea-499b0ac072f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca9a7f96-af2a-41b4-908e-701706ab6844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46b592c-e2af-47ee-90d4-82f1567c1e23",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2409fc81-fdad-4d24-8d2e-b18d779686b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5ab27c-9c41-4d88-904b-92b2890e0f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31451046-3e99-4c72-bbda-47d407ca21bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d9aa830-035a-45c0-bd21-303653d48168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de851ec-b1c5-4615-b160-aa656d5df1ea",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23904d92-e4cf-41d3-a753-5f17576185c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c62fa5-4503-4255-ae34-7ff8311e847a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b163d427-eae1-4740-894e-5f1e2a70e1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "386bd939-13e2-4bdb-aca0-48f248e6aa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a41a26-5fb5-48f2-9f09-4aef30d55c8c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61d2ce3-5fe1-4b9b-a6a9-ee593ebc98d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfed1a3f-5a6b-4d95-925a-c0471c790e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fc3824-5c7e-409d-ab89-3df52026e246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "571deea2-5896-4ead-984e-1477f1189d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538d3cc8-a6d6-45e4-89f4-ebaae84016a0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16363dfe-8dbf-4900-938c-6cd6426c30f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693fe81c-7f37-477d-b67b-c03bef9d29d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfe1cf2-f483-4d05-be38-a10b5719e45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1788308-e55b-45b1-8821-14d4b0456805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830d2d69-98cf-45c1-be89-d907f2b56ef9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4114a76a-f9c3-4def-8050-8a7038440ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f000dfe-d5b6-4046-ae17-884012f5ea88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcc507e-bb7b-41df-98c1-454ed8a74fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7645ef7-bf14-4756-97b8-6665378f247b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4bcfd6-122d-4e19-b8d0-5e1f34308aff",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d722aeb8-e684-4dc4-829c-b05fd3fbe660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a304c28-d541-43c9-afdc-e479b201750c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcfd29b-d120-42ff-92c6-cc2218cead3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f66002b-0a59-42d0-a6aa-ad47d3360000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d91e184-cf26-4295-b3e4-e0359210db7b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3af7b0-9444-49e6-b299-1590d444baa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc077bc-a5ee-4fd6-b59d-65ab11186142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d7cdba-7640-4291-b1f2-7c36cad694a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f1b6876-c250-46f1-b6f8-7acfcb5da29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79c96ed-9e98-4c36-809d-c2f144bc8a0f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdae5b7-fb7e-4c52-a0a0-c69b0a6f874b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47100918-ba42-4a38-86ae-ad1491a4b1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6dc084-d6cc-432f-b56d-9fef58aacae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd68130b-fdf3-4282-9ed4-5007ede74cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823ea396-1076-4452-b1a7-890693d23d5b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c0840d-2a18-4d31-b995-ab3277746a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501aca2e-daee-4feb-8844-a9e14bbf4448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083c0cdb-e634-48c7-a9cb-1ba13a0f5ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0fa706b-f9af-487d-a891-3c8d1112656d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5a423f-1d17-44d5-a2b8-980808df9f8d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e67a83c-a149-4cf1-8ba7-8c52d80f0f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf69537-98ec-4328-9897-ed5bc3c4bc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efeaad6-59bd-4feb-9ce1-36079841051c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2aa60e1-a8d4-4607-a3c9-37f11a76804e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9825ad-2754-4d68-842f-647059e14999",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266ec034-9534-451c-9989-dabc0b437a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b99f36f-341f-4206-8c64-c89a01326c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bb81c4-aa8c-4ade-b07a-bab61506e815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ee4b39a-13d9-4b45-9b08-fe7075228f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a685a508-9270-42c3-804b-ce3dfc5bbc27",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04031f85-d9a2-43a8-b25c-2b33fa503dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc37e29-0b0c-4210-891f-af7e75911fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dab503-5890-4781-aeb8-297506b0f351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1848d3e5-77bf-4989-8bdd-150404ff1b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961a87d9-d951-4afc-bc99-4ad11e21823e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0020356f-bb68-4505-aaaa-8ee575363ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef108151-8bb9-430c-9e82-dd851347fa0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd3e245-1f62-4ecb-b880-7de3ad1b5250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "09e0ae1e-7ea4-4855-9b63-b1f43dd5406a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52329290-1099-493f-ac62-82e41da1f5a2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928b64d6-f82e-4af7-a07f-b2fb10034685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89818bd-bb35-40c4-a455-94a2dad01ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7ce37d-e4f8-4b1c-820d-cc7e950122ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99cc86a2-25e7-4578-8213-cd423d1a8b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d60f07-c1e9-4f8c-87f0-0b4de1681502",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0536d26-9357-4d47-ade7-25485d65c84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8356ab33-4be9-4db6-9ec1-2a57bd976ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addb39a5-711f-480e-8e4d-e653b2383e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2adac1-f511-4e81-9f17-d680882bfce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cda5fa-1a94-4326-b711-39c97e2ff58d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee3952f-2e2e-4597-b7f3-9b908fc48438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8274eed9-3c63-48b2-abbc-ee2a28dd4ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b4f82d-22b2-47fd-a4e2-a028a5b30356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4825e538-da2e-4cc9-878b-e87a43928a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18e9454-1b3c-472e-b295-a583d4db4db8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36b73c3-b8aa-4d01-a1e5-1439e1c31c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5824f7d-6f80-4e0d-b59f-88058bc46acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b50a5c6-54e4-4aef-b1e9-fec1cd61bfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf877be-b6bc-4df8-8129-c7f9978188a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674fc1cd-7a28-40ba-aacd-806148edeb2d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a46e179-d6a6-45cd-8535-fdaae0418189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec7326d-aa0c-4642-aed0-af35bd6e7309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c24738a-44ca-4744-828c-bba7006a443c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "722944a7-597a-47e2-83e4-f47e60961f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bee8f9-f083-4377-be79-d962f7f8c511",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f38bb2-1615-4c01-abec-82116186ebf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1a5090-9e29-4bd6-ba49-fe5a2d3a151f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797aaa9c-0c99-40e3-8efb-d51bc3459f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a132ede0-a323-4ada-b25d-87c8f90019f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e41400-4bab-4ed8-abfb-d8b8644f66f0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71d9d0d-59b8-4ae8-b863-20d0a877eee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a5dd12-ceb3-4985-9e9f-4b54c3a5b563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15386f39-ce87-44e4-9214-87b81894dffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c11b89-f56c-4898-9808-ef0cc3e78884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfd9512-10fa-4ec5-8523-da44e7ad8717",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74af8bbf-b711-46c9-ba6c-ea6a68e3dc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4d45d4-ea37-4601-be22-e9ea00c11521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a817f2eb-d4b5-4615-b101-2da7ada4420d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3decfd1a-a84c-4431-999d-a431169664e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5935752-9a0f-435c-9676-18c867603e96",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cb96cf-78c7-4501-8cef-5ed8a4b59f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1affcd05-4dee-42ff-8150-4b0cc34785ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bd423b-3b1f-457b-b28c-a98f616a618a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f2065b-b714-46f8-aa00-dd1c5730801a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9204e41-44df-4fce-9c47-0289e42d3188",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f58b940-dd82-4690-ae97-5ad162c49b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd92754-d815-42ec-ba23-d5e821bbfa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963d7dc3-abb0-4270-a2bd-d33d95ec0c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eda6b9e-f5dc-44f9-b4bf-a0b70f0ec9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff31102-07d1-4956-a56e-dff8c2d21a4c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c809acd-76a9-4871-9533-650530d0a29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b8685a-2688-4413-a2d6-4a7735b85d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95ee2dc-61bb-439b-b7ec-c94be083c1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb48606-9848-4535-bb74-a9095176982c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36736f2-b39a-4b27-9761-7e5162c39d9b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea09de59-aa54-49f4-9653-9e63d58c7cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90473132-a703-455f-8b42-857655329181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18029e71-b748-4295-a566-8f6ec1a622c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "82dc1e1d-3314-47ca-aa06-c3ab00312694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d8b4ed-91e5-4b0e-9e43-03b023846f16",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d0efa9-943f-4b63-953d-8e6dafedf779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df561518-6daa-42ce-b9d1-86fdee092d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fc6ac9-364b-4a78-b7f6-c77f699df8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b8f179-854c-4a4f-bdd8-57219511f536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2ce14a-68c7-40e7-8641-70185b9c0d7e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59625e2-ed82-4a6b-886b-b51a918fc232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ad4572-d114-4e72-b1ea-0accb113b643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969e4bfa-f51c-4161-bfa8-b9395248b5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da7dc94-a010-4b57-9005-d60c5c8c615d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46d069f-2fbe-44b3-9e50-d18d052cbb8e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb51051-87c2-43f9-b0d7-633bca2907a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc42a48-204e-45b5-8935-cfc3b33a17d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb01872-c458-440d-b4c1-ec3f642266c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "157fb2dc-1609-4e7e-aa22-1870cbe31c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4633ea-17b1-45ac-acba-b2f1a0e2f45b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddad7abc-dce5-4e7b-8f3d-e1fd989c7174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b7cef3-f929-445f-9208-91580d52d4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011b72ef-d678-4d95-b9ac-7bc52530d684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a69570e-ccd7-4b14-8d18-5058c2e56e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8050b550-14ef-41c2-a5b1-c2f31f198d12",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4904e449-f81f-4737-a226-ca42f8b83984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11ea100-fe53-418f-abc2-904b8bff1bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd336e10-e345-40a7-9c54-0d521a75152d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4108c7-1ac8-4ac7-b284-333cbda7272a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456b14c3-be36-402a-bd63-aaf7a7d67694",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62ec73c-3664-4469-b801-ad28ce673143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2ab8e53-c62f-449b-ab9f-790a3d71ec71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f51b87d-e3d3-4fa9-89fd-6ac1af8f8a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c58972-2cac-4096-acb5-7a11c71c6d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7dcb23-e077-464c-a2a3-e0aaf205ed0f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213ec524-7c8c-4d13-a1cb-a84db2ee98bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a794de12-278b-42ce-85e7-15bd5e765f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1218659f-c34f-48c0-8c96-47cee1ba98f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51bd6a40-3227-44df-838b-94f00a967288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224007c4-da91-4212-807e-5cf7602b4a78",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9d8a08-d033-45e4-8cc6-5fe5f47629de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b771493-634d-40bc-b5d9-01347b932213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752b9a47-11ce-4163-9c99-9325014a06b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d44d4436-76e4-4327-9097-cd8f2e8ceea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3a3a20-f895-4418-afff-1376b244c9db",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b152386-d0f8-4698-864b-e50cfed5117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f9cbb9-b4fb-496b-95a4-954069a361cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cda48b-ce66-4bde-9fef-8ddfb13f53b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e17ba5-c178-40ce-99aa-bd290fc2b9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460f087e-4aea-4659-8351-d7f96270d909",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6e33e6-c4e1-45de-b41b-c2e7419ce5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20790466-a990-4bda-8b90-39e219bb73e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9047e893-0459-40ed-a9f8-037e4893d415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "74a69956-ac74-4f83-bf91-bea4278bce6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d577bb-2f66-48ca-9f37-65563c7b8f70",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e30999f-12fc-491b-9cc2-70719f6b15ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1def47-47a2-47fa-94ce-8348c8943747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080050b7-74cb-4378-8175-57ebdb016a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccedc0c-d5a7-4bc7-b1df-3bbe7f25f543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8f0595-e71a-42b3-9cd2-336f7675ca6d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d721037a-a6da-4742-b38d-e4dcd42f8331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd47f92-8dc5-4b3e-9833-9d086ebfb35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019a755b-a962-4fac-8555-be6acbdafb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f50e93-9016-452d-8dc5-94038ab054d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c67998-7169-49c1-99e8-0f61f5324d97",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f723860a-3976-4dbc-a52e-a2c99c3e4b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68667486-4525-4d17-898e-757afcbc6d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02569b22-17b4-4aca-b6bd-389dcea98902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf406c3-d1e8-45d5-9049-54386fe5c662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5636f0b-96f1-476e-a899-128eb4d028d9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c0280b-e0dc-4501-95b7-d1d9fa43b80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fad698-dc80-4767-ad40-d5bbfe072578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb7af95-09e8-4fd2-97e8-fe1ef23997ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "00e17707-be2d-484b-9332-f50f739d69ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b784d78c-392b-4eee-934b-c84903414690",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e929629d-d0af-4f81-8e40-b17b35a093bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b079948d-0c04-4b1e-8945-ea93412e93a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c848b295-4f00-4dcc-8904-df66ed63bf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e1edb3-22b3-43d5-a2a1-723ffcd48ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bf60d4-02df-4d13-97bb-777b8d37264d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7772ee-a439-49bd-86bf-b40eea8ba570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc2adcb-ae27-4928-a695-e5b3b2b7cad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4221077-920a-430f-93ab-ba0173503b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d64a2f-3f98-4026-b558-339a9c2e14a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2158f56d-da37-45c2-bc31-1c070737b29e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7e62f7-8294-406d-8cbb-eeb7c1468ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ba017b-7936-4c2d-8677-4e479c843280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7fe28d-6ed7-40c6-bfd1-cbdc3f1f24fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f23e123-0e1e-490d-9d38-4b989f837678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516a3277-711e-42ba-9e40-d340faa5317c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9820a9-ff49-4eef-90b7-aec5aedc3b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9fa597-a4c1-4035-b26c-c8e4151ca1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1f13cb-3238-46ab-a4ed-eab6ded4c706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5972225-b087-4e01-9976-9c82edba5a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d236bf4-a117-4924-a319-bc4b93a4b20c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e2bff7-2c3f-45c8-bff8-09e75cef8d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8b475a-9586-419d-b5da-4043c368982a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28827ea-860b-4a0c-9acb-86cec3322d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d298649-e094-4850-b820-dba1f07a8111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597b3a81-a27f-4dcf-a1ce-033bffac75de",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc044c3b-d3fa-4148-98aa-be0ba31d0516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccab446e-3633-40b8-8edb-3e27f12419a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40ddae8-1c51-453b-ae21-1a1a61450cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdf7710-2a36-4ff4-8eff-85812e6160dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59a1c37-cc88-4798-b324-7052dc8ba704",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4676612a-3928-4d23-868c-ff4ee3ee242f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd68dd2-d6e6-47c4-85a1-6ee8395e587f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239183d9-3eb9-4363-8ca8-020428571967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0cbc8e-cc0a-4f04-b576-ed27f42af7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb27de35-df5b-4b81-9e49-34b9338e152c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeb1632-5fcf-4fee-8855-112a189fee9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7f9d76-9c30-4fad-8333-d3ec59a3749d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700ab30a-fe5d-4e82-9664-73c3a96b82c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbd8fcb-1790-4960-8d7a-2ce21e0bf631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a814f6c5-7b33-4316-bee2-399af14b7708",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed015ac1-bef9-4446-ad67-59f227895d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bf8936-cdbd-4ffc-b16b-6fca59ec1e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395f9a44-7f1e-4cfa-bb3f-18ae11535f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8ba060-496c-441c-87cb-a95e3ff533c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d7926e-63c4-47b2-899d-977d5efa136c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8afb97a-56c0-4f56-9c0b-2d243c3fa7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c45304-a178-442f-a224-718dbbfc3619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd1a970-847a-4051-8978-e8d83acdb2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf3440c-84d5-4f3a-9a33-fa8815603ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448004a0-9d41-481b-aff4-bb3e8e5b24d7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9749c08-876f-45d7-988d-e67ed51f8224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72515e53-b02a-4622-a6c7-1f9905f1e240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a13428-418f-4fd1-8afa-6c04787e4bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8c650c-41c4-4e26-bae7-d281fc93f1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe40e09-2f69-4e8c-834a-d97576f1475b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b2a06e-be47-4e8f-bf90-a47b91a495ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5c350d-f234-4beb-9245-f7c1c0556d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4376fa-dabb-457f-bfe5-a896ca8a2946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "20c7ccce-7bc7-4053-b009-aaf35ab37ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f746aaf-ca1d-4550-a3ec-db3ac25389d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b4cfca-c038-45f9-9e7b-bda89433afc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1935716c-cade-492d-9327-250d0c4f2a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fef66a5-eced-4d8c-9afa-dc9e57838764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b325ee2c-bbd7-4148-938e-e43736a9c944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157f8e73-55a1-4564-974f-fb1209313200",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7d4d88-6850-4438-9793-13d1634f1c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf834aa-629b-431e-baa3-d85cd472150e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c9f52e-ff0d-49ef-8158-6f3de89668f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39323adf-c47f-4fd8-9921-db363ede7666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6243d6b-eadd-487b-a6df-4ec52028a560",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975cf7a0-7e9a-41e8-a904-dbd0098f7020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075828ff-da15-4eb4-a9a9-4cf390679f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0d3f55-6043-4140-af5d-506a237b3036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c627e402-1071-428e-87bb-a41be1ed1b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab7d3ef-7679-4d7b-9016-3d0be0aa6e0d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b15a73-09cf-49f3-965e-29d25b3bd77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3020c8a-7e03-49d7-9569-2e555342816f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c52d46-e09a-4d02-a95f-3e22114cc34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "60f1e22f-9a3c-4263-a051-93b06eaeba4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f64e475-51d7-4b88-b285-8505a2a91f80",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9af0e29-b24a-48c6-bcc6-4a409a360711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d34ae9-01cc-4b71-912d-3d8c23c8702d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4f042c-1c7e-440f-90b6-4cd0da56c12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c379933a-d885-41ca-9583-c0310fc5d8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205a966c-2c66-4639-a3f3-8864bdb3482b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ccd174-9558-49ae-ae9f-cf0276f168f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8baa2c71-f392-482c-968c-00ad5c37d4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172a5140-37e1-47a9-b4f0-d1cb4e9ed89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3431fc98-a295-4308-b3a7-ad7911535292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143d697f-6b45-438e-90fe-f638a6151253",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849fb9e3-29e5-4b73-8259-0a8972981095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0a3597-41a3-4f73-bbd1-186fe982ee64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b804ac-0e33-4f94-802a-6b894d75d12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a387fe2b-ecd2-4508-ae60-91972f9739b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690ef812-2533-4e62-913b-7b39e72136b8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031a36b7-f99f-496e-8d12-adab613dbd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f3b034-3a94-4ddb-84d0-e8198acf1e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2096b273-9211-4deb-bd0b-b483c0590bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a6f3df-396b-44a6-8954-24292ede846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd76285-9718-40c7-a1e5-80be72774091",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6150fbba-aa6f-4a68-846a-c14fe5d6b094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b77cd1-1291-4185-82d9-3534cf19121f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15eeeebb-066e-44b5-9c1c-c9ee23c39be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21708932-3ecd-48de-9c46-87b2988dde2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f577118-e945-4935-a14a-fa39356c0751",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbcba7a-8472-47cc-8f9a-0702440c09dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9b85f0-174d-4676-bffb-997a15f6937a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8543e0-6927-4573-a492-0e721ffbb5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5436973-bf26-443e-96f5-6c103a9ac59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b435876a-cec5-4f6a-bc28-09ae422eb689",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2865010-d744-4d94-8d23-350f088bcf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965494a3-6323-4798-ac8b-df0979adce6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a372c47-4e1b-4472-a4bf-bd08793ddf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b6bcd2-c55b-455e-968d-d639f033067d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fa1d0a-0dc8-4fe0-8f42-e345c7c80e13",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5789e0a-a404-4b2e-a50c-7357595baa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7be718-69cb-44b0-b352-3c0552da1ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2389d2d9-2663-4d4c-ace3-c3b688859a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0888d8a2-59e2-4ebd-87e5-9ac158656a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce220a86-c014-40ea-880a-ee7f3eedc56d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b843e01-11a9-4f25-bac9-fc0642df4da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ed7055-484e-4aec-8cea-fcdd9a8d1070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e58fdbd-f6b7-4a78-b584-7531a6e75fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06361a98-5663-4fd7-a2b4-3fa78db6c675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23db834-db7c-4d82-9e1b-1d3555e854c1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9e0436-e420-432d-9317-34a4b742b0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1536fcf9-8476-4fae-80c1-aca3569a4ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c93214-ccf2-45d6-80f8-2c34b17640d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd85a578-475c-440e-bd47-6a5f95ca71d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c5eb2d-4557-4b21-9c26-a54493b4269c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8678f4a-8c0e-4258-bb74-0c83b9fce8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fc65af-628a-4cb3-9045-2d9c7df94c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1963a5b8-66e4-40ca-924a-55b64e37371b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff89d242-f2b2-48c9-8f3b-35b5975cec84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982d0190-073f-4595-9648-06c637c1c105",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4312f1e-57ef-4aef-b596-12b67bf9d89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277cea9f-ed43-4cf5-8545-6badf3ef2994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd0ce8c-abc4-40fb-ab2b-e7efe4196189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a24df3e0-9671-4ecf-b036-8410c501c98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8d5ff1-eabf-44e5-9f4a-76a42bdde198",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0de8d5-06ca-4515-96ce-df59beaf6995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0182e4-ed2b-4bdc-9bb9-476ec791024d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e086e901-c8e9-497d-985d-50d47adabc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0a1010-f376-45ee-8079-6aeaa206baa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d529f71-184a-442b-9dcb-7d631b523de1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfac90f-21a1-4499-8852-799089adf31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330de4ea-80ac-41bd-8fd6-41d3009ac726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffe62b8-d79c-495d-b41b-3972badb025f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e481de6c-38a2-4b09-8cbc-5eed3674c314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdb1a92-86d7-494b-9cc0-27e060ad0e8c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77070961-7b00-495a-aae7-74d6ee9291dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd34bb5a-766a-4dfe-8c90-f470876e03e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f7ef1a-5331-49d9-a7e5-456f291a8bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "448d775e-611f-40bf-ad41-e4e11f7bf507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba857a3-9e05-4f87-8c7b-041bde4e8818",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d24b09c-9a75-4f69-9610-c3e2263ba001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fee636-dca6-4a63-90f1-bd77a1cb9fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a570f4d2-3b96-4974-a7ab-2693670c64f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e6a3f1-413e-4f12-8837-1293cea94b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10592aa-de5c-4ff3-bef1-d850539a80ce",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491fd5e4-d9c2-48cf-91dc-040151618c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0c81fc-7144-4ed5-9957-b0a6170190a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaddb0c-b989-47e0-93fb-3cdc23a21f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be527a84-6097-4679-82e6-09bf63cbb905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cdef95-f663-4b68-a7a7-b794c86d75e3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661c293e-8d99-422c-9c99-c0bdbe2add83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b5cbfd-c37d-468a-829b-2c513cb95a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544d239c-73d3-4c2c-9c10-6533a74304e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa9d992-c998-43e1-913d-cd758654b461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739188c7-dfa1-4e05-b282-934fb116a3c2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21723773-b11c-4625-99df-fad6a8ff4f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b599bd7a-da02-42fd-b4e7-6b2eb7cf6597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22d8e4d-b909-484b-9da4-4094b3a2544c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8204f392-2687-4dad-aefd-0b3685d28de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6626820d-a8b3-4054-b209-ebab65a46fb2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a9101f-beb1-4764-bdf2-e8952aee6b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e3e318-426c-4082-9999-64c8678b71da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deb0d45-a6e7-4445-b085-7f4f871ee74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cde1b7b-baf5-4bfa-817c-d8a73e4db02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448d92ce-706f-4ccf-8257-2c43dabc8da6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72342ec4-e72f-4498-97c4-8d4964513ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3913652-6eb5-4d12-9bbe-07e90e8bd50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9034e4-56c0-449d-bb10-77fff675520f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "75dab529-5925-41bf-a0fe-35d88f558243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aead1132-56ac-43f0-9896-c5cf86ed7bde",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420f3ae9-40d6-441c-b16c-c1e33db0f33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c65a0b-6790-4359-82f5-3e97e0fa462a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc24969-aae5-4426-9aa1-1201b6922c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99054acc-d36e-458b-a9ad-662023a7d862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccffeae-d611-4ec1-9f90-edd41724cd96",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0490a4ca-c8fc-4b35-8755-5eca9d225eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2b4020-cabd-4b69-aa27-2ffc47e0786a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4956ba-a607-48e6-9c1e-8c35a0de7c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d5d909-ea7c-451b-a3e6-09480d6cfd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a7522b-4f07-48e6-973e-bc7f284e9aba",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f154f0d5-28ee-4ed9-a728-13b6bbcbe2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb88cd9-c920-4e57-9596-9e35f2310945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c3b167-758b-440e-a3b1-de31c1f8d83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2198e3d8-39d8-4151-969c-37a352c5d587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bdd1eb-efb3-4f57-9e4c-5f9a61361c9e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f4a7db-5ce2-4f6e-8f26-3377a1bd8334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bb60e2-a9cc-4d6c-a3a2-8fc033d886a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb18623-b47c-4682-a58b-d83ca4be57d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f19043b-8ec9-4450-ac57-dd65fd056d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9cf7bb-53ae-498e-999d-cca10d9d0307",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852121ca-a6b4-4b8f-99fb-37de0259a4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cbaac1-bfcc-4898-9684-6f3257507787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e23ee8-08d9-4a95-ad00-762afc29bdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70a2d273-e685-47dc-b00f-d800ccc00798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9dca9b-6b00-4781-9332-68caca45431a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033dc640-54ae-46c4-a6c1-1214bb719c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1825e2d0-af30-4875-961e-8de31386d3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55bedd4-c072-4381-b1df-a17fcca796b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a34629cb-900b-4bb8-b0e8-7e0505ec1dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989a6056-2b68-4835-aae7-0e44cbca8f24",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecd772c-efb1-416f-97f8-3e049541d1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc85bb5-c8f1-42d5-86f1-601545da498b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08f3ff0-65ca-499a-abf1-d74228817c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eccead33-094a-4d9c-ae36-0db2bd56f9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2a51a1-e3c3-4e49-9c0a-c0f77b59dd73",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914ad92d-9bb5-4623-913f-376e2a873972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c663f2f7-6b07-4e14-96c8-8bb8e7811e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2405402e-b5ae-4abe-a2cb-4bc1104a3a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6871c1-d9ea-4a87-a3be-ebf0a94da558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b136fe84-ee4e-4a2b-9745-c60b14bd4fb1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd73483-ee1d-422b-8c85-a75c0b59b259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea25a55b-2f91-4a23-b5c7-47021096a258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c225da57-5032-4150-a042-a9228d95b60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa233715-50de-4efc-a8cb-8bbdde35206b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291b93f5-c8ed-4058-9852-53c618d92462",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596cc48d-7ce5-4d5a-9096-6d6e26c5ef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c2a848-4fd8-4a1a-950e-4ee9199a1829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56226466-acd9-4778-8ce3-404e6c9755ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f286af5-6d02-48c8-960f-e8eedf8d38ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc59aff-1c42-43a4-958c-a53b132472b7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449cfac9-2485-45d5-b4f7-7d316bec8ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "536375cc-8924-44c4-aab5-74f7bc2730f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc503eae-a284-43c6-986b-eb1d6cf96398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22e04dc7-2d4c-448f-96d2-2cb843ecec5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c3b17c59-d63d-4180-8080-07dfee1ee5df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f101155c-06fd-45d2-b7e4-06de8545b720",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f84324-39ed-432f-9d4a-eb4e0656e82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1467a249-70b2-4a9e-b82e-7ef9addc9adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f092d6-629f-4dec-a8e2-a86b618221d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0039af93-3eed-403e-a75a-41653390f246"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a65e1c7-8cc0-47d3-8156-4f942454d4ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19b5d7ac-a06c-4dbc-89c4-8132a50cdb56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f26e748-dc9b-496e-8b1a-398fb6579627",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e23f30d3-59d4-4f6b-b0df-ee2024c8a314"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65327732-ce48-40eb-9898-360117677034",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f14978f-ca55-455f-8793-2eecba537cb5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e335664e-5caf-4cfa-ad76-f2aa9019fa9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e64ef684-4aca-4076-9155-e1a360228c81"
                }
              }
            ]
          },
          {
            "id": "db74c1b8-076e-4971-954d-36275570a389",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ef0f2e5-3995-4e41-bfa9-320d2aa91d87",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "13e65825-df07-4409-b060-6b105a7c7d24",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1163f5e-c27b-4eef-979c-042ee6c9dbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "98b9264d-aa45-4f06-8bfb-728975be768a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a7fcbf-e4d2-48f5-ba99-72b085fbff3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554a6752-2515-4a33-8f8e-1a3ad59a40aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ef69e21-04ed-444f-8d5f-a4682563b556",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf14657a-a3c8-4121-9a3c-a0e84a887236",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91bf37d1-800c-44d0-9e99-039701096dfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cef39ec6-b6e8-48a5-b5bb-562ea66df370",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "37015613-37c1-44fc-9241-03b536b5aa07"
                    }
                  }
                ]
              },
              {
                "id": "0f5c3bfe-eb13-4a10-a3f4-95a4b1f8145c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7db5648-943a-46a0-b769-66a4bbc87aca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bebd6476-6523-41f3-9ed3-b39fb27f378b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0488200-a615-46ac-8a03-0c33467b634f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2766844f-b302-4acc-9c66-dab24533657d"
                    }
                  }
                ]
              },
              {
                "id": "906dd5c3-af3d-41a8-8289-cbb1a65edcae",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d9b64c6-85df-46a9-a174-114610098978",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "785aac1c-820d-4c60-8c93-ce2982eaee46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e19062a-de18-4a59-bd49-3063d958fe29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "182b8f41-7686-4c86-8d67-32bc83313886"
                    }
                  }
                ]
              },
              {
                "id": "77a359eb-d305-4d12-a7a6-87b24416db50",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e947beca-810f-40a7-8567-a6c453818604",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "878b5f89-fc81-4f4c-a776-b37258e54d43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "049e3d13-ca4c-4903-aa6d-0931e314b13a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "009d51ff-96f7-4fd6-b0c8-843f97d3b7a6"
                    }
                  }
                ]
              },
              {
                "id": "17a0891c-e34f-4a40-8bed-a2c3716b297a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b766d24e-4ea5-440c-91e8-9c26e57bc9f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c04ad74-8db7-46df-9359-a9f35f4dc4cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f866925e-f62e-4071-9bdd-67d365f5d962",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "52bb697f-213d-4860-8207-cbd1bad4f088"
                    }
                  }
                ]
              },
              {
                "id": "f1b0f9c1-a021-4c91-9022-8d869bcb0c3a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73a350d1-0f3e-49ac-83fd-896003e8e9b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a14ad88-3654-44f3-ac13-c39ee9a46d14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1da16d9b-aea5-4fd6-93d7-4898809fc7d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bae90364-12be-415f-972c-f6f07b379f80"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "198a19d3-8f34-4c0a-a0a0-65c1525011d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4748ad05-297a-490d-af95-e04edf75c766"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e969e222-8556-48a1-b82d-0dcd63cbe976",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "243b0acb-1b23-4c68-8135-1c8055dad970"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "587410fb-3523-491f-84bc-e511baed2aa6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "37df8d39-122d-4256-90e8-1f738f276ebf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a41ed4f2-8aae-4ca9-bdea-e87dbe6eb981",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87bbf0d8-2651-436c-af9c-57f8f162919b"
            }
          }
        ]
      },
      {
        "id": "64eaa8c8-f98d-4db9-b529-ab5a51f61966",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7741b3aa-a867-4697-a09f-8fb3717c75a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ae76a60-a9a4-43c7-a197-763f6dda76b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "716a0503-628a-491c-88f2-4c4c1efeb3e8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a7ebf1-9a6d-4958-9ba8-dff3eeb819ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540e7278-3350-48c2-b95e-c33172db4892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ba3af7-9fa8-4d7b-9b4b-d89a59158d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "76998aec-6c61-41b3-b4d0-beb9350015fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd75c4e4-6c4d-4a26-a4c8-ccfd4694aa6c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b8dd63-0bae-4866-b937-0d38c005dd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb629511-4284-400d-b7c4-2b10ad7c3db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c04bf4-c0bb-4391-8b06-81d30f9bff9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "333189da-7d9d-4e3f-913f-c092a876c391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7516a87-e7cd-4954-9ac4-23cc43344d3a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7311c1-e24c-4ded-974a-7160de5c8e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58962ae8-c9df-4ffa-8899-7690f954c7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6641dccb-484a-492b-a206-ca9ac7646131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52dee96c-6f50-4edf-9eb8-46ebd7ba74c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6eb2c1-5187-47f5-89ec-b71a953ddde0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b673562-a23d-4820-8a41-2d9fa0eec751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85be4256-a891-4c1a-8fae-aef73b150120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7deae45-9fd4-4d8f-88fe-4d98a08c1cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da2a694-b1d3-4707-997e-d436b8d62842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a72892-3ad7-4801-a4c8-72612f1aa17c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0be9cf-91a3-4878-8a79-ba14be9b308e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b274a584-0089-4d0f-b8e1-bd5c7c4bb35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa0f4e1-7a2a-4a79-a118-2786d8e358e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c8d026-1726-49e3-a6bd-cab23caac300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe56548f-0f38-4aa1-8d7e-5454af4f2335",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88754d1a-2da7-4033-ae6f-539b37ef177f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d2ced7-5b98-44f0-b69a-00ac54f13b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a457bc36-4f8e-442d-a839-26ab3b7dc121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4402e6-7d11-432f-b43c-02a01acc7b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664656ba-b808-4bd9-94e4-7cc9181bfdd4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afba3331-0e4d-455d-b4de-4e450876498f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa500a4e-273f-49f6-ab03-5a431bc8d770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6ce86a-243f-4239-b477-3b3713f492fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb79ebce-b97e-4e36-92df-9bd01bebfc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b93f69-6ee5-4218-bb10-1e426b773aa0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d131f7a-a7c9-4da0-b2fe-8ebd5d983e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae6199b-a872-474c-bb23-6ef353604a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b677d020-98e4-4909-ae43-bfbf77da2e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89d71b6e-058e-40a8-b6c5-2c15173acce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99959dc6-01bb-47bc-8e2f-044b410c43ee",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca517e58-d13c-4ec8-b094-732218e62f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d63436-1be5-4fa5-8de2-4ea671e3f9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ecdb4f-d6a1-48e9-bcaf-5b2aa06d44b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdcf037-7a07-4f5e-8491-cc7a5bbee85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b9cd0f-ab67-496c-9590-6ffc04ffc788",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2662ebc-53bd-4b54-8786-7f8615ce6c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705b95b4-71ca-48bb-a235-15cbf992f188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50ea7ce-2bbf-45f9-bb5e-087028170a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "960f383b-6fb4-45f3-9ec5-0ea316e6afa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb36be17-80e7-4c4b-adfe-f06a8c3c7928",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac2540b-ef7f-492e-808b-d1e1f1856e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45d0e87-6781-482b-8ca1-0cf5f82803b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4df5ce3-5c5f-4df3-8860-e2b2504af0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7806ec7c-64d7-4f47-a3b0-c392fd13eaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5a4bad-ca47-4589-ae27-7e863f2f2553",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b14a419-1434-4e52-a4be-fb71027ef91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84ae1be-bd1e-4d95-af92-be4322917c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f93c9e-5cd6-4594-9fbd-b113df8d21cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb07e89-53d4-45e7-89cf-b8c27d399734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13bbf67-9d7a-42b7-99f5-e606cb03d9e8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7b7d46-e752-41a1-bb4e-970089ffe5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74309ea-1d5c-4e70-a4b6-521c34a982e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c60e8b-66bc-4c5d-bf21-e81c6c945a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3c9078-5b37-4d68-84f2-2935206435cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1d94a9-fdd7-49b4-ab57-8da8a658da22",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ff5336-ada3-4473-b0e2-773f857847c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2d35d5-ff41-4fbf-ac25-5298fee60398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abdae88-c889-44d2-8486-f47f22958fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22fc7e3d-cca7-43a6-a83d-2f92c704463f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2fb3db-b75f-4e68-b39d-befcf874fb51",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fe6c9a-a91b-462f-95ac-a22a9be2dfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ebee4a-2664-4611-a615-2dd7daa19125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e885fd-9261-4c28-8649-bd199ba2f625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8a397f-2d47-466c-9278-fdfdf695b7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44b0acc-4bfd-4d00-9276-0187bd743cf0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28942a74-9ec0-43f0-908d-5d52d35af245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21393bfe-798b-4ca3-b082-2a2b2a066580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79cc5bf-16c0-47a3-9684-996d81874866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4d0df7-ea59-49bc-8c1e-656f6773bc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5d030f-6094-4601-8cc9-d5895298acd7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec85f5fd-3936-43ca-b646-3cf8537e3738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be52041-80d6-4d8b-a29b-ba5f069b4eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf00c9e-1861-4654-853b-eac07bf02ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcf1afa-0a08-4ade-86ee-b0c9c7e0a26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc46036-b61c-4adb-9019-ead988d07e13",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d281c932-4c5e-4962-b693-03df11fb3f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c30ea48-6b31-4e8c-b0a6-81235a55a91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5597f1c0-8cd4-4b1a-a199-b09cc75526eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b483dcd-bc5f-4abb-9c55-dbcc40fa3ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abed65f-3a3e-4d65-b1e0-d2478c41f627",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ba53d2-9111-4ebc-b214-ab8b89e18655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b69f633-ecfb-4145-a7fa-4429b5814771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9f5fb2-f7ad-40ec-87ee-f295da052c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2a6185-f6bd-4781-9993-712d28ec2458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3b7fcd-85af-4773-9bca-9afa58f04c0f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddcb60b-ea67-40b9-9a83-7003eeacd4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79aa316-809b-4a20-beec-43b2eaff8aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a0fca3-80c0-4343-af04-a0a624618b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9e4fba-9134-4470-a9d7-d6e47e95fe19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b5eb86-2c81-4cbe-9291-a5782664f152",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab59eac-6a5d-489e-9290-d4a490eaecfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a644ee6f-d7f1-43e0-b444-58a69a406a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73880c69-1ed8-4d92-9e0d-17fed1e46bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec29e9c-5962-4663-85ac-9530b4455588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925f56d3-62ee-481b-81f0-8ebf4a6a2bfd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359cc3a2-9d06-49c5-8b98-424861261cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a146e1ae-ed43-4252-a612-893b8669047f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2582c6-dd89-425a-8a92-c2610af08fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02db417e-7d54-4362-9077-e81fbf73b36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6947b17d-649d-49ce-8345-5c2afd7f6357",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6989521d-a4ca-4d16-8fbe-e0ef8ace8b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc96fd7f-8cb2-4a71-8c88-fb7728661cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ecc3ac-4d93-485a-a6bc-b582831018a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45077263-045f-4238-bfb3-4ccaaa8eb7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f080772-80f3-4da4-a3e1-d9ebaf8fd09d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b477e8d8-584d-4e26-a193-d000ff6dd2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cf89c8-abca-4064-97d0-10fecc014ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d13153-d5a4-475d-9220-1352d5b69bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a61b39-e53f-414d-aff3-5fb0df2cdf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edf4094-38c3-4367-8da1-b8d98bba10d4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761a2656-a670-469c-86a0-653cf3927077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3d7025-38cf-42f9-a27d-14103ab31ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11b11af-c00e-453b-a773-dc87a38546ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdc946a-67aa-429e-80e1-57e833093dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7033d7-2f0c-4b22-9cfa-02758a2fb628",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b400fb-bd0a-44da-ba5d-93c7ea11babc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27fcd8a-4e96-48af-bc58-a0d983957eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae45d3bc-fe6f-4785-a63d-8741aed802fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51f94cc6-9123-4211-a5c3-d3b0129f604a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030748fb-cdec-40ff-a0ba-d6f5782238d2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26045aed-5658-4569-a506-7c49b3f8f8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528377d9-f32c-4d13-a384-19c97fd9e523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf33b96b-a2b4-4b46-9144-6f2eb8cb69f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd62a95-26fa-433a-98a5-a9eb20d13ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa83f908-31c5-47ec-9bfe-c265fe815ca7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f28b808-6555-4b38-b9f3-79bcc37483ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b938474e-30b7-426a-917f-f667d723ca08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091ad8d4-0ef6-48d3-b8c2-ef30620dcfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1a8fa2-bdf5-40e1-854c-0fc730abf022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df39716-2314-4c64-b158-149b53ff5a7b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af129554-1a55-4351-b890-6ec5f2f0eef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc4a027-8c28-4e17-979e-88f7102ccffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ac4894-7635-44ef-b946-35a17d30321c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0821f95c-a1e2-4508-a39b-1529dbf77d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754950b0-5fc3-4e15-b1e5-0166fa6f730c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e78d9f-7e13-4dd8-96f4-edc8e27a93b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e298c48-04d7-4dd0-892d-a57b3bad417b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157e6947-8a2d-4472-91ae-ebb611ba6027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0036cb-d380-404b-bf22-f3477c49db13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd231ed9-758d-4e5d-83da-e2a9714be1bf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9953701a-12ad-45b6-a939-64bd62868c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659e0475-49db-4c73-86ec-ec6e351ae07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f34c454-b949-449c-b658-33106dc96fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f38c06c-711e-478b-9492-9cdfd3630fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943fdc6f-9613-4d3e-af1f-788c4de47f3b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb1a4ff-402a-42c4-8af3-e42be510d4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd21a08a-e8c3-48a5-96f8-b2463a9c50e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c885d3-6044-4989-9ae1-b7870d64b781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7fb475-9962-4885-b49f-e51d764b213d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bfc0e6-179d-48ae-a366-e53db2bbf73e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c0afbb-d92e-4337-9fa5-a96373d4f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee2020f-cee1-4288-9082-2a48b0292ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b536e0f5-af25-458f-9ccd-1113e3e7c3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c5541b-5c9a-489d-b9a3-2d91fcd2d244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8038490-5ef4-4211-9eeb-09a2c8f8ee7c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22eefcf-6de7-4004-a382-a1590ab544ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31d133e-e94e-4746-a096-24ce2a970204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0122ad-fb25-4ef2-b97c-ed1ece81ef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1707fbda-4371-4b53-8b3e-b1c94638eb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cbd9c1-b224-470b-b369-8bd591fbccef",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8889d1-de57-49ff-b088-dcd777c822e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb456e4c-32bf-466e-ade7-71440abed9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becd190c-78bd-4c17-ae5b-b718e4bd978a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3943958c-16d1-4dde-b7dd-dd0f2db9658a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6521a1-ec21-4d84-97de-d4512b7cc702",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df57b0fd-fbd7-4f85-b2c4-dfe13f274a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39dfe8a-c8ef-4c55-b37b-2e624995ef14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bd0f4e-b650-4952-a9fc-21b47360d536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8473b9e1-a975-4f45-a36d-9c04d3e4564d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a49a4e-acb9-49aa-9e94-5e34028d5774",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e258a710-f6a8-4567-94fe-983bc961ebe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b51391-d9e0-445e-bca6-6cd1d328621f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fafe452-fe04-445c-9607-f70ff6c8f3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bebac3cc-8aab-47e3-8617-265a6e36ac43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfc8dc2f-6653-4482-8e92-9b20f4db1148",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1be855d2-784b-4954-b469-c7ae975a3290",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6adb233-2357-4eec-bf3b-f24d4e8e04cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3deac813-3f3a-47c0-8bb6-6c3abbea5b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286fe2ad-09be-4486-83a3-fbc17fd8b653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8c979dd-0576-41d6-80bd-5b7aea49033b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cfc0d71-8af1-470b-8d75-4c03a849a13f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf3c0750-8177-4dac-87ca-11abcaec0e78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d68ccc63-475f-4bf9-ac7b-357edb570b9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6cc824d-44fa-40ad-b862-552c11400f39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7860bbc0-3cc8-4fe0-b65f-7f8afc8e72d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "26ac7046-f93a-49d1-a4e3-951f444e5eaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70696902-4fea-4b7d-b26c-fd251674d433",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85d0fcb9-810d-4abc-9267-f997a8605045"
            }
          }
        ]
      },
      {
        "id": "53671160-7109-49be-b977-20de2016d113",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "76996867-0870-4c84-8a80-0f082899ab33",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a4eb735-d59f-42ca-be36-2fe0f73a1e61",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7dacd439-0000-4930-8fd0-f58478147bf0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea996497-5729-43b6-90bb-405094db6fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbc675a-bf64-4d60-8e25-4c193b10dd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac13a140-d2f5-47ff-adcc-e80c78135a4f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24104413-b13d-4bfa-80a3-d72d8fcb2a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fb0e41-d273-4059-9330-076731c7a530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771ef123-0c01-4d5a-a608-4b89cb37731c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5547ed-a45e-4a62-ba27-1e7f0e2326f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83e2dd8-1a15-4684-ae13-9d5f58959c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57ac33e-87bb-45b1-ac55-42faf7e82165",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54da702-aff4-43df-adfd-d9f5fecf648c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263b030e-2b28-47a0-b4ae-a487bc1c4742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cb42d6-7a2b-4d89-ab61-168cba7775d6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890aade6-ce9e-4190-9cf8-843506e90304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7170c0a2-303a-4667-9e19-f5994f0d0922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115b4b51-d52c-4d9d-8010-089ae0f0fb5f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cc6b4e-55b3-49b3-9235-97b445691bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67013eec-ca78-449b-8379-b2cd83b62530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01097c29-7c01-4265-a57a-21eac991a860",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabe4038-ecc1-4473-8164-ed6ca63b081e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26949d2e-e044-4e4d-a77a-73bdfee76e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fab7f2-0fd1-4360-b35f-c1ce3a5da3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f3a17c-d4c2-4224-a455-9f5092e37472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46abc895-e2c6-465b-bc23-ec733267e0aa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b825bc1a-ac74-48f5-a5fc-f509d07303ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de2ebff5-8299-4ae4-a68a-b8f0a2a5e5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1badb914-bcbc-45b0-87b2-5776a4fb15f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82a2027-f378-4f7d-a9a3-e5ff8c315152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1837360-3ac1-48b9-8d27-b4deae1d76ee",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dac1a4-df1d-4afb-820f-26bd07e17e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d6b7ef-9299-40ff-8caf-7bb99f4b62cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce49af2c-4e18-4173-92bc-7a9aaf43afe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c436d89e-d334-472c-b030-f272d92e63c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b819df79-a4e6-42c1-9334-16599e353de3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0deab4-5115-4ead-9074-049e665c2c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4a59b5-ec7c-40e5-9ee5-d80366837351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1df1a67-e890-4d46-a315-2c31e87020a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcd4e14-a6c8-42b3-9d7c-2ca6dc4431fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba11176c-ac73-447f-8c66-79a742629e96",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2703b5-2f7c-403b-bb2e-05c9a9d0b4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5852e4f-d39e-4c85-9803-eb8a0602bba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e450a9b-00a0-4386-98dc-f617ae33496b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d642265d-2ab2-4841-bda9-770c60a898fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90299417-703f-45f6-89cf-5a583788e2a6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a930022-6b5d-4e51-bf3c-8d2ad1d3d1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958d9d0f-91f4-4ffb-a167-56af34fb487e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6fcad5-fe9c-444a-a145-4b92d0e7eecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68657e51-c1e4-475e-baae-f21294593829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932a09d6-cf65-4674-ace2-e44558412881",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2fe438-47c6-419f-b59b-c2e714480a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6378e0fb-7916-43e2-b3a8-0e99227f9e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a345b0bc-5cf2-458e-9f2b-1fe6a410b099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883917ab-fab3-49b0-a9d6-942d46d0e6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5eacd20-a3d2-4361-a1ea-a9c89eb7dd0d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098178e9-f3d4-4052-af20-874faf5094fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eadf537c-75f3-4fce-b12b-40625b3ea693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a898e19-2eeb-4b87-926d-20b9a9ac0dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd85e039-07d6-4cc0-aeae-e3d9f6cf4dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e937ee0-7749-4b66-8e5a-20fcea586cab",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093ce233-5822-4460-9d46-c17fede34fd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba7167d0-5715-459e-a80d-b82e3be89fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2861000f-531b-4e69-944d-ace00beca4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55bc2801-9c2f-4c58-97ed-084af79f042a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8191620-2415-47e9-8dae-1e773a08af55",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77c7247-ac70-40f5-85e3-c8a28c5e413b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce1c205-f8d7-40ba-a9cb-94145d6ecf66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9664e7-7a63-49d7-bb37-3fa59d874d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0d7920-ea55-4e3b-ac01-40a3d2c86709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863c8678-1853-4a78-99df-645558de463d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefbb05e-2aa2-4ba8-9278-af180377bf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26cf6b7-ae56-48c1-bb73-34f47c53593a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de26b2-dd2b-4627-b07d-9cacc0827830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f15c813-b6b7-49c1-9518-d74be022197c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d8b8a6-a653-455f-8aa9-643d3cac2b79",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0988c10-f585-478e-ac57-63ea399c0211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7772b33-0ca5-4e38-b8e0-8d0907d49b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5673164-11d5-44c2-86fb-d55d61bf1614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0029e610-f92e-4032-be8e-4826f36ef2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bff4a6d-cecc-467f-aaf2-122444827c06",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe68097d-9a26-4c57-bc15-d65e9d1825e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b1970a-35a3-4432-8cf9-6ed4cad0b704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f75efb9-982a-4b06-8364-df780edb6df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7f0aff-db2e-4794-ac20-1c75464aa0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4539b6-972e-4459-b9e6-18eca9ae73e1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9288b46-2e7f-4e33-9c27-af72ae5caea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9584856e-6cf1-4de4-8798-f8f2bddc45d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6cbdcb-0fc6-44b3-9311-89f6dbb117a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed279b8a-a016-48f8-bc90-9806d9085465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1d52e2-7227-4646-bb93-b998a94a6f1c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d97adf4-f0e2-4894-b1ce-3bc0373aff3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24db38af-d73f-4398-9f28-e9a5f821f338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca999282-0aeb-488d-a73e-b6a7e9302cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de354a57-1fcc-499b-9bd7-57994d3e1936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bce769-bf9e-4f31-94d9-905825abb3c3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fb5037-7dbf-4634-9b83-a45038e75156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c955c6c4-8d97-4328-90cc-2434c8d2021d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04091da6-ed4c-4069-8383-533542b6f350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4b8a1e-ce16-47a6-bc8c-ccff6346d0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37137f0b-ecf0-4b83-a522-e72a82c75a61",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceafeacd-45a9-48db-b96b-de7bdcd75705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e707e67-84f6-467d-a1b1-15a05762974c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a348cf-4e29-4b2a-892d-b0ca5dea4fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2002e9-142c-4f77-8e50-456cdb8649c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa083559-5992-4a2b-a365-7e89ca6c66aa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7e75a0-a5f0-4c41-bc04-ff9566f4fcbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7074e657-9a92-44cb-b106-5c0a7ca89fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19feee5a-fe2f-490d-89c5-72eb05517d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8fe1c0-aee2-4df2-8352-fb3056439d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96d1594-ef31-4ebb-bceb-7dc7036e7907",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8e749e-aae2-4137-8812-b8462479c651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "678eb005-1959-45d7-817f-fb715e277f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4951fc2-076e-46b4-8ed4-0f87bb7b5bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3593f46e-57ed-4c45-8f7a-7c0b60ee8a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ff6096-00a6-436c-ab3a-0afb735762ee",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0156e3ff-67f4-4a5a-a844-2a83b8533f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d4ba2b-21f1-4d2f-9969-0495e0939df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a44bacb-a2c8-4991-8052-db5faa8fb71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0ec599-25b6-43f6-b74e-c2f406fe8bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfae8a94-01f0-4c5d-8254-d92e00d9934e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5223654f-06a6-44a5-9e0c-383370810672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce851018-10d1-420e-b8bd-6aa17adfd69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6509cbba-a6fe-4828-afb4-b603c63e9d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77d3dc5-30d0-41e5-8993-2af77b5a74ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a7856a-21db-4ab0-8468-92b477f01ca9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c6e0e1-8e20-445f-96c7-fbb9de95cf76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12281696-c826-474d-99cb-a8d8f5d7e5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284fc1f5-7353-4309-a2c0-cb9a4f19c021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24f8b2c-b09b-4d7e-a29d-f74305b4c596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f947d34-ef80-4b99-86ae-1344bab2da50",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e06de4-db0f-4384-9c06-188981efa8ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2f71de-5e5c-43a4-ab80-ded567baed5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82341d7e-db13-4ab9-8037-f4996345378c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43745099-ee91-46aa-8b91-263a0b8dfb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f7f4d9-c104-4c21-875b-d7d6f267e28d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff53bbc-d36c-4f14-ada1-93b7bc5cb8a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197d7bcf-3bd3-4aa9-b471-ab95b7b058b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b167f0-7bb8-4973-9959-6c108c3b143b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d804cc-5746-4db5-affb-6d7a46440a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8065f8d-131e-484a-b5f9-7d10fdbf0a91",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4004ca82-4e42-4433-a2d5-261208474fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdd13687-d1b3-4e7e-9443-c2da1ac01a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf1a827-3854-4cc2-9a2a-8e7b017ebe7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139c8f25-2735-46f5-83c4-4740a5f2b454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f7c013-a909-453c-b195-3a70b72c2d4e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d771ba8-6127-49f0-9d53-774b67ec1708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7934fd2-cc15-4f02-b690-c75034dd0d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53aa336-1bdf-4a41-8d30-3b1f09a70f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fd64e1-e5a4-456f-bc9d-537cb8665880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fb6cff-bea5-46d1-bd93-f59e717429f0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64823ed9-bb97-49d2-840e-83eb70b79340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d806a1-9419-4816-b5b8-f8e85b9ff8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8491fd51-f2ea-4108-b11d-ab43d5c105c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06911e58-29c2-4ef6-bf57-42a17d0f7ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a925df9d-2a94-40f2-89c6-a5f92ffa199c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944650a2-9107-4975-ab95-cd434b1868be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a10a3370-0ac4-4e46-9312-5f4158f1287f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ee8307-f7db-49ee-9ce6-e03924407338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb26f0a-a7f1-41ca-ad7c-18bf289eeb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5955e340-517b-4184-b3c4-88fef7b5b0c3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e188f07e-e0aa-48d4-b7e0-a91e1388c554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bb43f5-bbbf-41df-836f-e12e8bdafc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60998e0-f6e6-4113-931e-39beaf3179b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352a122b-9cf0-4c43-b70f-80183c17aa77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2643593-13a6-4ca2-9f8d-2a206757c66f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4a1c39-8c76-4d8a-a8ba-8ce5f546ef3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cdd478-75db-48b7-a808-74046b3ccb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c123d16-19fc-4741-ba6d-0537e43f885c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a27f006-b7a9-4a4e-9252-4bbc7199891b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcf785d-a195-42f3-aed9-3350ee510a38",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3857aaf2-bd1b-4cff-bb91-1b5a9383ae50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4ed21a-fd3b-4d49-9559-61b5e7a3ffe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17106628-c256-48bf-8ebc-5f09762422f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b4e03f-720c-4da1-bcf3-aaa95b7f7da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8beb5380-41f7-4ec9-9f7d-beb9f7a446ce",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc75748e-e92c-4004-a171-0bcaafca2cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab445fc3-a257-4323-805a-4b433fb03e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e82e22b-7c3a-443a-ae27-bb079b29909d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247b59f5-8183-4646-8775-ed0dccf96a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67eee329-8d4f-4d9a-9dee-c4d8b3299cd4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4972af93-2fbf-4ec5-b7ca-ddef9cb92a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf90351-ac0f-4259-8f7c-880339e0c134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83f8bcd-9e32-4a90-9ff1-30a88251a293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdedc11-cd35-4ddb-8ee7-002f2c48a5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ed67a8-fc8e-4b50-b87d-026d42a03c67",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6481ca49-b1d0-4f69-a8bb-956898295c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fd802e-a861-49b4-9edf-1dd6ba1e3de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955dc4ed-2d40-45f9-8e93-7e984b66d751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a1ca8e-8fe1-417b-90f5-3f70ddd69d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa228ed8-0ad4-4a69-ab9a-f769f6489396",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2119071-3a34-4b50-a18b-1bebe0337cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7609fb01-6828-4644-a817-391a3b0212fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d1a0d6-4c59-4531-87c4-80437c7a643a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e12433-3494-4950-a3e9-3e4ff66f2bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcb5b08-3389-4bd1-940f-6f82bb14f096",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc09ff1-05ab-4ee4-9283-6f039c51ec1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03963683-cd4a-4957-805c-fca5f69260b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589e301b-3e58-49ae-9dd5-a0eadb89e7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53af7f1-e666-4267-b73e-c687ceea9c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631eb168-8e37-4c7b-81b0-fe5af628a2ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9903e79-8d29-4800-a387-525027de3bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310bc67b-0540-47a8-a55e-2d207d54bf60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4892ebdc-56be-457f-91ee-c2426b137233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd7bbe5-73f3-472c-bb31-9f4428fae50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e8a5a4-7780-439e-954d-e16121e90ac3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96d3492-b6ba-4b35-bd4c-416fee329aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd26864-db26-4ea6-8ad8-1f232203a104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf37a55f-f865-4761-8592-2468df2b923f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdccf46b-1354-4bc2-9b39-9e05c832b200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f146afd3-713d-4c2c-b13e-d1be1b4e63e0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1172e5ff-f687-4aa2-8dfe-7f8908addb5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8a8a49-a471-4b93-82ba-dba33907f0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacf25c3-fa10-4aa6-ba47-c7af7487fd96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c54dbfa-24c1-4f73-8feb-6a35171b1df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5bf8d7-ddb6-4cae-a5e7-fcfcdf768e4b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb56bc3e-23ef-4ba2-a794-efdc1985255b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc8ae02-fa9b-40ab-9697-14c264832075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f89667-f723-4e00-bdf9-cc24fc228d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad69aa5-7f44-4142-a541-b0b0d7673a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9fc343-f049-4548-baa0-4fd64d81d70d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841064a6-f2cc-4cae-bc67-359a05815902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b4c198-4c4f-4da2-9372-3cfdb2733389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752016f6-336d-40f5-978b-b669e28e8073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c548cd2b-88e4-4016-860c-8827f15b4d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cab8af-0cc3-48b4-89ee-a6e4ab016b91",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fdfd00-64c6-4063-9c14-22c5e9cc884f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7565e061-7212-4409-9748-bfb1a3d2cf25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83a8310-9747-4d05-adf7-069debd049ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd141ec2-860b-44c4-b25e-f988942a2d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcf8a57-ef6b-49a6-b2c8-731aca3e8aab",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2fae67-4bcf-445f-875b-f1f4b4d813fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930c8364-a5f7-4d08-b390-9e90d1b478e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e72a86-b73c-4f4e-b883-83a4ff9204d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5360b56e-9ae6-41a3-ae01-2ac2d97be8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e37c03-e154-468a-89f1-6eb6f5451b47",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41376d7-c4d5-46e8-ab4f-1adff9307623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41c2f9d-5df2-4e17-81da-49afb823f920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eda4393-791c-43b3-8545-dfe5a46597fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19dda016-0e84-4aeb-b5f9-0e1a4926cb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438f96df-2446-4f49-ab5d-e8f491e24a8e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817a9e4e-279f-4214-9f75-cb356b97f487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbd4f09-77d9-470e-8a19-f9c8dec3d54e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112c735f-dcff-403a-a16e-a5d766fddf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae40de0-1bbc-45ea-a067-1efb4a731355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6518e6dc-af97-4102-8f13-0994932bf5fc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24351220-1845-4c72-9b07-33d0f3f54cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa625ef4-50e1-4cf1-809e-c28c0aa14a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebc15e3-ef1f-4bff-b19b-5d789e377c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71dd20f8-1d43-4a25-96da-ee0544c7533e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f8cd3a-98fd-4dd7-b4dd-a153c2cd927f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef497be4-e583-4e24-86f8-e5c93b5ef2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3861a861-2c4b-4830-9a4c-4e8196282089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e3c3d5-1e02-433b-8e66-16e2c1d0fbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022aceea-9607-4723-9bf3-1168bf57bcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346aa724-b041-4d1e-af27-f13abf8e8321",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ed0855-4fe8-4726-9a57-142e65c6ca97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750799b2-387e-478f-913b-e0f8aa1b32d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff81657-4b7c-482d-8852-124c92a60415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3ff83b-80b8-49ba-bcde-70024e46a1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236474f1-de50-43f4-996e-81cb93fba866",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c168331-bd75-4e98-b333-56a4c5c6796f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9ea905-c46c-480e-a004-8e250f5e8dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a34a9d-ed21-4f41-a685-eafe3f1c59a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12c2c38-eba1-42b8-9bdc-4ffa6f2c7480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a2dc55-b8eb-4838-a59f-254503bc13b2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143fc040-1021-49a2-8bcd-e5b819e97c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138c2525-f074-4a77-b652-0f8b2fab9ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd77966-f84e-4009-9887-e4d28793ff10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7e64b2-dc07-4f85-b6f6-5279371e9057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef44b625-d8fe-476f-91da-7f14e53c8a9b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9912d16-4358-4b19-aa47-5c7a7e3e446d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5dac6c9-efe2-455d-91d9-2159411a054d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9484c4-c82d-4407-b6be-50f9cb238ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9523f76-c20d-46f9-b486-aaf310417f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301ea375-183e-43b3-b86e-852a965c5b7c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a721e8d-631d-42bd-b966-b2980f9758e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed5d586-7403-4fa9-a0f9-7702bd79c01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9ca7a6-7436-4e4d-a526-77d4f7134a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b643753b-ce60-43b5-89c4-7807a7b8b69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566034dc-ad9f-4afc-a732-ac3e5b862b0b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c2ea2b-84c5-4125-b5df-e8046ed58f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcc2ec1-377c-41c6-9d16-49935043ae61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a5d5b7-f386-4e6f-b033-222f6adfc41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a5dca8-308d-4b6a-b08e-389dce126205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca38930-67be-4a6f-b362-5451ffe7e2f7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53af8298-cacc-428c-b616-d53690207552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67cf7ab-4dbe-4210-af1f-349ad603d9c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7590ba-8b00-438b-bb47-e55ff6dbd005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0f6bae-7e37-4b72-9ed2-720ad039dce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c9d330-e084-45f7-ad19-8bba5e667dc9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23927913-8256-4178-a8ff-38b91b77e0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ddf75b-57cd-4276-ae0e-5d09965e5b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e15954e-a329-467e-b0a7-dc341474bc19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0529c7-9ea9-45d2-b08a-5c6a9eae8b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f07d85-f0f0-4f5b-b474-cd137d498808",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a165bf-6637-4145-8c57-e0f097ebdd85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d791fac-2507-497e-a47f-01e19bca1785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d978092a-9fd2-4d3a-b261-4a65a5a6a609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da19cbc-02ac-4cf9-8238-1abce4224737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de27b2fb-615b-4603-a574-10a2e9a1e5cf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8caaea7-478a-437d-b3ce-faf33cc9dcaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090074a3-7cce-437b-a4ba-d470ccea6c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880b19a2-8a6f-4298-8810-f1a00c4116ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af656dd0-3635-482b-a432-3c5a238a7e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39ef935-1a91-4375-a023-9bd767dfa7f8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf159a4-17ac-46a0-a851-993aabdd1100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebc24c69-6098-484b-a477-fa46c7f8edf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850ce766-76c3-4884-a0c8-06cc06a03ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34256a9e-f876-4ff7-8071-5349389c3bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff066f1-ff70-4072-8c88-053ef6c4cdcd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e851102-c402-4347-a6bc-5c8e6ae77e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "005642bc-bc4d-4198-a5ef-75034282c0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43e5f92-c9fc-4ef1-9181-7ff27d0827d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94216429-593a-4af4-9606-82767284fe2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f40e1c-7570-4f39-94e2-c6adc9eea265",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa949e1-3b22-4e4b-a567-263a2cc90cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7acfa7-e3a5-43c8-9e77-361ca0dbf4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bb22f8-36dd-42df-84a5-f8e47eb84e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b8e1c8-2d6f-4271-9b75-5fca7bfc4a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4023b4-d5e1-436b-9526-965de72eae59",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817d5afb-02b4-42c8-b8e7-d458f864cd9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3677bd0-7404-40eb-85e3-13cbb71a3f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3e3ae6-78bf-4104-b540-b10a80415eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec502014-467e-4a03-ae8f-17fce5b67df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d1d5de-dcc7-411d-ba71-c548b7677d22",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a5bf95-86aa-4efb-afd3-b024d7b262cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f744b499-a75b-481f-9d71-957dbed7a001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "453b8659-2925-4229-b71b-9d371bfb7f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f33ab21-45fb-4d38-8075-a3d681983ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb74ee7-33e5-45c1-aaed-a9f1b0bdcdec",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137476ae-27e3-4450-a066-85b528209ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8471db-5b63-4184-a9e5-f141201657bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d200e13c-3911-447c-9f3f-708acb29b3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c321667-82bd-46b9-8a14-90514da6e26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5994f8ea-a791-472f-bade-38005c779817",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534b01b2-4bcc-4b9c-8503-4805aca4e175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6210dbe-3741-44b5-88c6-1decb5fa6d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c535f6-797e-4626-8035-cf821e219e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a7ea8b-7b58-422c-bb2b-6d606d51361e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7c6758-f31d-4963-92e1-e34fcf28dbce",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33887f94-19d0-4c5d-a906-8d91d6ed304d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0efbdce4-940a-474e-b176-0d4074366d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d624ba-f822-40d1-865e-3af5f569aa43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c416c89a-890f-4a14-9222-2a82036d9df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f4fab8-19c6-4dc2-9071-378137d6069e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58db540e-d2c5-41c5-ab32-deec06658888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71cb3f05-ae24-402b-a418-659ace09d329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff0740c-0a99-455a-8960-79f0e2521232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed966ba7-280f-40d6-b867-231402ab7853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5aee36-773b-4efe-8772-dc3bb5759159",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4a6572-5f3e-4ada-bdf5-99aab336f08f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e4a5b1-3686-408f-a6b3-9dc63e44194e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f032a9-b95c-4d73-abad-77f5278aeea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e4a17b-6429-426d-961a-82f5e00407cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42e73fb-33f5-49b9-90a5-e75bc56c6640",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9efdfed-7b51-4ea5-b869-935f9563a3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa04eae-dae0-41e2-ae69-3c56b7b52496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d8961e-4353-49d7-9c0a-13848ada841d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab886cf-1301-42b6-b44c-23638d16d29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85f3b68-8eb7-42dd-bb48-d2e3ac30c5b2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896aba85-ff69-421b-b78a-e7a7326f788a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef38840-20af-488b-b550-c69742453ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed48b922-5b7d-4083-a5c2-54d2fb04d239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b59cb24-6d0b-4a55-8223-77b5ad9fa673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db31aff3-6e64-468e-8c0c-d3321132de92",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ee00b0-85ab-47df-a32c-2107c605e2dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8ec2f4-80f5-48f0-8590-cac53a7b450e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d077a110-7eb9-43d1-8187-f3d0380fd1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550e750a-68cf-4266-a15c-a4dd083e911f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca67359-138c-4f19-8f55-133124b42a07",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe4e534-0a4f-4416-b537-46f8982aaf37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4275ab3c-029b-453f-a684-d3f9ff1583d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9f95aa-85e0-41a2-b691-3235764fc1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2712f40-c167-4aa5-af4d-f94685815bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f4f70d-97d4-4b3a-9192-50a87db60d3f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee14781e-b6dd-49be-b702-137595b142b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2694c0-2a8c-447c-bc7c-d76af33ed39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa07d15-fe00-41fb-875e-cf448cb3e498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e129972-67ca-4e2d-9d41-9329e2888b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcb1dd5-f691-40de-90d7-b4a610969961",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb6c87f-9748-4f4e-90a2-4bf9e09d11fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e02986c-8bb6-4c4d-b060-5a3b9ff9b794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea69c37-d7e6-4c3e-a957-65e38a2f604b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfea3524-82c1-4b9d-ac06-3177ac044cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b82923-dd71-407f-a1e1-b630b3e42f4f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7d938a-3047-4b32-83eb-698bab2847db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33ef3cd9-c35c-4110-a449-8fef5aab228c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a90aca5-a38e-4692-a85f-b70b59493686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28934066-fbeb-44b8-ad32-5d93a2d47075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4542c04e-2710-4b55-a72b-ffae84fcece1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b77c33-3af8-4caa-bbe2-fae0e0ab8c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f1e309e-f59b-4ee2-b268-08b0b00c4f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446ec167-4f9f-443e-a32e-2352d5cd10ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47d3c90-a22b-4429-9ab4-38c84c1712e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067c25eb-10ec-4775-97af-fa3f6eab4772",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6e4750-3c73-4bd3-8c07-c14ae72d6894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5021c876-1904-4c9a-ba48-5e2761f29dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928282f4-2664-4bfc-9cf0-a922adc69765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38c2932-44b3-45d0-8890-fd5a0c7ef44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7543fab0-2125-426d-8fcc-2af91b835542",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299506e4-c833-463a-b3bc-ea91de724131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c90457c6-75a6-46a8-8b32-d58ed04715b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa32539-b88f-469e-a948-b774be7a328a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5f9911-cc5d-4545-b612-d1779d7ff365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da80310-fd9e-48b7-9d9e-7f86048265ec",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99d68ff-a37b-492c-a48e-816ad2ddbeaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c42ae9c-4aa2-48a4-85af-0f49ca10cc53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653a65dc-1401-4ffa-8c18-4298b201b969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b8c5d1-1bfa-48c7-9cb4-cf5132368b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e8f992-f595-4689-b68e-cc95ae944eaa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19945bd-d8ee-45ac-b633-56d23722d696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b97b8dba-0289-4ce5-9372-6a243b2f2669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95589c61-3dba-432b-95c3-7fd53d233f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b880e2f-8d6b-4aef-991a-071e372d95ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b4994b-f848-48fc-a0b5-73b4856ee47e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ff7cee-f38d-460c-8031-e8963b35b053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b97642e9-ce5a-4962-94e3-447c57fd0495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10926881-5c67-4f5e-a700-873052e69be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3eff39-93be-4d65-a518-3548c2669a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418ccb6c-c156-4760-a146-d108fe7cc8a2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d139f5-dcda-4701-83b5-590da95a9a90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fadea41-1849-42ee-861b-946924ac9e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c531225a-a088-4720-a99d-ab24e8f51a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5696cae6-0cc0-441e-9059-b2c8c27c2d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0a01ae-f5c5-46a9-90cb-c17bd89a9e80",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4308274f-ef61-4c69-b4c5-3741b910a42a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870fd0ec-7fa1-4289-87f0-33b83b0fa53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d330fa-329c-4750-92e2-802a76e7eeb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e261cd8-d41a-4bb1-acb4-841b377848b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96966c1a-caac-43fe-a26a-db1d51f792fa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5631cd3b-d0ee-43df-87ea-562578b58338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28adcc5d-a170-480d-9586-f92790b45e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc75d76-35e5-412d-bd52-f4ff45688182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ff1396-b2c3-4a02-8117-a97a56652fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbd353f-b2e7-40e4-90db-0b38cd6cfb0c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc3a508-e185-48e2-8d03-ce25128b844d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38efff9e-bd38-4729-a4f4-cb16d195c26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3597a1a-5caf-4164-b499-04460bcdaf7e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9849cd-e1b6-47d5-b766-4f1044548c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfe3b4f-e602-49e8-80ab-68bb6ce201a9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee2498b-2bc9-4873-9a5d-2cde2e95251c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68616c8a-57dc-4a31-b87f-d71dbecfd8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab5ca1a-3f37-4486-8dd6-90b5588ead3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f4c2d6-dc6e-4f05-8f6b-2790d56b5114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5e378d-03f6-47d1-b1b9-9e089e6f3817",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdeed7f-c3de-4567-a415-bb18e09643f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d68813-f03c-49b7-a495-9b799e74423e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcc6e4b-becf-49c7-ac3d-494e52accb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a640f4c-c5c4-413b-935c-b93e8ccf4094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a008c124-d358-41fc-8e8f-8ef9e2e9f441",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9f9af9-1c84-4a69-bcec-89311857de09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4d3117-49b9-4e71-b197-ceac3d3dae54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb23550-0b9f-4190-8bc6-b3a32033422f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06d4d16-92b4-434f-9901-903f83bd5b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c44232-b9c3-4616-ace3-7bef7bbc2202",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9000d816-43b4-4840-a789-2462b308b687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff1d19a2-a6c7-45b9-92d4-a8f293bfeca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b9bd59-2f3e-459f-a4f8-d9a8b2172bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ec9e58-773a-4a7b-977c-a12bb65a3a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d93e94b-2215-4f39-89ab-0b1b4faabddf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac035da-ef8a-4b7f-a876-4d4e703ee0c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca638c80-d3cb-482a-a82d-d08944be9a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaedd68-27a1-41dd-9d04-a355a5c03113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f664db-83c5-4fcc-b16b-2c6f537bba6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254a1037-67de-46e1-bbaf-e987a7945035",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef614ea2-e2d7-47ed-849f-6fa98bb45e4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b38d7faa-88b1-4e04-8cf9-e56b866b8085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c18260-12cc-4ec3-a9c2-1dc48d2dd110",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a614dfc9-d2a6-48ed-8be6-43298fd8a314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf69dea-7fa3-47b2-b97a-f8513daabf61",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f27275-0856-4856-94e5-bca8760904f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aebc3bf-4758-46f9-9096-083772b2e937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2a04b4-93c5-4dbf-b71f-678c3868c5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d4b91e-4ea1-4a5b-873b-018f398f48ad"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8eaf8dee-30e9-4221-a7dc-bf7e50b80dbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49e5bdb4-8321-4f6d-bcdf-869502646658"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db0d3389-ee2a-413d-9900-039764cd380a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b9d1379-1440-4020-b3a4-920419951bb5"
                    }
                  }
                ]
              },
              {
                "id": "014dce77-c448-4f6a-a1e1-fbdc5a803676",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c1a217e-05c0-4dc5-b248-89ed0187e811",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da29ba19-1bfc-47c6-98ea-82e22374c685",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ddecb116-6123-4542-80fe-3416ba16ec59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acaff5f5-136a-4869-ba43-8b207e85a8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60298ca0-10c8-42a2-a578-04a118957009"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fb5e543-5e70-4631-9b75-9d108d68fec5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc2b9661-ad7c-408e-ba7e-faf14f1bafcf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba0eb9e2-ccb8-43ab-9951-fc5b318106d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2721311-8093-4e55-b5a9-bf9ae2d5c1d1"
                    }
                  }
                ]
              },
              {
                "id": "eb0212f5-63df-40ca-ad99-1c7b9ef085d3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3edc6444-ba9e-4716-ade4-6fb7eca04995",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d962584-d429-4c20-8016-56f9a899b599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fb3cb458-06ce-4a04-b819-0d8ef4ded4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8685bb76-d873-42c7-8791-8ef1c836238e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee05e02-96de-4976-834f-71d5b4e51be5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9abc39e6-4995-48f6-aa7c-b4aff31af0bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ddf8c47-7917-4849-8366-599dbed73129",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e469d135-8d0e-4280-aa22-5563c5a9a56b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba1e8130-68b3-4c41-9f8d-2f610dd61b63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bbb9ed0-0423-445b-bfe3-df59e1a72d52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df8a1f23-1667-40d3-a27a-b2586af3acb2"
                    }
                  }
                ]
              },
              {
                "id": "0bd7c7dc-e4e8-4f90-8981-c8d1276d6437",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a545ea9b-e7dc-4ed6-9c64-74148e3a757e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a8e46f86-1a41-495c-8467-79f0cc666221"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90a08114-c51d-4f69-95cd-e71048ef1918",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06d5e45c-fc4d-4e1f-bdab-64e1dd042040"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bd7644c-4baa-4355-bc9f-f5ec0d28664d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3f638b51-444c-48e1-8f79-ed76fa7d84f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b695b22d-a908-4b07-8734-343d989539df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69adeb4c-f241-4a5f-a589-48390a251f0e"
            }
          }
        ]
      },
      {
        "id": "00b87964-eee4-473e-a2c0-19d309dd5f47",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6efb4ca7-138d-4dd5-8f4a-2c4a248de2d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2f3bf3e-cdfc-4202-a2b7-be3975dbf624",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5505f22d-9571-4f73-9943-b425bcae6b0f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b943f1c-8300-4e40-bacb-149685acbbe6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "842a2126-1ee2-44f3-a412-854c4b185bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc57365-89b6-4d21-934f-c3a1e942fd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2549667e-39da-437c-b47d-420fd2aaa0fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc1dbcde-dd07-4a31-9f94-69ddb8b78d95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05f426e4-36c5-4fc5-be9f-bc9319c35cf0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2b1d601-65f5-411e-976d-5d3c32e290e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a156cc1-6862-41f4-a144-04b2ca9194fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9803d786-d9aa-4823-828f-979c7ff4e099",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "80e4f891-0c2a-4576-86bd-e42b30e1d336"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2d8c6b6-b344-4de8-bb02-68c04d152e2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86cff3f1-a307-4fcf-8634-86c5d0a9349f"
            }
          }
        ]
      },
      {
        "id": "9c5fc026-3828-45f0-8856-bbc621305fea",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "58435154-3ce9-41c1-85eb-81ecdf23f1f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20053fd4-c6fd-4021-a1c1-244ca265f156",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a2208fd-3caf-4684-a499-2106cb2ed9bb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883a709a-fdb4-4062-811b-f7ca7e9678d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "688e57df-e41c-49bb-bba0-e8b4d8d2fe4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6135ad02-61c5-42e7-9af9-aadb63dff476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7285fc3-121a-4115-9a49-f62cf5853f2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7944ada7-374d-4677-8fb7-6063a967800a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f34108e-4a2d-4a97-8db7-6efa1dd84184"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfb97080-4f21-468a-b2ec-fedd820a617e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17e41352-473b-4ab1-88f1-9aad6450f4be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bddbf1eb-43ef-4b34-a338-8ff9f0c01e86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b919ec7-20fa-411f-90e5-2f994505b6e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b451dfa-6446-42a3-9215-cf7b021745be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e929840b-1b39-40a3-8764-fda4dcc2eab8"
            }
          }
        ]
      },
      {
        "id": "a0819d29-b092-4800-95f4-07127e9a786e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d8903baa-e32a-4f2e-890f-7dbd10441c62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d654684-193b-4962-9625-6a161f86ed65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfed8d00-c57b-44ca-bf0a-8ed03626e57c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc2f193-5bd7-4b29-b1a5-81565cc31d55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6bb9a21-97b0-436b-983a-c6a8b639b9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62d78bc-50e0-4dc2-9223-40e9aa11012a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b13f2c73-3f32-4587-973a-08f115b72bb4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb60580a-8cd1-47b1-8f91-c1c33d6e0370",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "319d6385-70b4-419f-a5ec-0bccf11d0ced"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ca8f9d2-c7af-4171-a092-53e2e6a484a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8c53909-c0cc-4b8f-afb7-56c357539b3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7709c85f-18f3-4fb1-ab8b-4e42ff2d56cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb05a5bf-b642-49af-897d-d984d3bce20d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "804f2781-c124-424a-818b-faa1f896ed81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52415d9c-d75d-4515-805a-56d3b76d6527"
            }
          }
        ]
      },
      {
        "id": "6dba4ef3-479b-4b54-9402-c60468230482",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f1b1c94-5948-4b4d-8259-9aa9a25487f1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c578729b-14e5-4c19-9749-d234330292e1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "96771b4c-c31d-42b4-9191-8932e8429f5d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b7c5cf9-3356-4789-9d01-926ff2c112f1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "203d66a5-55eb-4f55-b711-2a976d91ed48",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 99.33333333333333,
      "responseMin": 3,
      "responseMax": 13491,
      "responseSd": 871.6417368737672,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722732223361,
      "completed": 1722732256893
    },
    "executions": [
      {
        "id": "c3c5d129-9a57-4cb2-9198-50a786222da8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "387c29fe-1af8-49d8-ba42-dc93ea4cc0fc",
          "httpRequestId": "71c092ab-479f-44c5-9ef9-a2ed2e6ccee4"
        },
        "item": {
          "id": "c3c5d129-9a57-4cb2-9198-50a786222da8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "96f2885d-8532-44d6-94de-334c329e8022",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "96f0e84f-a34a-4ac4-9cd6-9c5283ca2e3f",
        "cursor": {
          "ref": "decca7b0-7266-4dc8-8747-f4c70b9c9aa0",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "81a92139-d348-4dec-b8b5-be3027204a9b"
        },
        "item": {
          "id": "96f0e84f-a34a-4ac4-9cd6-9c5283ca2e3f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "389c63b5-32a1-4a3e-ba8d-7abb38c7d057",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "38032bbf-2cdb-419a-b2e8-2c9b91dd03c7",
        "cursor": {
          "ref": "7591e21c-f21d-4802-afa1-7b503a29039b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f3cfc630-7113-408e-a7fc-80b198f6130f"
        },
        "item": {
          "id": "38032bbf-2cdb-419a-b2e8-2c9b91dd03c7",
          "name": "did_json"
        },
        "response": {
          "id": "7351b648-75cb-4a60-ad40-3a7aa8c3aca2",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9bad5f-89b8-4683-96fa-ef21e02bf79b",
        "cursor": {
          "ref": "8e9946fd-a06c-48f7-a5fb-7f9e21e7e0c0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2633efbc-b61b-4c61-be9e-08232f4186bb"
        },
        "item": {
          "id": "6b9bad5f-89b8-4683-96fa-ef21e02bf79b",
          "name": "did:invalid"
        },
        "response": {
          "id": "d814a9d7-d6ea-43ff-b48a-aa0713a43890",
          "status": "Not Found",
          "code": 404,
          "responseTime": 229,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9bad5f-89b8-4683-96fa-ef21e02bf79b",
        "cursor": {
          "ref": "8e9946fd-a06c-48f7-a5fb-7f9e21e7e0c0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2633efbc-b61b-4c61-be9e-08232f4186bb"
        },
        "item": {
          "id": "6b9bad5f-89b8-4683-96fa-ef21e02bf79b",
          "name": "did:invalid"
        },
        "response": {
          "id": "d814a9d7-d6ea-43ff-b48a-aa0713a43890",
          "status": "Not Found",
          "code": 404,
          "responseTime": 229,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a882d9ae-4653-422b-922b-92e8e5db9054",
        "cursor": {
          "ref": "0b7ee159-befe-46d7-8375-65d9df667511",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bee68bc9-660d-4283-bb99-774f271fd3a0"
        },
        "item": {
          "id": "a882d9ae-4653-422b-922b-92e8e5db9054",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "43a76552-86f9-455b-9194-a4e4fdff8f0c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0279b30-cc03-4be0-94f4-35a779176e44",
        "cursor": {
          "ref": "c030ce8a-f88f-43de-93f5-293783956079",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ddbc30bf-adab-4504-a155-b19610f69223"
        },
        "item": {
          "id": "c0279b30-cc03-4be0-94f4-35a779176e44",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e70d213b-d7ff-432c-96b3-14e73030bf48",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fea620-3dbc-4a2b-be68-90d11de7461e",
        "cursor": {
          "ref": "64603e39-7e57-4cb2-b609-b1a34779f275",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9b039a92-cadc-4ad6-839c-d26a93f4625d"
        },
        "item": {
          "id": "77fea620-3dbc-4a2b-be68-90d11de7461e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "60a2dcca-af2c-417a-ae02-700d18e395d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39271990-4a7c-4c4c-b5c8-4ac3c5d0c802",
        "cursor": {
          "ref": "f82b76dc-9e17-4b30-b729-7958ee737917",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "626761f1-e91c-4d39-8bf7-60601adf463f"
        },
        "item": {
          "id": "39271990-4a7c-4c4c-b5c8-4ac3c5d0c802",
          "name": "identifiers"
        },
        "response": {
          "id": "257269ae-2992-48f8-8624-03e79c2006bb",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f854a92-94b3-48a8-a0d9-826ab8297b61",
        "cursor": {
          "ref": "3b0fc943-2e2f-4f43-8d27-a0929e094a98",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "acb6f031-43ca-460f-be57-2dca0c9c3c9e"
        },
        "item": {
          "id": "1f854a92-94b3-48a8-a0d9-826ab8297b61",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "64ef063d-034d-475a-9112-4ea5f6c91edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ca1700-cdb2-4ed0-8d30-fb46c9f5d85d",
        "cursor": {
          "ref": "e15f5822-5f07-47c0-828d-497c70686307",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "104dc70d-dda4-443c-b040-148bf6bc85ef"
        },
        "item": {
          "id": "e9ca1700-cdb2-4ed0-8d30-fb46c9f5d85d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8ea98152-349a-45e3-9127-710459c8c9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d0f5ba-bc6e-48c1-bffe-06570d0e0d5b",
        "cursor": {
          "ref": "b840904f-ea84-4610-a189-bd7a5e3bceec",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "95dbeacb-84c8-4335-b747-e0864b047ccb"
        },
        "item": {
          "id": "61d0f5ba-bc6e-48c1-bffe-06570d0e0d5b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "42043cee-cf72-4b60-965c-28ea10f3e400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e44045-f849-4cd6-b9eb-41b913097bcd",
        "cursor": {
          "ref": "8ffda234-b9da-4638-965a-499c95852029",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "033f0037-77ae-4592-84b0-57bef3162db9"
        },
        "item": {
          "id": "b4e44045-f849-4cd6-b9eb-41b913097bcd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "45e69fd2-df2a-4629-9e21-de96e17afd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120d101c-f591-46c3-98ce-0583701a3e58",
        "cursor": {
          "ref": "79b066a4-cd7b-43d3-b75f-4edeb684d20b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "22244097-69b1-4c44-8cdf-e766c8c24c6d"
        },
        "item": {
          "id": "120d101c-f591-46c3-98ce-0583701a3e58",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3f91ee1c-83d0-41a4-8668-aa55c2522cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46b592c-e2af-47ee-90d4-82f1567c1e23",
        "cursor": {
          "ref": "8f6162ca-d255-414b-bae6-7bfb9b9feaba",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4b38a434-f81e-4a15-ad99-e4286a19a580"
        },
        "item": {
          "id": "f46b592c-e2af-47ee-90d4-82f1567c1e23",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a446b804-621e-43c6-b330-1e937463c271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de851ec-b1c5-4615-b160-aa656d5df1ea",
        "cursor": {
          "ref": "41eef8cf-4bb6-473d-82cd-8665f2ac633f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "900caa60-7d73-4b31-9b61-18b9dce1608d"
        },
        "item": {
          "id": "1de851ec-b1c5-4615-b160-aa656d5df1ea",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "251138c1-e401-4d68-8534-91cb585cf6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a41a26-5fb5-48f2-9f09-4aef30d55c8c",
        "cursor": {
          "ref": "80846d28-2dc0-458f-b512-4ff1ff934a11",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1b517e5b-4f36-413d-9a12-4c54c326221c"
        },
        "item": {
          "id": "c8a41a26-5fb5-48f2-9f09-4aef30d55c8c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a28a77c5-40d6-4429-b88d-b97cdc661fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538d3cc8-a6d6-45e4-89f4-ebaae84016a0",
        "cursor": {
          "ref": "857cf67e-2b0e-4872-b9a9-17506ab26abc",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a9a582d6-60ee-42d4-b315-a9fa46aee16e"
        },
        "item": {
          "id": "538d3cc8-a6d6-45e4-89f4-ebaae84016a0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "61fc0ec0-e9e1-4a18-90fd-2c0dc5fa050c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830d2d69-98cf-45c1-be89-d907f2b56ef9",
        "cursor": {
          "ref": "632e1ec9-5e7a-4e54-8915-579f792ee30f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c9ad2132-961e-4b53-afda-3e55f7634c33"
        },
        "item": {
          "id": "830d2d69-98cf-45c1-be89-d907f2b56ef9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bb8ac9bc-e962-4e09-8c6e-ac28cd26e2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4bcfd6-122d-4e19-b8d0-5e1f34308aff",
        "cursor": {
          "ref": "04125d8c-6049-41d9-877c-10c554cb08c3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "59ea8238-0275-4927-9686-82975725599f"
        },
        "item": {
          "id": "5f4bcfd6-122d-4e19-b8d0-5e1f34308aff",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a96dc8cc-bb1f-41a5-b2f0-0e88c5aeaceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d91e184-cf26-4295-b3e4-e0359210db7b",
        "cursor": {
          "ref": "381962a5-33fa-4ba9-815e-401247051e0f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a4d97dab-644f-4cc6-9d96-032ad7849e71"
        },
        "item": {
          "id": "0d91e184-cf26-4295-b3e4-e0359210db7b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bd35d563-f9ad-480d-a42f-bdb94becd3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79c96ed-9e98-4c36-809d-c2f144bc8a0f",
        "cursor": {
          "ref": "9d0b0642-220c-40ca-835f-a4c9d82a59b8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e79b56ae-0f1a-4be2-b333-9da362f869f5"
        },
        "item": {
          "id": "f79c96ed-9e98-4c36-809d-c2f144bc8a0f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "23d81ca8-f294-4fc1-989a-d2b83740e15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823ea396-1076-4452-b1a7-890693d23d5b",
        "cursor": {
          "ref": "23830287-8c9c-4262-aa60-07537f85df07",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f2bab18e-6bc2-49c0-a728-95fb42725d3e"
        },
        "item": {
          "id": "823ea396-1076-4452-b1a7-890693d23d5b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c48f48ef-65d1-436f-b1d6-b8b811424409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5a423f-1d17-44d5-a2b8-980808df9f8d",
        "cursor": {
          "ref": "c8985fc6-dab6-44f8-bb9e-d1c7f30d8f81",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "abdf40a9-6fe3-405a-bf16-aee31674bba5"
        },
        "item": {
          "id": "cf5a423f-1d17-44d5-a2b8-980808df9f8d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "454a833e-2d4d-458d-876b-71071bc4ff02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9825ad-2754-4d68-842f-647059e14999",
        "cursor": {
          "ref": "3c1d9936-ee2a-481a-bfff-7533eaf1db4b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1f2100a6-3e30-4a43-9891-36dcc8a525db"
        },
        "item": {
          "id": "6d9825ad-2754-4d68-842f-647059e14999",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3ee83eda-eb9f-4e52-9692-1910392bab74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a685a508-9270-42c3-804b-ce3dfc5bbc27",
        "cursor": {
          "ref": "51e21b42-5b6f-4905-a605-8b0c67b45a7d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5845737a-3073-4697-a7f2-a51ecd780cf7"
        },
        "item": {
          "id": "a685a508-9270-42c3-804b-ce3dfc5bbc27",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f4a30c6b-5dd5-4687-9e3f-af49bf196455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961a87d9-d951-4afc-bc99-4ad11e21823e",
        "cursor": {
          "ref": "0629e055-cc8a-4daa-adc1-0a85184faeb0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c5398666-a4cb-45b4-82c6-fe42534f91b1"
        },
        "item": {
          "id": "961a87d9-d951-4afc-bc99-4ad11e21823e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7b534cc8-8325-42ea-93f8-569fa39b217b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52329290-1099-493f-ac62-82e41da1f5a2",
        "cursor": {
          "ref": "24b25ff0-c18e-40fb-aa39-c1d54c500bb8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "370fdbb5-8ea1-46fa-bd4b-e607d8c40ad2"
        },
        "item": {
          "id": "52329290-1099-493f-ac62-82e41da1f5a2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "29403a5d-18f5-44a7-b66e-208da314fcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d60f07-c1e9-4f8c-87f0-0b4de1681502",
        "cursor": {
          "ref": "8a2d68d0-eaaf-42f5-a918-624f2822ff56",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ce8ef174-8eea-42c3-aa63-92a2b0e682a9"
        },
        "item": {
          "id": "28d60f07-c1e9-4f8c-87f0-0b4de1681502",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ccc96e07-f8b7-40ce-9106-04a0636c4d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cda5fa-1a94-4326-b711-39c97e2ff58d",
        "cursor": {
          "ref": "4a822e55-11b8-409a-80fd-43caab3d7612",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b95d90fb-2ff2-4853-ad5a-d700f7c2cc4b"
        },
        "item": {
          "id": "17cda5fa-1a94-4326-b711-39c97e2ff58d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "aa3508d5-a018-459d-ab64-799947b05147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18e9454-1b3c-472e-b295-a583d4db4db8",
        "cursor": {
          "ref": "77146952-2bba-4925-9972-f87e91f5fe77",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d20838c8-093b-4ad1-b49c-a513e841ec07"
        },
        "item": {
          "id": "a18e9454-1b3c-472e-b295-a583d4db4db8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0ebfc4e6-da44-4e75-bc38-eb010ca1628e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674fc1cd-7a28-40ba-aacd-806148edeb2d",
        "cursor": {
          "ref": "53918a7c-b0a4-4f2c-93a2-09f2c8030dbd",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8ab6981d-4305-4faa-8198-f1faf7996b0e"
        },
        "item": {
          "id": "674fc1cd-7a28-40ba-aacd-806148edeb2d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "39f98f31-0b00-4ff1-aa37-c6b9eff985aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bee8f9-f083-4377-be79-d962f7f8c511",
        "cursor": {
          "ref": "f20af7ac-fa50-434d-ae42-2efe121b7fae",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "79d2c4dd-0073-476f-bb42-f779892d9499"
        },
        "item": {
          "id": "e0bee8f9-f083-4377-be79-d962f7f8c511",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "06a69455-8d6c-44cd-9688-1fca77fcb571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e41400-4bab-4ed8-abfb-d8b8644f66f0",
        "cursor": {
          "ref": "9cae7c63-86a2-4f05-be5d-b449560b455d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d7146350-8856-417f-ad3e-3bc46347b7a7"
        },
        "item": {
          "id": "96e41400-4bab-4ed8-abfb-d8b8644f66f0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2e6a0812-3946-4187-b334-19d4122f83d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfd9512-10fa-4ec5-8523-da44e7ad8717",
        "cursor": {
          "ref": "35eea5ac-7ef9-44a9-9ffc-9331f72ffcb9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c0f80d9a-6133-4e98-962f-36261dc475d9"
        },
        "item": {
          "id": "cdfd9512-10fa-4ec5-8523-da44e7ad8717",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ae391a0e-88b9-4c10-9211-14d6a3b4067e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5935752-9a0f-435c-9676-18c867603e96",
        "cursor": {
          "ref": "a0f4a0c6-03c7-4c22-af21-e7ce590752cf",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d2b053e4-a51a-4b95-bd12-d598193fb25c"
        },
        "item": {
          "id": "f5935752-9a0f-435c-9676-18c867603e96",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "55c807f6-0e60-4132-941e-51e917f2b85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9204e41-44df-4fce-9c47-0289e42d3188",
        "cursor": {
          "ref": "b516b00a-f08c-4649-985c-4c14559a3050",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e3fc5b69-acd4-4864-95bc-bdb1d8672bcd"
        },
        "item": {
          "id": "d9204e41-44df-4fce-9c47-0289e42d3188",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "71dd9d28-79e0-4cfd-837d-2a3d38a6c9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff31102-07d1-4956-a56e-dff8c2d21a4c",
        "cursor": {
          "ref": "90643d03-5b69-4ec6-ae99-d95e43c37687",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cdfe59ec-3c80-45ca-8ec0-4b5b8a0819c4"
        },
        "item": {
          "id": "8ff31102-07d1-4956-a56e-dff8c2d21a4c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "906c373c-6683-4f36-88d7-58f43f711e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36736f2-b39a-4b27-9761-7e5162c39d9b",
        "cursor": {
          "ref": "458e1e09-481b-42a8-86ff-280f8870d4fd",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ced50190-a0fb-48fc-b923-8950ac4535a9"
        },
        "item": {
          "id": "a36736f2-b39a-4b27-9761-7e5162c39d9b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d172c9a3-937d-4ae9-8fee-dc1dd44caf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d8b4ed-91e5-4b0e-9e43-03b023846f16",
        "cursor": {
          "ref": "4db27400-999e-4116-9167-c76dea1eb789",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "118096c9-ac8f-47d8-8b5b-9e9a8320c126"
        },
        "item": {
          "id": "35d8b4ed-91e5-4b0e-9e43-03b023846f16",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "40f9fa35-697c-475b-876b-0ae611e555fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2ce14a-68c7-40e7-8641-70185b9c0d7e",
        "cursor": {
          "ref": "802a3b51-6286-43f4-9614-912d4fa9a136",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5d33ba31-febd-44f6-9995-454ec7027da5"
        },
        "item": {
          "id": "ed2ce14a-68c7-40e7-8641-70185b9c0d7e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "25cc5813-ba10-459c-a92a-27db4b2a0a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46d069f-2fbe-44b3-9e50-d18d052cbb8e",
        "cursor": {
          "ref": "5b8855d7-57e0-4660-95d7-2eb21a5cfa02",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eaa9d11e-5f4f-4e63-b147-deb46faa14e5"
        },
        "item": {
          "id": "a46d069f-2fbe-44b3-9e50-d18d052cbb8e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6b526609-9215-4c9c-8066-2362e9df75d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4633ea-17b1-45ac-acba-b2f1a0e2f45b",
        "cursor": {
          "ref": "3a0858c9-ae3c-460c-a253-fe7102e18f79",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "eebf6c9f-3cf0-4ad4-8b2d-d0dbfe8f664f"
        },
        "item": {
          "id": "cb4633ea-17b1-45ac-acba-b2f1a0e2f45b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a15e8e8c-1012-4540-b39e-4d1fb5492ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8050b550-14ef-41c2-a5b1-c2f31f198d12",
        "cursor": {
          "ref": "bcd79821-cd96-4240-8a71-b326cbdf1f1e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9cfe2273-0bb6-438c-8648-f7a16abf4b11"
        },
        "item": {
          "id": "8050b550-14ef-41c2-a5b1-c2f31f198d12",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d542f75e-d8e2-4efb-8d7c-a2d44458b7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456b14c3-be36-402a-bd63-aaf7a7d67694",
        "cursor": {
          "ref": "0e6d7d01-4ace-483c-86cb-72a084fb5807",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7313eb51-f515-40f2-95ab-6d2cc4559028"
        },
        "item": {
          "id": "456b14c3-be36-402a-bd63-aaf7a7d67694",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fbd8930c-b2a6-4396-90da-647358b0bde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7dcb23-e077-464c-a2a3-e0aaf205ed0f",
        "cursor": {
          "ref": "51568490-0859-4f32-8bed-416233390d93",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "12828e9e-4640-4c5c-91c1-49b4ff009e36"
        },
        "item": {
          "id": "9d7dcb23-e077-464c-a2a3-e0aaf205ed0f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b29b07c4-31f2-41b2-8169-40684ee05aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224007c4-da91-4212-807e-5cf7602b4a78",
        "cursor": {
          "ref": "19bb3f5e-0e16-41d3-b8d7-0f827f9e4999",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "02a6d766-f422-4ca9-b594-5145e437e584"
        },
        "item": {
          "id": "224007c4-da91-4212-807e-5cf7602b4a78",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "512e4985-47c6-455d-a831-7968e8169019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3a3a20-f895-4418-afff-1376b244c9db",
        "cursor": {
          "ref": "edfac0be-60b0-40e2-95bd-ba2e1986f0a7",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "36e9975d-611c-4772-9c8a-5173852a9b54"
        },
        "item": {
          "id": "5e3a3a20-f895-4418-afff-1376b244c9db",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "643a9a83-c97a-4913-a732-7d0cd3cf989c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460f087e-4aea-4659-8351-d7f96270d909",
        "cursor": {
          "ref": "4e0d1df9-376a-455f-a51a-7588ffd40efa",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "12c13374-31c8-4bdc-a2ab-548028e85892"
        },
        "item": {
          "id": "460f087e-4aea-4659-8351-d7f96270d909",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "de58e1a8-e2cf-4714-86ba-d32e0c07cf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d577bb-2f66-48ca-9f37-65563c7b8f70",
        "cursor": {
          "ref": "2adf2432-9b92-486b-b714-0fed8e214575",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "849887e6-0175-45ce-81ff-e96d0c8d8959"
        },
        "item": {
          "id": "a2d577bb-2f66-48ca-9f37-65563c7b8f70",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a25901cf-518e-4288-afbc-b1b4847f689d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8f0595-e71a-42b3-9cd2-336f7675ca6d",
        "cursor": {
          "ref": "089d661a-cafc-4f9d-bf4e-7e3c669d43e4",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8641ea65-f6db-4cc4-be30-810a1831d8ab"
        },
        "item": {
          "id": "df8f0595-e71a-42b3-9cd2-336f7675ca6d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1dbdaa91-fc4e-454c-a114-c8fc946cd9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c67998-7169-49c1-99e8-0f61f5324d97",
        "cursor": {
          "ref": "c547d1b1-c84c-40f9-9857-2d05436ba475",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e063a115-8181-4027-b647-b2e9d59ba4ee"
        },
        "item": {
          "id": "b0c67998-7169-49c1-99e8-0f61f5324d97",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0f87b2c0-5119-44e2-987b-4264a726a208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5636f0b-96f1-476e-a899-128eb4d028d9",
        "cursor": {
          "ref": "425d4726-2173-4aad-baf3-0c312e7e3179",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b6811d6d-b6f4-4554-a50e-3b0eb35b041c"
        },
        "item": {
          "id": "a5636f0b-96f1-476e-a899-128eb4d028d9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "02eea027-ceeb-478b-9e8d-8079c4573cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b784d78c-392b-4eee-934b-c84903414690",
        "cursor": {
          "ref": "23152409-9f56-4890-ae60-e45b5daac5ef",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "45b3e71e-a494-4f07-97a9-e05016ff9fd4"
        },
        "item": {
          "id": "b784d78c-392b-4eee-934b-c84903414690",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0b212b86-3a78-442e-a9e3-35d2d8162db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bf60d4-02df-4d13-97bb-777b8d37264d",
        "cursor": {
          "ref": "b31c37c1-2d8f-4545-8d7e-32a41ab3a6f1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7695944d-bcc1-4b94-be2f-b04f785af388"
        },
        "item": {
          "id": "22bf60d4-02df-4d13-97bb-777b8d37264d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0092d3e4-3e92-45e3-818d-a1699a1171a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2158f56d-da37-45c2-bc31-1c070737b29e",
        "cursor": {
          "ref": "d29498ac-228e-48ab-ad39-c701566f8e05",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1dd0a51c-d5f5-4d2d-8e6e-f8f2a22f995a"
        },
        "item": {
          "id": "2158f56d-da37-45c2-bc31-1c070737b29e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "576770ce-c853-454e-aacb-f9c495fbbe6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516a3277-711e-42ba-9e40-d340faa5317c",
        "cursor": {
          "ref": "38bb1c21-4255-40fa-b2ca-857d1f88d353",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9bfcf388-91fc-44e8-b93d-cd6bbde13872"
        },
        "item": {
          "id": "516a3277-711e-42ba-9e40-d340faa5317c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "afb7f673-c973-40f3-a766-8896baa98744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d236bf4-a117-4924-a319-bc4b93a4b20c",
        "cursor": {
          "ref": "f8c3a357-f56c-4266-bfec-4144b82cf7a7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d1315cd8-a04e-4643-bf8c-3e5c4e0ebceb"
        },
        "item": {
          "id": "2d236bf4-a117-4924-a319-bc4b93a4b20c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "84b7fe8a-528d-4011-b8f8-e35564d53b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597b3a81-a27f-4dcf-a1ce-033bffac75de",
        "cursor": {
          "ref": "276cd6e5-b9d1-451a-854b-cfec0df6da50",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "07d4e14f-c6df-4bd0-94af-15aa3f9b7910"
        },
        "item": {
          "id": "597b3a81-a27f-4dcf-a1ce-033bffac75de",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e91eaae4-1421-4aa5-923c-bc0ea0065b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59a1c37-cc88-4798-b324-7052dc8ba704",
        "cursor": {
          "ref": "aff667c9-2f0d-4178-90f1-d2087437cdf9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0c253be7-56f0-4bbc-95e2-ba223d1e70d0"
        },
        "item": {
          "id": "a59a1c37-cc88-4798-b324-7052dc8ba704",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ffdc678f-daab-4f34-82be-8f5472df662b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb27de35-df5b-4b81-9e49-34b9338e152c",
        "cursor": {
          "ref": "4da4a25a-205c-401e-9504-d787a7727540",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1fb41bfd-1a46-403b-a1d5-2873785dec70"
        },
        "item": {
          "id": "bb27de35-df5b-4b81-9e49-34b9338e152c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "11a4deae-9825-40a9-a4e0-5583bb74bdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a814f6c5-7b33-4316-bee2-399af14b7708",
        "cursor": {
          "ref": "b7eeb0f7-46f6-4b6f-810a-481c78762ff8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "66263c15-e6fa-4233-9479-248a84fbf216"
        },
        "item": {
          "id": "a814f6c5-7b33-4316-bee2-399af14b7708",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e420db5a-57b8-4f0a-ad19-1e00ecdb0097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d7926e-63c4-47b2-899d-977d5efa136c",
        "cursor": {
          "ref": "cce782a0-9c7d-4b70-a875-1832c845710b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "69e74403-7897-4b4a-a503-a7002bf59094"
        },
        "item": {
          "id": "f0d7926e-63c4-47b2-899d-977d5efa136c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4dd741f4-af3a-4a81-bf73-f66251278678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448004a0-9d41-481b-aff4-bb3e8e5b24d7",
        "cursor": {
          "ref": "eebcfbab-446e-483b-9993-36eba8938ea5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7275a6af-585a-4fff-8fa6-5e5b9184cdd3"
        },
        "item": {
          "id": "448004a0-9d41-481b-aff4-bb3e8e5b24d7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a6ffd227-5bf8-4638-83f4-fd03089a2504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe40e09-2f69-4e8c-834a-d97576f1475b",
        "cursor": {
          "ref": "c012a265-7926-49b1-ac46-0730a96b6d54",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c8a0c600-f438-4067-8cad-059e9b438c4f"
        },
        "item": {
          "id": "afe40e09-2f69-4e8c-834a-d97576f1475b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f69cb794-9ff5-43be-91b9-4a551e85ddb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f746aaf-ca1d-4550-a3ec-db3ac25389d1",
        "cursor": {
          "ref": "9f3ecb96-84a8-4a83-a62d-e3bad51df7ad",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e812752a-544a-4978-9c85-8a238e13dfaf"
        },
        "item": {
          "id": "3f746aaf-ca1d-4550-a3ec-db3ac25389d1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8beca8a1-6c90-442c-937e-92fd68ab8716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157f8e73-55a1-4564-974f-fb1209313200",
        "cursor": {
          "ref": "d9864f1c-eb66-4f2c-b24f-c26d4cc8906f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d629f985-4abf-4d35-9e8c-451188e7dfad"
        },
        "item": {
          "id": "157f8e73-55a1-4564-974f-fb1209313200",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "042c3633-7ca1-4a2b-b491-2c60ec152fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6243d6b-eadd-487b-a6df-4ec52028a560",
        "cursor": {
          "ref": "03e985a2-4181-4ffc-a3cd-fda2b82cc385",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7bd4c35e-4a86-4a66-9e91-40055b62aa6c"
        },
        "item": {
          "id": "c6243d6b-eadd-487b-a6df-4ec52028a560",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f0539976-ea80-454b-868b-f6c787b55398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab7d3ef-7679-4d7b-9016-3d0be0aa6e0d",
        "cursor": {
          "ref": "68e0006d-09c9-425e-a25b-60230f778ea4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fdada6a4-f65d-4a64-950b-1b5475fac3bc"
        },
        "item": {
          "id": "2ab7d3ef-7679-4d7b-9016-3d0be0aa6e0d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1007d379-5e96-4193-99e8-493fc3e92bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f64e475-51d7-4b88-b285-8505a2a91f80",
        "cursor": {
          "ref": "8290cd08-04fe-4760-8040-86382526d536",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "be7d8c0b-2913-4231-98b2-fe497c4c58a2"
        },
        "item": {
          "id": "6f64e475-51d7-4b88-b285-8505a2a91f80",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4fc14190-1cf2-48fd-b324-6a08d910f7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205a966c-2c66-4639-a3f3-8864bdb3482b",
        "cursor": {
          "ref": "06e86af7-1e77-4895-9e0c-42a3a2be9cb6",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ba1200f4-5d83-4780-8bed-f70e0000aa31"
        },
        "item": {
          "id": "205a966c-2c66-4639-a3f3-8864bdb3482b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6af82493-bb56-45cf-8ebc-bd36430fd43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143d697f-6b45-438e-90fe-f638a6151253",
        "cursor": {
          "ref": "4ab3db20-d133-4203-92eb-519fdebd9eb4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d1514c85-8edd-4abf-8b43-337835ee2c18"
        },
        "item": {
          "id": "143d697f-6b45-438e-90fe-f638a6151253",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "82e95ac0-55ba-499c-9bd1-72ec51baca2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690ef812-2533-4e62-913b-7b39e72136b8",
        "cursor": {
          "ref": "a7007f7d-9217-4f09-9505-edc71dfdb1c1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1ff6b071-08b3-4c9f-b2f1-a5daecf4b79f"
        },
        "item": {
          "id": "690ef812-2533-4e62-913b-7b39e72136b8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e893c5ba-9c51-4bf6-8859-7241c7326462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd76285-9718-40c7-a1e5-80be72774091",
        "cursor": {
          "ref": "d5b0c739-c389-4356-9de8-d08f85ea4b2b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f72a4ed0-c5b3-4dd5-9985-63577d2dae17"
        },
        "item": {
          "id": "9cd76285-9718-40c7-a1e5-80be72774091",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b5f9400f-23c9-40db-8a89-c8de09ca72c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f577118-e945-4935-a14a-fa39356c0751",
        "cursor": {
          "ref": "e15160c5-50b1-441a-a75d-6a73f2b83c1a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cc91f94a-8637-4946-9c75-e8135feb528d"
        },
        "item": {
          "id": "5f577118-e945-4935-a14a-fa39356c0751",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "202d3f81-6f92-4439-896f-e8896617ae09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b435876a-cec5-4f6a-bc28-09ae422eb689",
        "cursor": {
          "ref": "bf2f7d86-36d3-49a4-914c-e563caf70217",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2c8ed0b9-e447-406e-ba8a-487ea3bf1805"
        },
        "item": {
          "id": "b435876a-cec5-4f6a-bc28-09ae422eb689",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "66ccbda3-1f55-46c5-b5a4-0e496246d12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fa1d0a-0dc8-4fe0-8f42-e345c7c80e13",
        "cursor": {
          "ref": "2135f693-95be-44f9-ba7a-435fd7685113",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7c6e83a9-83f3-403d-8dbb-d9d1cd7af82f"
        },
        "item": {
          "id": "53fa1d0a-0dc8-4fe0-8f42-e345c7c80e13",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ac67d9d9-dcf2-4642-8a28-bea22aa36025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce220a86-c014-40ea-880a-ee7f3eedc56d",
        "cursor": {
          "ref": "de298cd5-4929-4672-9d96-4d6bd7e51825",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2a3c59c8-54bc-4994-8ca6-7133edef422b"
        },
        "item": {
          "id": "ce220a86-c014-40ea-880a-ee7f3eedc56d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2e122c62-75a8-4406-890e-a4da5134deda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23db834-db7c-4d82-9e1b-1d3555e854c1",
        "cursor": {
          "ref": "0adb9ab3-c152-4668-87bb-d54a96fa12ac",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dcdd68ac-ada9-4d33-9227-48015d9b2a13"
        },
        "item": {
          "id": "f23db834-db7c-4d82-9e1b-1d3555e854c1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9dd12a74-6116-44f4-b70d-d25422cdc81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c5eb2d-4557-4b21-9c26-a54493b4269c",
        "cursor": {
          "ref": "91bc4566-6059-467c-979f-ac6b2abce784",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e8eb7b2b-76d4-43d6-9bde-f11fc844c50a"
        },
        "item": {
          "id": "f6c5eb2d-4557-4b21-9c26-a54493b4269c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c07f73d5-5cc4-4f7e-8e8f-3e9709b35f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982d0190-073f-4595-9648-06c637c1c105",
        "cursor": {
          "ref": "0b1b8847-3e76-4e6b-997c-5390708ae8c2",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "df8704ca-6fd7-42c5-bf31-933ab59bb9e9"
        },
        "item": {
          "id": "982d0190-073f-4595-9648-06c637c1c105",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8368a8cd-ed77-4229-af7c-1e9c9a596e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8d5ff1-eabf-44e5-9f4a-76a42bdde198",
        "cursor": {
          "ref": "b76178a9-7bbd-4cc8-8556-7b36c825016e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "87b423e0-0e52-498a-88fd-ee37d425f6e2"
        },
        "item": {
          "id": "4d8d5ff1-eabf-44e5-9f4a-76a42bdde198",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "93744e1a-9e17-4f9a-b0ef-d4fe06959af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d529f71-184a-442b-9dcb-7d631b523de1",
        "cursor": {
          "ref": "b2cb7e8f-ec80-49d2-8ca8-ce6929683852",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d5d14680-142c-4eea-a3b2-10fc26bbae3f"
        },
        "item": {
          "id": "3d529f71-184a-442b-9dcb-7d631b523de1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "791fed01-4a35-4927-9c0e-e3752b312fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdb1a92-86d7-494b-9cc0-27e060ad0e8c",
        "cursor": {
          "ref": "dd1f9eb3-bea9-45d6-9473-6ea3b7c0eed9",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "869342b7-fafd-4545-b8fe-7616b1713c3c"
        },
        "item": {
          "id": "2bdb1a92-86d7-494b-9cc0-27e060ad0e8c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "00b235fc-2a9a-4b92-a00c-4bfe7f079fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba857a3-9e05-4f87-8c7b-041bde4e8818",
        "cursor": {
          "ref": "c7bbd6d1-7ab5-4c84-b056-e8ee3d95ee53",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "de1354ad-34d6-4466-9519-a0f918fa7ddd"
        },
        "item": {
          "id": "dba857a3-9e05-4f87-8c7b-041bde4e8818",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6e99ee53-5757-4e5d-a6c0-b73938049027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10592aa-de5c-4ff3-bef1-d850539a80ce",
        "cursor": {
          "ref": "04caaf73-cdba-45e0-a5c1-6c6b483b00c6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0f6b6079-9bd2-4d9d-9385-75a0c73cc1ea"
        },
        "item": {
          "id": "e10592aa-de5c-4ff3-bef1-d850539a80ce",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f8101313-bfdb-48f7-af42-c39d3fd2b5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cdef95-f663-4b68-a7a7-b794c86d75e3",
        "cursor": {
          "ref": "0f8ab32b-afc0-4760-a596-47163d95bcb2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0449ddd7-f88c-41ed-b3e3-b97aaf3670df"
        },
        "item": {
          "id": "17cdef95-f663-4b68-a7a7-b794c86d75e3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a6f492c7-9290-415f-9c33-81e266aa3f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739188c7-dfa1-4e05-b282-934fb116a3c2",
        "cursor": {
          "ref": "8b8a8290-7cb0-47a7-88d0-69d2c5b3a0d5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9c4010d2-ebf2-4a16-870e-0b9032ba55a1"
        },
        "item": {
          "id": "739188c7-dfa1-4e05-b282-934fb116a3c2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f51c296f-f2e9-48bc-af2e-5d5174f84143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6626820d-a8b3-4054-b209-ebab65a46fb2",
        "cursor": {
          "ref": "9a365476-a94e-4804-86cd-308fb55de6ec",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bd740e21-8228-41c2-9417-cb5cc4b8851c"
        },
        "item": {
          "id": "6626820d-a8b3-4054-b209-ebab65a46fb2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4d9e45e3-2fab-4cc8-81b3-90c7458407c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448d92ce-706f-4ccf-8257-2c43dabc8da6",
        "cursor": {
          "ref": "883e77db-d48c-4045-b18d-6a5601c5cc3b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d0d8c2e4-9ad7-4e5a-9622-4c4cf7c676fb"
        },
        "item": {
          "id": "448d92ce-706f-4ccf-8257-2c43dabc8da6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "99af5032-9567-45d3-8169-b3240f823059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aead1132-56ac-43f0-9896-c5cf86ed7bde",
        "cursor": {
          "ref": "5f341a51-b0d1-4db8-9281-c4fec425c9fe",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e9a0a3e5-f3cc-40b3-9420-efcf349c650a"
        },
        "item": {
          "id": "aead1132-56ac-43f0-9896-c5cf86ed7bde",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7cea409e-0f97-4d68-a956-d0c8bba06068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccffeae-d611-4ec1-9f90-edd41724cd96",
        "cursor": {
          "ref": "859fb408-0cc8-4938-9098-80c272343dab",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "53296ddb-52b7-4267-9869-2115ec681a8c"
        },
        "item": {
          "id": "6ccffeae-d611-4ec1-9f90-edd41724cd96",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6013aafc-7bf8-4b19-8f92-f65b771f8e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a7522b-4f07-48e6-973e-bc7f284e9aba",
        "cursor": {
          "ref": "3df72d3e-6a99-4ed5-8ec0-c22bc2d449e5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e639ed92-8677-4bdf-bd2c-b2d687e6cf0c"
        },
        "item": {
          "id": "54a7522b-4f07-48e6-973e-bc7f284e9aba",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4fa30410-bd8f-4e2d-aafa-d84f10cfe7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bdd1eb-efb3-4f57-9e4c-5f9a61361c9e",
        "cursor": {
          "ref": "ad151d3b-a2b6-471a-8659-a1e32df0cc99",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "87ae7994-12e3-42c2-8fa0-55da4493ac4a"
        },
        "item": {
          "id": "67bdd1eb-efb3-4f57-9e4c-5f9a61361c9e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "63957014-9415-4f14-a775-93e87e0c360f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9cf7bb-53ae-498e-999d-cca10d9d0307",
        "cursor": {
          "ref": "fb98639d-51e1-4a53-9022-913400b1eec3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "88f0b229-1b71-42ba-952a-d2908449ddb7"
        },
        "item": {
          "id": "ec9cf7bb-53ae-498e-999d-cca10d9d0307",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2926d0e3-c984-4eec-8854-cc632625babe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9dca9b-6b00-4781-9332-68caca45431a",
        "cursor": {
          "ref": "9f4808ae-ce93-454d-aa40-0ebbd2084404",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bd0c3c8e-7475-417c-9689-b5805d53ee4f"
        },
        "item": {
          "id": "8f9dca9b-6b00-4781-9332-68caca45431a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "43cc5470-5180-451d-b700-af391467ba64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989a6056-2b68-4835-aae7-0e44cbca8f24",
        "cursor": {
          "ref": "6c7272b8-3ced-4e09-af1a-b175feda1496",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ebf6ab0e-b605-401d-b5d5-3faa3484cb4b"
        },
        "item": {
          "id": "989a6056-2b68-4835-aae7-0e44cbca8f24",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "463b2704-8bc0-4b2e-8cb6-fd049d583bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2a51a1-e3c3-4e49-9c0a-c0f77b59dd73",
        "cursor": {
          "ref": "6c784175-62d7-4a2f-bcf2-84c5874f15d7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "68d812b0-cb67-4b72-9c43-457f68a7b3b8"
        },
        "item": {
          "id": "1e2a51a1-e3c3-4e49-9c0a-c0f77b59dd73",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "154f0d9c-3b47-421a-910a-97bfadec7812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b136fe84-ee4e-4a2b-9745-c60b14bd4fb1",
        "cursor": {
          "ref": "0898ca9c-d52e-42ac-9c9a-c4e615d35d4e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "50acbb04-b18a-45f8-9611-d68ba7f325bb"
        },
        "item": {
          "id": "b136fe84-ee4e-4a2b-9745-c60b14bd4fb1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b4066e05-35e3-441a-876f-f3375ef55bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291b93f5-c8ed-4058-9852-53c618d92462",
        "cursor": {
          "ref": "be7a86cf-f4e2-4206-9c36-70c364bade5c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b1463be6-134f-446e-81f8-ec53232ca895"
        },
        "item": {
          "id": "291b93f5-c8ed-4058-9852-53c618d92462",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8eb9e078-a684-4b0c-b1b2-71a625c85e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc59aff-1c42-43a4-958c-a53b132472b7",
        "cursor": {
          "ref": "40793832-91f4-4756-b6da-3a42872e0800",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e7c6ceda-ee5d-456d-84ae-8d49ad75ac0f"
        },
        "item": {
          "id": "bfc59aff-1c42-43a4-958c-a53b132472b7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2d1cbefc-774e-4918-9a23-5c65990d457b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f101155c-06fd-45d2-b7e4-06de8545b720",
        "cursor": {
          "ref": "d802fd0f-cadf-41bc-8d34-dc4ab6bd9d71",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fd327bed-4e91-4a43-ae40-eb55fc02f0da"
        },
        "item": {
          "id": "f101155c-06fd-45d2-b7e4-06de8545b720",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "897148dc-6eb9-4098-97db-f4f71243c2ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e65825-df07-4409-b060-6b105a7c7d24",
        "cursor": {
          "ref": "17273323-b66a-4193-b837-2da8f8e32af2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5f7107c0-a983-43b7-a737-e65d01b9ebc7"
        },
        "item": {
          "id": "13e65825-df07-4409-b060-6b105a7c7d24",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "970c324d-1ade-45dc-b914-a389c90baa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2ef69e21-04ed-444f-8d5f-a4682563b556",
        "cursor": {
          "ref": "feca0c1d-9157-461e-93e4-caa28f3ac92a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e5e18aba-a88c-4859-97f2-a30453d8bac0"
        },
        "item": {
          "id": "2ef69e21-04ed-444f-8d5f-a4682563b556",
          "name": "credentials_issue"
        },
        "response": {
          "id": "181dfaf4-fc7b-438f-82b5-d010102884fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0f5c3bfe-eb13-4a10-a3f4-95a4b1f8145c",
        "cursor": {
          "ref": "e0bfda1a-6456-4f67-aede-3185daa713ee",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "75cacf21-d5af-4bc1-8458-38f31d15ea97"
        },
        "item": {
          "id": "0f5c3bfe-eb13-4a10-a3f4-95a4b1f8145c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bf2e1fea-2b2f-454a-9a11-bef19b386b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "906dd5c3-af3d-41a8-8289-cbb1a65edcae",
        "cursor": {
          "ref": "4cbea57e-8493-410c-8b6e-059d74a1b898",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cfe65f33-d225-4462-9610-93ab5fff3118"
        },
        "item": {
          "id": "906dd5c3-af3d-41a8-8289-cbb1a65edcae",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "56794a28-a690-401b-8a2d-767cc861b024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "77a359eb-d305-4d12-a7a6-87b24416db50",
        "cursor": {
          "ref": "0e3bf348-a174-4603-bb0a-90bc7322a980",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "938930d4-4ee7-4459-b7af-150fa73a18b0"
        },
        "item": {
          "id": "77a359eb-d305-4d12-a7a6-87b24416db50",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d0196576-0341-4e1f-8779-fedae508a5fd",
          "status": "Created",
          "code": 201,
          "responseTime": 13491,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a0891c-e34f-4a40-8bed-a2c3716b297a",
        "cursor": {
          "ref": "f834a0c5-87bd-429f-8440-c57185dd3988",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8b27abbb-48f5-4bef-a354-2e152163405b"
        },
        "item": {
          "id": "17a0891c-e34f-4a40-8bed-a2c3716b297a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "48cba569-8e77-49fd-adff-d971f7a9cc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f1b0f9c1-a021-4c91-9022-8d869bcb0c3a",
        "cursor": {
          "ref": "8c6df9ca-5407-4c83-90a9-fc37daefc191",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dfeb4419-e96a-498a-a11f-3aeb8ac4bff4"
        },
        "item": {
          "id": "f1b0f9c1-a021-4c91-9022-8d869bcb0c3a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "94e28545-5da7-4b45-bccc-7dedecb3011c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "716a0503-628a-491c-88f2-4c4c1efeb3e8",
        "cursor": {
          "ref": "244bdc6a-d827-43be-a712-6242f1ea4d5f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e38de9ff-0fd1-4094-ae02-f3e0ceb50a72"
        },
        "item": {
          "id": "716a0503-628a-491c-88f2-4c4c1efeb3e8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d1bb89d5-fadd-4cd9-a7ea-eec7752a7ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd75c4e4-6c4d-4a26-a4c8-ccfd4694aa6c",
        "cursor": {
          "ref": "9ed84830-5922-42f3-a166-068a3ece0521",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2112cdcf-3dc7-4a37-91c5-c6a1cfe7d2f8"
        },
        "item": {
          "id": "fd75c4e4-6c4d-4a26-a4c8-ccfd4694aa6c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e068333c-66c3-4e57-bb13-1b1a0ca19af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7516a87-e7cd-4954-9ac4-23cc43344d3a",
        "cursor": {
          "ref": "cf1158d5-1fff-43e4-aa31-246348eba22c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b1edd18a-7907-467b-976d-8150efb80123"
        },
        "item": {
          "id": "d7516a87-e7cd-4954-9ac4-23cc43344d3a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "51e5bf0f-73bb-4ebe-8a53-6b4f3da98c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6eb2c1-5187-47f5-89ec-b71a953ddde0",
        "cursor": {
          "ref": "7c247817-e9f1-401c-a585-9492fb54300a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "80d7418b-3c4c-4490-815d-2631481d7bf6"
        },
        "item": {
          "id": "3d6eb2c1-5187-47f5-89ec-b71a953ddde0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "df20fbe4-a74f-4b28-87f5-81bd1c408fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a72892-3ad7-4801-a4c8-72612f1aa17c",
        "cursor": {
          "ref": "a40ef2d4-7747-4231-b4de-1f57ef06ab22",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "886f1f05-93f6-46ac-904b-240d97d2fc1c"
        },
        "item": {
          "id": "61a72892-3ad7-4801-a4c8-72612f1aa17c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fe55704f-e581-4de4-90d4-a0d38a082b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe56548f-0f38-4aa1-8d7e-5454af4f2335",
        "cursor": {
          "ref": "f1217f06-9bde-41b3-a3e1-83ae14714344",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0ca41f33-1a83-4ccb-a77f-e98fbf880b5d"
        },
        "item": {
          "id": "fe56548f-0f38-4aa1-8d7e-5454af4f2335",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "32c760ec-f1af-4d70-a500-0d086b4a4a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664656ba-b808-4bd9-94e4-7cc9181bfdd4",
        "cursor": {
          "ref": "a188b941-6c1b-44c7-a421-ff8004a17849",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "81dd147c-5ea0-42c1-b91a-efd693fafe37"
        },
        "item": {
          "id": "664656ba-b808-4bd9-94e4-7cc9181bfdd4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "894d2010-5c78-40bb-863c-6574ae04a4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b93f69-6ee5-4218-bb10-1e426b773aa0",
        "cursor": {
          "ref": "b00b4d6a-017f-4fc7-befe-da972530431c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "23dc7cc4-cdf7-463a-9f43-e55054722a2a"
        },
        "item": {
          "id": "54b93f69-6ee5-4218-bb10-1e426b773aa0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0cd0eede-2896-49da-b14c-71ab8084a81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99959dc6-01bb-47bc-8e2f-044b410c43ee",
        "cursor": {
          "ref": "88474465-5182-4b68-b15a-66eb4fbb10a0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "edcbaf44-c524-48c0-9d4f-9a5e7a2fe32c"
        },
        "item": {
          "id": "99959dc6-01bb-47bc-8e2f-044b410c43ee",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5f9c1d11-d586-4f51-ae43-2317e0f24ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b9cd0f-ab67-496c-9590-6ffc04ffc788",
        "cursor": {
          "ref": "38989933-1511-4a49-813b-2680af329864",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c50ea297-adf3-4669-a270-9dfd4e0b1269"
        },
        "item": {
          "id": "15b9cd0f-ab67-496c-9590-6ffc04ffc788",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8a7305d2-cd35-4eec-bf08-28c8abc3b372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb36be17-80e7-4c4b-adfe-f06a8c3c7928",
        "cursor": {
          "ref": "c26429b7-f0fc-4da0-b124-1fd6beb13c2a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bcb18754-345f-4918-b4d5-f9be45bff037"
        },
        "item": {
          "id": "bb36be17-80e7-4c4b-adfe-f06a8c3c7928",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "72d2cb09-c28e-4d87-b0fd-4945713881e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5a4bad-ca47-4589-ae27-7e863f2f2553",
        "cursor": {
          "ref": "3bba8733-4a46-4c13-9866-deea630f4798",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2087305f-ef8f-4ab2-85f1-ac4485e4d2e0"
        },
        "item": {
          "id": "ff5a4bad-ca47-4589-ae27-7e863f2f2553",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fbb83ac8-373a-4fb3-bf67-a0e57fe20a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13bbf67-9d7a-42b7-99f5-e606cb03d9e8",
        "cursor": {
          "ref": "d6a8f4ff-6868-4ce0-97a3-e52c2fa34f29",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "41c31c2d-9065-499e-bc53-2809f0f28819"
        },
        "item": {
          "id": "a13bbf67-9d7a-42b7-99f5-e606cb03d9e8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fc345c13-790c-4ecb-a4bf-c30b423cb6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1d94a9-fdd7-49b4-ab57-8da8a658da22",
        "cursor": {
          "ref": "212cc763-7f5d-4854-bd39-1c9e88759f4d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f77ef1cb-095c-459e-b843-968b55aca3eb"
        },
        "item": {
          "id": "db1d94a9-fdd7-49b4-ab57-8da8a658da22",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c79ce607-8bae-4d96-aeb5-a0ac739e6dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2fb3db-b75f-4e68-b39d-befcf874fb51",
        "cursor": {
          "ref": "f492f286-c762-4eff-ad05-911dd8184326",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fc2718bb-9dbd-48e1-bee9-8e520465ca64"
        },
        "item": {
          "id": "7e2fb3db-b75f-4e68-b39d-befcf874fb51",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c4d7f07c-fa0c-4a34-ac36-3137ea21413c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44b0acc-4bfd-4d00-9276-0187bd743cf0",
        "cursor": {
          "ref": "509d8718-de9a-4215-a8c7-b73c4f26ddd9",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5e73e285-f942-4a74-847f-c351aee28114"
        },
        "item": {
          "id": "a44b0acc-4bfd-4d00-9276-0187bd743cf0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5a8be01e-5fe4-4981-a226-145c770b739a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5d030f-6094-4601-8cc9-d5895298acd7",
        "cursor": {
          "ref": "6a794f84-b4e7-46a8-bbad-acdeb19940d9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b6d6f9e3-0e73-4600-9611-6add591993ce"
        },
        "item": {
          "id": "9b5d030f-6094-4601-8cc9-d5895298acd7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cdeb8a8f-839e-4a8a-a3b2-cd63f9bd361b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "6cc46036-b61c-4adb-9019-ead988d07e13",
        "cursor": {
          "ref": "9a28957d-237f-4245-b6e5-7fda61cfdd4f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1ea26acc-96eb-44f7-ba5a-c0d3df420d1d"
        },
        "item": {
          "id": "6cc46036-b61c-4adb-9019-ead988d07e13",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cf2c2022-1b5b-4a0c-82e3-030ce80e90de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abed65f-3a3e-4d65-b1e0-d2478c41f627",
        "cursor": {
          "ref": "8ca3544a-1f11-418e-91a6-590c34dd709c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "25c70ab1-5053-457b-ac79-f2d0bef0a305"
        },
        "item": {
          "id": "1abed65f-3a3e-4d65-b1e0-d2478c41f627",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d029a4a4-00fc-4e5c-b94f-dc9fc71d6faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3b7fcd-85af-4773-9bca-9afa58f04c0f",
        "cursor": {
          "ref": "e58220d7-df89-435f-8fde-28edebb6f736",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ec439170-bb4a-4c9b-8436-aaa6ac862ad1"
        },
        "item": {
          "id": "ca3b7fcd-85af-4773-9bca-9afa58f04c0f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "34bf03fb-8e66-4ec6-bbca-f4f7d1107875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b5eb86-2c81-4cbe-9291-a5782664f152",
        "cursor": {
          "ref": "37ef7ff5-d55a-4e5c-b8f2-e456dfd043e6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a929d735-bb93-4c97-9616-fe6590a692ef"
        },
        "item": {
          "id": "49b5eb86-2c81-4cbe-9291-a5782664f152",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf3f1075-ee6d-4a39-8511-9b0e788fe118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925f56d3-62ee-481b-81f0-8ebf4a6a2bfd",
        "cursor": {
          "ref": "849ee9b6-5704-4428-9f6f-c03b4cd1c356",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "56c81cf9-4107-4f77-827a-d55e2bb32642"
        },
        "item": {
          "id": "925f56d3-62ee-481b-81f0-8ebf4a6a2bfd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4bc325c7-0a0a-4d1f-9363-330682161f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6947b17d-649d-49ce-8345-5c2afd7f6357",
        "cursor": {
          "ref": "15f346be-93dc-44bd-ab74-8ab7f2e68e88",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1514efc0-e558-4650-bef6-4c8e29e20c72"
        },
        "item": {
          "id": "6947b17d-649d-49ce-8345-5c2afd7f6357",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b23b4684-b512-47e9-9def-10929ea98afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f080772-80f3-4da4-a3e1-d9ebaf8fd09d",
        "cursor": {
          "ref": "caffca01-428a-464d-af8b-a6b2bc9143a9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d7a9a86e-5642-49a2-a8c8-4b89c2251ddc"
        },
        "item": {
          "id": "5f080772-80f3-4da4-a3e1-d9ebaf8fd09d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4aa75803-af64-4569-a3c8-d74c8cbc833d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edf4094-38c3-4367-8da1-b8d98bba10d4",
        "cursor": {
          "ref": "90ff46ee-5116-4e43-9f32-122c70bc738e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c131c209-c386-46b8-ad4f-bb6d6d36d59e"
        },
        "item": {
          "id": "8edf4094-38c3-4367-8da1-b8d98bba10d4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e1bfdd2b-df54-4f6a-aeae-68f8b7ca3fab",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "3f7033d7-2f0c-4b22-9cfa-02758a2fb628",
        "cursor": {
          "ref": "d8b060e9-fd26-4035-96ac-d108d4fe3f74",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dcddfe6c-a5bb-4dd4-a1c9-a629ea703fce"
        },
        "item": {
          "id": "3f7033d7-2f0c-4b22-9cfa-02758a2fb628",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e97620ee-1717-4f82-908b-1d8cb97054bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030748fb-cdec-40ff-a0ba-d6f5782238d2",
        "cursor": {
          "ref": "ff6c79ee-c03f-4445-9d9e-ee39a7abf844",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "292e91d3-591c-4786-a83d-81e06cd67225"
        },
        "item": {
          "id": "030748fb-cdec-40ff-a0ba-d6f5782238d2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d83e01a5-d6fb-485d-9158-3a123fc1ad9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa83f908-31c5-47ec-9bfe-c265fe815ca7",
        "cursor": {
          "ref": "7ad161e3-412b-490b-ae30-72c4c794450d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4a627950-5254-486b-8c9e-1cf3915a1c7c"
        },
        "item": {
          "id": "aa83f908-31c5-47ec-9bfe-c265fe815ca7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ba516344-e3f4-4070-8e27-4b4d57d8f36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df39716-2314-4c64-b158-149b53ff5a7b",
        "cursor": {
          "ref": "0350e889-b002-4937-a138-6d05f7eee1b2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "16bf8d85-d61a-4ae9-bacd-014ee6ee029d"
        },
        "item": {
          "id": "7df39716-2314-4c64-b158-149b53ff5a7b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8f10a12b-6e2d-4c82-be49-3ceaf713d155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754950b0-5fc3-4e15-b1e5-0166fa6f730c",
        "cursor": {
          "ref": "4e7e30ea-85a2-44f7-a7d8-74ec68d9531f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e28e5437-a352-4a46-bf08-37022db90a70"
        },
        "item": {
          "id": "754950b0-5fc3-4e15-b1e5-0166fa6f730c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ceac5de2-543e-42c6-9de5-264641e6422f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd231ed9-758d-4e5d-83da-e2a9714be1bf",
        "cursor": {
          "ref": "36fcfe23-47f2-414b-97f3-dd3bef8197cc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4afa65b8-afb5-47e9-aa71-5cb13fa23640"
        },
        "item": {
          "id": "fd231ed9-758d-4e5d-83da-e2a9714be1bf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b33d44db-12c5-4139-9472-877fd2c962af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943fdc6f-9613-4d3e-af1f-788c4de47f3b",
        "cursor": {
          "ref": "ad8cfb9d-560a-4449-bac5-966add55ebd2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8689b22a-323b-41d0-a5a7-15302d77e7cd"
        },
        "item": {
          "id": "943fdc6f-9613-4d3e-af1f-788c4de47f3b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "41015648-b9a7-4d2f-accc-6ce1963c82cf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "83bfc0e6-179d-48ae-a366-e53db2bbf73e",
        "cursor": {
          "ref": "4aa3943d-c013-433d-bc08-e31503d587f6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "10011c72-4ed9-4865-be40-a4e8a2f051f7"
        },
        "item": {
          "id": "83bfc0e6-179d-48ae-a366-e53db2bbf73e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5fb47252-21e5-4604-a56a-da9ffea22056",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f8038490-5ef4-4211-9eeb-09a2c8f8ee7c",
        "cursor": {
          "ref": "c06e6558-2a51-4605-8fe3-bb639028ca7e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f026cbe4-015d-46df-a92e-cefb1b1c31bd"
        },
        "item": {
          "id": "f8038490-5ef4-4211-9eeb-09a2c8f8ee7c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a1abc522-9ca2-4ab5-a875-b1bd6cc839ba",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 11,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a9cbd9c1-b224-470b-b369-8bd591fbccef",
        "cursor": {
          "ref": "fded573f-0194-4c4c-8aa6-734ebc6c0d10",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f64e9cb3-9a27-4349-8882-8002a4249f50"
        },
        "item": {
          "id": "a9cbd9c1-b224-470b-b369-8bd591fbccef",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9ae1b1e0-11ff-4644-8af0-ea71aa498d56",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "ab6521a1-ec21-4d84-97de-d4512b7cc702",
        "cursor": {
          "ref": "869f1952-1a19-4d39-b160-382d37de9ec7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "36193d9b-f270-4e92-9b69-1c70e30d83a2"
        },
        "item": {
          "id": "ab6521a1-ec21-4d84-97de-d4512b7cc702",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3dbcb23b-b5bf-4069-9ba0-3da4c3bf0fbd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "53a49a4e-acb9-49aa-9e94-5e34028d5774",
        "cursor": {
          "ref": "a5a2db81-fbf0-46f5-adb4-63c7d5cabadc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d83b0134-765b-434a-86aa-0243e283bb2c"
        },
        "item": {
          "id": "53a49a4e-acb9-49aa-9e94-5e34028d5774",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "033e3f46-ca7d-4dc5-ab38-684e3a52ecf4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "1be855d2-784b-4954-b469-c7ae975a3290",
        "cursor": {
          "ref": "e9cadcb7-fa2a-473b-9e02-9f158afa4ea4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "60521d74-8d67-4135-86d5-337cbdf5d711"
        },
        "item": {
          "id": "1be855d2-784b-4954-b469-c7ae975a3290",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "438bc65b-0099-429f-b89c-0ad5c562986c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dacd439-0000-4930-8fd0-f58478147bf0",
        "cursor": {
          "ref": "bb9d0be9-c7ba-41db-ab4d-2d6ed8b52621",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "998f01c1-cde7-4b9e-959c-4854d01cb33c"
        },
        "item": {
          "id": "7dacd439-0000-4930-8fd0-f58478147bf0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4f522d16-27dd-4712-b707-94ae9b7af39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac13a140-d2f5-47ff-adcc-e80c78135a4f",
        "cursor": {
          "ref": "899f440b-e6d9-4f15-a75b-e99b6f74ac8f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "44d75dc5-5f60-4e65-8050-1e373b54564e"
        },
        "item": {
          "id": "ac13a140-d2f5-47ff-adcc-e80c78135a4f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8dc3de34-1675-4441-911e-4e23d323f64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771ef123-0c01-4d5a-a608-4b89cb37731c",
        "cursor": {
          "ref": "9721d510-9191-4de9-9907-35140036ecce",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ae1b4b0d-d17d-4c19-bd73-ee9f51c32f06"
        },
        "item": {
          "id": "771ef123-0c01-4d5a-a608-4b89cb37731c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4e293344-3530-4873-a874-46f8426ea04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57ac33e-87bb-45b1-ac55-42faf7e82165",
        "cursor": {
          "ref": "67ed4429-9457-42f1-8d51-9dafb9b2f2c1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d5b2d0de-3ac2-48fe-acb6-c0d568fe2fad"
        },
        "item": {
          "id": "c57ac33e-87bb-45b1-ac55-42faf7e82165",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3edca0af-15b0-4cff-ab47-6a38fceea53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cb42d6-7a2b-4d89-ab61-168cba7775d6",
        "cursor": {
          "ref": "28d70d87-1c14-40a8-a79e-4ea5e0d3896a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c7507011-70d4-413e-ad90-39fed4fd584e"
        },
        "item": {
          "id": "d0cb42d6-7a2b-4d89-ab61-168cba7775d6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "52056ba7-7f33-48a9-b9e8-7189e10f5e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115b4b51-d52c-4d9d-8010-089ae0f0fb5f",
        "cursor": {
          "ref": "ac5e3950-7c29-4025-97d0-41de4cd7b431",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5b6959cb-bcb5-432c-82b1-0de98c7275f3"
        },
        "item": {
          "id": "115b4b51-d52c-4d9d-8010-089ae0f0fb5f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e7867a15-d8ee-40ca-8e4f-9fadd883751e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01097c29-7c01-4265-a57a-21eac991a860",
        "cursor": {
          "ref": "a4784962-b8ae-41d3-8f57-9920ed8d1543",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7f18ce77-4042-4750-9c48-705a4d6db083"
        },
        "item": {
          "id": "01097c29-7c01-4265-a57a-21eac991a860",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "03276afb-a211-4015-b410-3a1ea67cd942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46abc895-e2c6-465b-bc23-ec733267e0aa",
        "cursor": {
          "ref": "5d3b9b8b-ffdc-4987-8b74-f2a294632908",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a2e23240-24c7-4a30-b8ec-f89a261712dd"
        },
        "item": {
          "id": "46abc895-e2c6-465b-bc23-ec733267e0aa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f2c2d5f2-7f71-40a3-934a-107cb011a98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1837360-3ac1-48b9-8d27-b4deae1d76ee",
        "cursor": {
          "ref": "d177818f-575f-4e88-a5ff-db57d08b8df4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e1381487-a731-4036-ab0d-292106551784"
        },
        "item": {
          "id": "a1837360-3ac1-48b9-8d27-b4deae1d76ee",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "637358fe-c969-443b-943d-bbae19205886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b819df79-a4e6-42c1-9334-16599e353de3",
        "cursor": {
          "ref": "4d38cb1e-cb50-48d0-8952-f40cb50e9ae0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "96e8432b-1b60-4783-a7ad-23460b370db5"
        },
        "item": {
          "id": "b819df79-a4e6-42c1-9334-16599e353de3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b5e72868-d00f-4d6d-a9cf-9a2b5e85a8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba11176c-ac73-447f-8c66-79a742629e96",
        "cursor": {
          "ref": "fe28b3cb-a2c4-4c9b-8e82-ce776265bd89",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d2c523c6-7f3e-48a3-80a0-495e1ecd2501"
        },
        "item": {
          "id": "ba11176c-ac73-447f-8c66-79a742629e96",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ea6494bc-341c-4c8f-8dd9-5d162cef457c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90299417-703f-45f6-89cf-5a583788e2a6",
        "cursor": {
          "ref": "8b1d78de-4953-4c1c-a3ec-c81416cb72fe",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "896e14be-cdfc-4ba7-99bb-bc900fa7dfa2"
        },
        "item": {
          "id": "90299417-703f-45f6-89cf-5a583788e2a6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dd70415b-1344-4d21-876d-8aa4fe328bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932a09d6-cf65-4674-ace2-e44558412881",
        "cursor": {
          "ref": "7ae0f118-fccd-4c15-bddb-26823b874527",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6dd74996-10fc-44a5-9058-0ce418fc02f0"
        },
        "item": {
          "id": "932a09d6-cf65-4674-ace2-e44558412881",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a857092f-f393-4b91-ab9a-2140bd86891d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eacd20-a3d2-4361-a1ea-a9c89eb7dd0d",
        "cursor": {
          "ref": "13c27661-8011-4a82-affb-50469f541a47",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5852564f-d193-4d16-a3cb-3f5b24e7c74b"
        },
        "item": {
          "id": "e5eacd20-a3d2-4361-a1ea-a9c89eb7dd0d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3f4085fd-1b72-4274-aa0b-810371106f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e937ee0-7749-4b66-8e5a-20fcea586cab",
        "cursor": {
          "ref": "7f97de63-ae08-4979-a36e-9ff4876a5475",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3bd18ccb-7baa-44b7-8d26-742475142cd2"
        },
        "item": {
          "id": "6e937ee0-7749-4b66-8e5a-20fcea586cab",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "43016a12-97a0-4117-b6e2-03a22fc42b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8191620-2415-47e9-8dae-1e773a08af55",
        "cursor": {
          "ref": "f490c6db-a678-4645-8c46-365a12da28bc",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "351333a6-3374-436d-8b71-be80e3bab87e"
        },
        "item": {
          "id": "d8191620-2415-47e9-8dae-1e773a08af55",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "909c7cb8-79bf-4fd8-9add-538267cc585c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863c8678-1853-4a78-99df-645558de463d",
        "cursor": {
          "ref": "a9fdaea8-2dc9-436e-81a1-d83f06faedda",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "df571fef-d2e7-4004-8947-3abeb798c358"
        },
        "item": {
          "id": "863c8678-1853-4a78-99df-645558de463d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1d2b34f3-d753-437f-9777-a77cf59bf2a7",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "72d8b8a6-a653-455f-8aa9-643d3cac2b79",
        "cursor": {
          "ref": "74faf1c2-b91f-44b5-ac07-34dc2c2ba51e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f54a527a-85d0-4e26-a77f-b4a6eeaa783a"
        },
        "item": {
          "id": "72d8b8a6-a653-455f-8aa9-643d3cac2b79",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4e1b0260-8356-49c4-8e7d-ff7f1c161ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bff4a6d-cecc-467f-aaf2-122444827c06",
        "cursor": {
          "ref": "6fc40b5a-9045-4249-9c2d-36eb76868ae9",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d81192dc-8b4c-488c-903c-a578cd9d370c"
        },
        "item": {
          "id": "3bff4a6d-cecc-467f-aaf2-122444827c06",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "45eb1b29-529e-4356-a130-575e0636eb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4539b6-972e-4459-b9e6-18eca9ae73e1",
        "cursor": {
          "ref": "7ad62c00-86af-4b70-9623-83c8eefb230e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0d649826-fbf4-469c-ab38-c79d31683d0e"
        },
        "item": {
          "id": "1e4539b6-972e-4459-b9e6-18eca9ae73e1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dea81323-0bad-4ea7-b5fe-ff89633108a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1d52e2-7227-4646-bb93-b998a94a6f1c",
        "cursor": {
          "ref": "928e9a71-18db-4f79-9957-be51b819d3bd",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "490f8b0a-2649-44d5-ab56-c6a23a92cb76"
        },
        "item": {
          "id": "bb1d52e2-7227-4646-bb93-b998a94a6f1c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b3fc3f38-48fd-4bc8-b990-e4e149e7a1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bce769-bf9e-4f31-94d9-905825abb3c3",
        "cursor": {
          "ref": "d606d43c-d120-4b27-8b2c-91908dd224a9",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "de9241db-096c-4804-896f-291030fd2878"
        },
        "item": {
          "id": "c0bce769-bf9e-4f31-94d9-905825abb3c3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "32f326ff-2981-4269-8ec9-239bd4e0cfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37137f0b-ecf0-4b83-a522-e72a82c75a61",
        "cursor": {
          "ref": "aab7fdbb-b32e-40eb-9dd8-0239144587de",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "368beae3-6645-43bd-98e6-087929100a35"
        },
        "item": {
          "id": "37137f0b-ecf0-4b83-a522-e72a82c75a61",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "39b138ac-8991-4e54-b548-e88c02ca785b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa083559-5992-4a2b-a365-7e89ca6c66aa",
        "cursor": {
          "ref": "083a7f6a-6ed2-485c-bdf1-36258d41a978",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4e47c753-dabf-44bf-b6ac-ea39066737ce"
        },
        "item": {
          "id": "fa083559-5992-4a2b-a365-7e89ca6c66aa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b2f648dd-79ad-48d4-b1db-1e2dceb67231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96d1594-ef31-4ebb-bceb-7dc7036e7907",
        "cursor": {
          "ref": "356dcb70-088d-4834-9977-cb6a48b967cc",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6a5c4cc5-004b-49d9-9f08-4944b4258ce8"
        },
        "item": {
          "id": "a96d1594-ef31-4ebb-bceb-7dc7036e7907",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d88bffc8-f26d-45a2-a839-b59f8565661b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ff6096-00a6-436c-ab3a-0afb735762ee",
        "cursor": {
          "ref": "545bce19-f63f-428e-83b6-4c88b711d2d1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "50213880-e1e0-4acb-8c01-f3a3ed5d779a"
        },
        "item": {
          "id": "c6ff6096-00a6-436c-ab3a-0afb735762ee",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "79df4a0c-f711-4497-8f4c-8fb7d76bdf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfae8a94-01f0-4c5d-8254-d92e00d9934e",
        "cursor": {
          "ref": "a5a35168-aafe-4584-844a-25a3268e5542",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6bd91764-ac59-440b-8cea-8ddbcfd84d25"
        },
        "item": {
          "id": "dfae8a94-01f0-4c5d-8254-d92e00d9934e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1fc19897-7932-48aa-a329-181720969f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a7856a-21db-4ab0-8468-92b477f01ca9",
        "cursor": {
          "ref": "1f2fc68c-72bb-49c0-a4e0-517366e59505",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9c9441f0-55a3-42b4-8dc1-7ee0b17a2db9"
        },
        "item": {
          "id": "26a7856a-21db-4ab0-8468-92b477f01ca9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "dd06128b-2610-43c0-985b-b8a87293e472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f947d34-ef80-4b99-86ae-1344bab2da50",
        "cursor": {
          "ref": "17005cb2-3963-4e41-be56-a8340642e278",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "472a28f8-10f2-4ebc-ae59-05184c0539c8"
        },
        "item": {
          "id": "3f947d34-ef80-4b99-86ae-1344bab2da50",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1eaad015-d36f-4c9d-b6c7-c4f3616aba0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f7f4d9-c104-4c21-875b-d7d6f267e28d",
        "cursor": {
          "ref": "2f8cdbda-30f9-4125-8c10-5233a561d885",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "93cbe494-3cef-49c9-ba0d-42192e9029c0"
        },
        "item": {
          "id": "66f7f4d9-c104-4c21-875b-d7d6f267e28d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "317a01ff-9611-4232-a579-73635e464088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8065f8d-131e-484a-b5f9-7d10fdbf0a91",
        "cursor": {
          "ref": "2abbc574-e2ee-4411-9674-c0070cf7a832",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "07f8f342-fed5-461b-8c71-db340896c0c0"
        },
        "item": {
          "id": "d8065f8d-131e-484a-b5f9-7d10fdbf0a91",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "04407593-d40f-4f6d-b3ad-967f1abbaaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f7c013-a909-453c-b195-3a70b72c2d4e",
        "cursor": {
          "ref": "6173a8d2-5391-4708-be17-444779b66d08",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "472cb056-f08b-4635-b365-0bac4e9389d8"
        },
        "item": {
          "id": "29f7c013-a909-453c-b195-3a70b72c2d4e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a726eb81-8d60-4cb0-a019-d3d9e56e89ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fb6cff-bea5-46d1-bd93-f59e717429f0",
        "cursor": {
          "ref": "3123996e-6bf3-45dd-b306-bd3109531ea1",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7d1a2383-1716-4017-bb27-19a43c930836"
        },
        "item": {
          "id": "71fb6cff-bea5-46d1-bd93-f59e717429f0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a6ee307a-3c26-4a24-bb36-770017824d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a925df9d-2a94-40f2-89c6-a5f92ffa199c",
        "cursor": {
          "ref": "0d582ab9-6eab-4006-b805-c51eb21d412d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "24f95349-9592-4e11-a8ae-61911fc7a2c4"
        },
        "item": {
          "id": "a925df9d-2a94-40f2-89c6-a5f92ffa199c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0be3a586-8088-4cf0-a107-a75f96de7102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5955e340-517b-4184-b3c4-88fef7b5b0c3",
        "cursor": {
          "ref": "bff2cd81-041e-4ac4-bb43-0b1dd751021c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3dec0499-b593-4663-953b-d124e1270931"
        },
        "item": {
          "id": "5955e340-517b-4184-b3c4-88fef7b5b0c3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "83bb2576-6e8c-486e-9dfd-08319c02f80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2643593-13a6-4ca2-9f8d-2a206757c66f",
        "cursor": {
          "ref": "5b131f17-df8b-4995-a6d1-c24ac82e1961",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "25c34070-d99d-4030-b2f8-2c80ef42da75"
        },
        "item": {
          "id": "b2643593-13a6-4ca2-9f8d-2a206757c66f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "393ec499-b9fd-46e8-93c3-8bda50cc04b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcf785d-a195-42f3-aed9-3350ee510a38",
        "cursor": {
          "ref": "13d3b7db-362f-415f-96fb-4a4135958fdd",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "dfaf9c31-98d3-4db1-a8c9-245e95b0a002"
        },
        "item": {
          "id": "adcf785d-a195-42f3-aed9-3350ee510a38",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1073212d-8020-4810-832d-8f85acdb8183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8beb5380-41f7-4ec9-9f7d-beb9f7a446ce",
        "cursor": {
          "ref": "3431ac22-9758-4854-aa70-9e75ebe72dd2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "155330db-eb47-4a51-8a1e-938db62413a9"
        },
        "item": {
          "id": "8beb5380-41f7-4ec9-9f7d-beb9f7a446ce",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "eaa6f991-5f84-4f5c-a710-9b95366bcf3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67eee329-8d4f-4d9a-9dee-c4d8b3299cd4",
        "cursor": {
          "ref": "f55a9756-0341-423a-8273-8e6dd589089d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "07e2e241-480f-4b4d-af09-4f9e22ae8c81"
        },
        "item": {
          "id": "67eee329-8d4f-4d9a-9dee-c4d8b3299cd4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ef78e6f2-671e-4c34-b4d1-812d296b121e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ed67a8-fc8e-4b50-b87d-026d42a03c67",
        "cursor": {
          "ref": "c65f9f66-4cc2-4def-8fa9-21932dba8c68",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6a0bad3f-615c-460a-9822-e387eea386ef"
        },
        "item": {
          "id": "c8ed67a8-fc8e-4b50-b87d-026d42a03c67",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c9beab27-7d0d-40ed-82e4-41ee7e59e462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa228ed8-0ad4-4a69-ab9a-f769f6489396",
        "cursor": {
          "ref": "f01107dd-34e4-4c35-9604-a854a63baabd",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8204a559-e10a-4783-a5a9-baac5d7d2b73"
        },
        "item": {
          "id": "fa228ed8-0ad4-4a69-ab9a-f769f6489396",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e00de6fd-12c7-4300-832b-fa3a6178683b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcb5b08-3389-4bd1-940f-6f82bb14f096",
        "cursor": {
          "ref": "71ebc8dd-a901-46ae-affd-8c225aabcd2f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "92389598-f71d-46fb-91d8-f6bc3364b353"
        },
        "item": {
          "id": "9dcb5b08-3389-4bd1-940f-6f82bb14f096",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e8f1ea80-ae49-405d-b0ea-59b01a6faf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631eb168-8e37-4c7b-81b0-fe5af628a2ae",
        "cursor": {
          "ref": "091634a1-c4e7-415c-bbdb-0166b47d68dc",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c6d1340e-6fad-4e7c-8966-407ce268a2e0"
        },
        "item": {
          "id": "631eb168-8e37-4c7b-81b0-fe5af628a2ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "69e2881e-f597-4161-a648-76af0f2a02f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e8a5a4-7780-439e-954d-e16121e90ac3",
        "cursor": {
          "ref": "42c50f06-c1ff-4806-b93b-d0b361f6797a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "27c765e0-f625-4dbe-a914-c901cdf0766c"
        },
        "item": {
          "id": "a8e8a5a4-7780-439e-954d-e16121e90ac3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b0e5dce5-7dc6-45d5-81fa-31b32bc8b3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f146afd3-713d-4c2c-b13e-d1be1b4e63e0",
        "cursor": {
          "ref": "8d1cf60a-4bb0-43f6-a488-16540f39cabe",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6507fadc-858a-4d8f-8ac4-b3cf6fb7a4fd"
        },
        "item": {
          "id": "f146afd3-713d-4c2c-b13e-d1be1b4e63e0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f044ae38-a08e-471d-acb6-284085c26c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5bf8d7-ddb6-4cae-a5e7-fcfcdf768e4b",
        "cursor": {
          "ref": "5e5df0cf-81c1-4b79-80b8-aece3706221a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ccfa3949-ed0b-468b-a26d-754f50991fc4"
        },
        "item": {
          "id": "2d5bf8d7-ddb6-4cae-a5e7-fcfcdf768e4b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b4b3c9bb-8e16-4c85-ad4e-0fbae9ef857a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9fc343-f049-4548-baa0-4fd64d81d70d",
        "cursor": {
          "ref": "de1b3681-a890-4d8e-ab98-592c3298d224",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4c02bd0e-8238-4293-be0e-4063aa232e87"
        },
        "item": {
          "id": "0d9fc343-f049-4548-baa0-4fd64d81d70d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f1e1da68-3ec9-47f7-a559-caf3fea1ee62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cab8af-0cc3-48b4-89ee-a6e4ab016b91",
        "cursor": {
          "ref": "dcba353c-f9bc-4ece-8ea4-a9b86a187a74",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c0bd7da1-70ae-47af-a560-ce71c39a5b79"
        },
        "item": {
          "id": "c3cab8af-0cc3-48b4-89ee-a6e4ab016b91",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "40a1b115-9837-4a08-86d1-a09c6b88130e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcf8a57-ef6b-49a6-b2c8-731aca3e8aab",
        "cursor": {
          "ref": "7969c247-225e-4acb-8a9d-539240821181",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a5fd5f99-0741-4a08-ad98-5ce8aeea846f"
        },
        "item": {
          "id": "dbcf8a57-ef6b-49a6-b2c8-731aca3e8aab",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a073066c-3dc5-4b2a-b6dd-515f28ba696f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e37c03-e154-468a-89f1-6eb6f5451b47",
        "cursor": {
          "ref": "a0cb1dae-96ec-4021-ae02-a3b75bf627e1",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "aab756ef-6a55-4b15-8156-9c54e92ddba4"
        },
        "item": {
          "id": "e8e37c03-e154-468a-89f1-6eb6f5451b47",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7e445a89-f4e3-41f6-bd76-0d90a467bab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438f96df-2446-4f49-ab5d-e8f491e24a8e",
        "cursor": {
          "ref": "ce4ee6d3-8900-4620-b533-baf74ec15ae6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0dfce237-ebf8-47f8-9f71-93f6981d0381"
        },
        "item": {
          "id": "438f96df-2446-4f49-ab5d-e8f491e24a8e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "24c8523e-84a4-4349-ad3b-81feb69b3dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6518e6dc-af97-4102-8f13-0994932bf5fc",
        "cursor": {
          "ref": "c02f5972-4ecc-4f96-a480-6e60cb139f36",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dd329117-156d-4aec-bff3-f3886a87336a"
        },
        "item": {
          "id": "6518e6dc-af97-4102-8f13-0994932bf5fc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f389a09e-810d-4434-ac08-1a5e98b41361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f8cd3a-98fd-4dd7-b4dd-a153c2cd927f",
        "cursor": {
          "ref": "3062e001-2863-4de3-bc0c-7e50e22403f9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "127a9132-17af-4a58-946f-f5396d175cb2"
        },
        "item": {
          "id": "b2f8cd3a-98fd-4dd7-b4dd-a153c2cd927f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6bcd2c5f-ffde-4582-82ff-cad78224eb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346aa724-b041-4d1e-af27-f13abf8e8321",
        "cursor": {
          "ref": "4bc63b7d-74ff-46e5-a029-6c5f4eb7ce2b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0c13d8bd-2c4c-452b-b283-95f0625ff25c"
        },
        "item": {
          "id": "346aa724-b041-4d1e-af27-f13abf8e8321",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2113925f-366a-4ded-97b4-0c17de22bb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236474f1-de50-43f4-996e-81cb93fba866",
        "cursor": {
          "ref": "abf5845b-c33f-4681-935c-d04050c99f78",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "629f31b7-9b09-4866-9940-d95ed9e0d3e4"
        },
        "item": {
          "id": "236474f1-de50-43f4-996e-81cb93fba866",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8c877bd5-7651-4acc-96d6-26c73f1abb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a2dc55-b8eb-4838-a59f-254503bc13b2",
        "cursor": {
          "ref": "473cc2f7-9ff4-4c51-be78-d2d7cefc6851",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "25a80f5e-9ad2-4044-9f6c-e85620023335"
        },
        "item": {
          "id": "33a2dc55-b8eb-4838-a59f-254503bc13b2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "af253c3d-0d82-4118-ab98-037ae4b33fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef44b625-d8fe-476f-91da-7f14e53c8a9b",
        "cursor": {
          "ref": "3f71a321-56a9-4db3-b7cb-2cec2c696d34",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bc3340b6-5386-4f7b-9dd1-88d90f5467d9"
        },
        "item": {
          "id": "ef44b625-d8fe-476f-91da-7f14e53c8a9b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "34a75f47-b2e3-4166-af05-71479077188d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301ea375-183e-43b3-b86e-852a965c5b7c",
        "cursor": {
          "ref": "43c738b5-cb7c-424f-aff5-2d9e75de958f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f3b757f8-b21e-499f-8e9f-1b11dc015485"
        },
        "item": {
          "id": "301ea375-183e-43b3-b86e-852a965c5b7c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bb8867a9-a0b2-4d4c-9a3e-c7174dd015c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566034dc-ad9f-4afc-a732-ac3e5b862b0b",
        "cursor": {
          "ref": "b74297ff-dc88-4a22-9157-f15b72bf0e98",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a4247e66-65bc-4d27-bfdc-268acaf53a96"
        },
        "item": {
          "id": "566034dc-ad9f-4afc-a732-ac3e5b862b0b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2e932fe2-b49c-48a1-a5cb-e706005ff934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca38930-67be-4a6f-b362-5451ffe7e2f7",
        "cursor": {
          "ref": "28c27077-c329-4d1f-b43a-bdfe98645078",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6761f792-c819-448b-8004-7cbffc2e37c6"
        },
        "item": {
          "id": "2ca38930-67be-4a6f-b362-5451ffe7e2f7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9ba6eb66-a559-4df0-ae5c-66cef16ee1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c9d330-e084-45f7-ad19-8bba5e667dc9",
        "cursor": {
          "ref": "ff1df508-e5f4-4ffe-a38e-5fa288ef9218",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c43e373e-4875-4112-8628-9d0e7642b5d1"
        },
        "item": {
          "id": "e4c9d330-e084-45f7-ad19-8bba5e667dc9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "57a05e19-e1ea-4ec9-8c68-7da666110d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f07d85-f0f0-4f5b-b474-cd137d498808",
        "cursor": {
          "ref": "b495b0eb-7672-4acd-82b9-82fc1d7b04fb",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "918e0a36-c2a0-40e7-92f1-6ef0b613a53a"
        },
        "item": {
          "id": "b4f07d85-f0f0-4f5b-b474-cd137d498808",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1d044161-25af-4375-886d-e32909bb2e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de27b2fb-615b-4603-a574-10a2e9a1e5cf",
        "cursor": {
          "ref": "45cbde77-b019-4963-b1bd-f843ad086790",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "affa5a3f-d090-4732-ac40-507468749b56"
        },
        "item": {
          "id": "de27b2fb-615b-4603-a574-10a2e9a1e5cf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "779e56ba-9ec4-4a9b-9410-e3eebcc031c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39ef935-1a91-4375-a023-9bd767dfa7f8",
        "cursor": {
          "ref": "d3e43b64-057f-4d54-90ea-558e5bcfcdc4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2b1314ce-4773-41fb-8196-d6be47ac85fa"
        },
        "item": {
          "id": "d39ef935-1a91-4375-a023-9bd767dfa7f8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "42b36f3c-ae93-4613-bb6f-a700656e7d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff066f1-ff70-4072-8c88-053ef6c4cdcd",
        "cursor": {
          "ref": "90a01383-06db-4a0d-9430-45784e681b32",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1ffde00c-95f5-4f5a-b78e-ee76500f3e73"
        },
        "item": {
          "id": "2ff066f1-ff70-4072-8c88-053ef6c4cdcd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f3c5436b-9894-473b-87c5-a94133d937d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f40e1c-7570-4f39-94e2-c6adc9eea265",
        "cursor": {
          "ref": "57ae3e8f-1028-47a0-a913-6787df97a99d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "51f85925-0c41-4252-b3b9-d0497ed953fd"
        },
        "item": {
          "id": "08f40e1c-7570-4f39-94e2-c6adc9eea265",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8323d711-5e8a-4e9e-8a61-8452aefcc9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4023b4-d5e1-436b-9526-965de72eae59",
        "cursor": {
          "ref": "09ec6b0e-6381-4329-84e4-dacb6ee541d0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d64f21a6-5f70-41f9-a3c3-8c97aea43746"
        },
        "item": {
          "id": "fb4023b4-d5e1-436b-9526-965de72eae59",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "45f55c94-6298-40fa-a4ce-6bb364a37608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d1d5de-dcc7-411d-ba71-c548b7677d22",
        "cursor": {
          "ref": "8d1af2d0-0ef7-4f91-95e8-5a5b54580c7f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "14f7903c-e7f5-43e4-9f16-d68f38f773aa"
        },
        "item": {
          "id": "54d1d5de-dcc7-411d-ba71-c548b7677d22",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "69851181-44a5-498e-8e51-60c8b12e014e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb74ee7-33e5-45c1-aaed-a9f1b0bdcdec",
        "cursor": {
          "ref": "2e4c08c1-c8cc-4451-bb85-fafcf11d68ff",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "aac740a7-3dff-4f75-9519-2f8bbdb1de2b"
        },
        "item": {
          "id": "eeb74ee7-33e5-45c1-aaed-a9f1b0bdcdec",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "57cc4e9f-972e-4137-9bcd-ab304c85f4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5994f8ea-a791-472f-bade-38005c779817",
        "cursor": {
          "ref": "939cd9a2-2bb5-4264-8782-30cb799ad648",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8abd32b2-8595-4507-a5ed-a8719620240b"
        },
        "item": {
          "id": "5994f8ea-a791-472f-bade-38005c779817",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "776f199e-a9f5-47c4-935b-b2452966f586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7c6758-f31d-4963-92e1-e34fcf28dbce",
        "cursor": {
          "ref": "909e5aaa-ecdd-40e3-a6c9-e34e89891017",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "802a4c0e-9c65-4e22-a6e2-3225c057228d"
        },
        "item": {
          "id": "9c7c6758-f31d-4963-92e1-e34fcf28dbce",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "891e7862-487f-426d-a0c6-0256878494fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f4fab8-19c6-4dc2-9071-378137d6069e",
        "cursor": {
          "ref": "b224fe5d-ff36-48a5-a15d-13c2dc4fad6d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1e3f44a0-fe6c-46e0-89be-08011ecca8ba"
        },
        "item": {
          "id": "d1f4fab8-19c6-4dc2-9071-378137d6069e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2d487fc1-4e76-4c71-8b49-57fc9bebb0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5aee36-773b-4efe-8772-dc3bb5759159",
        "cursor": {
          "ref": "d90b3421-3751-4c8c-8c00-239fda74613f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "76bcf10f-c4c4-4105-b05f-c5402f2c96cd"
        },
        "item": {
          "id": "8c5aee36-773b-4efe-8772-dc3bb5759159",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a532b166-772c-4ad6-9f85-95267d08465a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42e73fb-33f5-49b9-90a5-e75bc56c6640",
        "cursor": {
          "ref": "c8f2ef36-71f1-4696-ae45-cc55ba091f61",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6d0cf0e2-2ace-4f66-81d4-160c9757da35"
        },
        "item": {
          "id": "c42e73fb-33f5-49b9-90a5-e75bc56c6640",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4a0f538e-46b1-4f6a-9df1-122a0efb6dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85f3b68-8eb7-42dd-bb48-d2e3ac30c5b2",
        "cursor": {
          "ref": "201dc4e3-24e0-475b-93df-6ee17cfadf69",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d6e3a4a4-5f9a-4e07-9a56-2a7bd78b811b"
        },
        "item": {
          "id": "c85f3b68-8eb7-42dd-bb48-d2e3ac30c5b2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c20ef422-3406-46d0-8e34-1529b596f4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db31aff3-6e64-468e-8c0c-d3321132de92",
        "cursor": {
          "ref": "82789210-d394-4756-bb87-fa1c02eaaa0e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "22b3507f-d892-4d0c-b913-db6840a32fbf"
        },
        "item": {
          "id": "db31aff3-6e64-468e-8c0c-d3321132de92",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e628f72d-5a46-4479-8c0c-25f0b3ab3e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca67359-138c-4f19-8f55-133124b42a07",
        "cursor": {
          "ref": "866bb0dd-4736-4edb-850d-91d593b07b09",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3429eade-f5ad-4bc8-ae79-03211b7db0b7"
        },
        "item": {
          "id": "7ca67359-138c-4f19-8f55-133124b42a07",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7430f1fc-9a2a-412c-8cf9-9c833b659c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f4f70d-97d4-4b3a-9192-50a87db60d3f",
        "cursor": {
          "ref": "511033f2-7f3a-420e-9f6e-3ef23d921729",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d16d3445-36f0-4803-9e9a-6a02f876a63f"
        },
        "item": {
          "id": "68f4f70d-97d4-4b3a-9192-50a87db60d3f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e8a2726a-c1b9-43d5-a2fa-6c2052db077b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcb1dd5-f691-40de-90d7-b4a610969961",
        "cursor": {
          "ref": "a078dc80-5b78-4ce1-9cda-d59ed101fcb8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fe90144f-dcc9-46e0-94e6-9ddbff8c8286"
        },
        "item": {
          "id": "9dcb1dd5-f691-40de-90d7-b4a610969961",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "33449400-a367-4f0f-8c59-e5f678121618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b82923-dd71-407f-a1e1-b630b3e42f4f",
        "cursor": {
          "ref": "d38bc69d-9d99-4133-8eaa-ecf07d028e3f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "308c0cde-f4ae-4c21-890e-f6a273ed9ff3"
        },
        "item": {
          "id": "96b82923-dd71-407f-a1e1-b630b3e42f4f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f73e29d6-d64d-4f9f-84ba-14e733eb64fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4542c04e-2710-4b55-a72b-ffae84fcece1",
        "cursor": {
          "ref": "c9989537-5c85-4e15-923a-c665a4698d23",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "656d3994-9948-41f1-b6b2-6be8363bb235"
        },
        "item": {
          "id": "4542c04e-2710-4b55-a72b-ffae84fcece1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "87f8c8bc-8703-4ad8-8309-7afad37e2dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067c25eb-10ec-4775-97af-fa3f6eab4772",
        "cursor": {
          "ref": "835cc586-a872-4faa-8077-fa23b6a39511",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1610d286-75b3-41ab-8684-af51f30122ca"
        },
        "item": {
          "id": "067c25eb-10ec-4775-97af-fa3f6eab4772",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e8209e5e-14c2-48f7-a4cd-215cff4b80ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7543fab0-2125-426d-8fcc-2af91b835542",
        "cursor": {
          "ref": "60d18b1f-7b84-4801-b6e8-0d96c7f4bc5d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e6a0a5e3-c292-4fda-b6f3-1ead9c091251"
        },
        "item": {
          "id": "7543fab0-2125-426d-8fcc-2af91b835542",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "de14ee0c-cef1-4b96-b6df-83e90595cad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da80310-fd9e-48b7-9d9e-7f86048265ec",
        "cursor": {
          "ref": "0ad87632-bab4-4241-a51b-3b416f1a4396",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c21b5f06-f5de-4877-87e7-032799b2e946"
        },
        "item": {
          "id": "3da80310-fd9e-48b7-9d9e-7f86048265ec",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "be1ac6db-bddd-4f28-b617-4bc1893c4841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e8f992-f595-4689-b68e-cc95ae944eaa",
        "cursor": {
          "ref": "7e0f4032-019d-4ddb-9b76-ece1bda84e07",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b1a15d88-d542-4832-862f-3dc37ed48bcd"
        },
        "item": {
          "id": "40e8f992-f595-4689-b68e-cc95ae944eaa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d46f780a-de61-4668-8c12-821f430e5fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b4994b-f848-48fc-a0b5-73b4856ee47e",
        "cursor": {
          "ref": "638c789e-35b1-423e-9dfe-e7f6be87775b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ce125cf9-6b54-4e1c-94e4-5c2f43cfe84f"
        },
        "item": {
          "id": "44b4994b-f848-48fc-a0b5-73b4856ee47e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6305d206-f0d9-4890-99fa-382ca27e6bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418ccb6c-c156-4760-a146-d108fe7cc8a2",
        "cursor": {
          "ref": "b42b3dad-cace-4e97-8790-049f1eaa855e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bfc2bbde-6cb3-4b3a-abf1-67a51e3e0d1b"
        },
        "item": {
          "id": "418ccb6c-c156-4760-a146-d108fe7cc8a2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "050a9a45-e535-4eb0-999a-534e50d34fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0a01ae-f5c5-46a9-90cb-c17bd89a9e80",
        "cursor": {
          "ref": "f345e053-8ada-41e2-96d4-fa7af77fa1bd",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7419351d-2ddc-4fc2-a3fd-e4f1d155df00"
        },
        "item": {
          "id": "4c0a01ae-f5c5-46a9-90cb-c17bd89a9e80",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "07dbbe80-9fae-4a33-82b0-4c7d792951a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96966c1a-caac-43fe-a26a-db1d51f792fa",
        "cursor": {
          "ref": "77c99ec7-9b64-45fa-8762-b68eab160e5d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2c6e5e9c-392f-4b01-b5a6-cb8bcf2f5f73"
        },
        "item": {
          "id": "96966c1a-caac-43fe-a26a-db1d51f792fa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3bd25a49-e730-48b0-93f8-8a5ce15d2720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbd353f-b2e7-40e4-90db-0b38cd6cfb0c",
        "cursor": {
          "ref": "fa293d30-bc6a-429b-85b0-a136af401ff7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3fafd1c8-a912-4c4b-a6e2-78eab015d056"
        },
        "item": {
          "id": "cdbd353f-b2e7-40e4-90db-0b38cd6cfb0c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "62f13afc-83df-45c9-92c8-7f6555150702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfe3b4f-e602-49e8-80ab-68bb6ce201a9",
        "cursor": {
          "ref": "3a5eaf40-543d-4d70-a85b-aa0cb12756eb",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77986bc7-e0f3-4ae4-8dd9-abfca076577c"
        },
        "item": {
          "id": "9bfe3b4f-e602-49e8-80ab-68bb6ce201a9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f79519a2-47e1-4c3b-9277-facacba4d1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5e378d-03f6-47d1-b1b9-9e089e6f3817",
        "cursor": {
          "ref": "8fc8eaa9-c350-4f47-819d-370cd47f25e8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "28c46fea-ae34-4e9f-9ddb-107933270a4a"
        },
        "item": {
          "id": "2f5e378d-03f6-47d1-b1b9-9e089e6f3817",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b9660e71-257b-4dc3-9034-e9bb7bebf4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a008c124-d358-41fc-8e8f-8ef9e2e9f441",
        "cursor": {
          "ref": "f7e1974a-37d0-40ce-9739-1b56463eed53",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ab855f56-6af4-4711-b3f0-8ae13aca0436"
        },
        "item": {
          "id": "a008c124-d358-41fc-8e8f-8ef9e2e9f441",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7fae0afa-dec8-467d-9345-76f95794b8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c44232-b9c3-4616-ace3-7bef7bbc2202",
        "cursor": {
          "ref": "f55e8cdc-aa19-4cee-a7a7-649392dae0b5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c6f83c37-e59f-415f-82aa-fd737edc99d0"
        },
        "item": {
          "id": "99c44232-b9c3-4616-ace3-7bef7bbc2202",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "86620654-f4c9-4b30-8309-e0e7ce701084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d93e94b-2215-4f39-89ab-0b1b4faabddf",
        "cursor": {
          "ref": "18b6fe42-facd-4e21-b941-1048fc7a007c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "11f2bdcf-63ed-4f50-8617-62b9a30708b1"
        },
        "item": {
          "id": "2d93e94b-2215-4f39-89ab-0b1b4faabddf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7fbc8c94-348a-41ba-8cfc-25ec25a06882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254a1037-67de-46e1-bbaf-e987a7945035",
        "cursor": {
          "ref": "09f66766-db52-4dc0-8ee8-2d4f9a9b75e4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "96fed7aa-9e30-45df-89c5-a55bfd211839"
        },
        "item": {
          "id": "254a1037-67de-46e1-bbaf-e987a7945035",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "29627285-3496-44e2-92fe-b0d916c723b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf69dea-7fa3-47b2-b97a-f8513daabf61",
        "cursor": {
          "ref": "2dd4cbec-153a-4d01-8f50-f9e428f7582c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8895eb27-34bf-4a86-8e2c-48263f10eba4"
        },
        "item": {
          "id": "8bf69dea-7fa3-47b2-b97a-f8513daabf61",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b9485a93-aad8-481f-9b02-2f448c4a9485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1a217e-05c0-4dc5-b248-89ed0187e811",
        "cursor": {
          "ref": "e85d7f2c-7021-4e38-b8df-9c2f7b0d4997",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e6995c9d-8d91-4ad1-9bb5-90f7053d5b9a"
        },
        "item": {
          "id": "0c1a217e-05c0-4dc5-b248-89ed0187e811",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ded7ca7e-8f2e-4ba2-a4c9-587c1a18bdf8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edc6444-ba9e-4716-ade4-6fb7eca04995",
        "cursor": {
          "ref": "7bc509ac-2ccc-4e3d-9463-3e2ced44a456",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8f6a08b4-5969-4f6f-b42b-b39867a287ce"
        },
        "item": {
          "id": "3edc6444-ba9e-4716-ade4-6fb7eca04995",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "867abef9-7835-4887-b1c3-2df4d383a9aa",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddf8c47-7917-4849-8366-599dbed73129",
        "cursor": {
          "ref": "91e01c74-d0d2-4095-93cb-b6567a612441",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "884fdb05-2e59-4e86-b419-0c1cb856bb99"
        },
        "item": {
          "id": "9ddf8c47-7917-4849-8366-599dbed73129",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7eeb0a6d-92b2-4118-8210-6bef6b4acde4",
          "status": "OK",
          "code": 200,
          "responseTime": 1986,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd7c7dc-e4e8-4f90-8981-c8d1276d6437",
        "cursor": {
          "ref": "fd789ab4-aa93-4d23-91b8-1d509e72a005",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0af50ba0-50a4-4ebf-94bc-34ab9a1f50f1"
        },
        "item": {
          "id": "0bd7c7dc-e4e8-4f90-8981-c8d1276d6437",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c063b0b2-a741-4006-aa17-d3473abf87bd",
          "status": "OK",
          "code": 200,
          "responseTime": 2384,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5505f22d-9571-4f73-9943-b425bcae6b0f",
        "cursor": {
          "ref": "9b7413c8-2b22-4800-8582-d95d328ebc6a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cf4d0914-9cee-4101-979b-9d5601b920a9"
        },
        "item": {
          "id": "5505f22d-9571-4f73-9943-b425bcae6b0f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1f28a2ea-cab3-4c47-be9e-eb3fad2e9e3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5505f22d-9571-4f73-9943-b425bcae6b0f",
        "cursor": {
          "ref": "9b7413c8-2b22-4800-8582-d95d328ebc6a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cf4d0914-9cee-4101-979b-9d5601b920a9"
        },
        "item": {
          "id": "5505f22d-9571-4f73-9943-b425bcae6b0f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1f28a2ea-cab3-4c47-be9e-eb3fad2e9e3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2208fd-3caf-4684-a499-2106cb2ed9bb",
        "cursor": {
          "ref": "1c60bec2-8202-4bb3-952b-581a4419d02a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4290cc85-1e8c-46a0-b99b-85122a28ad71"
        },
        "item": {
          "id": "6a2208fd-3caf-4684-a499-2106cb2ed9bb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2311a90e-cc52-44ef-a482-54721402967d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfed8d00-c57b-44ca-bf0a-8ed03626e57c",
        "cursor": {
          "ref": "32e960e5-d730-4fb8-99a6-40f508ebf610",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d52d8318-e21e-48ad-bf35-99063cabdc7c"
        },
        "item": {
          "id": "bfed8d00-c57b-44ca-bf0a-8ed03626e57c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ddcce1c0-486d-468d-bac2-c5c4c6f75350",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}