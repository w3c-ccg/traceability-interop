{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9a97b2a3-2bb6-4781-b90a-304cf7cbbaba",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7bc4ed20-ec32-4fa9-b715-1e9ecd2d4f35",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37812d30-575d-4177-8025-71128dfe1184",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "72b30079-9540-4131-84fd-791c49300f14"
                }
              }
            ]
          },
          {
            "id": "4353a2a6-392c-4927-98d2-fb791f29b06a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bd8741d-a428-458f-af9e-a3a98c333f74",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0bdc244b-d2c9-458c-acfd-fc5fda5c3f21"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8ce0b7c7-81d6-4679-b150-aea700f3583e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9618ba37-ab78-4b52-952c-62e55293e0fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4415f988-5c40-47f7-8961-ab45536cd77f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98b74b17-0a1e-4ab9-9b8b-e205caea45d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "749dbb84-7671-4958-9274-86690f4f95aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cab633c0-1e91-48c4-a9ae-b1d0f5690d13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d947abe6-8e23-4705-b132-acd816ee97d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "30cc2b8c-8950-4145-a8a4-2a76e03191c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1df52222-5ac4-4235-8e16-e44708a5dee2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fc37e2a-8de2-4ad3-8f3d-f4d9fce4b331",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e44c441e-80df-4b41-a672-d62400960ac0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cc2ef8d-a820-4aef-b2fc-7bdbbf9178d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2549094-cd06-432b-bc29-fe2ec3bb5005"
            }
          }
        ]
      },
      {
        "id": "238698df-ee3c-45dc-8eeb-b97036c8a271",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3256722b-9a5b-481a-8968-b9139c12acf1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a6412d6-3995-4850-aede-fb7943d1875f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "14eb0722-a569-493a-8f5b-c14bb911ddce",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050b9fd5-cda1-46a9-b119-b80fa45f7162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8096bd87-3bd6-4615-b06c-82cf341e63a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c453301f-20b0-4260-b9a0-da742ca8e109",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43904764-2abf-4321-9860-4c2c9ea11938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fad8a8cb-4799-4473-b33e-d72f9984f405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f149ac6-cd61-46d5-b6ba-ee3fad0f6125",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d84281e-0732-4e37-8ca6-1695684d90b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e65e0c3b-01b7-4066-8515-69d3d9ad58bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1cd09a59-5ed0-4e17-b1d2-3ea8a55b0ecd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0055bf66-1c47-4b40-86a1-4728ab4524af",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11e8490-e64e-4b20-92dd-7b0f86d7176d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc54900b-a619-4559-a3ac-618aca6dec91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae32d53-38a7-424c-b9e5-b51f2a25e96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcdae3d-1ac2-49d3-a66e-44df52f88b90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dc4c3fcf-fc54-43f7-83d2-6d42f74db401",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e17d8ee2-6e00-47ff-bfc2-80e6c30f4611",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e346362d-71c0-4ed2-82f0-58f4d1c060c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6833da59-7724-4125-8dd3-ee878373b19a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f037a17-7a89-4aa6-bf33-8d7b437a550a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "228c2add-93d3-4690-b807-2ea542cf4117"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c3f2b08-1b8a-438e-a930-9febc2c5a871",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4889623-43f4-44a5-b4a6-172378f6f6d4"
            }
          }
        ]
      },
      {
        "id": "a6a20a6a-8f0c-44ae-be7a-da2b987b8ce7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0209f23b-42db-4638-a782-0f40934c26da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36fb5872-0d84-40a8-9382-d9b3fb81e57c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e9fa3629-d782-4412-9811-e813e3261455",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771875e9-afeb-47d5-bdc0-0307ab425b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8860ed33-cda3-4a6d-a28b-372c97647817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a448f8a9-5108-4037-a992-65615d428e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4eee8afe-059d-401c-a8ea-dbfc93e38634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2153ce1-cda5-4786-b9ce-b78b60fec50f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f426e5-dc61-4050-8ee2-f445bfb3d187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c370b1dd-467c-46cd-85da-fd34e6663e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c0f40b-19ae-438c-9fb8-674e94c2496f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf44a0a6-c409-44ac-890a-adf9c7f1cd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6d8d3d-43ff-44ca-a606-963a0da93982",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1e10cf-19d6-465c-970c-1d610b867936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a97176-54ab-4e51-9814-08c79177a9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a2d69d-402d-48f8-9f99-6db533a84a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcf5ceb9-0b45-48d3-8f40-7b1cc460aafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b09fef5-7f01-4477-aaba-39dc2b10cedd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbf44fa-55c0-4d8b-a389-3547b2fea29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61122563-6e98-4bb3-8420-c4303607a4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6ba6de-a120-4d64-a84f-d82d39315270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6eca305-3136-4b49-83a3-7bce4bad5a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eee30d-f09a-4d30-93e4-12c5901c1f64",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec5e19d-f1fe-49b5-a2cf-75e7c3c7c7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecdcd16-c170-42cd-af94-0c4c4b4460db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fe2cb0-b082-4a2a-9662-77e2c5e7324b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed3304e1-cd49-4a2a-b79b-8a4dfbe6da07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e37505-f2c2-4251-b753-12ad610974ad",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3be060-2527-4eb8-b11d-6abdd9a343e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d098179a-557c-438d-b1e9-8bb92464b010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a995da-b1f7-40de-85da-6533d11244fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9ad98de-d045-42a7-80db-95cb6521bdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e9b539-2268-4fa0-981f-3fabf8e61d91",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44961ce-c669-440a-9720-25e564878259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b870187e-ca1c-48fd-b4f9-13cb58166d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec440f9e-ff50-4ea5-a186-24814884ee45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fb2c81e-ec3d-483f-b2bc-185b50b517cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b136f7cc-f598-4869-84bb-6876aa67dcbd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a048106d-db4a-43d0-bfc5-6c701f253e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14e37bd-4250-456d-a653-120dd2391509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a35abf9-4099-47c5-8f5f-589c7acf6454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8cc1572-6bd5-401e-80ec-0df883385bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbe389a-7fe0-45cb-8a3a-808c08095cff",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffabb710-4dfa-4476-8fe7-f59c8ec67960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64ff6f4-ea3a-4f73-a750-be0710280a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969425a1-6e13-4c0a-abb8-eef464f2fb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f5b8d06-a250-4331-9876-45e259c53e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b6f4b4-e693-472a-9ed1-e5bdc74ff360",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e802d6-1f67-44b6-a4ae-eed46b24cfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbd231b-75ee-4865-98c6-995ec47fd27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1daa487-e6c7-4e4f-a073-b391deb25cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94c89014-e288-4b96-9b1d-cda24f8ef291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c61a76-3b32-4489-a869-04b14bc8a9f7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dafd5d0-a2fe-4f10-9f85-57dc31a8d2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904f9a30-2c62-4147-ae22-c3451d2e59d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0598f5-a48e-412d-8c1e-c3b678bfad3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3155418-763e-4efc-8f11-944a4f8e16d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2096dabe-8228-4ba0-9045-ba472a7d1275",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875159d0-ee89-44b4-95a6-02acb8f544ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4298a4-266d-4767-b6bd-e8bfa22ead40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813adfad-32f7-46b4-a7cc-29ca06f9182f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1a1fe88-bc1a-4cc8-952d-5486a7cb3648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d8a54a-ed61-4b44-83ac-fdcf961ec38e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c086df2-0c74-4ffa-b169-ebcecbad47d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1460d7-5ce3-4f26-8c35-9c9ed9d04c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6f8452-514c-4f06-8a63-8f340a0fb801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72e380b7-97a3-4dcb-ac7b-254f6d6ccdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfe19b6-53a8-4df9-841c-8c2ab4d5f147",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c664480-bf3d-4103-b755-9ffe428817d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830b1599-2c04-4610-9576-4bfe2fb69477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f524d3d5-c768-4084-8d63-c55b87015e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "163233a4-cbe4-4112-a39e-1b34fbad8a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fdf092-c41f-46ea-ad86-403c7e5702b1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1877eb43-adc0-48ea-aaae-22b805be8473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9bbf80-6da8-4c08-a5af-2d4af2260ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a68c73-3251-4a76-a90a-c3595162a6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbffeac6-4b76-4402-be19-2283ef850210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e759b5b6-0ee9-4c00-b28f-ced005176f68",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999d28e0-bc07-474f-877c-dfe4ad76abb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee4f7b4-5026-497c-bc47-8ada357bc739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41401ec6-6298-44f0-880b-4d93aa34a91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a045e647-ebc2-413e-a121-24199e91902b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672dc88e-9e69-49e6-aa4f-37d9d1a3154d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab8c783-5b9f-4d76-b8dd-04e5208f5db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae635c4-c147-4c12-80e1-b24400e0cd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68db7adc-9581-4c7d-9d5c-683931286e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bfb47d6-d963-49c5-8c80-ca6b17f7cac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632ecaaa-9136-4c61-9381-a1bdb1a2d052",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b269f73-0238-4d5d-808e-b8c3493d5a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce52e00-0b28-4929-84ce-4e06d733e9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751668fb-79b1-4256-9b3a-7eadf72c5a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1b16d2-3248-4862-b301-33c9cac94559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe622b5e-1ba8-47c6-9a4b-280781040a2a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19284c08-9df8-4a3d-9379-17a53fc7dc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77efe95-e3a4-47a6-8c3b-4b9ea0452e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1710234d-98c7-45fe-803d-0b65faae7a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8315e38b-6b3c-4c17-95d3-d57dd6d387dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1687f2-6489-40e3-ba32-4dd596e1e1c2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee24d19-50aa-42a4-a4cd-ae5736bd925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef0e4c4-1ffd-49ba-92e0-8ddf9fa87924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8901ed-7f2e-47a9-a30e-0b3bb9dcf8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0ccd36-a54c-4116-8fb5-1a177c1b49e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a44728-a808-42bf-ab0d-c7ea7405756c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49960494-9b2e-4156-8195-bb742ad6c4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df327a4-5653-4e7e-b80b-21742fef9aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fc6238-2a1a-41d2-a618-e700b7cd8c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8986db69-27c5-49e5-bfa9-95cfc607830f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea343fa-a424-4e51-96b1-9a546f856d30",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c00d43f-5ca0-4753-88e5-3fb97be09461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf57983c-f949-4cd8-a90f-4427825ae7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543e5cd4-3177-490b-b0f1-ffd20787e0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32f91c36-77a7-489f-9a46-3f48c48a93df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfe5aaa-01f5-488c-9384-a0d8ab98ba03",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958710ef-05f2-42c8-b62d-4c946defc70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af40bcd1-a625-4256-9cc2-629c1696da66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d499ae6e-b1ca-4cf5-8b01-689c8d0e0e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef02aa50-3b20-437e-a667-f113cd16bc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c39472-289c-4c7c-b034-75475c15a14b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eddb5a3-840d-465e-95c1-70f2dd1eb4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2a6c1c-07c0-407e-97eb-83e2ee42b4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cb7121-0efb-4f4b-be66-a5be2dcfc505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee8fb81-b604-4032-b247-f1564cf88ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38478311-8540-4dd2-bd2f-c4cabd4946ac",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01f5df8-5119-4f5f-a47a-7005500cf6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd19a258-3cf7-46e0-b25f-d926e1bd7614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4906c678-038d-4f08-969b-49d0efc78bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61010c4b-02cb-4828-a542-ec74dfa434d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9089b88a-766b-468e-9c59-b2612f86af7e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47da95f5-b35a-4c39-aa05-6a6977315ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f88450-d112-4f48-bd9b-80157da256b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6650534-0d3c-4109-acc9-7218f16b51e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57311ab4-7550-4bfc-9267-c186dbcb5905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7fa7b6-c69a-46a9-b586-17650baccaff",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ab44d3-9c57-4877-9d2d-ae52f1ac73e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be5829a-91f2-45dd-8db2-4f06d6cf0377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66969139-078a-461a-99c8-66258bf3fdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7668924b-e059-486e-92e3-e59ccd177ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f680d907-9620-42f2-a00b-02291cb119a7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f55a4a-5ad5-4a96-8604-93baf560593c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2c9f57-8760-44f8-85d3-d022c4d8624d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d5011a-e44a-4125-a350-2f05ca8fe41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7981855-c721-4093-8a6f-14b800a73261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7752c35a-0355-4f3a-af60-a30d9d892d28",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a03f43-993b-4aeb-90af-ef9878d30e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e318c904-eaaf-4c40-b292-557e494c2c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b58eef6-e437-4acb-85ab-1f4bbaa7d75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "415f8097-7ded-403b-bb42-3a2de4eb5699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4553eea-184f-4791-b695-092c5fcb52cb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e99ce06-d86e-4a46-b3d3-b53d7182e59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a178ab94-ac18-49bf-913b-c98378f4eebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcc0a6e-d34c-4ac0-9dff-5542f12194f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "df22f57f-3713-41eb-a473-3b5b5636bc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8e7009-e0d5-44aa-9c04-4ebfd779243a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b98abe1-5385-4d0a-a92d-70b9b6adfd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ddcf02d-06a7-4844-aa75-21713c55e6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6065a94f-7980-49dc-926e-26fcbc541af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a43e7d5a-c8e8-4992-bea2-fad04e8e4f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24369498-7d6a-47b9-982c-fede52d5f8a1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8198f8-0e0c-4a91-a6fc-ba8368326d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93851a63-fdd2-4b1e-b237-3f9de9bb4682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd2459d-80f7-4566-a05e-afdd2a7ced2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "080ce180-3194-414d-b035-81733e1b5ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b25457-8b01-461e-a207-9c2e1d8a10fc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c4facf-47a7-4174-80bd-f5959e1ce595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dc495d-1628-481d-8143-c46889789a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34aa546-d86b-4250-bc85-506bd473da06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0f2b99-6ab9-4f70-a5dc-fd6ac2ad7295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df6dff1-a88a-468e-b383-cc367d22e1f2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe2b963-57a4-462f-b1e0-c6d92f3ad29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53027710-15e8-40b2-bced-a9f28726e4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7b9d32-f211-41d3-8a24-4906252696df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40cc3e1e-ac71-4208-ab08-53358f22d5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212fa651-4945-4e77-aec1-0357fc41f307",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ee7743-e130-4812-b9bb-2c30d62c9317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b44858-e757-4a02-ad8b-44047c41dbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f830068-ce42-41c8-aacf-7ab10cef8d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c1157db7-41a0-4a30-8cc7-dbc689c20de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa6b17f-7699-45d7-80be-cfcaff058cd9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee1bd74-4da6-4d79-9b17-f35f3cde3093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36aed217-f4bc-4c72-85a5-18f5afd98a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5ad3bf-1710-456b-92c2-0e43c3a42381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a44c79-478d-4459-a2b8-7b0cc115f822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9f2b9d-93db-4045-beb0-22b2fe17e3ab",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65de9061-40c1-4798-b854-91ba08709fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d46eb31-b215-4c30-825b-705a39817aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5751c0e5-12d2-4c35-aa92-8fde750c4fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1e52b5-4901-43ab-84a9-03c47aa9a1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4f3cdc-8fb5-4852-9cde-38fecac357bc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49665a81-2137-4c92-9acc-4618df682eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513aef79-bd71-4854-8741-3514cfd8e343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdc2bdb-aa6c-410a-8a77-a1847f1be93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "995995b9-2388-4f6c-a9e0-8cb4f1a9274c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c59eb28-d201-487e-b090-91ba671581d7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38186335-eba8-4749-818b-a7cf42f1f986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e39633-231a-4625-a430-de73ee5a7bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965ac529-0b5c-4b02-a444-627c143536c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "947f0bec-f2fe-4253-b75b-655e9461647e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801e6b66-9f8f-4cfa-94fa-edfff41bb0e7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd70f63-2d11-4d2f-81b6-183deef961d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b0d15f-7c77-41da-a324-b5155a0291a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cfb71e-909d-4a3c-8abf-30ff927e6d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87a8a4c0-96cb-4d27-81e5-71ebb6ac81ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32adbb48-78e9-4a31-8fe1-f2d86f28d488",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7348377-ac04-4bd8-a29b-95c430bc835a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df4b5e8-e9d5-4382-bd9d-059381952726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1059c559-8afc-49ba-b595-8e2c7513691a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "416980fc-fdea-467c-98bd-bf741f30c851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c623ab7-deae-466e-a978-2437841ea696",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e10d5c1-6364-4dfe-9b0c-7a6898db9d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250f30f8-bcf6-4c50-aaec-91938479d194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949693c5-7745-405c-8a9e-48acbcbb4811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0d19f6ac-4ad5-413b-aab3-7fdb972c2800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec49455-c91b-41bb-a8bb-95cae299aa33",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1fb0bb-0952-4719-8f98-6f366dc02cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d61b41-c849-4551-9fd3-df171c235267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1686c541-f5c7-4d28-b375-e3dd1f0a5ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "66ec7b8b-1191-4b1a-b5dd-482b9b28f90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d308902-426c-4788-8f99-e5f8f79f03eb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51af4666-3e41-45c6-96f3-abf7aec5d75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925e99aa-cffb-469b-a6ab-f753aa49fe79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364237e6-5ec9-4aa5-aeec-f771e8c8d825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf443fb-3243-455a-952a-f6e20f115d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e803891d-7909-4c35-a188-a1f55f9adf7d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b629eba7-6638-44df-88e9-de78a8caa36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9432d513-9775-41c0-b199-5f42123f17d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a693b4fe-6201-4562-ae24-2f303d926f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaff0d1b-631c-40ed-ac4e-70c7655298ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4dfea2-63f4-4211-a64d-bfc24fa2db39",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8788d035-5946-4254-b48e-149b62b9797c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8adede0-a67c-44c4-99ad-cf49f83cb0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0012c78-328f-4b83-9f11-3270e8fdfd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daeea1f8-e36d-4b3b-9f44-824ec719834c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990ff77f-b46e-4f82-8074-ef0df6cba0fa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f416c9f-7f6c-48bf-b3ce-7051659a9f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b211a20-e840-43fd-8398-24224093de5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4176feb1-49bc-44ad-b095-ae6ad831e2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2429b9d7-b73e-46ca-8545-293d96104924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24cbc95-831b-4d23-9576-41cbbbacf32c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bf1b5b-a754-4e2b-9567-46892d33d3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0096d09d-0131-4a48-a658-d45c06c97d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca87c77c-a891-4d2b-b934-5ed3e65e510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f133ed-62e8-4748-8b2e-fa8e82386c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03226ca0-a364-4e12-a190-11bf4749c438",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a92722-39bd-4409-9834-37436dc208e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41e8ddb-8514-4315-8157-1c7e3aa36daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b233a6-37f5-4f3c-b1ee-b00bebdcc3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11e40cc7-a9fc-4d92-affe-9ee911baaed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814ad1aa-b7e4-4372-9eff-6088216bed2b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4eb977-bbd7-4aae-bc09-bf0a90a8ce6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a54c98-4164-44fe-ac3b-b8a9aa86d49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fcfdb8-8c17-4f86-9f54-2a17068fc996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3793f1-2c9b-42aa-86a4-be6de1f5a70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f71f0b-4d00-4f6d-953b-753a57cbdd01",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b14757-04b1-45cd-b37c-dfe1802cfa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b034f3-af3f-44df-b765-15c277eef493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a9aabf-5433-452a-ae6c-b8f02a934247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c1e73a-6f2d-4c6c-969f-ffd06f9c6d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299498f9-fff2-4728-a4cd-879851026ed8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde08022-618a-4065-8a1e-3442338cb84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6822c77-d131-4117-b761-bf37b68d585b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8508dc2-f56e-4764-bcbd-dc53ea12400d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00793350-fb11-489e-b464-5091514d95dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136b8cc8-284f-458d-bcc4-cac2fd2e3359",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018c09d7-4982-4c22-9344-9f7e064a9d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14dc1b8c-0f1f-4e70-915d-84f7ba4606bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b268952b-07df-4090-ab04-013817118188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76302d00-37d1-457d-af77-e385d57177a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b9a5ac-b222-4467-9f09-7a184b95f836",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb58c28a-3b77-48cc-943b-e75369cd3506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1b913d-2b70-47b5-9e2a-31cd15adf56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246e083b-e362-4529-991a-aefd23a5ea2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e202ed-85a4-4e76-b525-cfcc32a42dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f614ceb0-5e27-4a2b-aa5a-f11e1ce06da9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ec4d29-f653-4a59-be2e-3d1700697a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e7560f-b5f8-4cfd-b9f9-3be844821ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518e5cd2-6ea9-4a59-a23c-a7022686d00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1d8dfa-a6f0-4b9b-a9f9-fa6aa17ee352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51ae682-54c5-4521-be0e-8960944381ca",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc228b6-9048-4e28-884b-9231aa2160d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b723cb-00cb-482a-856f-47f4802ed7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483089ea-4fe1-4285-b2c4-3194c6bb3d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f3aaa6f1-97a4-4465-b4be-2960dcdf87f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28c6616-88f0-42db-8ad5-0c67aaa03af8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c44ed1a-a436-4531-91c5-89912a580fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061bc798-a31d-4e80-b259-82f5d362c29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9f3935-99b9-451e-a649-1c35e627b130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5aba7b-722a-4f7b-b0de-30350da68fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f996382d-9d75-4411-81bb-ffe2226bddaa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb8ead8-7bda-4abf-840e-fc2624d4664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4878b6f0-7b74-44b6-879c-63bdd963f939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b93305-3d09-476b-878b-06c8b94ef9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f500e6e3-e892-4567-a301-0d65d0920440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b2b5b-80c0-46a1-b62e-09168738b0d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdd1eee-492e-472a-bfcc-8dd993df5d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2c8faf-a301-4fbf-8d68-61baf2f746e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe65171-81b8-410b-8317-99f052b6f752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54f9553e-05a5-43c2-85ff-671a6a05a572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f851122-44f4-40e7-8fd1-0821934bec9b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b909fb6-823e-4de7-ba08-73b954ef9133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61feef49-1a24-4a3a-9a01-cc0264cd07c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d37018-2b54-4c73-81a1-d99dc7f274b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea81121-a382-4198-ad97-d82f3d82ac13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94eb3899-1c8a-49d2-8745-1e4bb3541b0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68697a70-3efa-4e13-9229-be2f3c1a4b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3921be45-d75f-48fb-8fa0-060cc9710b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e244d9d-4191-4c08-b7cc-f0455e069f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb9d65c-4d69-44f5-9858-5b46f52efacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e67b327-a339-4948-9948-351bf60516c3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1569cedb-96c3-43e4-bcd4-bfec6a6ac7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c874e09c-d9b1-4b4b-b5e9-7448fb4dfd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae252be-6842-4362-9cb9-681573cdc4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3e0af6-a24b-463b-8842-426a6feb9d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10edbe6a-1cff-4225-b30d-7ca26b68b413",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2156ba8e-8128-4c38-af1f-fa58825fbd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381fe044-94f7-4b59-bd1c-84d1820a33d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314611e2-bf06-4397-af95-05da400a782e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bc1a92-eaf7-4797-9d13-e24c4e63a345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2add57e-2805-4155-af06-82a6eda5aa58",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e46b1f-1832-4f64-bcc7-dfbb575036a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b71c3c-d7e0-475f-a304-9ebf5053cef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2794c268-6191-4b43-a02e-25a58b51c580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f50738-4854-4988-bd99-27bd220490ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee7bdf4-e107-4626-9647-47bed8be52ba",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cdbf70-2e0b-44be-ae52-b28879ca3fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b431ff-f516-4ee5-8083-076b6f9e3221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45256f02-c4c6-48cc-8850-16e297a3f68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "403c9069-27bb-47c6-8ab5-39bef1c1eec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3673294-de64-4192-b35a-9b655eb7eae6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe7b814-c329-425f-99ce-941012b0cfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a43877-4817-4430-88de-dfa58507fabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1ff337-2386-4b9f-9113-7399577c92bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a46af56-0cf4-404a-971e-d979704585f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f17fff-037e-46a6-9914-3ccfcc452b53",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd758e7-f79f-4134-bd39-e210ac60741e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12aed35f-5ba5-4586-804c-50b5b28bf5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e942a3f-7011-43a6-abb3-d3578fd6c0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e519be67-3467-440d-a4b0-c33f0cc8c655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7328f36e-a0cc-4467-ba83-a92ca28b3abc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9235509c-d665-4174-b6c4-2758c76f0dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d8fd12-0eb5-4048-beeb-4bc5df8c651e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4dd3e4-c6cd-4c6f-afc9-262cac366e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea4fd2a-a481-418b-98e3-1ad74c32af34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5345a5-7bd5-47a5-99bb-121a1c2d8b13",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70927ed1-4f8b-45a9-8857-ccb5f7b5c220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d955133-4233-49db-a0d0-64ea50520d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a023f1-c938-45d4-a1e5-d56c41438f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5d0706-2411-476f-bb7a-7eaf2d0231b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6855c46-1df6-4185-a490-8e2b6a89c7b4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8048b434-517a-4c08-9d1c-39ccdfbcdd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90f8624-dcd2-43e7-aed8-0b3c0fd6335d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57c5ad4-ab26-45a2-b689-814fa6b98c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "205d9876-c744-4500-987e-093593447c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d3fcbc-51cd-4e58-835f-dd9631ed2a9a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dcbab6-f5fc-479f-a10c-42d64e951985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319eacfa-d876-4658-988f-75c6cca5c81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad029eaa-4e2e-4541-aeb8-13a6b4c511d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b372555-c662-4fe7-b07c-82dc4509b5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c847a8dc-5a6e-4b0c-8cfd-5f9782e9b220",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdb4af3-427b-454f-9fa0-a9876c0b2238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a43799-cff9-42ee-83ce-6b4349c11a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a309d4-4b96-40fa-a09b-e28ee45d8696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9f969a-3a46-42ee-9120-9bee8b66c5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75afba66-6ee8-4ac4-ac69-2c4ed1e43c2a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f1fd76-ef58-4cb7-81df-e0fdb966269d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b73e4a1-4b7c-4766-98b9-c001751b7ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f524fc-a849-4723-9237-b8e1c2822a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3991ce9e-e506-4a24-a8db-887f6e221e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37a61a8-d8ff-4844-ba73-21a448847016",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb834e8-e0d7-47b7-aa19-0d53738f7d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ec1be8-99ba-4ad9-ba8a-8d131425711b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b087179-b109-403e-9e89-7aeafaad4b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28cab72d-bd17-4012-ba29-109727a68069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81c6991-0b60-49bd-927f-d94e1b29bb19",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bef5144-cb96-4b9e-ab61-717a43f1be00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a459a6-4a36-450e-bd24-99f5e06c38ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2d6536-93a1-46a5-98da-0f7e700ec333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a2d34b-a263-4acb-b078-09c4457d6058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af9b2b2-b2fd-4cd5-9701-80bce9bd462a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1852ceab-2627-4425-8818-6dbf349729b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8633ba98-8213-4d45-b9c8-3f8b936364db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a72c84d-445d-452a-be1b-b28d2845b760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d5939b-eca2-4730-934c-98688bcdf9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42aec7b-fe14-40a3-8b03-2fbaf166efa3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7775e0ce-086f-4277-b44b-02178513fce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fe353d-0ed1-4c85-bcdc-c262aa31a5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1ce6a3-fcd3-4a57-9e8a-3afee4a90813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d647813d-6e3f-4bb4-aca1-253c87625629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abd50a5-ad8c-4a19-aa2a-5b185a66ccd0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed784028-b8f7-4776-be8d-22b1e224d1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e1d3c1-4d39-4b3c-8261-9b9e659a3710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2462ca61-a202-43f0-84b7-c2ffbcfc28a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30183ba7-941a-48ae-bbb0-4949967c7380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e8677e-23c1-49dc-b008-2708cd0a3806",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c16ba8-6a5e-4fb3-bc92-01dc6ca49775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecc2a33-94da-4b9e-bf6a-121548435e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6763fc50-490e-4b32-a8e8-a4e29ddb3102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63501624-5982-4f7c-8b73-3cf1a180a162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38a0c13-356d-4898-bf31-71d2fa0216d1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0fad02-c388-4030-aded-6939e01ca0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d837e5-3c44-4767-abd4-0f9ef2cbe907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfd8368-6668-4619-902c-1671496040e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38334a14-a044-4bba-81f3-60f7f51e869f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d35960-f3c6-49ef-aba4-4a3e0fdbfa66",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32938db-15a1-4dbf-b28c-1689c18b02d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a6a2d1-f273-4ffd-826f-bd402fc8e985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a025cc-c921-407d-b6de-1265181f0219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d32c90f-f1af-4602-8a2d-1f874bed41d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca681f03-5c4f-450d-9b34-74cf3e9f7474",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d34a712-a910-4c7a-81b4-337bf4c4e424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfe74ca-b893-461e-814a-0f94fe3de9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e231d1c-6ede-4f8e-8cfd-140585d27d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd1cdf4-8ee4-42b0-be91-e8411a29fd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481b78fa-1c80-4ec3-8161-752b573e84c0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3c76b5-92a0-495f-bb8d-e8142fc90aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e26b42-bb4d-485f-96ff-07af54ca05d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf0a6db-c6f4-4590-b49d-9a04aa03c2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67307c2b-0b37-46ad-b444-958ccdc17613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ef1548-7d45-4c08-b57e-92d9c283e59d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce330467-d8e8-4ea3-81e3-6f70cf617608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8757b35d-f636-45e3-bc7e-6e96ac59f2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b563d83-d7ee-439a-ad7b-d3eacfae967e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b33cc3d5-a75f-4f06-ba2b-b7625440dcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f3f8a9-be9f-42df-957f-fef9be20b8a0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fb27a0-4bf8-48e6-8b71-e00483e4aaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85cf164-3048-4470-9456-520e9ce55976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677b45d1-be27-44c8-bbea-41f7461a89e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b216a7fb-b8d1-46b6-b88f-a477aa384e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b29ce6c-31c1-483c-8304-eea50ee4b0b0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65798f9-11e7-4e99-944b-bfd371826815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b20f09-794f-452e-a26e-b2577fc3ff13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c782e92-2c15-4c87-8c52-7212c62e4b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd3ba8c-a5b5-41a5-9f09-85e056b81b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a665a8c0-e8ae-4889-9158-ab7080ad445a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149bdb65-9ab9-4b8b-8f01-268db80195fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727674e9-44a7-445d-9c8b-fcd18c6b8c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ad6b72-54ad-4c8a-9490-65383a1944c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c80ad55-c4e0-4829-bc14-1f8d8e083eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451f1b07-4206-4e4a-baea-999c65fbf45e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d47279-4c99-48d5-8945-527bdf8fce4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4704e086-d3de-43a6-95a9-ca158a924884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4750c69a-4783-49ad-ba88-3cf2d57676ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d42be53-6107-48c3-a864-df3e356ad0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44d41d1-c78c-48ee-926e-657c26228ba1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3759e51e-c49f-4746-81ac-eaba8b482560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af14f018-30f6-46ae-9d3b-c7effc4e5595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5295db7c-318b-48b2-a95d-18b42cf15d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7aa927-1d89-4b8b-af3d-e74451ff3821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ffd09d-f0d7-4e45-a676-bfd3a31e5c27",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8089c76a-2245-4324-b73d-b6a391eaf8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6eac55-a756-451a-82f7-d11222171d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc21a8fc-196c-446f-9b87-13a30998a54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "87c9159c-8633-49d9-b8a7-ebe96ef3f0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50774f89-f637-428a-8575-0f0b4e730628",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3180546e-c4ee-4d7a-b11a-65e7b1f54b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779d8f9d-85d6-49da-9eee-8f720b8f4ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaeddbc-ce5e-4456-a425-d337a2c0624f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b79772-cd59-41d9-955a-1a77c11b71da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53455067-9fd2-47f3-9620-285bd771cf4d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76a401a-5631-4eb3-acb2-7e1aee53115c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0bec352e-40fc-462b-92c4-7f12caa83c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9611096-582d-4c80-b558-ab8b2422d02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b2fafb-2da2-4d28-a181-56f2b073faab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f17e3630-5993-4992-8af9-5e42a4e8e314",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d479c1ef-45cf-406a-b44a-00b540c3fdf8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f21165-b8b2-43b4-beb4-8e4a43943f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf7a5722-f949-47d8-9dd3-604b4bdb54ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21eb4d33-b752-47dc-b040-2deb54981bc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6181fd47-0393-4eca-b097-a8b20f5dddec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4478e1e8-a921-4ec9-8810-bd22feb7f27a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3b5c0bb-545f-482d-9910-1af7bb7a0867"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50af5e6a-9e5a-48be-ab7b-2a9551b831db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cb20794-c8e7-4bb0-a7a4-9a271bb1eccd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6c88ce1-b4c6-438e-9f75-0575890ef850",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "caa91e7b-c4b7-4da9-9d74-53e14556a098"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7a335626-9937-48b0-88b4-65efea06619a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5de6c385-e534-4b45-aa10-02ae0dca3422"
                }
              }
            ]
          },
          {
            "id": "6c5d10fb-4b4e-44b4-a8a5-066fa27f926e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9476f2b7-6d01-48db-8def-b776a7acc50a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d93482f7-2324-46a5-bad0-7980d29083a1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7801d9ba-9d52-4a11-a83c-b83164c5a9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f53b279b-252c-4ab1-8aed-5002892d625c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342b3e2b-896f-4f63-905a-79ff06e2fb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ef7234-d3bb-45f6-902f-1d4aa8c75e1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa1bcdd5-4b8f-453d-b21c-d28e4b3ceba8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63230be5-f9ee-49ab-a2bc-ccde0ba8d581",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e42883f5-f85e-4d80-9f2f-b744301da5e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1dcd415-ed32-45c0-988e-df9d7816ff05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "332b845b-fc72-4ce4-bac8-40e8cc2fd7ce"
                    }
                  }
                ]
              },
              {
                "id": "5655a431-9060-4263-9168-5fd3d3ddf0b1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "445ff725-96f8-4ab5-91f3-79853fb3dab2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1122512f-f80b-490d-9e6c-faa6b708f440"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3e5d6e4-c666-495d-ab3a-e20ccaf12565",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61885ff1-25ff-4271-8a25-49f0cb4ad752"
                    }
                  }
                ]
              },
              {
                "id": "9200148b-9701-443d-bff2-7eaf2a14333c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0547a260-4819-4273-b8e4-3baf662c1c32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "efafaf11-a970-46e9-a472-5f54991119b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e88d2d8b-b9b6-47c6-9543-f23344807aa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76a600c0-e048-4097-bbcb-fba7c6d2a18e"
                    }
                  }
                ]
              },
              {
                "id": "f31e5516-054d-441d-bdb4-78e2f433765c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fe7cee7-249f-4d90-a192-475b0808dceb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dfed819a-1aa3-4144-833e-3707ff51c78d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "375a27db-59c6-48a6-a55b-1b0a463e69f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fb4b6260-dbf1-4377-b42c-869f61ed5b69"
                    }
                  }
                ]
              },
              {
                "id": "40cfde96-a839-4123-82ab-af092f59a1d8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ade59c47-6a10-4185-acd2-22d4d58b2447",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44e188dc-b6c2-425e-b630-48becbcea2bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35ff6d69-aef5-40c2-8942-22d0b347e6cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e58664ff-1d84-4668-bb40-c34c7f56c751"
                    }
                  }
                ]
              },
              {
                "id": "1c3a5b5e-5804-4f61-b057-1607c13bafc7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0456b947-950e-4b89-be5c-f8a61d7e20f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "185b39e3-b5ab-4307-bd8b-4d9a097629d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d36dd290-fb48-447a-8b5e-7f9ab1330d97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8052afb5-d1e6-4251-ad8e-ab042d9689f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc18b937-d22e-4230-b345-eb1a2ed3d5d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f22aa0bf-e09a-4fd0-8e03-df57966091d1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ce4c7d62-e715-4148-a188-f7807c8c9dd1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94a064aa-3d61-488b-97e4-95ba74ab8372"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bac5d122-37ac-472f-a181-f19698a4d288",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2c83c131-ed19-4ca3-9044-71c236402f2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06d10313-d160-4e08-b2c7-17f27af26dfe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b941e39e-8882-4d8b-95b2-bdfff4ef8388"
            }
          }
        ]
      },
      {
        "id": "9d8f9928-a9b5-4f1b-8bfc-5d51e5b6ae21",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ce2c5ac9-47c2-4c85-84f1-4e49919d09eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "101c20b4-56b8-4bf7-827a-a4b3f1b75155",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54693fc0-c773-4c2b-95fa-ae1502fae2dc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b9d022-4d03-48e5-b3ee-d05e252dc106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a7a2f0-70fb-44b7-b2a2-3fa814b69694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2091509a-8900-4d20-badb-fccdac12ebbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7abcf13-efc5-48fc-9343-9672bc3631d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d6c70c-081e-4d22-9bd6-20508cbe159e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c657a200-e078-4bd1-b414-fc4bbdbf073f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19e7483-dbe8-41a7-87b3-2d15a52cab39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a3fe95-4d77-4ca9-adbc-de4a52a8697d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "247137eb-eb9c-4f1a-baff-aa7bec814a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171b4bad-f547-461a-8648-1208cce61785",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b82db6-0838-4c50-ab7a-70b426f4db30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fc5515-123f-47b0-b034-a899b7c80c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441ecf85-3c97-40f9-96d0-5ed045bf3946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cde9625-e82f-4027-903b-c768ccb566d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe32af9-e446-4f6a-848a-3c1820387072",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46e00c5-4e8d-4b13-bd8b-942dc5c7072b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b141874-b868-4abe-93ec-0853bf6684eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4ac154-b65b-4433-99ba-91fc27755876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "495cad67-0c39-4104-9eac-f017bca40c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7988a302-1a3a-4686-a092-55752ba2fa2e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e4c6a7-156c-468c-bc28-d0cdf152bc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a9ff49-064f-449e-bc6a-37a7334be4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd12f501-8f35-42dc-b144-0361831aa612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a29e30-505e-4bc2-876c-5b5dedebff93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1badb9c-a055-4600-bc36-e88b32ab0202",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef35d19-9979-401d-ad14-80f776b322ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d353d108-040b-4b1f-9e8b-33eb083a0d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23786426-15e9-4baf-97d3-05e34ce99f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a72fb86-8176-406e-97ab-47884610f5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad91d691-c073-4215-a2c6-9de27a6b9868",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbfca4e-c44f-44b4-a7d8-284832633549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62fa9a9-231d-4e46-9f52-145204b14f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a575165a-d542-4ecc-9ed5-59339b2742b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b51940ea-17b8-4daf-b8d5-da8f30495eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4772e1c4-650a-4584-9750-2638f074894e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd799738-fa3c-4bb3-a78e-da8667625ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa705541-f469-4bd2-ae2b-1dcc66792e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d24dca-51de-4cbf-80e7-58be904a88e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b275c1-fb5f-41a6-9e42-c4ab300cc6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b52e951-4abf-41eb-ab86-5f7afd240dca",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc88e4ab-9c0b-4f05-8b4e-8e38d12404bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af824a53-6983-4537-9bc5-9c65296de4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8719ca79-f79b-48fa-8482-f525e4ebc1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c43fa4-13ff-43ef-901d-e8be8d591998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67abb9f-afbb-43e2-84a4-60309f06de77",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02358a2c-1272-4d3f-86b5-dde3221cacd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca93c326-1bb7-4c0d-90e9-11f90fc30ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7051da24-b592-4144-9892-63878ea78449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5915f1-7c8e-43f1-a07c-e2c5994e5763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920b4d87-2a44-4e2e-8259-d49bfe462c29",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad57956f-2a80-487c-a85c-6da1440707ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2f480d-6f29-477b-8bb2-822acb8571cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b0c74b-f6e6-42ae-9d12-e0cf697e50c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2bfc95-fc4e-4b99-9f7a-dd92d94a0c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30aded95-07ee-4a5b-9c88-b22e903b160c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5a7ee6-9fdb-4080-bb3c-76b4431d5951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9b4634-f9cd-41e7-a13c-fb8f18d25206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb90edc-a247-422f-87fd-77808a35bdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa39146-d779-49d1-b882-07795a6c7605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba722dd-6681-4184-bb12-6aff8c162d85",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19900786-5377-4fde-bcd6-ae75c7f9cde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492c9a96-ecac-4727-9ebb-6df76b21e642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef0d7f9-8946-4c7c-9520-14e4065082d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6217956-11e1-4626-bafd-95e08cf886e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aefa39-9c4c-4df0-9ce8-016e03ab5955",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3176a63f-7773-4b5f-8b1c-e7ccd85572e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d94031-f3e3-47c9-b143-fcbc2d0e876d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6408039-9510-4f8a-8c57-7ae82506bdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "95dbdedb-07d3-4429-8ae0-7b2ca83abc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703c4ab1-edf4-4c93-a9f0-5bc3a328df99",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcab183a-c754-4451-89dd-92ef785dab65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d19ee8-7bc9-4d61-ac93-b4c90a41f0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c33927-a37a-4ff0-bb01-2140a360c489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "62295e08-9d20-4013-90ad-f2c27a873f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a646746-60db-45fd-993b-4835c565bb90",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dafa75-3113-43ec-b360-2ec9dba04743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bede4df6-3c84-4c8a-8890-0cb78c3c0981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b75e551-fd75-463b-8055-4e52be59ab54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfac0f76-f3c1-4b71-a039-541a36743064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4f3372-382c-4642-87bf-cf277d4b661a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e20014d-c7bd-46da-8cf9-f0c727bfe882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5fa610-0e15-4e37-8ab1-0b75a8f0a0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7adaef-94cf-4bd5-b3d9-808846d9f99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf4a480-9f70-4035-9b22-4a64dfb0b037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6382492c-60ea-4a53-ab31-5a6676f8ff65",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c14f85-02c2-46aa-a5a4-9b01086745e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8d948a-7418-48e0-9a90-a95634fd2039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec3fc92-01cd-4100-a821-741c34b0c1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c96025cd-2af7-41c6-905e-2282c62f9f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec96c97-b086-4088-ae3b-75660e7d614e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634b140a-e32f-4028-a8ae-c7609260e449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd00d8f7-0d2e-4a67-ba04-0a20e17a6b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1511602-9009-44e2-9424-36f8d6d44cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8b139f-d69f-4afe-9dd1-ed64f5818e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77e0a29-ac05-46e8-9728-5562b94e6117",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169eb959-dbf5-4362-9451-27817a26962f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cf7393-ea1f-4b0a-8809-f080882f273e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeace3fa-2fe1-4ca4-8eae-d3d4031c57e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4245b015-4fa4-4571-a5c6-a301151d2d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3965127-8e63-4364-9a30-edd30e39e2a4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2041ef4b-8569-40e9-af9a-6f953b81b554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2c4e90-6544-42b2-a5e8-dd6a13acfc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6ff1cc-f200-453d-9f6a-deadd4c296e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4def30-ec9d-4e26-9687-55070369188a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e4932a-5852-499d-82e7-03b543112a73",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da446c38-481f-46aa-80f8-3bc167a111b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc8ddc9-b00c-4337-8c7c-ed453b69cd8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9596aa-52e3-4405-aa01-3446447c29f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7e20f3-486d-463e-852c-c6a62241487d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1da8b3-5065-431d-9887-5597a539ba04",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6166cfeb-6149-4834-aedb-4a6b86c04167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e763a521-1faa-49b0-a24e-3e728f13e8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ff3b60-f4be-4ba7-b588-a2b73688a6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7087a4b1-e9ec-47df-b40d-db147a0556b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf36a4a9-66bc-46f5-b807-65579c3f253d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070e53f4-5b58-4f72-bca7-0702ccf6cd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145a3ea8-95d5-4f04-af6d-2e198228d9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a73fb6c-402c-4543-8463-2d0323e50334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "484b448c-5de0-4527-9ed6-d95ea2d0e5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6d85a8-405a-4459-8330-60342a083da0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0716b6a-6803-4b95-8b56-66275efc3cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfdc237-fe68-4d12-be74-6d1a16518a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ffac57-028f-41e8-8f5c-084cc74cc7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2245ee23-95e8-4f05-a0b9-0611671ecd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a093f319-65b0-4ef8-87c4-9f99df36be79",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ff6d6a-e331-4520-8d5f-0e1ee9a29b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c753730c-50d0-42cc-aa1f-cb97430429a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac133f6-bc28-4ccd-900a-df47ea193d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bebcbfe-1c81-4e75-b763-1ef1ab2e4ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e780d3-32b8-4681-a582-6b9a5d376aa6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bca759-729a-4196-8f4a-b40408c66fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a40e081-e0b1-4e53-bdd9-c149f099623b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a1eb8b-73ed-46a5-93a8-d6e551b1f7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e6abc6-077f-418d-a81c-c2bceda361b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c446023-3766-4478-823e-348c7dd8b4f7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe18a4e3-8991-4759-9175-c25ac9759f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1892ce76-a464-46f2-82a6-d85adff1e5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcff22b-b2de-4e60-9e76-362e486e23cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38268748-8730-4efa-92b0-a3b437a3b1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3740ab1-2e8e-4fbc-9823-50ab414d3fa3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba1e4e1-923c-49bc-ae0f-97c4c98e56e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7acbd9-65e2-42f6-ae62-a63d2695ed08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46192d05-7301-46f2-82c7-bb34b27b80ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "584327f2-3af4-4151-b4c2-68b7609ae783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bba7804-5e80-4e94-b64c-42cbe347675e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0599eb-7c6b-4f99-bb60-43d8a9a11489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7422416-ba73-4d26-8dbe-9de600a4e25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b35528e-dddf-4e90-8c80-2684060277e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7215765-a72f-424c-9911-107713aa656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7b4dc6-605c-45cf-9ff8-3565f66c7041",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4397bd7f-3c00-46a0-938b-b22f7290286f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716d7d3d-543f-4fe5-97f3-78932a8e4fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642de33b-ad03-44e0-b8d6-ab4c7fd1098e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f96bcb6-b84d-41e2-b406-6c7895e7d470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8f928d-9572-4cdc-b194-6dc99c567278",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986f5e72-6886-4ec9-b298-6ee5dae13e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f600c4-0386-488e-ab7b-b11c3397f0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955e397e-41b8-493a-8852-93240a692fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f1d9f0-ae18-4342-a46f-a8a5465ed3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4890f9f-1638-4efb-87b2-18dc241def5a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f285f9a0-54dd-48cf-80d9-dc1f19c94fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8d2481-6d5d-4305-98f1-786e46661bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574593ca-fae3-4254-b194-26bd1a8f5139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a925ce7-b86f-42ea-b8df-4083f1b6b767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be11713-51c6-4e78-bb53-6c8c9dfa34f3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cf55a1-4bb8-498e-8ddd-177fc768c963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375a7f6b-9e64-491f-902c-a809269640a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dd3946-8151-4665-80a3-ea9fe32aa9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "247c443c-fe46-48b1-b6fc-77a83ff1a1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24acf604-41e6-45fb-9744-64a9c9d507ce",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53d35f6-1352-4927-aee4-e93697c8a7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea526376-9b68-43dd-8c52-b31e30ddf31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363773f9-9c71-48bf-a0ed-920a7b09dd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c67a817-b989-45c1-b821-caaf12d5cf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ec2524-43e2-4795-aa7c-7a1413f7cc5e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f34bc51-051e-4a3a-a1e8-cfc281324af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c2ffda-973a-4ae0-86c7-4e4a751ceece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459a2aad-132e-4810-a9a0-ef58b7d7950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ba6867-c19f-4846-a4fe-17a40a21cc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e919bb63-3e15-4a5c-8166-81d84cb0562b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21befe9-1370-4a72-9d32-94c91214e5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696abff1-cd1e-43e4-ab78-e10fc788cd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584b5e2f-e5bb-47d5-9f0c-ab1242814f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "898f195d-9a41-4f12-aac5-6f9e81de0a5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "864dc528-46b6-44f2-a4c4-d6fd411ab8f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d3d1544-f167-4624-86b2-1197e11a7b1f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cda9ff-7d53-4651-b5a2-12a0c7ba5286",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "98480563-fa78-423e-8da8-530a62a46b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6080a2a-2f30-4593-997a-2c1e753a6a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "556d37e8-004c-44b0-adc4-acc8c41de1b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "494588bb-248c-4593-9949-a91ad8bb8a30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba2291c0-7232-4377-8cce-b8be49def271"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9112fd0-f3d8-4eee-835d-c90f9057c3ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7bd067c-8c8f-4b46-8b9a-2edba245ba4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b77c237-2f9d-4124-b486-e22473ed6120",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "932040e7-0ef4-41b9-af45-4ce85ba1a8af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07496fb6-0c85-49da-b766-1354cc43d841",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddd320c0-6243-4712-b35b-98838ab96f55"
            }
          }
        ]
      },
      {
        "id": "47d2ed30-6e01-438d-ae48-b2cf6bdfd609",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "774a47e4-f829-4ee8-8361-823c2e0d393d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a4d00f7-27fa-4641-86b8-f6035fb2f344",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "415efc2e-42e1-45ff-b75e-332d70536889",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc92799-720f-46c1-a60a-65bd5d0c246f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7506f114-66dc-41a9-bae2-a163454172c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2a8f58-76b1-4a26-b6da-7807bd3482d4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33712261-873a-473b-8614-e2e536a9d18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2313d712-aec3-48d7-9215-bbd52b8b5d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8739445f-8b4a-41d4-a6ff-5eaaaeeb90a7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84270345-21de-4b76-bea1-4ad77d5dba22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ffa614-0fe5-4150-9884-51a2d6fa5348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3820e33f-93e8-4183-8b9a-6eaa78158874",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54e46ad-7eef-41bf-ad45-4711be034c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f29ed2-0acb-4ee9-9d35-2be67de67ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c970af-8bcf-40a1-b2b2-c697366a480a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ce659c-e150-491a-a491-a87d1f611195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa4bd00-00a1-4202-a27c-c7296da04e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc55eb0-b562-4507-8d93-769c5486057e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c68cc12-9d1d-4fcd-a545-f6f1d1dc88e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddd44c0-f1b5-4343-82c0-b96b64dfc42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a02ba9-2f37-477f-baf9-f8510cf22ed0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480f9610-bbf0-428d-8558-3d5fa3eeb526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c9f7c1-8628-47ff-97b7-43368161022c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2810ee32-b6ef-416b-8f3f-e0169932f639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfc275a-2688-4975-9efa-4774ef1982ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198ee130-680a-47db-9308-f25c296109bb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ee0028-72f6-4e8e-89a7-01592b21050d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fb5f2c3-f6c6-44fc-8550-d08808f5b2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f691b5-032d-4581-9763-6bd5f577de17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add9c51a-3db6-4de9-a09e-d3b25d60934b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f95caac-6417-4376-a66b-f312e7d3687f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3aeef6-3fa7-4859-9917-72012e2b0daf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325d6cc1-2f5c-4412-803c-f7a94bffa136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab18514-32ea-4da8-b538-f0df01a2723e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0148891-ffce-43b1-86d9-81356aac344c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a114ef21-b986-4ec2-8bb9-804b894ff502",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf99c39-17f0-4bdb-884a-5020082bdf69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17d71f8f-9ea4-4e5e-bb44-c1a942ba90cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27894ac-6bda-4a3b-b7cb-ab23456c9a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3477a20-2061-4ede-a938-553ef983efc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b17750-71d0-4dfe-9623-b309fc582564",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575c9e95-5987-4ecf-831d-5cf7b11a8b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041c7baf-2945-4f99-b31c-beb1aa8c99da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b23ee69-5801-4ced-999e-0d8a85cfb23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e2e671-83eb-4ea5-b5ac-255c82042d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bc72cd-f555-4308-9862-407238fdde7b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b2e817-c336-45ae-8919-b2693e7810bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42166f9-9636-4870-8832-90e5d6a770bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0b2976-ba64-4d4a-abdd-4db7bb5c55b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fac244-89ec-48f8-a1e9-882d25605fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96a0dc2-63c1-4c70-85a8-df6124cd9ca0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806fb2b5-43fd-4bbb-a1a4-01daf14a41df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "639f921a-9aa1-44f7-bee4-873177f3a073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d037215a-e994-4caf-8f74-1185d67dd59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee19aed-28d3-4107-897d-b9c6f1ce1b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d70d73d-5e53-4969-9a0c-c42d48532acb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747f8b08-f951-4a90-a293-fb4d3b2a5c17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21e818ad-e95a-46b2-956a-76f3d209f872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcd748f-97f5-4ec8-91ed-fa26439cb504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba9c0fb-df06-4770-b87d-ca98f0ec391f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f87c560-7e8b-4517-a332-2cf761855d14",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fad05a9-a105-4257-b1d6-f5545e2f2f36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b041c5de-2ee6-492c-9684-29d8045f8ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6d6fac-7446-456b-bbca-a640f2ddf1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c2925a-f077-47ed-8044-550e1dfc1b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec83524-bdd4-4235-8718-ec1aafee82dd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37912288-21ef-4241-bf4f-dd3a95d84a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4db193ba-5627-4dd6-8e78-66353f6a58a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467164a4-9b66-4ab8-ac71-829347316a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf8a09a-19ce-49e7-9925-1a096f7cb34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1da489-2735-4ad8-a336-d08e6ddcdcea",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bad821-7ee0-4756-9255-56d47cb6b9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6dea69-7abd-4ecb-b198-0ca8d770ea7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f095ee-72be-4df0-8a4c-2c1f9a7d0eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0264f67b-7020-4572-84ae-8d663974048a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e69f857-7b03-406b-a2ec-8c212231a5c2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aa23c6-7f83-4553-a005-feb8a5fb1b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91190219-3b64-41c3-aa87-c14b69abd1e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f683fe-1755-4d87-8311-99ea1baa1f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a07ab3-a646-4c01-9740-79d25a4a7ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900a0a76-fdb5-4d01-bf82-0f07c795cb50",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e7caad-fe97-4671-86da-68723491b5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b979cb84-31f2-4d72-8a20-c2dc6f7f915c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f331722-e49d-488e-be0c-03e41ec152f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab01f2e9-3a94-4bc5-b873-a2f1d9439b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f329a4-7178-4ea8-b130-c56be1bc4e1f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9058014b-ac5f-4448-8e76-8912149aa93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730b4b08-ec86-4efd-ac4d-92f2849a166b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078d1896-1fab-4f5c-aae6-4820987649f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68200042-3f14-4436-b608-e8d73fb209bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babe0507-1e8b-4692-8437-281ee6ed7310",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f2c486-d139-4cd0-8cf0-8bd2ed7f9e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc18f7f-093f-432e-a185-01acc7e53c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457e6a53-8226-4a5f-9f0a-df5fcaf66d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0247d8-2569-4e38-8259-63adb17ca31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e46f803-7dd2-4f4c-9896-91afddd46311",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d07fdf-a47f-4ed9-bb5b-49348163dc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090f338f-3385-4b58-b87f-94bbbf1bec1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a24d6e6-3355-44e8-9ede-5d5ac9407f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dc9b72-2bf8-4fa4-b8f3-e8997dc626de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9ab922-a8b4-416a-9687-3a5ddaca5fc6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc01ef39-c3b1-4acc-a97d-d07fd17f2b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b55be82-eec0-40be-adcb-986147f8b37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ab867e-dcb6-4bc3-b79b-5bdc73a9feb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958bce75-d8a9-4b83-a330-3bfca6404425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d17072-6924-4de3-97da-f2dc0596910b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c526391-1104-4e0a-a967-549a5e636467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937d03d3-3c38-4d2e-95f0-10f28f3a6bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c04988-46f0-4e82-a4fe-84aec227720c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9edcf5-ddf1-491e-8e96-b2e326c67fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e4dc5e-5d40-408c-9363-08b19f93d0f0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1d70f0-d828-4ae6-bb8a-3e175b6b588c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d84098d-4172-4c88-80a8-2159eac40b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92615d61-588f-4a55-985c-5166e75f09ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02be0855-095d-4586-b058-588587a0c105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916ea5ca-6c6a-4f50-804e-eb1328ce786c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ecf55b-6774-41c7-a6bb-b561465e310a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c27a92-3018-486e-aed9-e2250155684a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91da1807-f675-4409-91ea-094a9ceea617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bc60a1-fc0c-47a1-b1c1-946ab7462d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f12f15-7b03-4110-a3aa-bbb713b8f4e2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67e55a2-df0c-4fca-8ef5-cc7450106343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b645047-7f3c-453d-b7b6-bc4444b01d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8bc6ea-77e6-4577-b1fc-103c94a4883a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524655f6-2cd8-4f23-ba84-f33f51d68565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dd0c72-c8b9-4f87-8da4-cdb9c1723c52",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f243b5b-bead-4d2f-8a51-7642f3fe771a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a682494-76ab-4b6a-a758-334ab1e7109c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f121bc2-aedb-4af9-a14d-f3093a8fd527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d4b09a-86bb-49fe-bcb3-92f26a604b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e10eb6-2d67-4fb9-ab22-91917381c509",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37b2645-16c6-4469-bef6-b9d193524f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df08fa33-5c32-4470-8009-b52259e0ee3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1869f7e5-3391-4a4f-b736-d9fa05cce48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfcfe70-b4c2-48b3-87f7-b31cfcb463e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8c0141-e2ff-47a3-b25f-529dd7a3b545",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fc7b48-f063-4027-b8f4-08d50879725c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f2295b2-6041-46bb-9ea3-493c7c4d9d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ed623f-2a5a-4a79-87e0-e4ff9029e989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebfa859-4125-4dd1-9184-efc4bbc8f639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0f256c-7cd1-41d4-898b-8d37c7a8639c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1708b3c-1d68-4308-902b-551982434607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696c38d8-4c1c-472b-b957-a8a79e98056b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e59e256-88fb-46ee-b294-c6e933e70344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2bb6db-4d5a-4ecf-87fa-166b42d9a435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dea15a0-cd10-4d04-b0b7-e85018a7776d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a258f2b4-1b8a-4089-a952-880957ed5e90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51eb1eae-7766-4b56-9888-d952baca60cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88497b95-3fc9-4a07-9ff1-757885872a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f08373-3575-4141-81a9-5e72b9d4d583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059acc89-7b2e-4d1c-9fc7-834da4ad23c3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee2fe85-522b-4641-a6c4-84e50610be67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7018f1-7107-4604-bf6b-4c8ab0728f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7afe20-fb45-4864-88c3-b347f4896e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039099b4-df3f-40d2-9f9e-5ab67196c25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7f8f62-650f-4f10-9ab7-c25e66323b5a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6f9dda-043e-44fe-896b-521935ccf1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33772e1-d426-4daa-a6d6-71304cdfcba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d163c69f-d369-4982-a1bb-4e7656ae759e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1191eaa-375c-41ec-8e4a-27e6d5bcb651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61da941e-7fb9-4ce8-80f0-ef0f82d21326",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f35cae-42a7-4234-894a-579a355f86fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91338a2a-efe8-46e8-acf1-baf1b73f3db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3044f155-3ee0-4f1a-8d8e-6f35b5aca272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84008058-5bf5-4366-bd9a-880ad8cb89ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055d686c-1eff-4b4b-ba5f-471fad34a0d1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3390ce53-bbd8-4dc4-8d97-4c1a64d8db9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9b1329-f84e-45b6-93ca-08e194142e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c09c746-af91-4d36-9297-ad22b0506424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d5012b-3202-4b81-8f69-64d25060a920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fb68cb-e6e9-4888-8b32-5c7cd6ebc45e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89daa21-239b-43ed-ac05-95a10e8ff0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0381fac-c26c-4e4e-a750-d9adba9b1855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b898a58a-1ff7-4ae5-82f1-368a6d46bc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8911be-f186-4502-b3b7-f9ac4f7b8eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69478f78-0b5b-4fc5-b535-fa6f313f8491",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac11e9e1-00c3-4017-88a4-d979934d87ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0036c39-739a-47b9-85ef-e639cf9ae2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa40651-148e-4646-a921-18b94af7957c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169635b4-a857-40a7-9b85-16e7c25835ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ff7ca5-4936-425a-9733-b58300bf1b9f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5868a3b-c248-4bbb-b5fb-a58109bd3e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c820467-b936-4b94-8107-083b6fd7c35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc27c9d-2a0a-41cf-b3ee-81bfcc898eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ccfd58d-ef90-4102-90b2-ebcdf960e344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad537ba-4623-4479-a651-3f71bcd28082",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75df71a9-c86f-4b8f-9851-5a0c081e8b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a514b3b-ed0c-40c6-92dd-0b891e5d4e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6cc1b6-f89a-4187-a971-9c34c9fe037e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b2f6da-a335-47fb-bd89-ab2aa8e186f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2954fb-cf32-4549-918d-1c8e72ba39d8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9088818b-9af6-4e87-ba33-d8eea43713d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbbd3d6-673b-460c-85ee-640223d013f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e967a4-3041-4b80-9eed-bf2743169a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43fd75a-55bb-43cd-b2e2-ab428875ba96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d8f51c-648d-4c53-8e85-e96e4999117a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e366b5b7-b6fa-44c5-9f4e-068c9f27b014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a248aa7-e543-435f-be40-a25bdca3997f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f069e4c-5906-4109-a23d-c04255c84adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec31b79e-df0d-48cf-908a-872f236c9967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0079ff63-6186-4370-bcb2-91ce4dbb92eb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6435bee1-5ff9-4824-8f2c-3ef9d2cc583a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e56693-7cbb-4b70-9925-263a0b91ba50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827195c3-5969-4f1b-ab71-b94c9e7f1ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce886c6-01cd-4b98-9aac-0431e1730d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef10687-8301-4203-a10f-abc7462a19d7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb0331f-6a7a-4392-87d8-15b0b0f1e054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cefc16-1ff1-44c0-a476-90a01eecf22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ce7c46-5b2b-40d6-8155-03334b66005b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cfcd8f-b01f-439b-9b66-ece5ac7abbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b6dd71-8aec-412d-a17f-d883f22c91c0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334c1427-f2aa-4360-93b5-57506eba7b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b0c6e8-fbd6-4479-ac2a-c94f30beadba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6364dce-9a4d-4067-ad89-6450c1828a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fcd3d6-b72e-49c3-8fff-d22cd92ab967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb56124-8d5e-4c58-afe1-8de2e6b1a251",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298afeb8-d4db-4602-82bb-988386526842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d46c29-8ac6-4a3c-826c-4e1f987739a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a79ba6d-b8b7-4120-bc64-a75b165cf8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116ce9db-d53a-4d7a-a254-06d626951748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9d737a-bcc4-4b67-8df6-d90dcacf5640",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcef32c-3017-4e14-bb07-29c14bb2967c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83da2e02-adb6-4721-ae9a-85c7ce3c3f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b113afd3-95bf-4e64-ab02-e8879b5e5e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d22b348-abd8-4104-b442-fcdd11173e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8842604b-7b7e-4856-ab6a-a3112fc2571b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db76ca6-2a3e-4aa4-961a-9a3b455fc98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3053e21-13f1-483f-984b-04cffc1643d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dfed24-9d08-48e7-b6d6-ec5e34ce4e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6912be8-c56f-4066-ba56-3da17b72ecb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83498852-b911-4435-b489-84502f472417",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b5990e-79e4-4c53-8b68-0e2b76da2f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e050e3-bd52-4cca-ae71-ec99bf681074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8991beec-1b10-40f1-a6f3-87d945a52eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ae3672-5a7b-42ff-82a9-48e5b65d1459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc82468d-3108-470e-ab97-e976d0d906fb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2655a1cd-adc2-4bea-8a6a-289c0478500a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a288fe-db10-4281-9705-30dcdf41c274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6eb1c7b-fae8-4eac-be38-5cd5d2a77ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7669d4-3350-4317-895b-276847653741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dbb845-091a-4815-9664-ad0a41d2d037",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7193786e-2814-4899-8d6f-ee9ec9cfc7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c7fbbf-b9b9-46a3-ae5a-099f9f9be4cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466d5000-74b5-4077-8f46-45e7e7420177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c335745-42fa-4c57-9496-0f387c7dcbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100dc229-ad45-4e1f-9dc9-d61fd4864c1f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e27b75-1dda-4a9a-a87e-bb3056b2a49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2631a09d-264e-4157-b0c6-5a200a71d275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f82562-1bb6-4079-a266-8d6714a98af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c22384b-cc22-4060-b18f-8a63fc59fde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27008e9e-88b5-4534-bb53-4c5568d4d029",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168c5e1d-eef9-4917-9918-0483f646c18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9920f4-08bf-4ce0-8c12-6c07ef619a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42d7356-1632-416c-900b-669669d183e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5879ec03-2f47-4f6a-8dae-b7f1cf1fb750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a806bef-6be1-4eee-9702-53dbc2134752",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3f7901-83ff-49c3-950d-165f1379fc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a589c4ff-adac-4287-b8ac-f8dcee6e74f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4598e3e1-84a3-49e1-95fc-add656dd566d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b1c58f-b6ab-410f-8be1-5082d2f339cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedd6ff3-9edd-43ac-9d89-9410861b84b6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5320217c-fae3-4697-8e6c-e78e3c62266e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2829feb3-0c8b-4e41-957f-20f586bd97b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc1922a-3edf-44d8-8be3-6016f639fbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2258f43b-c25a-49b4-aee6-c056a9fc71b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1486adca-ff68-4b9e-a176-276d1a730f0a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8302a127-cc5d-475c-a021-f8c98e913196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68bb50a-9017-4a8e-869d-2c55181da3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa91187b-1516-4b6f-8e9f-cc376c91ba36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fe1180-be82-498a-9bee-1e9a0b253288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60521c56-02d2-4368-a661-00852d227d2e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d3f80c-ed11-4949-a758-7f9a70174669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27e2b85-dd7a-4ad8-9cdd-49cac545ddf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24e4834-97fc-4bf0-9a68-302f210d3ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4947b69b-1b90-4066-b8a3-843d7f7c9222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bfbb10-c7e1-4ae0-b281-66794f1f7c65",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ce9f23-e3c9-402e-8de6-7fb56cc4061f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24387c0a-bf32-4c43-9bb2-c1f9b40e6905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df59ce19-16d3-4c0d-a0b4-e0939ae8d236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2b0da1-03d2-4586-aa22-c4ab1735f36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c3a8d6-e55c-4304-9685-6e9f0045d8bc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d347d4-822d-485e-a025-780c3eb57e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce0e157-7408-4a2b-9ac6-20ca3f66e7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bba6d54-06b4-4524-8de7-27a8298fc843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60eeaeb4-de40-4e2e-a5ec-c11ac3acc01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bacb65-787b-43bb-a7bb-cb9f023ed5a5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f360aec5-e15b-46ee-88c4-b97268be49a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20448be-f195-421f-b780-e4af9480e4e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a72c1de-104b-471b-b2eb-6cf28531f3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b0d960-2e2e-472b-b5c7-debb93ed8653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5476ee-9a39-4941-a9fc-fee9cb2a5e25",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e3d180-1811-4365-8056-02069935ccf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25bc286-5a83-4cd5-a7b4-64cd0eda5438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16f6bce-691f-4809-888a-9398e840f690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8584522e-07dc-4587-9473-9d11a0d252c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a990dc-7296-4197-984a-30b992999240",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c52c7c-b7c5-4fb2-a029-af823d216b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80071f34-3441-46ef-b9bc-d188a9f65c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522a55c7-1730-48b7-92b2-fa1b91fe0e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5ab91c-9441-4fb9-b957-02fab7357f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f28e9a1-a3ef-47e8-b148-c6177e2c98e7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b22a7c7-660c-4049-ac6f-0864edd963d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978ee822-096d-4fbc-9978-93e72e481f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52259b67-910a-431b-9035-668064d4b44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ff51fb-50e1-4b62-9f53-544e3ce45849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111e16a5-0a56-4977-9e31-ab9ad68af9ec",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4067be46-bac5-4a19-8a4f-61868b2f6007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24f5e32-2b71-48bd-ab65-c42cc2700c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f715f17-6a41-4567-96c4-25f090aea802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3511bbbd-0197-4460-9723-7048f527d5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a267e8-9026-42ac-a7cd-7831a4b0bada",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fb0849-d161-4f64-bed7-08d45f6e250c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99166df4-861c-451e-9dff-a3d5b1b67ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45db5559-e0ee-47d7-bca3-3d053deb3d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa068745-97eb-4567-9e7e-a401b8774ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5400f75-02aa-450d-a0e4-1f6e10a05ea7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc07d83b-9038-4e68-8632-beffc007d798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0121e6f7-189a-48e0-a879-2aac27825153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3eacbe-ae12-4ecc-8fe6-804fae215d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e0f3f0-dd6a-452d-a150-c31f281c24b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc023a05-2c53-4e6a-97e5-e00dd06de6e0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ee1c0c-491f-45e9-8bf9-d168b76f0589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb9dc3de-1c8d-41ab-b875-64aea6761f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dfe24d-05b8-4f7e-99a9-d5ab7c06febf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41e0044-8c9a-42f3-a49b-15ecc502de1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8902db4c-84a9-434a-baa2-b35c67834483",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5a099d-c73a-4385-a83f-2920ea326441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6b59054-f7a8-4e02-99dd-e6c9520471bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512267e1-b317-45ea-91ae-be9542520f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3871a082-c7fd-4875-825a-939e93ee1415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b10f3b8-f715-4103-87fe-d41aeceb1f09",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b821289-26a9-4c1a-a3d3-78c0c8bac64f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb41025d-a562-488d-86ab-18376b312ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d279cc17-86f9-4a38-ac74-72443112f0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dc8c00-b128-46a5-98e6-d1c8fd77decb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c63634-21bf-45af-ba38-9471dfb45f9e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1154feab-5b40-472c-ae6b-c8aaa07a21d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcbdbfe4-8cce-4772-8b6e-0986d9ce32a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07379a20-e29c-44f6-92e9-bc7585c0ac67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea77cb1-3b15-49af-9a89-ae56061fd785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f263bd1-425f-40bf-9d75-37fc8e340de2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affac79f-8c8f-4b50-ace7-79c205663337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5711846-89bb-4bb9-892e-6dda01e516fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8194c8c4-6c74-4f91-9a3b-0e2f32db9d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fcbf80-7745-4dd9-ab33-1283f384ebd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9f3fed-dd44-4b01-bb14-f55b78ef456e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356a4353-fe29-4d6a-870d-4f7bddfab0f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f0a238e-67a2-4beb-877f-4e4cc987994d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87f752f-e8b5-4876-ac6f-cdf5d0f913b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97210b83-7e34-4c65-8788-4625f5496dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1002a56e-e6b3-4f96-b48d-ce378a13e287",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a376af5-d6b2-4b8e-9dc6-742106b8b822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bb412c6-a9e3-4c27-b3dc-7099ddc52902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413c2e01-6f8c-4fda-8691-e283afcd3c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e4c38f-0386-432f-8c73-b6b0e705ecf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43bbd50-402b-41bc-970d-fbd56c00a2cc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1ce3e0-1e07-412b-b8ad-7705738ede79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79eb9daa-208e-44e3-b54a-9e169059cf57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0699e9-2aa1-4070-bedd-0a7885f41419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e6fcfa-af5a-4dff-a4b9-091ae5287d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4773de1f-4b59-434d-b70a-bcd8bae0807e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872b7953-dfe5-4e03-9536-5f9fb24602e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c83a0f31-063d-433b-9972-d8ae01a784c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427c537a-b35e-4834-9e3a-7863a3dea727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091c7d31-08c7-4eca-bf92-ce7b15c1d39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2f3453-559c-4772-82e0-2be541734fd2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b0bea2-5f01-4894-bd2a-d74e84c705a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d53b3c9-41ab-4cd4-8882-d0ac79b20026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79107574-fb2a-43bf-8a9f-0f80e4d6485e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdcf510-a57c-47d0-91ae-e2beb7e48f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477ce4db-ff98-41a5-8e34-5dec4116d7b2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2585ed71-731c-46cc-a0a1-fd1498500afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d7792d7-d355-444d-b429-d4ec4935adbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5cbc1f-501c-453a-a913-61137783c43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a5d90e-f52b-48fb-9988-926a5017ac0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3434b0f5-a78f-489c-b8d7-c0dc6849823d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93c19e4-2aee-4c9d-9244-63afc156227e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8aafeff-a9a7-4cc1-a169-00214c4eb8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763d42e7-4718-4652-aaf1-f46a4e1bf0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f521c6-23ff-48a9-8e3a-23e130775095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad84e53-bfa1-4a25-8e4b-0a724edee030",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42e66cb-b715-4bd9-869c-3d9606849b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ced27bf-7b8f-4b3e-b0ed-4811dbd36d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fb51c7-458d-4f11-8f1c-5c5379a1d247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97197e5-a761-4791-9c0e-bb3ecec85333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4efc2c-d8db-47c0-b77c-fb0664c083ec",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a069bc-c5a7-449c-9c92-ffe797731c78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484cffe3-4b99-4548-b68a-536e88bedcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7d954e-188e-4fff-9142-7b2d15d18a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dceb125-cf51-44c1-823d-c0f3e86febf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422caf75-db71-497f-892d-376f1c9a8613",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b41e8d-fba2-4edd-b490-bdf20a0df9f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b94d370-cd06-4465-ba84-e8c43c287b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb0aa84-b53c-4256-9688-c960f933264a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2653a4c0-0eb0-4e0b-a270-803d7990c569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028c5faa-f306-4f26-b3d2-9e725c319cbc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dd6a97-ee49-427a-933e-406bc7d2af1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fb1d443-3a0a-4e88-bbb9-944ce95e16b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b675cc-7e84-425e-8bd7-f39fed657bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1228523e-ced4-42ad-b4f1-48b5df7f9b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bf2299-5c6a-418c-8fad-2221645a9831",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe5ea39-45b9-4a1f-931f-6529559b1ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3ad8c6-759e-40a3-a960-390ed0693c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f383b65-7e4b-4d33-95b2-d5287650498b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1772a758-4ee6-4044-a736-1cd0398bc29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1504f9-0352-4bf3-8ed4-2cf8d26769ff",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e33731-81ee-425b-a191-cf340bb3a92e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57cf8bf1-8d35-4f52-aa2c-2ae04d6593f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf6a7a2-d8ad-42d4-b2d8-7acd9ed71fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efba203-90a0-4bcd-82c6-c242db895882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d073969-8775-42e8-9217-65a9e2c6b636",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ced411e-b6af-45a7-b2bb-5c0ed2b46d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b888613c-d510-4a87-88c5-8da00814f432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4da6cc9-b0a9-47e1-94b2-619c579598b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d3b981-6927-47ce-a4e7-48b61095ff78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa4b92d-d761-451b-a15b-27ad0fc415b1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185d272a-356f-4171-a6fb-88913a1b21bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "914830eb-9672-4e5e-956f-78a1c5a174f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d341ce2d-8de0-4537-8983-54759600d970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abe68cb-8d52-4211-9995-bde0a41d87c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0da982-47b7-4781-a233-5d0f7063d97a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7830c14-a6f0-417a-a302-44870d399687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d5aeac-1357-4a13-8af4-1684908e3b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556d0129-927d-44f9-abfb-763b2ab6714e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702cbfc5-928b-499e-b759-604c60b30d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0e8767-1ae6-422e-9e32-13db929ec2cc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246623d1-f780-4a57-9d77-79f9826ea97e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f4e693b-a412-456c-853a-cff94c00a2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d90f7b5-b1db-44a9-be32-ebcfda7e9d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87d9800-050e-4d40-a244-065492f3c041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efff59e-304c-44ae-bd3e-76f47e1b4465",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0b9d65-7a3f-4fed-8a29-1e55025b4884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cef236-9604-4ba8-bb71-8243814dc4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d033767a-0f87-4f1a-8f91-b510e778b440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160f14e6-51af-4656-92e2-fba83f1d823e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55349b0-0ba1-4872-86ea-dcc3922751b5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c598c8ce-c6a8-48cb-9052-0fad67aa8a2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad5743b1-62cb-4da0-833c-c29e10b6c752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34ee058-4098-4253-b2e8-3579296fa868",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40571a05-c1d2-4336-ae82-9d1424e9c87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa79b6b1-59e8-4e7b-9b87-ceea9ff05264",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8247cf1-db96-4b4a-afe4-98acae307056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f07d273-5522-4091-8070-b7e26d702dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d035a04-33ab-47df-aa72-a2c3b95a5c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44d8905-3483-4a8f-9b2b-e7c1cc82b43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc2402a-f75f-4d35-9398-1d2153bae941",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bfccb9-f509-4ce5-9f3e-f8ba77e16e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4208e2b5-66f4-4292-899f-7e41a05cea98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab6f3ab-4b88-4ae9-b791-3037ec4642ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd740088-3031-454c-85cc-e7a87520ad93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e379835-2a76-442a-bca1-6334028f1ff4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8653ec71-94d3-4277-adff-8f85b309710b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1488c017-87e0-4410-8f2a-0785bf386000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c126d22d-31c0-417b-a949-bb2d54bef28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799e8a06-f30e-40fb-898a-2a3367c0dab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9867505c-f58a-4272-bb1b-3e884867ac3f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b279451b-6706-497c-9e01-993702081bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fdef6de-b4fd-46ca-a658-3cb15cae68b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83324c8-c529-43f2-b75f-ec89b4e7aaee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0928bd9-6fa3-45e6-bce0-484550107d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7d614f-6702-41ff-8ad1-94bcc3984bce",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e25347-e5c8-4ef3-bd82-b620a2e6c22f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc152e31-a7c3-4820-bca4-36581877201e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac1b519-8f21-4883-84b6-3490f5cd8e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a435898e-6d58-4172-9ce4-bf6522420456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b69bab-8201-4a45-b665-63e6a16b5c66",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0270531-5df1-447b-9c54-c392b45c68f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ff4ac7c-9261-4ba0-b4df-a94e1c11f354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfd1028-35d4-449a-a0fb-e283b3fc5c30",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477cefa7-30b5-4bf3-a8d7-cbaed661c666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f66d920-ceba-45cd-92e1-1936a1bc80dc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c280a28e-4fed-4312-8a57-de04a3b5ac7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcedd04c-4633-4fd1-acac-ef1208362b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b797f1cd-be57-47dd-9dc9-23b01aadd5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf03b71-c072-4547-b4fc-2e75da4ca24d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a07eeeb-b106-41d6-bc6f-889d608e3b89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8543510d-580d-441c-989e-dac5102ffacb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "728558c8-ad2a-40c6-b2e9-ea2ccc8dfa72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "276cd63b-7d78-4fc6-a1c7-17e8a5a89215"
                    }
                  }
                ]
              },
              {
                "id": "ad2e49b6-af9c-4699-8c73-ea2a5358b18b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7be13581-e529-430e-81ca-f4da9c626f31",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5700cf7a-1513-4bcf-9951-be99d077373b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a3655ba4-400f-426f-8279-4c2ac5fbcf02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf26754-4e8f-4b7d-bd8a-b81d8ffc6973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98bd462e-58b6-40fa-b694-fa800d53e717"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33ab42dd-14b3-4bf6-a5ac-b0069a6308f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e52b112e-837a-4e96-a4d2-69b119c73c06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c267f924-faa1-43aa-b239-e239c7541e33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0484dbfc-f16c-4572-b874-9c8c8a34da64"
                    }
                  }
                ]
              },
              {
                "id": "f3cd498c-1d16-4153-8234-5bf80dbf6168",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8b15b0a1-83a9-4291-a65c-9e3cedbc498e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c6ab57-c90f-42ff-8815-371d808cb0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "058841dd-62d0-46d8-bb13-cdcc85ad5add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae9c85c-f8f1-4a43-8d85-fa6098f59c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b14b5e3-9599-4ed1-88a4-d7e2230ea75f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d2bd4eba-e1a0-407d-b416-41894e2f56fe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "107498b8-1d54-42af-9620-e6ab5a2f1db4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bf84369-df17-40c1-a659-254f2996e81a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "231ec90c-2df9-47b7-a84e-6da377e9c4b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c210a6af-6912-4cd6-96e1-f03449c19648",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2e8bfe3-e9a8-4364-8970-cc54dd938b7d"
                    }
                  }
                ]
              },
              {
                "id": "a8abaa78-1cec-4a65-a368-919b709c2f81",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a567402-c617-47c9-abe0-5f905bce8be0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "16e0e2e4-3571-4add-9d5f-e9282b190ecf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84e45beb-fa11-4ea7-83fe-64d1d632664a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81843b54-c0bf-47c0-b563-fcf265e391a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ddc0472-0940-409f-b6c9-80162356b339",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aaa8dd47-ce3f-495b-a8b8-4f13c598e4d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7aaedbd-0e44-4d17-9d37-cc4a5862beaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c472628b-d7f6-4457-aebf-b643726bc095"
            }
          }
        ]
      },
      {
        "id": "87608bb4-f95e-4245-8a4c-c9b913bf46a9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "00eb9302-d65a-4bbf-8ea7-fbf266e739c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20df4fbb-c03b-4d36-99f1-7ccf7a12be86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08358cb0-22e6-49a1-9cc9-1fc7a499e394",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b334f0b2-6ac4-447f-9ab8-15a3943baf0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d3004bd1-5111-42c9-8d57-2139ba6dbf3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28033170-ba5a-4842-accb-96cbbc103d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f3e5d62-481a-4819-85e8-b52047685a91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e1d8254-76c4-49ac-a243-30b0123d46ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4737e220-9402-41c6-b428-d1205bd48393"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70053347-875a-4d5e-8259-5d473a04cdb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ead99f1-017d-42f2-b169-e196f7b18ba3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9897afe-89a0-4557-a012-1dcd5615413f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0a673653-dde4-4e84-b1f8-f44e5d45792a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d0a16d7-20e7-4268-8cdf-08f17d882d5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b51bdb2f-c9dd-453d-8cbf-6bd82ef67f59"
            }
          }
        ]
      },
      {
        "id": "73e611a1-c269-443b-8e4b-4564cf46f444",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d3b33fdb-e4db-429d-ab7c-5fcccb03db4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d685782-b6d9-4cd8-970b-e926ecef797d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7456b8b-25b1-4c3c-9c47-d8f369e2b373",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5a513c-1dd2-421c-9ce2-e7eb4e87859e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da502bce-9149-46e3-840e-ead49ca408d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e3806d-6ea1-466a-86eb-826fbb46fe90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd1acadd-eb41-4c8e-8e9a-6f3d60368d43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6349d5f8-29e7-40a9-87ec-d8815a2627c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e67ac57b-c3d7-4113-ac55-3baeaf26cbea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6bcd2dc-cbc6-42cb-9bc0-bf51702a9042",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85779766-942e-40b5-9dbd-ace9bd519d52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c406eeb-3cb6-4dfb-8ac3-e3676e4c9744",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2955254-8c8f-4c87-b220-61f48f895976"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71cf6465-9011-4b58-8bc7-02ae6a01c282",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5fd8b50-2d8c-403c-b1f7-7be2c7e1437e"
            }
          }
        ]
      },
      {
        "id": "2fb4e68f-5a0d-4fc9-9f6f-ee12c4c199da",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c8152cb5-c486-4bbb-a449-ddb6bcdf2ff0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74be8bb7-7749-43e6-b1e7-0019f7c1c1ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3850a93-4e84-4a5e-9d13-0cf916f0867a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41356a83-b5e5-45cd-b641-cb9edaf84f92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8de25bab-faba-4287-b488-e531ec0d1379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723df6e5-9252-4ec1-995f-c6001ffc6265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fc5cc05-32dd-43e4-931e-37b98fb540b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57e757e7-3131-426b-9ea0-f99662f8dce1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffa36258-1c8f-4b86-9cc1-9a7a064a1819"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2eda0425-dfd7-43c6-bfc3-aa35d0c6903e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54f4d694-686f-461c-8d2c-3768ea43c651"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66582665-32a6-4872-b511-21c4e416cb9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c41cadf-71ec-4688-aae8-cfe829fa74e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7084498e-5f69-459f-bb2b-bf350f8d788b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a49453a-2552-4256-9af8-75bd0ffe4f29"
            }
          }
        ]
      },
      {
        "id": "cc90a176-dabd-409e-9056-23840e778524",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d77e533-d0ec-48ba-b254-19f7b8f6d1ff",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5f61da8-602b-49c2-80c7-0b9ed5553eea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8b100333-2f92-4d2e-9210-cc642228a6c5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb775ff0-6563-4c50-8d84-a322737067fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1059440c-ea62-408e-be58-4528fce7b495",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.51190476190473,
      "responseMin": 7,
      "responseMax": 651,
      "responseSd": 40.92690756749828,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726793030475,
      "completed": 1726793056731
    },
    "executions": [
      {
        "id": "7bc4ed20-ec32-4fa9-b715-1e9ecd2d4f35",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "19e7212f-300a-464d-a0a1-4301d6f7da5b",
          "httpRequestId": "179d63c9-d8a1-4c04-b222-5a2c395c6ead"
        },
        "item": {
          "id": "7bc4ed20-ec32-4fa9-b715-1e9ecd2d4f35",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7fcfa10a-8645-43c7-bb66-cb2947d258d1",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "4353a2a6-392c-4927-98d2-fb791f29b06a",
        "cursor": {
          "ref": "7edb61ec-96d8-4603-95cf-94ff4f61d6b8",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5453d7a7-434a-4494-acdd-9fd0ab171216"
        },
        "item": {
          "id": "4353a2a6-392c-4927-98d2-fb791f29b06a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6ad81afb-8c2d-46ca-b56e-6b4f4fdad071",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "4415f988-5c40-47f7-8961-ab45536cd77f",
        "cursor": {
          "ref": "9d047ed7-9fb0-4356-8371-7ce5e7a3e1c4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a5407e24-38a1-49f8-8fe6-44cdada3654d"
        },
        "item": {
          "id": "4415f988-5c40-47f7-8961-ab45536cd77f",
          "name": "did_json"
        },
        "response": {
          "id": "aadbebd4-4d00-4d8f-8a77-8306a62997b6",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eb0722-a569-493a-8f5b-c14bb911ddce",
        "cursor": {
          "ref": "5e98e501-03b8-49fa-baa7-fdd54225d8b0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d85cf7a0-3a30-4d18-b0a1-4192ff36354a"
        },
        "item": {
          "id": "14eb0722-a569-493a-8f5b-c14bb911ddce",
          "name": "did:invalid"
        },
        "response": {
          "id": "167fc321-b996-44c9-af92-fee692169a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eb0722-a569-493a-8f5b-c14bb911ddce",
        "cursor": {
          "ref": "5e98e501-03b8-49fa-baa7-fdd54225d8b0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d85cf7a0-3a30-4d18-b0a1-4192ff36354a"
        },
        "item": {
          "id": "14eb0722-a569-493a-8f5b-c14bb911ddce",
          "name": "did:invalid"
        },
        "response": {
          "id": "167fc321-b996-44c9-af92-fee692169a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c453301f-20b0-4260-b9a0-da742ca8e109",
        "cursor": {
          "ref": "da353d2f-5d3d-4596-a090-30c3d66487db",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7d90a857-9371-4fb5-b2a6-f7478a536d76"
        },
        "item": {
          "id": "c453301f-20b0-4260-b9a0-da742ca8e109",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f82a25e6-a981-4973-9aee-74fc4962ba1b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 151,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f149ac6-cd61-46d5-b6ba-ee3fad0f6125",
        "cursor": {
          "ref": "4ac43d5a-c668-4790-8b47-67fb31668d65",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c8d021ee-4756-4c76-b638-35ac90dec8c7"
        },
        "item": {
          "id": "9f149ac6-cd61-46d5-b6ba-ee3fad0f6125",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a37d2a93-d6e0-4149-9e92-2ec8180aed50",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0055bf66-1c47-4b40-86a1-4728ab4524af",
        "cursor": {
          "ref": "e995fedc-b657-4a65-ad35-bbb2b2321306",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4903412c-f58f-43c0-b87c-b3823d11d2b8"
        },
        "item": {
          "id": "0055bf66-1c47-4b40-86a1-4728ab4524af",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1cb3f0b8-7d58-45cd-9d82-27f6643d7ef9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17d8ee2-6e00-47ff-bfc2-80e6c30f4611",
        "cursor": {
          "ref": "abc91973-2935-4f61-a47b-5e41ec4a5f40",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5a1ca1ab-ab86-4369-8777-39bdcb928666"
        },
        "item": {
          "id": "e17d8ee2-6e00-47ff-bfc2-80e6c30f4611",
          "name": "identifiers"
        },
        "response": {
          "id": "48150464-191a-4e94-b356-e6d103616afe",
          "status": "OK",
          "code": 200,
          "responseTime": 150,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fa3629-d782-4412-9811-e813e3261455",
        "cursor": {
          "ref": "064a89b1-2147-48eb-ad04-be36e0da3fd5",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "39f0e1dc-c104-4ccf-add0-df8e943475cb"
        },
        "item": {
          "id": "e9fa3629-d782-4412-9811-e813e3261455",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47d21ae0-0652-49ed-a7ed-bf091923a4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2153ce1-cda5-4786-b9ce-b78b60fec50f",
        "cursor": {
          "ref": "9882c34c-57f5-48f6-b88e-7b57abd98bf0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "55d5bb47-8139-4a36-b305-a82d8ef03a5f"
        },
        "item": {
          "id": "f2153ce1-cda5-4786-b9ce-b78b60fec50f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b85ca33c-265f-4a35-8803-e51b9f754fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6d8d3d-43ff-44ca-a606-963a0da93982",
        "cursor": {
          "ref": "78cc04ee-73df-4778-b314-e7ff5454de20",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2ed2fd7f-812a-498f-95ba-abaad0527467"
        },
        "item": {
          "id": "4f6d8d3d-43ff-44ca-a606-963a0da93982",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "50fe0045-bfe7-4b62-b5f1-95eca80d6506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b09fef5-7f01-4477-aaba-39dc2b10cedd",
        "cursor": {
          "ref": "9e65f1f1-dd5e-4d08-b67e-8893e44a2be1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bbbd4e86-ee23-4297-bd8e-d0a8f6380caa"
        },
        "item": {
          "id": "1b09fef5-7f01-4477-aaba-39dc2b10cedd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0b372e3b-b2a8-44b6-acd5-3998279f21b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eee30d-f09a-4d30-93e4-12c5901c1f64",
        "cursor": {
          "ref": "5b89b20b-50a3-4d85-a3cf-0e37ae1453bd",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2a9d9a78-3b88-49d9-8499-ebfe79fdec41"
        },
        "item": {
          "id": "22eee30d-f09a-4d30-93e4-12c5901c1f64",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8cf1476a-6643-443c-af2b-2acdfc4ba761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e37505-f2c2-4251-b753-12ad610974ad",
        "cursor": {
          "ref": "f8328bf6-298b-49c0-b9c2-ce4f231ef6b1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e20968aa-446f-4028-9a07-f00a17dbd9e3"
        },
        "item": {
          "id": "12e37505-f2c2-4251-b753-12ad610974ad",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7eafc0c7-2f9c-4aa1-9cc2-8655480834a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e9b539-2268-4fa0-981f-3fabf8e61d91",
        "cursor": {
          "ref": "f6ecb2a3-44cb-4254-859e-d224d5d326fd",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7569ab5e-78dc-46ae-bc32-4cff76738f2f"
        },
        "item": {
          "id": "39e9b539-2268-4fa0-981f-3fabf8e61d91",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "80280fa0-f2eb-42d1-9e72-73b7f80b52d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b136f7cc-f598-4869-84bb-6876aa67dcbd",
        "cursor": {
          "ref": "40b0346f-36c3-4bab-869b-df4126fe5e06",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b295a2c8-f552-468b-bb2a-ab795548071f"
        },
        "item": {
          "id": "b136f7cc-f598-4869-84bb-6876aa67dcbd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7ad005c0-8843-4458-8dde-bd77b6b8e390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbe389a-7fe0-45cb-8a3a-808c08095cff",
        "cursor": {
          "ref": "20264fa1-4789-4122-89a1-9f85d4ec5a8e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9fb54f6e-2d5f-45a7-82d1-8a212659175f"
        },
        "item": {
          "id": "fcbe389a-7fe0-45cb-8a3a-808c08095cff",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5960fdeb-e204-4120-a1f1-5dabeacccd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b6f4b4-e693-472a-9ed1-e5bdc74ff360",
        "cursor": {
          "ref": "6c6074af-1cd7-44a3-916b-0aa21708c4bf",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a5c45957-1fa0-48a9-9548-638c4213bcab"
        },
        "item": {
          "id": "21b6f4b4-e693-472a-9ed1-e5bdc74ff360",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7bf16a8a-fc47-43aa-9253-f6955fb03d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c61a76-3b32-4489-a869-04b14bc8a9f7",
        "cursor": {
          "ref": "0b4c7b9d-97f4-4f96-9a45-11f9829e721a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7ad8192b-f8d8-42a2-bd33-4a84ea61e26d"
        },
        "item": {
          "id": "e5c61a76-3b32-4489-a869-04b14bc8a9f7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4bbe8002-ee7d-49b7-b5a7-000544040d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2096dabe-8228-4ba0-9045-ba472a7d1275",
        "cursor": {
          "ref": "a9115e21-1ded-4d2f-971f-4bbf8f136507",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a7f27dd4-6fdb-4258-a555-d5cfccffeef8"
        },
        "item": {
          "id": "2096dabe-8228-4ba0-9045-ba472a7d1275",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "811ff64f-6321-4585-a0ed-bf25de4b2db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d8a54a-ed61-4b44-83ac-fdcf961ec38e",
        "cursor": {
          "ref": "5e472c7b-b322-43c4-ae08-c078d1017dbf",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7a9961c8-9e8f-48c0-ba68-1c93eae73c53"
        },
        "item": {
          "id": "28d8a54a-ed61-4b44-83ac-fdcf961ec38e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ce867601-2dee-4796-b02d-04931c491156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfe19b6-53a8-4df9-841c-8c2ab4d5f147",
        "cursor": {
          "ref": "f8fe83f9-e365-40b8-8c13-eeba3d7a73eb",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "32121c23-d0fe-4b65-ba07-4dbe9e67303f"
        },
        "item": {
          "id": "fdfe19b6-53a8-4df9-841c-8c2ab4d5f147",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2afe8d2a-fed8-45b6-bf1f-650c8b48c503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fdf092-c41f-46ea-ad86-403c7e5702b1",
        "cursor": {
          "ref": "f35cd7aa-6eca-4a3f-b1f7-2902af7e559f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f9000694-a17b-4a2c-aedd-3f69c36402c2"
        },
        "item": {
          "id": "87fdf092-c41f-46ea-ad86-403c7e5702b1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "764c882a-6b1e-4a11-b85b-eaa77baf36fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e759b5b6-0ee9-4c00-b28f-ced005176f68",
        "cursor": {
          "ref": "761dfd7e-afe6-4bb1-a172-2a636efc892a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "15055201-eaab-4030-88ef-d3c18c5852a6"
        },
        "item": {
          "id": "e759b5b6-0ee9-4c00-b28f-ced005176f68",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c0766009-2859-4708-adaa-9f55dc596143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672dc88e-9e69-49e6-aa4f-37d9d1a3154d",
        "cursor": {
          "ref": "48b506ca-b6ff-438c-b33e-a4ed0c2f20ac",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8456aea5-1fb2-4e3b-8851-ef251c54ef67"
        },
        "item": {
          "id": "672dc88e-9e69-49e6-aa4f-37d9d1a3154d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "34fd3dbe-76bd-4989-b5e8-46010c3dcecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632ecaaa-9136-4c61-9381-a1bdb1a2d052",
        "cursor": {
          "ref": "b28d12ab-550c-4cd6-88d9-e4d461877797",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1a5cce6e-889b-4567-95de-95e5f41409c8"
        },
        "item": {
          "id": "632ecaaa-9136-4c61-9381-a1bdb1a2d052",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "be53e9b0-8349-45bf-9c24-c7f47146d1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe622b5e-1ba8-47c6-9a4b-280781040a2a",
        "cursor": {
          "ref": "65e88556-ad00-434e-8d18-6d85d0ce6922",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2828a384-494b-4588-b0b8-18ad17761279"
        },
        "item": {
          "id": "fe622b5e-1ba8-47c6-9a4b-280781040a2a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3eb4ea4c-4db2-4cc9-b81d-957528ad73ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1687f2-6489-40e3-ba32-4dd596e1e1c2",
        "cursor": {
          "ref": "ade6edf7-1b35-4df7-9de5-c027fb978404",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2401035c-8dfe-4820-91d5-005731a1cf5e"
        },
        "item": {
          "id": "ee1687f2-6489-40e3-ba32-4dd596e1e1c2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5b9622bf-9c1d-4b1b-90fa-2bd3bf428c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a44728-a808-42bf-ab0d-c7ea7405756c",
        "cursor": {
          "ref": "4f03b4ef-ebe8-440f-9707-880b50815187",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b5664e39-7566-458f-91d7-c034637cedca"
        },
        "item": {
          "id": "d2a44728-a808-42bf-ab0d-c7ea7405756c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4058645e-3295-451d-a28e-3646d1dfb773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea343fa-a424-4e51-96b1-9a546f856d30",
        "cursor": {
          "ref": "4fcfc814-2f6a-483e-8c43-f1e60f5cefa1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "875cc016-931c-4bb0-bf91-627c661f4787"
        },
        "item": {
          "id": "0ea343fa-a424-4e51-96b1-9a546f856d30",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "05ff0225-fef1-45af-8fb2-7e0bbfe9e896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfe5aaa-01f5-488c-9384-a0d8ab98ba03",
        "cursor": {
          "ref": "316651ad-7aab-42bd-ad7c-ae2fb0190847",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8412b401-f690-49f9-a893-8aaf4245cb45"
        },
        "item": {
          "id": "7cfe5aaa-01f5-488c-9384-a0d8ab98ba03",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "84c8a31f-c6cb-4777-8977-c3c6aedd248b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c39472-289c-4c7c-b034-75475c15a14b",
        "cursor": {
          "ref": "39f2edf1-52fe-4778-9c40-2e6d22c0bddc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e4af51f2-819a-4791-b88d-e4aa1a07bf3b"
        },
        "item": {
          "id": "c2c39472-289c-4c7c-b034-75475c15a14b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7d1d4ee9-4e16-438b-a1db-cb71e65dfbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38478311-8540-4dd2-bd2f-c4cabd4946ac",
        "cursor": {
          "ref": "40192942-961d-470b-aa85-3b96942eb044",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f0051621-72ea-400b-809c-b460e4388c6b"
        },
        "item": {
          "id": "38478311-8540-4dd2-bd2f-c4cabd4946ac",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "33d7ed7f-4bf5-4f61-9495-a085b2bf56b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9089b88a-766b-468e-9c59-b2612f86af7e",
        "cursor": {
          "ref": "c2fe9c93-cf3a-480c-93a5-d5d156fe3430",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "431d5325-90ae-4199-9752-7e5539feb67f"
        },
        "item": {
          "id": "9089b88a-766b-468e-9c59-b2612f86af7e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ceddefd6-9f17-4081-b975-9671888f22a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7fa7b6-c69a-46a9-b586-17650baccaff",
        "cursor": {
          "ref": "b5302090-1929-4c9a-8085-36ea37f82544",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f8b349f-d958-4d8a-afc1-48a9e80465e4"
        },
        "item": {
          "id": "db7fa7b6-c69a-46a9-b586-17650baccaff",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "def93dc7-40ad-4fbf-a92e-137a40cc2a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f680d907-9620-42f2-a00b-02291cb119a7",
        "cursor": {
          "ref": "12cf386a-a296-4914-afe5-14b12054cb63",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "799a7709-f109-439d-9c19-5956367a8c9b"
        },
        "item": {
          "id": "f680d907-9620-42f2-a00b-02291cb119a7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cd9b2b95-c07a-4c5d-b966-ef0cf6cd893a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7752c35a-0355-4f3a-af60-a30d9d892d28",
        "cursor": {
          "ref": "24a270ce-39f4-4f11-a6dd-fd02188711db",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fbb475fd-29f6-4dd0-9f55-3911f538d0c6"
        },
        "item": {
          "id": "7752c35a-0355-4f3a-af60-a30d9d892d28",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "91e226fd-efd2-408a-85c0-b8644e5b9f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4553eea-184f-4791-b695-092c5fcb52cb",
        "cursor": {
          "ref": "6c80f7e3-4fca-49fe-9bdf-4ffbed18e244",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b37b125e-7cbd-4941-a514-5c13eb861780"
        },
        "item": {
          "id": "a4553eea-184f-4791-b695-092c5fcb52cb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5156e784-293b-43ae-a64c-b91dba86a5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8e7009-e0d5-44aa-9c04-4ebfd779243a",
        "cursor": {
          "ref": "1b269a33-2455-4c2b-93e9-6c4dce677d66",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "613bbabf-e8cf-41f9-aec4-5ffbb3283e2a"
        },
        "item": {
          "id": "bf8e7009-e0d5-44aa-9c04-4ebfd779243a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f00230eb-bbbf-4340-b838-5cd4636f73da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24369498-7d6a-47b9-982c-fede52d5f8a1",
        "cursor": {
          "ref": "296156b7-20de-4a8f-bcc5-e626e2fe2c63",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6e50de43-fd51-4a6d-8fbe-809c4a42bc78"
        },
        "item": {
          "id": "24369498-7d6a-47b9-982c-fede52d5f8a1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1868275d-3758-44f9-b6b5-b00003ec1059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b25457-8b01-461e-a207-9c2e1d8a10fc",
        "cursor": {
          "ref": "afb662c9-ae1c-47a7-b288-362fa87caf19",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "50bc57c7-8e4b-4348-9835-6ef2069c08c1"
        },
        "item": {
          "id": "08b25457-8b01-461e-a207-9c2e1d8a10fc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d328a075-4f3b-4ac8-846c-7443f689b679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df6dff1-a88a-468e-b383-cc367d22e1f2",
        "cursor": {
          "ref": "40246770-24ab-46a1-8294-524d36c07c05",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a5290734-882b-4d17-b848-229666cdebe3"
        },
        "item": {
          "id": "4df6dff1-a88a-468e-b383-cc367d22e1f2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "25187f2c-c83e-4e1d-b651-d1926803815b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212fa651-4945-4e77-aec1-0357fc41f307",
        "cursor": {
          "ref": "562e559a-d242-4e70-9e57-9e69cbc3b86d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "13da28e5-b8f1-4bda-8d01-b5681515a964"
        },
        "item": {
          "id": "212fa651-4945-4e77-aec1-0357fc41f307",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bf2ae7e1-130a-49e9-beff-2cf654a37c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa6b17f-7699-45d7-80be-cfcaff058cd9",
        "cursor": {
          "ref": "8181c04e-90ec-423d-b1e9-ddafa2d79356",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "62b957e9-b51e-4485-ba4c-94b543d340da"
        },
        "item": {
          "id": "3aa6b17f-7699-45d7-80be-cfcaff058cd9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "17a5367f-672e-4312-90f4-673e42007c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9f2b9d-93db-4045-beb0-22b2fe17e3ab",
        "cursor": {
          "ref": "1c73f291-efaf-46f5-86dc-d4d611125d28",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "014f8076-5c5e-4164-b1a4-2ccd6ea80a96"
        },
        "item": {
          "id": "ba9f2b9d-93db-4045-beb0-22b2fe17e3ab",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b6214d5e-9dd4-4233-a631-35b1a26712f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4f3cdc-8fb5-4852-9cde-38fecac357bc",
        "cursor": {
          "ref": "4393334f-8865-44a3-8a2b-d76dd06f7fae",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cefd505f-c337-4652-8c86-d1704f03e013"
        },
        "item": {
          "id": "aa4f3cdc-8fb5-4852-9cde-38fecac357bc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e61b19dc-3be0-4bc4-97a5-4852ebb16793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c59eb28-d201-487e-b090-91ba671581d7",
        "cursor": {
          "ref": "fa590d69-0967-4be5-b8b5-684ff8bfa2ee",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bfd83fd8-5e31-4f64-ae1a-16abbb8df623"
        },
        "item": {
          "id": "2c59eb28-d201-487e-b090-91ba671581d7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "df0a4fbc-3f4b-4a42-a7f1-383cd21c8cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801e6b66-9f8f-4cfa-94fa-edfff41bb0e7",
        "cursor": {
          "ref": "06e505ab-0e68-4aa8-bb85-98d972e2b830",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e802f5d7-f5d2-4685-8a4c-371fd826b84d"
        },
        "item": {
          "id": "801e6b66-9f8f-4cfa-94fa-edfff41bb0e7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7d6bd0f2-1d5d-4ffb-b72e-de09da3894aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32adbb48-78e9-4a31-8fe1-f2d86f28d488",
        "cursor": {
          "ref": "c7711017-240a-43f0-815a-62f22eebb84c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a5d255a8-08f0-43e9-835c-38f068897291"
        },
        "item": {
          "id": "32adbb48-78e9-4a31-8fe1-f2d86f28d488",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0ee05e29-9991-4997-8101-28bf4d3822bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c623ab7-deae-466e-a978-2437841ea696",
        "cursor": {
          "ref": "e5e95021-a9d0-4f31-9a59-1ffba9899c7f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d128e6ae-a54e-40a3-9563-b71111a98fa7"
        },
        "item": {
          "id": "5c623ab7-deae-466e-a978-2437841ea696",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9d3ec0f3-62fc-441f-b2b4-13601a0efcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec49455-c91b-41bb-a8bb-95cae299aa33",
        "cursor": {
          "ref": "5880bea4-d3a7-48a0-a79b-0ec49fbd1623",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3aa69897-210c-4a95-b945-0933a8ca47a6"
        },
        "item": {
          "id": "9ec49455-c91b-41bb-a8bb-95cae299aa33",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f233e3d1-61b4-48b4-8c1f-db10c5e3a3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d308902-426c-4788-8f99-e5f8f79f03eb",
        "cursor": {
          "ref": "87af4be8-dcd9-4f3f-8585-93cbc962646d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9be39806-5a96-485e-8ece-e8a6000775e1"
        },
        "item": {
          "id": "7d308902-426c-4788-8f99-e5f8f79f03eb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b95b08dc-d3f6-4621-8707-effa440211fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e803891d-7909-4c35-a188-a1f55f9adf7d",
        "cursor": {
          "ref": "bc8b9883-9e3e-4a7e-b0d8-4728fdd11c6b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "39f407a2-3407-4798-a34d-c84d4106ac36"
        },
        "item": {
          "id": "e803891d-7909-4c35-a188-a1f55f9adf7d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6982d173-33fd-4621-9129-c7a732b865ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4dfea2-63f4-4211-a64d-bfc24fa2db39",
        "cursor": {
          "ref": "1182cb35-b623-4244-bac1-51d386dd0dfe",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bcfe5d30-4038-4742-aa58-a1784f060689"
        },
        "item": {
          "id": "3c4dfea2-63f4-4211-a64d-bfc24fa2db39",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7244b910-fc38-4f44-9a9e-26ecd27e856d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990ff77f-b46e-4f82-8074-ef0df6cba0fa",
        "cursor": {
          "ref": "302de623-83cd-4fe7-9472-f12a236c33ff",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f1872c34-31f9-43ab-8195-5fe3a465ba47"
        },
        "item": {
          "id": "990ff77f-b46e-4f82-8074-ef0df6cba0fa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bbe97fe5-e6ec-4f48-9616-e37ee2a6ba1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24cbc95-831b-4d23-9576-41cbbbacf32c",
        "cursor": {
          "ref": "c66874bf-891e-4fd3-b096-819896070478",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "07f1de84-e8e6-4ac6-880d-8f9dc5a88b4e"
        },
        "item": {
          "id": "c24cbc95-831b-4d23-9576-41cbbbacf32c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3726204f-1d49-47f2-a090-2c09556c9824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03226ca0-a364-4e12-a190-11bf4749c438",
        "cursor": {
          "ref": "7b41544d-cbf8-431b-9fbb-752c20cb822f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0a9d5b9c-d2d0-40c1-bb92-114ad7dd9b53"
        },
        "item": {
          "id": "03226ca0-a364-4e12-a190-11bf4749c438",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6a9fed7-4411-40b0-97e4-7bea9edb92db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814ad1aa-b7e4-4372-9eff-6088216bed2b",
        "cursor": {
          "ref": "970f6ed5-f6e5-4885-8c94-3f9490c6d20c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "78913da9-6559-4835-b7e7-9cd03486c6d4"
        },
        "item": {
          "id": "814ad1aa-b7e4-4372-9eff-6088216bed2b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "26596279-69ec-43a6-987d-2ae45240b289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f71f0b-4d00-4f6d-953b-753a57cbdd01",
        "cursor": {
          "ref": "0118aaf9-4e2d-418e-bfdd-a749934a05c9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f5a9dc1f-f24b-4b10-90ae-faeefc58b6a1"
        },
        "item": {
          "id": "27f71f0b-4d00-4f6d-953b-753a57cbdd01",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aa1052a7-3c35-492c-b8cb-fcb9867973cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299498f9-fff2-4728-a4cd-879851026ed8",
        "cursor": {
          "ref": "7dc9a240-0558-40d3-abdd-f30f565ab1b4",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9b94cace-6053-488b-9bdc-18b0daa0d251"
        },
        "item": {
          "id": "299498f9-fff2-4728-a4cd-879851026ed8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "06a31053-a344-49c4-8940-11522a774341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136b8cc8-284f-458d-bcc4-cac2fd2e3359",
        "cursor": {
          "ref": "4b73b135-bfad-4f28-b9ae-a9d9f5e4daa5",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "22849a07-4490-410e-bb27-4697f863f8c2"
        },
        "item": {
          "id": "136b8cc8-284f-458d-bcc4-cac2fd2e3359",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ec4007b4-be54-4e09-8135-44d7a613222b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b9a5ac-b222-4467-9f09-7a184b95f836",
        "cursor": {
          "ref": "5128348b-4e10-47b8-a1e0-526f25567480",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "02acbbc1-24b6-457b-8aea-0203c6555ebd"
        },
        "item": {
          "id": "e2b9a5ac-b222-4467-9f09-7a184b95f836",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "50cea520-49a3-498e-ba2c-764a5fc1f7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f614ceb0-5e27-4a2b-aa5a-f11e1ce06da9",
        "cursor": {
          "ref": "8922ac6b-9cc8-464f-9408-10ac36d42af9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0d9dcebc-a761-4d3a-be71-2de219d8fc60"
        },
        "item": {
          "id": "f614ceb0-5e27-4a2b-aa5a-f11e1ce06da9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a398a231-247c-4e59-86fc-8f3428542cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51ae682-54c5-4521-be0e-8960944381ca",
        "cursor": {
          "ref": "31ddf3b4-0678-460e-a9f4-f44eef4192a0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c6d19c47-9d39-41fe-b03b-329fd36af3d2"
        },
        "item": {
          "id": "f51ae682-54c5-4521-be0e-8960944381ca",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4b4368ee-c820-42e7-94fa-93f464f46861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28c6616-88f0-42db-8ad5-0c67aaa03af8",
        "cursor": {
          "ref": "b3b50e1b-e79b-42f8-a1c3-c7b56f5a09f0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ef2ca589-6343-421e-aa97-a25bcbecb1c1"
        },
        "item": {
          "id": "d28c6616-88f0-42db-8ad5-0c67aaa03af8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1e62a9cf-17ea-4ad9-86df-4a06b5749397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f996382d-9d75-4411-81bb-ffe2226bddaa",
        "cursor": {
          "ref": "34ea245a-fa51-4f4b-93a8-044b0eefa7f3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "06927578-076b-40b0-9d6a-8ba9d5ec05d3"
        },
        "item": {
          "id": "f996382d-9d75-4411-81bb-ffe2226bddaa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2b362218-93e5-439e-b1ea-4d854fa8c645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b2b5b-80c0-46a1-b62e-09168738b0d8",
        "cursor": {
          "ref": "1d1ec710-d690-4b71-9463-173a16368029",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a8af6484-db72-4686-aea7-19f5094aff5b"
        },
        "item": {
          "id": "595b2b5b-80c0-46a1-b62e-09168738b0d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c551fbbb-d44e-44d9-a124-2b0e909df11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f851122-44f4-40e7-8fd1-0821934bec9b",
        "cursor": {
          "ref": "cf68fce8-610d-451c-a45d-87e3b7d9faed",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b7be55c3-180e-42d9-8f09-07c3653865f7"
        },
        "item": {
          "id": "2f851122-44f4-40e7-8fd1-0821934bec9b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "50cbc8ee-4e60-4a14-b3f7-37522a0a1391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94eb3899-1c8a-49d2-8745-1e4bb3541b0f",
        "cursor": {
          "ref": "d779dfda-6936-487c-9237-91000934f200",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9de46467-a986-4b4c-91aa-9b2e41a6c336"
        },
        "item": {
          "id": "94eb3899-1c8a-49d2-8745-1e4bb3541b0f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3bc7a248-160b-4e63-85a4-0ec4e13911f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e67b327-a339-4948-9948-351bf60516c3",
        "cursor": {
          "ref": "2d3929be-1b15-4c5d-99eb-49dfbcb7d3d2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "936124c5-1669-4533-a9cc-f7e306b30365"
        },
        "item": {
          "id": "1e67b327-a339-4948-9948-351bf60516c3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fcdbe66d-cb6c-4b64-9c54-578a5a807dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10edbe6a-1cff-4225-b30d-7ca26b68b413",
        "cursor": {
          "ref": "62790863-1731-4e02-aa02-59a64c88688f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2a52b7bd-57dc-47eb-9a64-b4c68e598fda"
        },
        "item": {
          "id": "10edbe6a-1cff-4225-b30d-7ca26b68b413",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "35e04107-9535-490e-a4f3-6b2f7b065e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2add57e-2805-4155-af06-82a6eda5aa58",
        "cursor": {
          "ref": "260c8ef3-1b78-41be-8a4c-470a6bd6e3ca",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ef17b980-f6ff-42e2-8517-f46e38968693"
        },
        "item": {
          "id": "c2add57e-2805-4155-af06-82a6eda5aa58",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "90079b96-da57-4b17-96ca-ff95b2e6af3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee7bdf4-e107-4626-9647-47bed8be52ba",
        "cursor": {
          "ref": "385647bd-5159-46ef-82ae-ecbc49e5632b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "08fe3db6-9af2-4a02-85e4-48cba57584df"
        },
        "item": {
          "id": "aee7bdf4-e107-4626-9647-47bed8be52ba",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "daf05ef9-7ab9-41d4-99b4-825b3d576ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3673294-de64-4192-b35a-9b655eb7eae6",
        "cursor": {
          "ref": "19879232-b144-4860-8c7c-7ca358d58471",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bfc79b04-f383-4743-9acc-5b7de4aa7352"
        },
        "item": {
          "id": "e3673294-de64-4192-b35a-9b655eb7eae6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2fb5f833-608f-4587-a9e1-7548eb7ce16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f17fff-037e-46a6-9914-3ccfcc452b53",
        "cursor": {
          "ref": "ddfdcf84-bc08-4f79-a14d-d393d4e5d7a1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "293af267-ee76-430d-a159-9c529e32b6ea"
        },
        "item": {
          "id": "49f17fff-037e-46a6-9914-3ccfcc452b53",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c38e60ae-b597-43bf-8fc8-7e87b5f1eb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7328f36e-a0cc-4467-ba83-a92ca28b3abc",
        "cursor": {
          "ref": "63cdaab4-2da0-4bb0-8e50-7a2f3d116e2b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "37502d05-ca57-4782-a1b6-313802e11b80"
        },
        "item": {
          "id": "7328f36e-a0cc-4467-ba83-a92ca28b3abc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "09545119-36c6-43fe-ac79-24e3841d28e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5345a5-7bd5-47a5-99bb-121a1c2d8b13",
        "cursor": {
          "ref": "3b501fcc-5932-4110-914c-8b3ae6a7f386",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9be23d2b-6d85-4090-9b15-0c656553b287"
        },
        "item": {
          "id": "ea5345a5-7bd5-47a5-99bb-121a1c2d8b13",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "80aae6e0-2134-4387-914e-dba40e283ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6855c46-1df6-4185-a490-8e2b6a89c7b4",
        "cursor": {
          "ref": "6c9c983b-eb34-454a-a540-8f57847522f5",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3e343fe7-b3fb-4174-a493-895406bf68b0"
        },
        "item": {
          "id": "f6855c46-1df6-4185-a490-8e2b6a89c7b4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "37cb4485-3aa0-4ba0-974f-ac3e883e13d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d3fcbc-51cd-4e58-835f-dd9631ed2a9a",
        "cursor": {
          "ref": "5b64708e-f1a7-4b8b-98e9-ccc8f3161e05",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "12862068-94f3-4675-b9e1-e28178b295aa"
        },
        "item": {
          "id": "b6d3fcbc-51cd-4e58-835f-dd9631ed2a9a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e37ed6f6-234c-4c1c-b1e2-c0e1f53b90f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c847a8dc-5a6e-4b0c-8cfd-5f9782e9b220",
        "cursor": {
          "ref": "3c236dce-68b2-4e01-9791-5d3dd8877e4b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "02b432cc-7fdd-4e6a-a966-d6803daccb47"
        },
        "item": {
          "id": "c847a8dc-5a6e-4b0c-8cfd-5f9782e9b220",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0022aa0b-a714-4772-bd7d-04b99740c7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75afba66-6ee8-4ac4-ac69-2c4ed1e43c2a",
        "cursor": {
          "ref": "0b0417d2-a4eb-495b-8541-1d768a76c65a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a11e0657-a571-4fd8-a52d-f76114a21b0d"
        },
        "item": {
          "id": "75afba66-6ee8-4ac4-ac69-2c4ed1e43c2a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8e88b1ae-55f7-4536-ba72-be2c2debeacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37a61a8-d8ff-4844-ba73-21a448847016",
        "cursor": {
          "ref": "612b2175-3ca3-4815-9c4a-3cd5b038e959",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bb4c3276-838c-4120-b428-6f45305338db"
        },
        "item": {
          "id": "f37a61a8-d8ff-4844-ba73-21a448847016",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e1f24da1-a0a6-4741-ba1c-e8d203407e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81c6991-0b60-49bd-927f-d94e1b29bb19",
        "cursor": {
          "ref": "5dc7d7af-6aa8-428d-875c-d6b91511f84e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e36d51b3-cf88-4be1-be2f-5529d67c4af6"
        },
        "item": {
          "id": "e81c6991-0b60-49bd-927f-d94e1b29bb19",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "86d497d6-38aa-403a-9019-23f40b997299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af9b2b2-b2fd-4cd5-9701-80bce9bd462a",
        "cursor": {
          "ref": "e94b3072-eaa4-4ec8-b83f-9d0da3c7a578",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a61d64c6-3e52-4c9f-9fb2-30b4595d099f"
        },
        "item": {
          "id": "4af9b2b2-b2fd-4cd5-9701-80bce9bd462a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bd52d6aa-639b-4ffb-b4dd-a12f27a4a4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42aec7b-fe14-40a3-8b03-2fbaf166efa3",
        "cursor": {
          "ref": "404de5a7-3238-44d0-86c6-37a187e843c5",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dc0e937d-8056-45d9-8589-c4bddd1ea8d3"
        },
        "item": {
          "id": "d42aec7b-fe14-40a3-8b03-2fbaf166efa3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "134e9450-ad69-48ce-9ca0-3b0b3b2a5443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abd50a5-ad8c-4a19-aa2a-5b185a66ccd0",
        "cursor": {
          "ref": "21c055c6-a0fb-4eb1-b33c-02135a03cda4",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fc899c9f-ad8d-47ae-8c3e-63af8a805539"
        },
        "item": {
          "id": "6abd50a5-ad8c-4a19-aa2a-5b185a66ccd0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f7af2aa0-abbb-42ba-9130-8fe507b3bf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e8677e-23c1-49dc-b008-2708cd0a3806",
        "cursor": {
          "ref": "e544de2d-f341-4040-9524-d67c354a80f6",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4eb404c8-6ee5-4698-b659-a59e9e035b27"
        },
        "item": {
          "id": "e7e8677e-23c1-49dc-b008-2708cd0a3806",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b4b54e46-1c34-49fd-aa9e-e813582af9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38a0c13-356d-4898-bf31-71d2fa0216d1",
        "cursor": {
          "ref": "c2bee621-7a54-4715-aa16-15e1c27d4d56",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "485db02e-7903-44df-aab6-a3dfedab49b3"
        },
        "item": {
          "id": "e38a0c13-356d-4898-bf31-71d2fa0216d1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c8255c26-6c76-4158-acd4-4da2b4b8d053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d35960-f3c6-49ef-aba4-4a3e0fdbfa66",
        "cursor": {
          "ref": "28538750-98be-4da4-8d8a-a605d77ae7fd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1f41b965-02a4-4d4f-97d3-6a3e5dcfeff7"
        },
        "item": {
          "id": "74d35960-f3c6-49ef-aba4-4a3e0fdbfa66",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b09d509e-d75b-4100-a9c9-ea806d2f5e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca681f03-5c4f-450d-9b34-74cf3e9f7474",
        "cursor": {
          "ref": "5d8c1cec-c090-4a81-aed3-77af11e9c553",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "11db689f-6e20-4412-a618-6eaa6b2e5024"
        },
        "item": {
          "id": "ca681f03-5c4f-450d-9b34-74cf3e9f7474",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "acbd84f8-67f5-4b5a-81f8-9d18569c4f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481b78fa-1c80-4ec3-8161-752b573e84c0",
        "cursor": {
          "ref": "ded5d843-ab1d-4c6d-8732-bc038bb243f8",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6f361d02-f2a8-4765-9b4a-2de12ea6f534"
        },
        "item": {
          "id": "481b78fa-1c80-4ec3-8161-752b573e84c0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "89f28166-3856-48fc-b6ba-e7efda653343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ef1548-7d45-4c08-b57e-92d9c283e59d",
        "cursor": {
          "ref": "b891fa32-705b-4f74-9e53-df5053341ed0",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "21a63be2-7344-483a-a508-6021f0c3192e"
        },
        "item": {
          "id": "63ef1548-7d45-4c08-b57e-92d9c283e59d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b9db9a4e-52d1-45d0-9b1b-23b5ddc4dbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f3f8a9-be9f-42df-957f-fef9be20b8a0",
        "cursor": {
          "ref": "3eaec8d5-0b16-44cd-8ab6-17b158c3d28e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b4304363-50bd-49e1-b7ad-482b429712a4"
        },
        "item": {
          "id": "09f3f8a9-be9f-42df-957f-fef9be20b8a0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "58497ac9-dbd5-4a26-b1e2-19c939f5a634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b29ce6c-31c1-483c-8304-eea50ee4b0b0",
        "cursor": {
          "ref": "2784ab0b-ff64-4548-a682-adf84e6bf0c2",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c737058c-53bd-4cc8-ae31-d2983e1bb381"
        },
        "item": {
          "id": "1b29ce6c-31c1-483c-8304-eea50ee4b0b0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d487340f-4f1e-4db5-bb30-22d4f470f000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a665a8c0-e8ae-4889-9158-ab7080ad445a",
        "cursor": {
          "ref": "a94d08fb-1721-4cb2-a431-5939b44d75ab",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "45752e24-3c02-470f-aa7a-5c9d90703692"
        },
        "item": {
          "id": "a665a8c0-e8ae-4889-9158-ab7080ad445a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c5b3c694-0a32-47be-8d7c-ef30bd372854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451f1b07-4206-4e4a-baea-999c65fbf45e",
        "cursor": {
          "ref": "85b2d8bc-9dbb-4c41-9cf7-7f19a28800cd",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2822f225-48b0-40b2-93a0-52b09f47efd1"
        },
        "item": {
          "id": "451f1b07-4206-4e4a-baea-999c65fbf45e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a70e67fb-c6db-4489-8b23-2316d9b506fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44d41d1-c78c-48ee-926e-657c26228ba1",
        "cursor": {
          "ref": "b30d928d-48bd-4732-ad47-713d6ba28dc8",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "46cacf97-3244-4df5-8355-957b11c048b3"
        },
        "item": {
          "id": "f44d41d1-c78c-48ee-926e-657c26228ba1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "53c134ea-5ace-4b5d-93da-8b93af8d492c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ffd09d-f0d7-4e45-a676-bfd3a31e5c27",
        "cursor": {
          "ref": "8b69638d-7ade-4388-9527-84fed9372992",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0941f674-9d55-4761-a375-11d21e9c6ca5"
        },
        "item": {
          "id": "31ffd09d-f0d7-4e45-a676-bfd3a31e5c27",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f2994f60-cb4b-414d-9db3-5eb39f91f9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50774f89-f637-428a-8575-0f0b4e730628",
        "cursor": {
          "ref": "0846b194-9839-4fd2-a990-1c9f816d3e23",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "800a60c6-f280-4e71-b8db-4de65fd10fea"
        },
        "item": {
          "id": "50774f89-f637-428a-8575-0f0b4e730628",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e7f25b12-43ad-4cb5-912e-140572df01b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53455067-9fd2-47f3-9620-285bd771cf4d",
        "cursor": {
          "ref": "0382bcdb-3e96-4f6d-90b2-79bed564a6a6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "386d664c-546e-4ce2-8e11-460a6085ca0a"
        },
        "item": {
          "id": "53455067-9fd2-47f3-9620-285bd771cf4d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a42334e8-45f2-4745-82d5-dea71b4f14f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d479c1ef-45cf-406a-b44a-00b540c3fdf8",
        "cursor": {
          "ref": "7fa85512-4b2a-4268-a87d-87daba708bff",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a69c2368-a902-413c-8b6e-05b8ce5e5f7d"
        },
        "item": {
          "id": "d479c1ef-45cf-406a-b44a-00b540c3fdf8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "858f4cfe-3aa6-4a9f-82a1-1cc5c47b911b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93482f7-2324-46a5-bad0-7980d29083a1",
        "cursor": {
          "ref": "f7df0d7a-5572-4db6-95af-262eb754324b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "768ea6fb-af8e-4f7d-b0ee-e2dc805cd662"
        },
        "item": {
          "id": "d93482f7-2324-46a5-bad0-7980d29083a1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "55bf388a-8c1d-42d7-8d21-6fcef3b9da4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "aa1bcdd5-4b8f-453d-b21c-d28e4b3ceba8",
        "cursor": {
          "ref": "1a3c61a4-d7c9-41d8-93fa-47a0998e91fa",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ae5e0c40-699b-4651-a4e8-10148a62ab9f"
        },
        "item": {
          "id": "aa1bcdd5-4b8f-453d-b21c-d28e4b3ceba8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f511957f-0124-4b61-bd0c-c598dfdf9eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5655a431-9060-4263-9168-5fd3d3ddf0b1",
        "cursor": {
          "ref": "68120fdb-9967-4add-adda-3121ae29617e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4ce5fa7e-49c7-43c1-889b-790387707a3f"
        },
        "item": {
          "id": "5655a431-9060-4263-9168-5fd3d3ddf0b1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bd9b277e-11d0-4733-bd98-6f19c6d6877a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9200148b-9701-443d-bff2-7eaf2a14333c",
        "cursor": {
          "ref": "8f71f325-4528-4bdf-a3e8-e1e2ddf199a7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "faca6ec3-cd57-4e49-8369-5a7078b9fe58"
        },
        "item": {
          "id": "9200148b-9701-443d-bff2-7eaf2a14333c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "745bf3d0-44fa-4095-ae32-493b5df285cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f31e5516-054d-441d-bdb4-78e2f433765c",
        "cursor": {
          "ref": "70cbbf74-adce-4239-b2b1-f786e099cbd5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8b1946ef-8667-4f93-a5c1-68cc13298e24"
        },
        "item": {
          "id": "f31e5516-054d-441d-bdb4-78e2f433765c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f3f8ed02-d282-4a35-98e4-e1e9e14b27ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "40cfde96-a839-4123-82ab-af092f59a1d8",
        "cursor": {
          "ref": "08ee1036-87f2-4fb8-9e23-b7df158b0958",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bb7455f9-7f65-4824-9ec6-ffb600939f3f"
        },
        "item": {
          "id": "40cfde96-a839-4123-82ab-af092f59a1d8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "13cff0d9-2399-4feb-bd4c-91f4cc0d69ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1c3a5b5e-5804-4f61-b057-1607c13bafc7",
        "cursor": {
          "ref": "130e68f7-93d7-49a4-9805-ca767aa36279",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7b189100-a034-4f0f-a7cf-8087e7347ce6"
        },
        "item": {
          "id": "1c3a5b5e-5804-4f61-b057-1607c13bafc7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "78d492df-8968-4120-8df7-35f4b97436d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "54693fc0-c773-4c2b-95fa-ae1502fae2dc",
        "cursor": {
          "ref": "3b18633a-4986-461c-8c29-081122bd8f6a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ad602b87-5708-4b2e-bd47-036a388f46f9"
        },
        "item": {
          "id": "54693fc0-c773-4c2b-95fa-ae1502fae2dc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7db86f7c-a938-4798-8597-03f9419c4a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d6c70c-081e-4d22-9bd6-20508cbe159e",
        "cursor": {
          "ref": "283d76c0-9494-4c95-a91d-7b2687654b2f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "75895dfa-1b4e-49d4-86eb-20645331da33"
        },
        "item": {
          "id": "b1d6c70c-081e-4d22-9bd6-20508cbe159e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f48ab85e-44c8-41cb-a92c-0adb8503cf0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171b4bad-f547-461a-8648-1208cce61785",
        "cursor": {
          "ref": "dfa7ee03-7244-409b-b7c3-501f88469d3b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e87bab3a-d805-4032-9b24-df3e94b02a8a"
        },
        "item": {
          "id": "171b4bad-f547-461a-8648-1208cce61785",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "256f74b9-8a07-48fe-9479-a9e38aa935f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe32af9-e446-4f6a-848a-3c1820387072",
        "cursor": {
          "ref": "8fe0631f-388e-4f0b-913c-7fbbc06f677c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "50902ead-dcd2-46e7-908e-a75e36102456"
        },
        "item": {
          "id": "7fe32af9-e446-4f6a-848a-3c1820387072",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c696ae69-76e9-4058-8cf3-726536551e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7988a302-1a3a-4686-a092-55752ba2fa2e",
        "cursor": {
          "ref": "0fa32ce6-134f-4e6b-8a1b-b42751acaf3a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "352c3635-1264-42cf-9205-179242182104"
        },
        "item": {
          "id": "7988a302-1a3a-4686-a092-55752ba2fa2e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "25de4da1-8eb4-435c-b87c-1146a77286e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1badb9c-a055-4600-bc36-e88b32ab0202",
        "cursor": {
          "ref": "84481a9a-000a-4335-8891-59834b3e6bb5",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "87ac38d3-6304-46a3-962d-4dadb4760d40"
        },
        "item": {
          "id": "b1badb9c-a055-4600-bc36-e88b32ab0202",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ecf29a04-5a5f-45b0-8a71-afbc90a6f9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad91d691-c073-4215-a2c6-9de27a6b9868",
        "cursor": {
          "ref": "4989338c-3f4b-463f-a1bc-534d5343969a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9531b225-4b63-44da-a426-d2ce09b48c29"
        },
        "item": {
          "id": "ad91d691-c073-4215-a2c6-9de27a6b9868",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7401a850-acca-4fd2-8b43-062c44080a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4772e1c4-650a-4584-9750-2638f074894e",
        "cursor": {
          "ref": "a755d4b5-737d-4cb7-be26-040b28470550",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b92e1378-1b7b-4a55-b6d7-be71491edcc2"
        },
        "item": {
          "id": "4772e1c4-650a-4584-9750-2638f074894e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4863043b-84bb-432a-9db5-040f98bde170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b52e951-4abf-41eb-ab86-5f7afd240dca",
        "cursor": {
          "ref": "8c3b8d10-0ff9-4e72-b45a-72a6867c6ba0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ba4400e7-c3c0-45de-8f9a-8f169491d2f7"
        },
        "item": {
          "id": "2b52e951-4abf-41eb-ab86-5f7afd240dca",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ecaa6d34-62bc-45fa-9120-4e6af81435d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67abb9f-afbb-43e2-84a4-60309f06de77",
        "cursor": {
          "ref": "66781f3a-9f22-4ec0-b92e-4bf17eb00bf5",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f62286fa-9e85-4e33-a1eb-8bf769d45291"
        },
        "item": {
          "id": "d67abb9f-afbb-43e2-84a4-60309f06de77",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "901ede6c-178b-4600-8bd4-180792e3e951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920b4d87-2a44-4e2e-8259-d49bfe462c29",
        "cursor": {
          "ref": "2462e714-d09a-48da-8eec-7a36951b9c18",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "544d88d4-7986-47c1-b257-395583794984"
        },
        "item": {
          "id": "920b4d87-2a44-4e2e-8259-d49bfe462c29",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "81d95b03-4864-422e-bcca-27699fc80c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30aded95-07ee-4a5b-9c88-b22e903b160c",
        "cursor": {
          "ref": "d4c5c6c5-f013-440a-8796-3594f2090fd1",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "20ea7080-50c9-45cb-a1a5-89eef4c42a64"
        },
        "item": {
          "id": "30aded95-07ee-4a5b-9c88-b22e903b160c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0c39000c-b00b-4827-86d3-87baa6b565be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba722dd-6681-4184-bb12-6aff8c162d85",
        "cursor": {
          "ref": "77b72d5e-f713-495e-a377-c06ce6930bad",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "08b33564-cce4-4eda-89d4-940f958b24b6"
        },
        "item": {
          "id": "eba722dd-6681-4184-bb12-6aff8c162d85",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "34e5e005-78a9-462a-9514-6451bd1a8e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aefa39-9c4c-4df0-9ce8-016e03ab5955",
        "cursor": {
          "ref": "757ab2c8-5441-41d6-bd23-ea55e0c8389e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f3ba416c-17e0-4c87-bd26-0b71c01c84c7"
        },
        "item": {
          "id": "74aefa39-9c4c-4df0-9ce8-016e03ab5955",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3166c2b9-7ade-4a95-ab51-b0501ed26cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703c4ab1-edf4-4c93-a9f0-5bc3a328df99",
        "cursor": {
          "ref": "f107dd68-bc3b-4b91-a048-6a0d18e61316",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f9f7aa52-e72d-4c7f-923f-4c2e7a8efc09"
        },
        "item": {
          "id": "703c4ab1-edf4-4c93-a9f0-5bc3a328df99",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6c3b1bb7-4dfb-4e7e-b7b4-8cfe4a51edcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a646746-60db-45fd-993b-4835c565bb90",
        "cursor": {
          "ref": "75ac9092-7277-4796-b4bb-15b4acb3376a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7a7601e2-1922-42c5-b4b9-129affb996a5"
        },
        "item": {
          "id": "6a646746-60db-45fd-993b-4835c565bb90",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7ccf4327-09cd-4a8a-aefa-e3eda571afe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4f3372-382c-4642-87bf-cf277d4b661a",
        "cursor": {
          "ref": "c793bdfc-f793-4d7c-92af-4703044e441a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dc33f1d3-947e-4f28-8fac-c0e171fbc746"
        },
        "item": {
          "id": "fc4f3372-382c-4642-87bf-cf277d4b661a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d8a729f0-8606-4e10-9d5c-2d4159cfb992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6382492c-60ea-4a53-ab31-5a6676f8ff65",
        "cursor": {
          "ref": "f4280b1e-e530-43b0-8d7b-2656d2d7a277",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "be70ac7d-1926-48e8-b6d0-e48fd78c1d37"
        },
        "item": {
          "id": "6382492c-60ea-4a53-ab31-5a6676f8ff65",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7b669044-0b73-4cfb-9dfd-5ef74c9b67bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec96c97-b086-4088-ae3b-75660e7d614e",
        "cursor": {
          "ref": "938f6861-867d-4f97-822b-f15d367f0054",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "53edc6dc-c397-4677-8b95-0385660b5c92"
        },
        "item": {
          "id": "9ec96c97-b086-4088-ae3b-75660e7d614e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "103d7508-34d1-447b-b73b-a55251e5e41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77e0a29-ac05-46e8-9728-5562b94e6117",
        "cursor": {
          "ref": "5f11a270-e12b-4f70-a727-826fe17a67ee",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ab505a2b-4a43-493e-9f1e-b93e1619cdda"
        },
        "item": {
          "id": "b77e0a29-ac05-46e8-9728-5562b94e6117",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "11765970-1c42-434c-a98c-6fa78caff5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3965127-8e63-4364-9a30-edd30e39e2a4",
        "cursor": {
          "ref": "cea9ce15-33ac-40dd-8d76-8154d198a2a2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a7615b4c-a8f3-4c76-ab2d-d4296b6cee62"
        },
        "item": {
          "id": "c3965127-8e63-4364-9a30-edd30e39e2a4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a72e7460-a658-4c86-8cbb-39bc37a98598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e4932a-5852-499d-82e7-03b543112a73",
        "cursor": {
          "ref": "f98954a4-dbd1-4ffa-9e11-ef3f0b52628c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "38268abc-d17e-4192-83eb-37de4333b412"
        },
        "item": {
          "id": "84e4932a-5852-499d-82e7-03b543112a73",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7887d1f8-17db-426a-9faa-51958695191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1da8b3-5065-431d-9887-5597a539ba04",
        "cursor": {
          "ref": "e22ebb65-4e99-4772-ac5d-d82d69ef79f2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e52a6f7f-6901-4564-ae2b-54cd4c78c98d"
        },
        "item": {
          "id": "ca1da8b3-5065-431d-9887-5597a539ba04",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4215727f-d706-4b3d-bca4-482a8cf620fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf36a4a9-66bc-46f5-b807-65579c3f253d",
        "cursor": {
          "ref": "da1e1ba7-72d8-4449-94e0-1a245abfff70",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "504e1738-5517-490f-b46c-b9d1dbdb769b"
        },
        "item": {
          "id": "bf36a4a9-66bc-46f5-b807-65579c3f253d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4a224137-a144-4f44-a56c-23633c6dcab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6d85a8-405a-4459-8330-60342a083da0",
        "cursor": {
          "ref": "cff13162-e6e3-4adb-8c48-dc5fd8b5e814",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "63b76dfd-2883-4fbd-9ee4-482d47e1f3e4"
        },
        "item": {
          "id": "fa6d85a8-405a-4459-8330-60342a083da0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "18a841d5-74a8-4e49-a6e5-37d0cfa5df55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a093f319-65b0-4ef8-87c4-9f99df36be79",
        "cursor": {
          "ref": "d93f0c16-883a-44e4-a9df-1ee2d31d0e0c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b05b5b0d-c32a-445d-a60c-3d32c3d0fc02"
        },
        "item": {
          "id": "a093f319-65b0-4ef8-87c4-9f99df36be79",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fbf9f138-adf5-4762-9a2f-914bdb74a29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e780d3-32b8-4681-a582-6b9a5d376aa6",
        "cursor": {
          "ref": "bd28a5c5-7de9-4f72-80b9-b962c570f9ee",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b87e7356-155c-4c3d-a807-f589be07fb1d"
        },
        "item": {
          "id": "38e780d3-32b8-4681-a582-6b9a5d376aa6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d0970887-0e05-418b-a075-cdbf29b25cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c446023-3766-4478-823e-348c7dd8b4f7",
        "cursor": {
          "ref": "b4fcdc16-bcd2-490b-9398-aa1b7145cf0e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "41daa926-b816-4c2f-9511-20a977fda660"
        },
        "item": {
          "id": "5c446023-3766-4478-823e-348c7dd8b4f7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "31edcc01-1c18-491c-b97e-f9780143ba09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3740ab1-2e8e-4fbc-9823-50ab414d3fa3",
        "cursor": {
          "ref": "9138e713-5420-4b26-91be-8689a8fe7c1d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d98fb3be-bf55-4886-a370-982b5136f7dc"
        },
        "item": {
          "id": "d3740ab1-2e8e-4fbc-9823-50ab414d3fa3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "43fcf5f6-7b63-4b7f-be4c-1fdf3f700227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bba7804-5e80-4e94-b64c-42cbe347675e",
        "cursor": {
          "ref": "519ba1c5-f9c9-4b05-a3cc-b379d3b4a57a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "94aa7ed0-ade9-4b41-9baf-4da86b2671bb"
        },
        "item": {
          "id": "0bba7804-5e80-4e94-b64c-42cbe347675e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a9b97a09-3da1-46f3-bb6c-f92bc9c07c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7b4dc6-605c-45cf-9ff8-3565f66c7041",
        "cursor": {
          "ref": "06807c51-3644-419c-9cb6-9f57d2def7b4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "10289dec-9dde-4e4f-8e3c-9188b10a44a5"
        },
        "item": {
          "id": "bd7b4dc6-605c-45cf-9ff8-3565f66c7041",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c29161c5-3f57-49c8-a260-e45a591a774b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8f928d-9572-4cdc-b194-6dc99c567278",
        "cursor": {
          "ref": "fa594bdf-1638-48c5-8333-2396220444e5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "98ded8b1-7309-4a35-ab68-b0ef7c37b248"
        },
        "item": {
          "id": "2d8f928d-9572-4cdc-b194-6dc99c567278",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f8c7f956-12d5-4672-adf7-96a2760c76f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4890f9f-1638-4efb-87b2-18dc241def5a",
        "cursor": {
          "ref": "577071dc-f42f-44e1-9aa6-05d91340ed88",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ecdb94e2-28e0-4413-8b75-e48699151381"
        },
        "item": {
          "id": "e4890f9f-1638-4efb-87b2-18dc241def5a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "015a092a-913d-45bf-84ba-a1c9f81d502d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be11713-51c6-4e78-bb53-6c8c9dfa34f3",
        "cursor": {
          "ref": "c721fcda-f435-4ae0-bcf7-c304e90b4856",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "795c20ee-ed11-4383-ab2e-4f7939c15964"
        },
        "item": {
          "id": "7be11713-51c6-4e78-bb53-6c8c9dfa34f3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "36603a84-6062-4a18-a9bb-3e004798679f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24acf604-41e6-45fb-9744-64a9c9d507ce",
        "cursor": {
          "ref": "ad39f825-18e8-4cc7-bd0e-61d112d9ac5d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "89f5af04-d851-44e4-8ee5-c410e03454c0"
        },
        "item": {
          "id": "24acf604-41e6-45fb-9744-64a9c9d507ce",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "252ae042-662f-49e0-8e10-453ece656654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ec2524-43e2-4795-aa7c-7a1413f7cc5e",
        "cursor": {
          "ref": "836d9953-bead-4080-b8a1-5f9c28899207",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cdffbe46-6446-4a54-881a-78b4ac493fea"
        },
        "item": {
          "id": "e9ec2524-43e2-4795-aa7c-7a1413f7cc5e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0a3f49ff-ebb3-4edf-851d-1f3732dff7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e919bb63-3e15-4a5c-8166-81d84cb0562b",
        "cursor": {
          "ref": "68eb32b5-c2e3-4bc7-9e2f-80665fe32e67",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ad68f3bb-e799-4865-ae21-dbab3842dd0c"
        },
        "item": {
          "id": "e919bb63-3e15-4a5c-8166-81d84cb0562b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a38eac73-74a6-46cd-a546-e1419c4ef27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3d1544-f167-4624-86b2-1197e11a7b1f",
        "cursor": {
          "ref": "fbe55e32-b8a8-4af8-bf41-74bc80297fea",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "21d8a34c-c9f9-4d33-ab59-9d0705489516"
        },
        "item": {
          "id": "9d3d1544-f167-4624-86b2-1197e11a7b1f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5fa1eccd-2fc0-430f-8e14-04babb9cc2a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415efc2e-42e1-45ff-b75e-332d70536889",
        "cursor": {
          "ref": "9ed5204b-ce5c-41ed-88e3-78ed7b7ebb86",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "03a20c6d-ca5d-4697-827e-7087f86541c4"
        },
        "item": {
          "id": "415efc2e-42e1-45ff-b75e-332d70536889",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3a4c5786-6516-4c01-bc84-bbe751bf22a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2a8f58-76b1-4a26-b6da-7807bd3482d4",
        "cursor": {
          "ref": "d962256f-9bbc-48fb-a085-c2aec24b4cad",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fd2edf5e-7a80-4f8e-a498-f86a76c03bd3"
        },
        "item": {
          "id": "be2a8f58-76b1-4a26-b6da-7807bd3482d4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1fef279e-0a34-4d96-b5c6-498ca80afe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8739445f-8b4a-41d4-a6ff-5eaaaeeb90a7",
        "cursor": {
          "ref": "b5322700-c673-42c3-a810-08c6788312a4",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6f14e339-7588-45b1-a6fa-175b77a2a230"
        },
        "item": {
          "id": "8739445f-8b4a-41d4-a6ff-5eaaaeeb90a7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a4fb1f2c-eb19-4611-a41a-f36562e79594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3820e33f-93e8-4183-8b9a-6eaa78158874",
        "cursor": {
          "ref": "76fbdf08-ae1f-4789-907d-70c389352aee",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "607103a4-0211-4af8-85e2-9d73cf106101"
        },
        "item": {
          "id": "3820e33f-93e8-4183-8b9a-6eaa78158874",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0963407f-545a-4c00-86f9-0c6c62481ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c970af-8bcf-40a1-b2b2-c697366a480a",
        "cursor": {
          "ref": "afe94ee5-8b24-4605-bf57-c38e2e63af16",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "47e8e84f-3a6f-4e20-a2ae-c9a2ce5462fa"
        },
        "item": {
          "id": "a1c970af-8bcf-40a1-b2b2-c697366a480a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "98996a0d-36f3-4173-a198-ffc6082235bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc55eb0-b562-4507-8d93-769c5486057e",
        "cursor": {
          "ref": "283d9d91-9fd2-497b-8af4-1b88e6587b89",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aa46023e-5226-42c2-831c-c9c53821a574"
        },
        "item": {
          "id": "cfc55eb0-b562-4507-8d93-769c5486057e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fe3f888d-78c2-4615-8b54-979af459a848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a02ba9-2f37-477f-baf9-f8510cf22ed0",
        "cursor": {
          "ref": "84b06b21-0f44-4f6e-959e-91b321247daa",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b36a5531-2614-4c41-9407-3be62643ed72"
        },
        "item": {
          "id": "a2a02ba9-2f37-477f-baf9-f8510cf22ed0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "36bca2f2-5d6f-45a5-b746-98bf4a3b4043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198ee130-680a-47db-9308-f25c296109bb",
        "cursor": {
          "ref": "7e97d6a7-0d60-4a2e-bdf2-bdb47a90746e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "697d03ec-cc17-456d-96a6-c5f0bfae2364"
        },
        "item": {
          "id": "198ee130-680a-47db-9308-f25c296109bb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8bbddcd2-8d60-4921-8786-41a088bcbeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f95caac-6417-4376-a66b-f312e7d3687f",
        "cursor": {
          "ref": "32efdc6e-cc52-4ee0-a564-a19d62837a48",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "05b4c5fd-2083-420b-9840-5f0aa9d7c26a"
        },
        "item": {
          "id": "5f95caac-6417-4376-a66b-f312e7d3687f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9384dd95-704d-423d-ba83-df0e9013ad14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a114ef21-b986-4ec2-8bb9-804b894ff502",
        "cursor": {
          "ref": "65c47cde-85a9-447f-a280-c1a71ce4b4f4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "10c9ac24-67b2-4d3b-a87e-4f8aff02762f"
        },
        "item": {
          "id": "a114ef21-b986-4ec2-8bb9-804b894ff502",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "92777df5-e349-4fb0-8a47-3f7d70cbf970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b17750-71d0-4dfe-9623-b309fc582564",
        "cursor": {
          "ref": "d99b0e3e-5582-4c6b-b177-ea5f1486401a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b3608f52-8e41-40ca-8a92-e33f1ab38779"
        },
        "item": {
          "id": "a5b17750-71d0-4dfe-9623-b309fc582564",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b3ec51b1-3863-46f2-abdf-f625ac57722f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bc72cd-f555-4308-9862-407238fdde7b",
        "cursor": {
          "ref": "2b845ec2-7182-47b3-aebb-7116881c8aca",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3dc19e38-8593-496d-85ff-df8808054011"
        },
        "item": {
          "id": "23bc72cd-f555-4308-9862-407238fdde7b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b4d7669c-d171-4e32-bd31-c7971bf989f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96a0dc2-63c1-4c70-85a8-df6124cd9ca0",
        "cursor": {
          "ref": "79b6c070-7730-452a-b388-049fd9a2135e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c9441564-2c18-441a-a1d4-2b0300777217"
        },
        "item": {
          "id": "f96a0dc2-63c1-4c70-85a8-df6124cd9ca0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "28135a2f-a121-4ab4-804d-19e903ab4ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d70d73d-5e53-4969-9a0c-c42d48532acb",
        "cursor": {
          "ref": "f0aaab53-e72f-43ab-969b-2699943400b3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "358b77e4-208e-43c4-b0ba-8528242c9881"
        },
        "item": {
          "id": "7d70d73d-5e53-4969-9a0c-c42d48532acb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e60e599a-2b93-4c00-bc8c-e41b0565dede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f87c560-7e8b-4517-a332-2cf761855d14",
        "cursor": {
          "ref": "ba8330f9-4e64-4836-b058-38a45af680cf",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0436682e-6ad2-4b48-9094-37e0d7755ec7"
        },
        "item": {
          "id": "5f87c560-7e8b-4517-a332-2cf761855d14",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ac9e0d7d-2306-4f79-b0cf-14de429272e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec83524-bdd4-4235-8718-ec1aafee82dd",
        "cursor": {
          "ref": "85b30668-d922-4f59-82cb-8e9c2a494bd5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4d9cac29-5458-457b-8672-6ffd48443849"
        },
        "item": {
          "id": "eec83524-bdd4-4235-8718-ec1aafee82dd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "27ff9cd1-6ad6-42e5-a495-5954f2536190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1da489-2735-4ad8-a336-d08e6ddcdcea",
        "cursor": {
          "ref": "989d1be5-11ac-40b4-b7c0-3692fd5d1983",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "49c9f6a4-326f-427d-abb3-2dcdbe49ebce"
        },
        "item": {
          "id": "2c1da489-2735-4ad8-a336-d08e6ddcdcea",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "798e50d5-5aee-4b72-8ead-34a2976bc5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e69f857-7b03-406b-a2ec-8c212231a5c2",
        "cursor": {
          "ref": "44898674-837d-4545-9ab0-b2e069f2bb70",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6b8cee11-31fb-4e9a-9f6a-ac439d8141fb"
        },
        "item": {
          "id": "0e69f857-7b03-406b-a2ec-8c212231a5c2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c8c9f39a-96a9-4796-9773-6285092f2ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900a0a76-fdb5-4d01-bf82-0f07c795cb50",
        "cursor": {
          "ref": "9a4583c0-a62f-4e20-a883-19384069821e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "51655aad-1ce0-40b4-b18a-32133383f0c1"
        },
        "item": {
          "id": "900a0a76-fdb5-4d01-bf82-0f07c795cb50",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b94c6941-240b-4050-b850-c07f5308b8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f329a4-7178-4ea8-b130-c56be1bc4e1f",
        "cursor": {
          "ref": "589712ac-c095-416d-88d8-afdd4ade0ca7",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a51fd78a-78fb-477e-a699-d65350fbcfd1"
        },
        "item": {
          "id": "d6f329a4-7178-4ea8-b130-c56be1bc4e1f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d0d30998-2594-4b9a-9902-c4daf301b566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babe0507-1e8b-4692-8437-281ee6ed7310",
        "cursor": {
          "ref": "689827bb-cabf-46db-9282-256dee761b0f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c623f644-2bd9-4f3c-bca0-620f311d5eba"
        },
        "item": {
          "id": "babe0507-1e8b-4692-8437-281ee6ed7310",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0aac7156-7af3-4d93-ba91-1e1bd3c5b163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e46f803-7dd2-4f4c-9896-91afddd46311",
        "cursor": {
          "ref": "fdec5255-3e69-4e87-ad24-f73d8fd7bc49",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9674c628-b6f4-4a5b-8b8b-5a205e989c70"
        },
        "item": {
          "id": "4e46f803-7dd2-4f4c-9896-91afddd46311",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8946c4e1-eb40-4928-a088-fa3e85bdb288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9ab922-a8b4-416a-9687-3a5ddaca5fc6",
        "cursor": {
          "ref": "d2772ce6-04e2-42e5-85d1-13dfbd0ccfd1",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fdc6bd04-7612-4123-bc79-825304d61e3a"
        },
        "item": {
          "id": "ee9ab922-a8b4-416a-9687-3a5ddaca5fc6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5c199e5f-8375-4c71-b2f9-c3f2ae3656cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d17072-6924-4de3-97da-f2dc0596910b",
        "cursor": {
          "ref": "c010d54e-95b4-4233-a5ab-e73e07021924",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9c2ca0ba-ae38-4ffb-88ac-b9e4561ef5b8"
        },
        "item": {
          "id": "19d17072-6924-4de3-97da-f2dc0596910b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "095fad01-001b-4a0d-bf45-ee2147f56c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e4dc5e-5d40-408c-9363-08b19f93d0f0",
        "cursor": {
          "ref": "baf02b10-3542-47d5-ab28-c80517cf99ea",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "94b2c8f1-a558-401d-8c3e-99a17743b3ac"
        },
        "item": {
          "id": "11e4dc5e-5d40-408c-9363-08b19f93d0f0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1910ee3a-6e7d-4aa1-82a2-dfdecff78cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916ea5ca-6c6a-4f50-804e-eb1328ce786c",
        "cursor": {
          "ref": "52e203a9-f7f8-4408-a5c8-e2e609c6b6f3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6c65634d-8835-469c-9a3e-6ed3db58bbf5"
        },
        "item": {
          "id": "916ea5ca-6c6a-4f50-804e-eb1328ce786c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f1885a98-090a-4150-9ea8-cbb7d34af342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f12f15-7b03-4110-a3aa-bbb713b8f4e2",
        "cursor": {
          "ref": "43ea9dae-e324-40b9-8576-6ee8cd465cae",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a9533416-e352-4c28-850c-f5308df00633"
        },
        "item": {
          "id": "30f12f15-7b03-4110-a3aa-bbb713b8f4e2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "342b6f0d-f663-4aeb-8a25-ac9954797b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dd0c72-c8b9-4f87-8da4-cdb9c1723c52",
        "cursor": {
          "ref": "c4c34945-2b19-4636-86bf-23a3a325f632",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2aa7f5c7-3d6d-4bbd-ad8d-5ab57b460f25"
        },
        "item": {
          "id": "82dd0c72-c8b9-4f87-8da4-cdb9c1723c52",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9944c4d9-77ba-4c22-adc8-be282d6466fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e10eb6-2d67-4fb9-ab22-91917381c509",
        "cursor": {
          "ref": "5548f1b9-f694-46b4-ae2a-c7c7e7d12cdf",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bf65daa9-d4a2-4e80-af52-10843c13954b"
        },
        "item": {
          "id": "75e10eb6-2d67-4fb9-ab22-91917381c509",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bb11f59d-dea7-43e0-819c-7bb31c22882b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8c0141-e2ff-47a3-b25f-529dd7a3b545",
        "cursor": {
          "ref": "849e79f6-c390-4841-acfd-068a6e382c49",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "90f92318-9b6a-46a6-aa32-c7932c181285"
        },
        "item": {
          "id": "8f8c0141-e2ff-47a3-b25f-529dd7a3b545",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b32d4285-56a1-4fac-8c73-c9dba8817c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0f256c-7cd1-41d4-898b-8d37c7a8639c",
        "cursor": {
          "ref": "f6a466d2-43f7-45cb-90cd-f708b34f95be",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9c81995a-8c4b-42c1-82d3-b733457d7da2"
        },
        "item": {
          "id": "7d0f256c-7cd1-41d4-898b-8d37c7a8639c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2e400d1b-0b46-4876-ac97-ae441b4c1004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dea15a0-cd10-4d04-b0b7-e85018a7776d",
        "cursor": {
          "ref": "5818514f-af02-4f6a-8014-af1715ba01a5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e40eb4c2-79e8-4fb2-9f07-b2842fed6963"
        },
        "item": {
          "id": "3dea15a0-cd10-4d04-b0b7-e85018a7776d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "135a3c33-71fc-4d2b-900c-9336b93cb649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059acc89-7b2e-4d1c-9fc7-834da4ad23c3",
        "cursor": {
          "ref": "4447a786-3201-426d-a8d4-ac4eddc8f785",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2cee72d6-1563-49bd-a804-5a7e4a70be3b"
        },
        "item": {
          "id": "059acc89-7b2e-4d1c-9fc7-834da4ad23c3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "31ce8d7d-c2ab-457c-8ba1-412d56d83d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7f8f62-650f-4f10-9ab7-c25e66323b5a",
        "cursor": {
          "ref": "4906a4ae-9bd7-46d2-b614-3e99cd932034",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "464c2a5a-32c2-4998-a6e0-2334e18742c5"
        },
        "item": {
          "id": "5b7f8f62-650f-4f10-9ab7-c25e66323b5a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c6b6b2ef-fbc7-4dcc-9542-77e1aae12b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61da941e-7fb9-4ce8-80f0-ef0f82d21326",
        "cursor": {
          "ref": "33141e73-a07f-4982-827c-68ffb2cfb24c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0ca82e6f-4584-4b74-8a7e-74af41d48c8c"
        },
        "item": {
          "id": "61da941e-7fb9-4ce8-80f0-ef0f82d21326",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c2fc4493-645a-4471-8ebc-4ac04eda9a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055d686c-1eff-4b4b-ba5f-471fad34a0d1",
        "cursor": {
          "ref": "5aa28c0e-23c9-4b1c-b08b-0cc02fa9c0bd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "25e143c7-eecd-487c-a5ed-348b4c090ec7"
        },
        "item": {
          "id": "055d686c-1eff-4b4b-ba5f-471fad34a0d1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6ab0efa5-09a0-4878-8572-d72d28c3f5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fb68cb-e6e9-4888-8b32-5c7cd6ebc45e",
        "cursor": {
          "ref": "3f78bbfd-362c-4c6a-b808-79e8a5fd49e4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3e98df8e-873b-45b5-98da-bcb9cb8e4fba"
        },
        "item": {
          "id": "43fb68cb-e6e9-4888-8b32-5c7cd6ebc45e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8a54ba55-6b53-4bc1-b2e2-500a4fbd256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69478f78-0b5b-4fc5-b535-fa6f313f8491",
        "cursor": {
          "ref": "9906d459-430b-4f84-aa26-339c74ef6a95",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bfb9babc-b83c-4d8a-ae2d-f0d58cf7638d"
        },
        "item": {
          "id": "69478f78-0b5b-4fc5-b535-fa6f313f8491",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a5ae1052-002b-47e6-b272-4f6e20fc3f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ff7ca5-4936-425a-9733-b58300bf1b9f",
        "cursor": {
          "ref": "87be4a54-fad2-417b-a0d0-462470ed8009",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c9e3dae3-0997-4f19-9fee-d71351f54254"
        },
        "item": {
          "id": "92ff7ca5-4936-425a-9733-b58300bf1b9f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "778c5562-6a48-4ae0-a653-177425c8a799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad537ba-4623-4479-a651-3f71bcd28082",
        "cursor": {
          "ref": "036539a0-80cb-4804-a0fa-d4507c5495f2",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ca65247a-d614-48a6-aca0-42516ec82979"
        },
        "item": {
          "id": "0ad537ba-4623-4479-a651-3f71bcd28082",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "373e670e-9e82-4a3e-9a50-5f0cfd10c053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2954fb-cf32-4549-918d-1c8e72ba39d8",
        "cursor": {
          "ref": "4ff54a67-d054-4fcf-995d-3c72f276b8c4",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d09b415c-3bf3-4af5-963c-2f04ad5fc5cf"
        },
        "item": {
          "id": "0e2954fb-cf32-4549-918d-1c8e72ba39d8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "38db889c-c60f-4c9d-b573-08bdaf54fd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d8f51c-648d-4c53-8e85-e96e4999117a",
        "cursor": {
          "ref": "4a8e4462-4e90-41cd-9c8f-bc6a21e0e42c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8d433cb3-8981-4dd7-aada-a6e8430689b5"
        },
        "item": {
          "id": "c5d8f51c-648d-4c53-8e85-e96e4999117a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ad747b23-e819-4416-9cab-9762e7274ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0079ff63-6186-4370-bcb2-91ce4dbb92eb",
        "cursor": {
          "ref": "e9ba5be8-6d43-48b3-b7a1-ce28a332a0e5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "eb0a2df3-0dc0-4f18-a5d2-1f62ef05cea7"
        },
        "item": {
          "id": "0079ff63-6186-4370-bcb2-91ce4dbb92eb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4288b5e9-5192-497d-9b53-7e3f43a691a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef10687-8301-4203-a10f-abc7462a19d7",
        "cursor": {
          "ref": "df4e759f-6da5-415d-b01f-beaeaf9b5b8d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "98cc40b1-301c-4e9b-9eda-90e3c299b3cc"
        },
        "item": {
          "id": "5ef10687-8301-4203-a10f-abc7462a19d7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bca584ee-bd6c-47c4-89d6-5d2b116f446a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b6dd71-8aec-412d-a17f-d883f22c91c0",
        "cursor": {
          "ref": "7b7cd4a8-6e76-4770-b4b5-8dd4ff99f1dd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ca47826c-76d6-465e-befc-e18f649c3611"
        },
        "item": {
          "id": "e2b6dd71-8aec-412d-a17f-d883f22c91c0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d4c04dfd-c8ab-405c-938a-38286e309247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb56124-8d5e-4c58-afe1-8de2e6b1a251",
        "cursor": {
          "ref": "04cfd1b7-2f72-4881-a496-1362c2e32c03",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "882ec6d3-f86a-459d-b2b6-dceacd262725"
        },
        "item": {
          "id": "1eb56124-8d5e-4c58-afe1-8de2e6b1a251",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "83c2de78-432a-4551-a563-11820041a96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9d737a-bcc4-4b67-8df6-d90dcacf5640",
        "cursor": {
          "ref": "4b4e19ef-5947-4f22-abaf-4427269f315a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "92e89849-e47d-4f75-a05e-b4d3af95bb09"
        },
        "item": {
          "id": "3a9d737a-bcc4-4b67-8df6-d90dcacf5640",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "72d45bdb-596b-4f7a-b263-e115d9a617f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8842604b-7b7e-4856-ab6a-a3112fc2571b",
        "cursor": {
          "ref": "bfc21bec-5ff4-4067-88f2-42b1be79331b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "690d18a4-11db-4571-bbf6-82781ee07e6c"
        },
        "item": {
          "id": "8842604b-7b7e-4856-ab6a-a3112fc2571b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3fed6b02-8ae5-457e-b94d-2aa5a55bb2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83498852-b911-4435-b489-84502f472417",
        "cursor": {
          "ref": "dba5fb47-bc61-4472-bfd9-6a0467089421",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "babd379e-47c4-47fa-b768-3b5315c35a47"
        },
        "item": {
          "id": "83498852-b911-4435-b489-84502f472417",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4262e420-85f0-41cf-b692-a4a16efa84ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc82468d-3108-470e-ab97-e976d0d906fb",
        "cursor": {
          "ref": "76de8dd3-f822-432b-b40c-c57e565fb285",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7f5a6d58-ecb1-4c18-a54c-1b028be0ae83"
        },
        "item": {
          "id": "fc82468d-3108-470e-ab97-e976d0d906fb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "243fc839-ecf0-46f3-8f64-0067a9693471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dbb845-091a-4815-9664-ad0a41d2d037",
        "cursor": {
          "ref": "eeae0d98-c72e-4261-8e79-1a3ec002684f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ff5b6c95-8ac1-429a-8956-5ffbe560b404"
        },
        "item": {
          "id": "73dbb845-091a-4815-9664-ad0a41d2d037",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5a910af4-03b5-42fa-a51f-706ef3257275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100dc229-ad45-4e1f-9dc9-d61fd4864c1f",
        "cursor": {
          "ref": "017e0f3c-37cf-48c6-a90a-7bfefcb83e8a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c4909fdc-02c7-4479-b7ba-5bf63dc076b1"
        },
        "item": {
          "id": "100dc229-ad45-4e1f-9dc9-d61fd4864c1f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b125a019-ff0b-4c62-8b84-10c21c2d367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27008e9e-88b5-4534-bb53-4c5568d4d029",
        "cursor": {
          "ref": "b23c7c2b-88dd-4e56-902c-5544058d5d24",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "233d9631-34ee-4460-bb4e-729812d9415f"
        },
        "item": {
          "id": "27008e9e-88b5-4534-bb53-4c5568d4d029",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6dc62f08-a8d3-4f99-b5b1-4daacdf82016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a806bef-6be1-4eee-9702-53dbc2134752",
        "cursor": {
          "ref": "48302932-e6ec-4dfd-80cc-64feefdcf546",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9d66af0f-099e-4842-b740-65bce5d00431"
        },
        "item": {
          "id": "2a806bef-6be1-4eee-9702-53dbc2134752",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9cad557b-183f-4c69-81bf-d572e1b74307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedd6ff3-9edd-43ac-9d89-9410861b84b6",
        "cursor": {
          "ref": "b82643d3-2bf5-4cbb-b4ed-bd8a7260e1dc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f1c1d2df-54f1-4439-84d9-2bfae3803831"
        },
        "item": {
          "id": "aedd6ff3-9edd-43ac-9d89-9410861b84b6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a2d92fad-3b95-4876-adba-052a835236c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1486adca-ff68-4b9e-a176-276d1a730f0a",
        "cursor": {
          "ref": "e703cfdc-6ee9-47b0-8998-502bffd28059",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6492f636-2abf-45cd-ad91-4936ddd5aaf3"
        },
        "item": {
          "id": "1486adca-ff68-4b9e-a176-276d1a730f0a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4dcdff58-be62-4274-bf6c-1bc52c5deeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60521c56-02d2-4368-a661-00852d227d2e",
        "cursor": {
          "ref": "5b55f279-0cbb-4256-8d33-0aa4713544b7",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "eba96125-29ee-4e2f-800e-d56f4d8fd8a6"
        },
        "item": {
          "id": "60521c56-02d2-4368-a661-00852d227d2e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7481caee-07eb-4f6a-8754-95aeb5ae9da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bfbb10-c7e1-4ae0-b281-66794f1f7c65",
        "cursor": {
          "ref": "041e5838-4bb5-43d0-8271-dbdadcd15bab",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d726f049-5e84-4839-8e48-4840644d98a9"
        },
        "item": {
          "id": "43bfbb10-c7e1-4ae0-b281-66794f1f7c65",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0fbbd98b-9835-4047-98ed-e03d6d24f308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c3a8d6-e55c-4304-9685-6e9f0045d8bc",
        "cursor": {
          "ref": "eed3d35f-d260-4c49-b600-983009e5a484",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "62b924de-d86e-4eb1-a441-c952a5737d7b"
        },
        "item": {
          "id": "60c3a8d6-e55c-4304-9685-6e9f0045d8bc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2a14f223-79db-47d1-b982-6ddbd847a497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bacb65-787b-43bb-a7bb-cb9f023ed5a5",
        "cursor": {
          "ref": "7ed1ff17-cb25-4fcf-a781-045cc84fb19b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f9807e70-cf66-4b1f-9d6d-5810ba2b1be3"
        },
        "item": {
          "id": "16bacb65-787b-43bb-a7bb-cb9f023ed5a5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fbd2c30d-91d0-4ec9-a55c-fa162dcf5089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5476ee-9a39-4941-a9fc-fee9cb2a5e25",
        "cursor": {
          "ref": "a794da59-b46a-4af8-86d4-87ae341e4bac",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "edee734f-1ceb-44a2-9b57-b9cfee1ccd8a"
        },
        "item": {
          "id": "9b5476ee-9a39-4941-a9fc-fee9cb2a5e25",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e209d770-8dd2-442a-82ee-8511ab6fb8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a990dc-7296-4197-984a-30b992999240",
        "cursor": {
          "ref": "dda08239-91ea-46bd-8f80-ad2f1e366505",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8070b8b4-756f-47f9-a925-5185c7049fba"
        },
        "item": {
          "id": "07a990dc-7296-4197-984a-30b992999240",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "826ec985-0124-4dce-9137-5b3ec2ee3f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f28e9a1-a3ef-47e8-b148-c6177e2c98e7",
        "cursor": {
          "ref": "57eb1c97-39c3-4587-9732-f9b9111d4ba1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "235bb943-3beb-4dc2-ad72-3a720d24373c"
        },
        "item": {
          "id": "5f28e9a1-a3ef-47e8-b148-c6177e2c98e7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5b4f4f37-26e7-4b54-98c5-d9261c89c66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111e16a5-0a56-4977-9e31-ab9ad68af9ec",
        "cursor": {
          "ref": "77728071-da0a-4c14-ac59-ee4e693f1a8d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b1c54bf0-e9f0-4a48-9011-3824cdc50234"
        },
        "item": {
          "id": "111e16a5-0a56-4977-9e31-ab9ad68af9ec",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ff877d88-fac4-45e2-91cd-85c000d10fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a267e8-9026-42ac-a7cd-7831a4b0bada",
        "cursor": {
          "ref": "7e2bcf9e-13ba-4fe4-8575-9a7fa087b234",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d3abb709-a8b2-46ad-8d22-017327e1a816"
        },
        "item": {
          "id": "b8a267e8-9026-42ac-a7cd-7831a4b0bada",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3c300b56-2977-4bb6-ad25-f9c7e59734f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5400f75-02aa-450d-a0e4-1f6e10a05ea7",
        "cursor": {
          "ref": "c6583ea4-174f-4f35-8237-e323f498a648",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "041e96db-d0f2-44ef-852f-022ca6660ba7"
        },
        "item": {
          "id": "e5400f75-02aa-450d-a0e4-1f6e10a05ea7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "77bacdc1-6761-4abe-9383-e4d53cc935bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc023a05-2c53-4e6a-97e5-e00dd06de6e0",
        "cursor": {
          "ref": "e49c9ab5-9e4f-4feb-adec-c8bbd8c70823",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b362f526-ff96-4601-8edc-40963747ab46"
        },
        "item": {
          "id": "cc023a05-2c53-4e6a-97e5-e00dd06de6e0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e8a1cf17-5e99-4b3e-af5b-e07a3faa60bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8902db4c-84a9-434a-baa2-b35c67834483",
        "cursor": {
          "ref": "8fb5312f-7a9b-44d3-8b64-4b285225b979",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fa6a8f67-e716-46b0-bbdd-e0040db2ac36"
        },
        "item": {
          "id": "8902db4c-84a9-434a-baa2-b35c67834483",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "64ca8514-239a-4f17-8f8b-947258e4db42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b10f3b8-f715-4103-87fe-d41aeceb1f09",
        "cursor": {
          "ref": "ec6bf69b-49b9-4478-9386-2e5a39a884db",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "55057387-8dc1-4040-a723-57fe9dc9b8d1"
        },
        "item": {
          "id": "3b10f3b8-f715-4103-87fe-d41aeceb1f09",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c7234310-4504-48c0-83f5-98e1976f6df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c63634-21bf-45af-ba38-9471dfb45f9e",
        "cursor": {
          "ref": "b4788c7d-e95b-4cb5-80c5-719fe2054712",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c2714233-bfe5-418e-8f45-112671ceab83"
        },
        "item": {
          "id": "e5c63634-21bf-45af-ba38-9471dfb45f9e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e3f6b843-8915-4ae6-94a9-381c5a83a9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f263bd1-425f-40bf-9d75-37fc8e340de2",
        "cursor": {
          "ref": "48a04305-4ddd-4f61-a0df-cd9bbbf03f43",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2444b414-9261-4041-be8a-7cc5449a3357"
        },
        "item": {
          "id": "1f263bd1-425f-40bf-9d75-37fc8e340de2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "35c09b0a-4fb5-498f-94b0-431e61fbcf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9f3fed-dd44-4b01-bb14-f55b78ef456e",
        "cursor": {
          "ref": "af45f379-2426-402c-a4ad-71db6bbfa146",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ff0a732d-e703-4266-bba8-e32605b23cdd"
        },
        "item": {
          "id": "ad9f3fed-dd44-4b01-bb14-f55b78ef456e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f310e23b-b473-4bdf-a27c-9171d3b389ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1002a56e-e6b3-4f96-b48d-ce378a13e287",
        "cursor": {
          "ref": "fe4f2e7f-6fff-4156-a7c9-303add47ad6a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e85f6ec0-f4dd-4d11-b16d-24b4fb99459a"
        },
        "item": {
          "id": "1002a56e-e6b3-4f96-b48d-ce378a13e287",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4ab46e96-100b-48a7-ad03-16b2b4ac3f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43bbd50-402b-41bc-970d-fbd56c00a2cc",
        "cursor": {
          "ref": "46ae709d-1522-40fd-80d5-2c0e0d1db139",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2ac0d655-d6d4-462b-92ed-3cf2465af7f3"
        },
        "item": {
          "id": "d43bbd50-402b-41bc-970d-fbd56c00a2cc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "19125f0f-529c-4ca8-8fd0-6b9a725edf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4773de1f-4b59-434d-b70a-bcd8bae0807e",
        "cursor": {
          "ref": "7679f959-d41c-4f9e-b72e-b65782fb4421",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "59a5feec-3a95-4175-afce-09ae75159c9b"
        },
        "item": {
          "id": "4773de1f-4b59-434d-b70a-bcd8bae0807e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "446babe9-4ac8-4851-9f5b-81ae3a792ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2f3453-559c-4772-82e0-2be541734fd2",
        "cursor": {
          "ref": "5c6d38e7-ea22-41d5-a137-a3b3cccc3242",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e2da2897-e4a9-4c0f-9676-e686068a790a"
        },
        "item": {
          "id": "3c2f3453-559c-4772-82e0-2be541734fd2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7a8158d7-77ff-4c2e-86e3-421be08d294b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477ce4db-ff98-41a5-8e34-5dec4116d7b2",
        "cursor": {
          "ref": "20437156-c71b-42fe-a9ee-9e318112ab69",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d0feecdd-c624-46e0-b07a-9cf863077616"
        },
        "item": {
          "id": "477ce4db-ff98-41a5-8e34-5dec4116d7b2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "19627b11-ba63-4ae8-85bc-bf2578c7e468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3434b0f5-a78f-489c-b8d7-c0dc6849823d",
        "cursor": {
          "ref": "c93e3ea2-7f03-470b-b047-e5cfcdd65bf9",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "58461477-29b9-49f8-94b8-d8d085e4e7f4"
        },
        "item": {
          "id": "3434b0f5-a78f-489c-b8d7-c0dc6849823d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "703944e6-cc09-433a-8943-db4927601b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad84e53-bfa1-4a25-8e4b-0a724edee030",
        "cursor": {
          "ref": "df9caa14-ccc4-4132-a930-cef935d76c98",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ef516094-24e1-479a-9182-9ff6ce0096bd"
        },
        "item": {
          "id": "0ad84e53-bfa1-4a25-8e4b-0a724edee030",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "611cfadb-bf1a-4fc3-b052-7ce7df69f0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4efc2c-d8db-47c0-b77c-fb0664c083ec",
        "cursor": {
          "ref": "c3f4efdb-f53c-4908-a5f9-eb2c95c11d4b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4e21750f-3c63-4d0c-bff0-a29f891a7bd9"
        },
        "item": {
          "id": "eb4efc2c-d8db-47c0-b77c-fb0664c083ec",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "02e2bce5-2b03-401e-9d35-63c98d960e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422caf75-db71-497f-892d-376f1c9a8613",
        "cursor": {
          "ref": "fd2d7c4c-9683-42a0-9771-da51f0dbdd13",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "63559189-bb39-4405-a51f-74af92cbb87a"
        },
        "item": {
          "id": "422caf75-db71-497f-892d-376f1c9a8613",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e3b0d00d-40aa-41cd-8a89-eae260ae25d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028c5faa-f306-4f26-b3d2-9e725c319cbc",
        "cursor": {
          "ref": "f50e2989-4d37-4087-9d7d-4247c4b42829",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "51597251-bd39-498d-9a2c-7ff25ada6a44"
        },
        "item": {
          "id": "028c5faa-f306-4f26-b3d2-9e725c319cbc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7cc9cf0b-1c8c-4ad7-822d-5e475098c4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bf2299-5c6a-418c-8fad-2221645a9831",
        "cursor": {
          "ref": "bb844e01-c9f2-489b-a8a2-4630b40f905d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fe7335b2-41c0-46cd-9c95-b294f36dab13"
        },
        "item": {
          "id": "01bf2299-5c6a-418c-8fad-2221645a9831",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0f598a7f-41d9-49ea-ba21-e1b2c23570db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1504f9-0352-4bf3-8ed4-2cf8d26769ff",
        "cursor": {
          "ref": "665af419-ba54-48ca-b045-1a61ffa16185",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0fb1b4fe-0e20-4b5c-b00e-34f6e489572d"
        },
        "item": {
          "id": "fc1504f9-0352-4bf3-8ed4-2cf8d26769ff",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3936a004-491f-4078-a882-773d0b19940f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d073969-8775-42e8-9217-65a9e2c6b636",
        "cursor": {
          "ref": "3b9c7f22-c596-4ed5-9823-4ee7ae72fa54",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d8a20413-1d80-4c3d-a0c1-87850e505835"
        },
        "item": {
          "id": "3d073969-8775-42e8-9217-65a9e2c6b636",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c07d5922-5ad4-4d30-82f4-03fed6177698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa4b92d-d761-451b-a15b-27ad0fc415b1",
        "cursor": {
          "ref": "8d5a49b6-581b-4e05-9b82-432f4c25de04",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a8e1ab55-f57a-497b-835f-c7ffa1eb3123"
        },
        "item": {
          "id": "0aa4b92d-d761-451b-a15b-27ad0fc415b1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c844dd3d-6f44-43ff-8669-407c8a21dc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0da982-47b7-4781-a233-5d0f7063d97a",
        "cursor": {
          "ref": "01756dda-8ea3-4cd0-b915-a630477434d4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ff86818d-0607-4fb1-88a5-9869ddb75bde"
        },
        "item": {
          "id": "4c0da982-47b7-4781-a233-5d0f7063d97a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "286e4213-412a-4422-a865-86311f1d623d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0e8767-1ae6-422e-9e32-13db929ec2cc",
        "cursor": {
          "ref": "f48436a8-188c-49fa-8191-c0e5ab8f67a0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b4ba3df3-1859-4576-92b0-32e87f9d9ccd"
        },
        "item": {
          "id": "3c0e8767-1ae6-422e-9e32-13db929ec2cc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "165717e2-9bf2-4d44-ad98-3d78a0e03657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efff59e-304c-44ae-bd3e-76f47e1b4465",
        "cursor": {
          "ref": "05fce2a6-2d87-4acb-ad72-56929afdb4fa",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "47435669-81fc-4403-9938-02dee7f3fb7a"
        },
        "item": {
          "id": "8efff59e-304c-44ae-bd3e-76f47e1b4465",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ddc629ce-b530-49cc-9dcd-fc18c9d241e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55349b0-0ba1-4872-86ea-dcc3922751b5",
        "cursor": {
          "ref": "fd669755-3a84-4d7f-8fc8-27de5395bfe2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9de41c40-daac-4b3f-8c08-9c13cb924558"
        },
        "item": {
          "id": "a55349b0-0ba1-4872-86ea-dcc3922751b5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1be3a6aa-ac5c-444c-93ec-23ba9a570af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa79b6b1-59e8-4e7b-9b87-ceea9ff05264",
        "cursor": {
          "ref": "e77bdcde-92bc-46c5-a325-bd6d301398f7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "62d75315-99bd-4c30-ab5c-ea5121ec2e1d"
        },
        "item": {
          "id": "aa79b6b1-59e8-4e7b-9b87-ceea9ff05264",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e136249b-a532-4ccd-9aad-64367d1d8488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc2402a-f75f-4d35-9398-1d2153bae941",
        "cursor": {
          "ref": "4c02b90d-4e8c-42f4-82ec-fe40abf66d0a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f9c323e0-da50-469e-a096-8da8575a4b30"
        },
        "item": {
          "id": "9bc2402a-f75f-4d35-9398-1d2153bae941",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "795ba5ee-3de9-4279-a0cf-f224298554da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e379835-2a76-442a-bca1-6334028f1ff4",
        "cursor": {
          "ref": "6ac3d4b0-f851-43ca-95b4-19cc9d6c145a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ae0899b4-5833-40ca-80e5-5eff380cb027"
        },
        "item": {
          "id": "3e379835-2a76-442a-bca1-6334028f1ff4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "37945290-c2d1-4777-956e-7967b019868d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9867505c-f58a-4272-bb1b-3e884867ac3f",
        "cursor": {
          "ref": "a82e1286-d934-4b15-8ea5-3965f74bf48d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "381a98a5-3c43-4e3d-8dc0-b43fae26d6e4"
        },
        "item": {
          "id": "9867505c-f58a-4272-bb1b-3e884867ac3f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f2e40b43-dfd1-4df0-a42c-0310a36afbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7d614f-6702-41ff-8ad1-94bcc3984bce",
        "cursor": {
          "ref": "8daf16cd-b536-4afb-a0f0-70a01d3800be",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f39ea696-970f-4401-8e7e-476b063c5974"
        },
        "item": {
          "id": "dc7d614f-6702-41ff-8ad1-94bcc3984bce",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "76ff1c5f-f1b0-4e20-97fe-934796022b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b69bab-8201-4a45-b665-63e6a16b5c66",
        "cursor": {
          "ref": "e33d9083-9af4-4014-96d4-30e95d0eaf4f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0c93a817-addf-4a33-9306-78e45315301e"
        },
        "item": {
          "id": "f2b69bab-8201-4a45-b665-63e6a16b5c66",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2117cc2a-0ba2-4c07-ac27-2c0a1a623c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f66d920-ceba-45cd-92e1-1936a1bc80dc",
        "cursor": {
          "ref": "619277d5-3f2b-4b1b-8faa-843adfe18afe",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2be9e662-1129-452f-a8f4-574beddf7a89"
        },
        "item": {
          "id": "9f66d920-ceba-45cd-92e1-1936a1bc80dc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "78bf737e-7c5a-4e6b-a1ee-403af30db19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be13581-e529-430e-81ca-f4da9c626f31",
        "cursor": {
          "ref": "5018eb89-b5ac-44c4-904f-e8404b2b7084",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6a4b4ff2-3328-484d-9136-d45169dbf4ad"
        },
        "item": {
          "id": "7be13581-e529-430e-81ca-f4da9c626f31",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1a617643-f4ee-437c-8948-20c84d01cada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b15b0a1-83a9-4291-a65c-9e3cedbc498e",
        "cursor": {
          "ref": "2f99e4ff-2796-4e90-93ed-f6fe1d18111d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3def13fb-10bc-40bd-8473-6678923b72b3"
        },
        "item": {
          "id": "8b15b0a1-83a9-4291-a65c-9e3cedbc498e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ff33ea06-5b4c-4a4d-b120-bc7e3e10df13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "107498b8-1d54-42af-9620-e6ab5a2f1db4",
        "cursor": {
          "ref": "be8d958a-a32a-4f36-9171-24a7aae41975",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4ee3cb7c-05f8-40d6-af2d-52ca31fa5a78"
        },
        "item": {
          "id": "107498b8-1d54-42af-9620-e6ab5a2f1db4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b7fcee82-c6e5-41fa-bf2c-fd0070610aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "a8abaa78-1cec-4a65-a368-919b709c2f81",
        "cursor": {
          "ref": "2256bf5c-4eeb-4a72-b0d9-c0a0ea5472ab",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1f8a79ac-eba6-468c-ab6c-ebdb9d6cb96b"
        },
        "item": {
          "id": "a8abaa78-1cec-4a65-a368-919b709c2f81",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "56bacc14-752f-4d9d-aa80-8b8c62a10e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "08358cb0-22e6-49a1-9cc9-1fc7a499e394",
        "cursor": {
          "ref": "15768ce6-560c-4d45-8337-e81776f6f375",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f637c64c-bdde-4ce5-af64-9a5401fa595c"
        },
        "item": {
          "id": "08358cb0-22e6-49a1-9cc9-1fc7a499e394",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0abb51e5-ea83-4593-8676-6622e4aa7f1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08358cb0-22e6-49a1-9cc9-1fc7a499e394",
        "cursor": {
          "ref": "15768ce6-560c-4d45-8337-e81776f6f375",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f637c64c-bdde-4ce5-af64-9a5401fa595c"
        },
        "item": {
          "id": "08358cb0-22e6-49a1-9cc9-1fc7a499e394",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0abb51e5-ea83-4593-8676-6622e4aa7f1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7456b8b-25b1-4c3c-9c47-d8f369e2b373",
        "cursor": {
          "ref": "c8c84e89-43bf-4311-838d-d7b488478efd",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f900366f-2a54-4826-b760-3ded90038f72"
        },
        "item": {
          "id": "d7456b8b-25b1-4c3c-9c47-d8f369e2b373",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "87e5b5a6-55c9-4b6a-a3b3-3fb74fd5562f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3850a93-4e84-4a5e-9d13-0cf916f0867a",
        "cursor": {
          "ref": "6de81ba3-7778-45e6-a7d8-8d935d7fa868",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1aee5def-9ecc-4185-9acb-cc5584dabdd1"
        },
        "item": {
          "id": "c3850a93-4e84-4a5e-9d13-0cf916f0867a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "48f15e24-ea0e-46c9-8e23-bbc47551f0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}