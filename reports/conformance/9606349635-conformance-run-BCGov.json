{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "017311a7-9f49-48b4-a6fc-62a3abe897c1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cb235867-20e4-419e-94f5-2a38037eb906",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62028fc3-79da-40c8-a479-7f90de6ca649",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fffe90ca-25f3-4131-a86c-6e7d33f3867a"
                }
              }
            ]
          },
          {
            "id": "fb7affd9-09ae-4f92-9a11-bd70bf072e73",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e207750a-a37e-4eda-89d8-d27aded92355",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f7ee56ec-290f-40af-9a3c-3ba101f1785a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f1af5c3a-e69a-4415-ab7a-d376c29a0a23",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a2bdbd9f-9aa7-4de7-ab16-92b4420a7e30",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b549a668-e898-4bae-bdfa-5800e77f036e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "061b6f4d-71ca-4c8d-bb5c-bc69ece5677d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9430764c-68fc-4c3e-9014-94f120237df9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5c19bc3-c59c-4db5-9d49-9fc72e74db3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36737af5-438c-45d6-97bf-eb99b19ec527"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a0f26f99-cdd0-4fd3-a8f2-1e44f9b6ccc6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e3abe1b-2817-41d4-93b5-ed801b8c17c1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b876acf-b02d-4b96-b5fa-655c20a116fe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ae74e9da-49fa-417f-8bc7-030f358478bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78bdc657-d066-4058-97cc-a89581b2a636",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5b72ae8-f14e-4dd4-ace3-521f71aae8d1"
            }
          }
        ]
      },
      {
        "id": "f3634b3c-0936-462c-a721-15510e2f4b9b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f2399233-a5ad-4599-bf3c-c8c18e063b1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb43d25f-5ecc-486d-8d58-19b987acb61a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7633aa6f-faf3-4eb5-916b-06c400312263",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4483adee-c747-4069-94b6-33e8a41b8ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d9e8001-ddef-4f56-b746-48f0f29fb909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7044b8a-5bb5-426d-9b2d-b1afa017ce85",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd98632-5b45-4dd5-a450-e25cab3f314b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abeb3319-c004-4230-89b2-7b61d8883f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5c0c3d-ea72-438e-80dd-95cdb08d7b79",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb68fdea-0d47-40ee-a949-d2bb044202fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "717e1395-2043-46cc-908c-6f37c4b32cd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31533102-2951-4b71-94d6-e4089b549153",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef08f3e1-fb16-4fca-b35e-afa75209b707",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d168f55b-323d-4b53-aa0d-561d33de0980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39a2b235-6a24-4e51-a418-663a38f04f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b5d860-b28e-41a0-afe0-35b3c3e772cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9e7990-bfc7-462f-a564-836e04bc2d99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "10dcd2d5-5ce2-4f7c-8f97-d0de56fbdb2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79cb6347-6c13-410b-b5e9-2976da73698a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a799e9c7-050e-4456-81bd-d6bea03753e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "92d89b12-552b-4a38-8099-5f42842bc3c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b614a7a7-4d9d-4741-8127-f85f8c04b01f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "577ba5b5-0559-4fc4-85ff-cece5070b17d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35ec51e1-8534-4938-af93-3512d15eb498",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ead4632d-85fc-4130-bbe9-01aa16657d8b"
            }
          }
        ]
      },
      {
        "id": "f42faebc-e07c-47dd-affb-f932c7e01b01",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f9a39f0d-fbf2-4e08-aa2b-cfda8b3cd5ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "456d508f-39f5-4062-8e8e-da923ca87c2d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a7305431-947a-4a6d-b3ea-aa88196f4f34",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b779ac8-1c05-474c-a99e-3fe2e196e660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b057b2-09ff-4b0e-a2bf-eb279693066f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd89bc7-f282-4bce-80b4-c7d591cc9d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d54e176e-9db2-4761-850e-d15ac60f0c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c78a98-619e-40c8-8b48-d4031f491940",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f0dcb9-e89d-4dbf-a3e2-dbc210ca6f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58670d87-f0b6-4f78-836f-07a84fcf4574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf68017-ecd0-4eb3-aa1b-c581a60ec3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe6ea076-ce7a-405d-908a-0ea9e262500c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856c4214-a782-4bb9-b347-ccaf3e35fe07",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f7bd62-cc00-4e63-96a8-91fefda7fab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb6b9e3-1b8b-4ce3-8d1e-7f22ade98ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f7cec9-a01d-4a36-a23c-2a8acb37a882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "770afe24-5516-4ce7-8d43-c76ad226b757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb076c4-a27d-43e6-9ce0-ec9bc5fe1327",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4658e5eb-b7ec-447a-940e-96ba5e3e4b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f947dcb0-2293-4b7c-a9ca-5ecc2e906b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38c0387-7c27-4f85-b064-992a69e187bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "062efef8-c194-4c69-9aec-e03c4ea954a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62ef05c-ff6b-45c0-8039-d545b5560855",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702f77c3-8711-4b2f-8007-cd662f08c0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec8c884-d147-49fc-a73f-2a7f014aff00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b47448-16bf-45d4-b829-f21262a71db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e404dd27-a7e7-43a5-b85a-340cc2871f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47ff824-be2f-4138-9050-a0941e5e2d1b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee842430-c1fc-4660-8870-7929a141da3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d92568-16f1-4689-8d89-bc123deead06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2412e2-3175-4967-b352-c42c6ec29397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bc001b7-1534-41dd-b60e-05f4875af034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ef2721-80b7-4771-a374-8522c90201ba",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb12d436-b2b1-46b7-bbd2-09d63c28d571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4dd153-c4fb-4674-9aa7-4f5dc1d24a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403d97ff-02cf-48b5-ad22-5a1148ec6747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a00f5367-8e89-4e41-b92d-ba2ef06cc98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfee50e8-4f24-4ba7-bd9d-8649e2eb5c2f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeb0300-47de-4fc3-8a49-a0fb116cebef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70638a6f-4a4f-4ecd-8916-4050d40c311f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f32f0c-8f16-4fe8-9469-5b195d227818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ace7af95-9baa-4035-baef-f33074add766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24099e05-a7f6-476f-9d29-5aba9944463a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1c4917-da71-41a8-8dbe-72888a72ed19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bf054e-a450-4762-b474-f580d5022ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fb4b0d-0444-4e8f-b859-1ee5f899158a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "168c6277-a606-4d19-986b-e8f83bd2731a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916e36ed-5788-46d6-8681-f48c1adbdada",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186da366-9c03-4f2b-8fc9-d30d7fff8d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f678bed2-789e-403b-846e-338db063a54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f641f6-ece1-4ac0-b7e7-68be4e60c872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc63bb9d-f4ca-4903-aa04-c129ed345067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884865b0-a28c-4c15-8416-2a6e5c3a73d4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50213e4a-dea0-4340-9ecd-e7f0d6c198be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7543e751-fb35-4c72-8514-84d92c1293bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e79279d-f371-4303-af2a-d84fcbcea5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d963d956-ebdf-43d4-9b52-b80ac46fc142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172b501c-8005-45b2-8a5a-4b510006aad2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf5f813-83fc-434f-917a-f06849d7cdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17448850-51f8-4fd1-8248-11c96290c3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825b04eb-a4e5-432b-9c86-ccf4960c25b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "071fe1e7-97bd-469d-b3c7-c87c4435e029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e685cec1-05ef-41bc-95e8-ac0e6e5f2e1f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f0f164-89c6-4cbc-90d9-8085b737beb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0595e2-b27d-4db6-b533-31e1aeb23184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eade1fae-bc23-49cc-8eff-f7eef0444d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ccba65c-2f30-49d9-a82f-658db0bbc389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c49cb6-89e1-45b9-bd47-e9eba616040b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69741e47-4431-4078-a813-788dbcd8a9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c12c2be-e371-49cc-a62e-d741f0a9dcb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e075683-f610-4eb1-831f-fe6ff64f785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6abd8a1-d564-4c31-9987-8252bb6cf556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d223d1b8-693f-4ec9-b726-39cec1530c86",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39d5543-3aee-4579-bc72-08daced02197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44646db5-f196-4f7a-b746-ed4a61fcfaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f8c302-abf1-4b17-945e-faecbe6f97a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1810e978-2f50-49af-99e8-1cc085f0c9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a285e2f3-4cf7-475d-b37f-38d814bf3107",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68e711c-c4c6-44b9-b8a5-96b5b844032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15441b86-e40a-4dfd-b0a2-0e62eb07cde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062533e6-9fb2-4264-a4b2-422d74fa8067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a669559c-99b0-4ffa-8287-a93c0b20d222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665acaaf-3323-45b1-84c9-a41c17bc3952",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0553f4b-c864-4740-8c9c-eb2e922770a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2d48bc-4562-4a72-8cb1-3b5e40feb650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfb41f8-cf9b-4fb9-b6dd-8b8ce8cf97da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8209f327-0dff-4ec2-9d4d-54df8773ebe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d886a12-6640-4794-b9d7-140370c723cf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f913fc-f52f-41a4-ac46-7e54826f1ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c29243-2b01-4384-b9fb-7fe785716e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a23c19a-bbcb-4033-b883-5fc8c4ba9180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04160591-a432-4c71-af59-b06198dc915f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc48778-85b2-4ca0-8ca3-9e55621e774b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4dcf2c-897a-488c-8113-0f7a447b5cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424cae82-8d80-4ad0-a831-584158b33c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28622f09-e8cd-4f83-8614-72c38957c423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "141f8458-e240-46bd-9aba-a8aa1670629f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85b825b-67ba-433d-acdf-df4beb13ca14",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43013d89-2062-47cf-ae2a-e89cff429f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebda747-797d-477a-b8e9-58cab5c5dc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06d448f-059e-47dc-9626-b055f76b88a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c742c815-d523-4486-9263-4dfa496e2fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9606c43-6f07-457a-b52c-6b6642a8ceaa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72296a85-4ab7-46b5-af64-02100418e5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903f54b6-1074-43bd-ac93-86823bad94a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e15c87-9e57-47aa-8fe6-68f2eefcbf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b89fcfdc-db19-4111-9fbe-9cab803521f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2352eac4-a25f-4ad7-8696-c9f38c5c2ef2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c149eef6-437e-4d04-b557-ab06b0a0c5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e439539f-9355-4692-846d-3f9bcd79db1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cef50f-ab9a-47bd-9d4a-b97b2b0ea60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4705917-7e04-4326-8e3c-219dd19d8ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3353d8d-c52f-4b7a-a0fe-ed6826b5ab83",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017ae7df-7697-4e7c-8e0f-d0e04bf3b3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b160fb91-86da-4c61-9ebc-3fcc9f8cdae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39dffc5-86a8-4f05-a520-3ed19df9fac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58fe2cc5-7ce3-48d1-ad80-10ef2e28c263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dc271f-95b4-43a0-9a35-0355786b4697",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f0e8ca-8b23-4a8c-8a51-5bccc3d10bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ce5290-cbe9-4075-9b3f-237f33ea7dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b32589-7703-44c2-b2f2-13799b2a032e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddd9b08-721e-4b8f-8475-de1f591f85c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e277ba54-e48e-43dd-b285-c00b5994cc7e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef7277d-1584-4854-a8c7-79cdf17a4748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1303e5ff-8ca1-4528-a51d-090d6c69ce88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7922852f-280b-427b-b438-7f0d32c215d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8049cea5-495a-4dd7-8ea4-eab4e0825a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bff363-7548-4793-b13c-4a63d847b194",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d41761a-7c45-4df6-a8c3-677adfa47821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a847a4c6-0a38-45c4-b9cf-8658c3e6acf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2b2902-7150-429b-af70-9578bd8583bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d81ec47-ee06-4465-beeb-9ff4cb320be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff60538-0bf1-48a9-870f-479bc95ada39",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad6512d-09da-4c8b-a6d9-4125b3b4d087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33866031-830c-46ec-a86c-0330910a7d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9afb5f-6cdb-4fc4-a914-afe9c947a322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "398a3458-f25a-44b5-b338-68eb1843218b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0d6af0-f09f-42c7-bd53-c3edd5b733a9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9249fe-ee2f-40da-a428-5f669f81ac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6fab8a-7979-4f93-ba2f-139059ca8300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2261c951-df86-47b2-b278-1df86353fd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "443677fc-27a3-42fd-bbf3-190411e78c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449e01e9-eb77-4162-a6d9-a371301b30be",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b564c997-a58b-4be6-ae88-4bf3d0d06c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f90ea4-201c-4ffb-ae1f-26b595ea3c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cbd4b5-4ac7-4de6-b185-f40877eb6c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "134dec62-9d97-4d64-a080-20f520b63db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9743b277-acb3-4533-a02e-d637e7f96b23",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51e7168-08cb-4bd6-b00c-3801f1d048be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0cdfa3-afed-41d6-9b21-241a61ab55b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3110f68a-3ec7-414b-8e75-6cf08a313d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2096617-5d85-4dd4-8bef-72920758aebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5732ea4-1630-4155-8816-b7b9bf339859",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75321902-3f1a-46b4-b61a-4778a208c1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81820f5c-be79-471c-9de9-4d3ad26928fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f470cc9a-1436-424a-a230-9c232990983e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6926cf77-37b8-4fa7-8eb2-7826f2d98161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5662feb-a044-4aba-8f60-1ceba9a470ca",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db4fc28-218a-4a44-bf47-f6d58969d0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf705af-0110-4326-98cd-06740a3a1b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dc35b2-04f1-46c0-aee1-bc407bc380da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf12a02-da66-4d93-b817-5e3c3cad0ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090d3834-8be4-45fd-801e-e974e7e40f97",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663f8804-f167-46c2-b529-c185322b2ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43e177b-ff2c-4ce7-afd9-6f690c341a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60364713-1931-402e-80c4-a567260261d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d700d647-b11c-46cc-9ab8-be7334fd4c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c254d892-395e-472c-a52c-6164039ad31f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d9be7a-6dde-43ab-bc8d-57e773b78835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0eb047-f7fd-431e-8f8f-e638d22fe26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c716a0d4-d0b8-4a74-917b-c6c316679c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01262ce4-e8d0-464a-aaa3-625f0935fe9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a70818c-5c8b-43ad-8215-4aa79c723c9a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124fefbf-2684-40c6-bd5a-e7a8ddf25849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15a3591-d3c6-4952-9a81-78348dc5fe12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c1c680-ad96-4fb5-9859-c8a41e681378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "76caca04-85c8-433f-815b-87eeacbf5768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512c9996-37ec-4b7a-b607-5c0f8fcac97b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396ff466-297f-4a19-a307-39ef8549bd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfe63872-9e26-46ee-8567-87f062a8da38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3f1484-2a8c-4f20-ae74-e07935e78214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3094ad0d-d114-4b6d-b7bd-95209871ad90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61157e8c-b7aa-4bfb-8458-48196bf49b05",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff14921c-4bef-4742-b80f-3e49fca0a658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45ffb20-d6db-4646-9e9b-cb4413f1cb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560ee645-31e3-4e76-99b0-50ce8a07dad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50aba79a-63ba-4fa8-b785-767f5c56ca44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4886e02c-c95a-4142-ad37-03f7a1b02cc4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567504e3-365e-426a-ac91-01b4eb60780d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fa81ca-08fb-4c44-9977-3eff817fb8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b456dc78-9683-4708-ae88-1c91ca27ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9492a3f6-0a25-4ae4-bd91-8ad7894eda6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01970623-d471-45b1-b5f8-5ecf0f432939",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca9b274-d9b0-4bc8-902c-701993ef79e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c3fdee-6760-434c-becf-0a3125236f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4f5da6-f474-4bae-b610-d6dd13ff3014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9ce63e-55e3-453a-8ecc-b1acf9d76961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdc2179-492b-4c32-8cdb-09dd9b0db021",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0558f436-f0d2-4801-8502-fae75e74b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d4d1b5-db2e-4811-9674-4f0f54aa7401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60349a20-5fa2-4737-89ac-6b8c3bf29465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e28434b5-1772-40e7-99b7-ac5f83000a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59cc6ed-ca71-4a31-98f3-fe7927adcc39",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cca965-8d65-4698-9f6d-786620e1b1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9fdc7c-de9c-4e0e-904d-b3e7e1fb8fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d29d0c-1aa9-442b-bb58-1683dec9f96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ccd8a6-8956-43e5-8065-aa05f72f6190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c403c73-d8e2-4248-b1a1-80fd7adcbe74",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8819df9-0963-4193-b388-f264f829ee9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702680a5-78ea-44c2-9fcc-12a5bffe7de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5594da30-39a0-4684-9e67-be2a71abbb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "53f24c48-0683-4838-8046-54bb5436fe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b778da9-ffdc-4116-858c-57ffdc555339",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468919fa-8202-42cc-ba21-2fa6610240ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8682cbbe-0cc4-4861-87c3-dc5953c785e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc07caf9-7f77-4d61-90ff-2d4063a15443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c60c2436-5151-4da0-a9d2-885fc3c1d517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4432c5b3-5f44-4882-b47d-6019495c7f8f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77e886a-7a32-40f2-a1ed-76e9793b0570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc60b52b-0c71-490c-967a-bd875cec023c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1a1f76-1130-40c0-bcfa-e7bc2f5b2d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc1d530-58c6-4f8f-8d87-e8508f9871b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b77b7f-a34c-4442-be0d-9c06aa8135cc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d84fdd8-cf87-4481-be80-f134146ca854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d077a27-ce89-4b86-80d7-4dd980f7455d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbf7e4b-9b90-473b-a8fd-87887d8f445d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e279d5a-84ae-43dc-b1cb-c503c97f7705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56999362-8af3-48d2-a683-7656f0d9b84a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7e57f1-be15-4ba0-a617-9dd5fe175106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba0f9ce-bef3-4c91-a6eb-c4ced462f863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b20278-d68c-4a93-a58b-4820fdd47936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42d7b7fa-9651-439f-b37f-f918a8636579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c138ea-c0f8-4bc0-b2f4-bccffd6a441a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626490ac-8bb5-49c9-90b9-d4291934768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9258a344-d695-4b0c-8275-6aa44fc33272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3a0218-22f9-4a43-a31e-316816ba40bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d030b037-4743-4fb0-a7f2-2e63d8688e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91689c42-a49f-418e-ac8b-9c6e0efeb930",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8a8e68-be92-400e-9c6d-b64979fb3173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9403c391-9631-4c20-a14b-9192d0e02bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2080c036-cdac-41e2-91b1-7238cb144b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d364ad-921f-47f8-b8ac-979aa0496fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3221eb75-86ca-475b-bece-c91af0b6ed4c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd4b9c5-b92f-4ec6-9dc7-c92abaf6f5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d7d534-1b14-4541-b334-51c076f393b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d74132-0bff-4131-81a6-e158902b0365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4a5b9a-d68f-4b71-b3f6-a50da692749e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dd99f8-64fe-4c06-a079-c2c1c058e74f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e936b1-2523-470b-a224-32d379a1c250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c193f190-0858-47e9-8d1f-3bb41703b0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467340a4-adc1-4f3f-b08b-c4ed67cd0e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e5a60f-9a4b-41f4-b237-4fcb7bae7d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d773ad-4198-4c98-be1d-b3402549ab9b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da6a6ab-5d9e-4c38-8b61-641e36a26c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5982dba0-e8bc-473f-be8d-b5da45c61c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e622d4-a91a-4df7-8514-270e1bea95d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a96ba563-1668-40e8-98b6-d6899ad6851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde56280-57ac-4841-8186-07370390d4be",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590bc2f8-fb5a-48d0-bea3-72fa80642585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9057f6a8-c229-4ea0-8427-a2288c914f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18496ab5-f114-45d3-a020-165268c5f79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "508a13cb-936b-4bca-86fb-0fb47279ef2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3896970f-6585-414a-95b7-dacfe1e88836",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc73a1c-95a8-4277-8d98-8287943a1182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b3cd1f-9531-4d22-8a71-f464d8cf1475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55129753-ca20-4d6b-b12c-fa74fe498adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93158d1a-ae7e-47b8-b419-2f1180c54d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124c969f-7661-47fd-8824-0bb6da5cb5c3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e411986-6626-432a-9162-f2e2c3f2a4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121a9c79-face-4030-a6cc-bb798053c31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7311e4-29d0-43e5-8d6c-c1360518e03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74140e73-dcc0-4aec-a7c2-ed18e291e9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b9ec11-c6a1-46b6-9712-3439cf83cfe7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed105a32-6530-46ef-a677-a1e9aa97b4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1bab96-eece-436e-9be9-ee41b27168bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1dd101-f5ef-4e8a-9b7c-1d57d3d669b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7158dc95-5b84-45bc-9608-5fe7dda45436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b62a62-bb9b-4072-8e8d-7b5f4135d98e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2d4ff5-a831-437c-8269-7440e3e468a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff308039-9cd5-4bc3-8171-54837c8f5e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d6d511-0896-4316-a0ad-f9c8e8983769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d3455d04-415f-4b6c-9b0e-0a1108f80cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb95cf18-13ae-4294-854e-d66f5fcb1353",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea3e304-4dd6-4218-9098-63564236c310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95dac127-797e-4b6e-b675-c0a2f86cac65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8932b923-6c95-4dce-b276-fbbee4eeeff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "415b9edf-0fd3-4025-ac79-9748acb04044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05f5751-9a04-4b49-b5cb-81226dad3ff4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288ca99c-1f28-4605-b86c-189c37a92635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3cdd3f-f2bf-4d57-b5e6-fb549d0697f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8688b87-2ca1-42c3-9c76-88757bce4f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e337b69d-1254-42f3-884d-4a97b1582e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdf13dc-f14c-4a69-8af5-aa91289aee03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5b551c-db29-4187-bcb6-216770475f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58500111-beb9-4fa4-8592-3430ab2bfccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727b0dfc-97ce-45ec-be1e-a4425cd3eff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "496e8051-2329-4b19-96e2-b5ed878ea60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4808d65c-390c-47b2-8b45-8a797bc85533",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105e24a8-f8ec-4e57-ae58-d04564b842a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e27960c-7963-4e0e-8736-d3b15951b0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a912bb99-62c2-422b-bfc4-00f214bf2bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4114dbdf-a848-4384-a61d-b88367bc0987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498fe190-e5ec-4c05-9d92-fc8bfc6e107c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6942d85-add2-49d2-b86b-bdd9457ae74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955bb877-d490-4305-ab25-55c95a99f4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e1c443-0e12-4270-b532-46631121924b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6205901-4dfe-4cbc-b796-940d8005663c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89183a81-24e4-4861-b31b-f386495e9d35",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd989478-be61-4d9f-91ae-d7982accdca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8885869-7466-441a-a2b6-282478368781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5262555-8564-4a3a-9a42-2bffb7dfb5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83a2091-5748-46dd-bd68-9ba453c28572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65171764-30e6-4927-b268-4a38e1236acc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e24513-6648-449e-8df2-c4d5b9ff00ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9bb676-78bc-4d72-acb6-4d2f29cc7301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caf18e0-b363-4325-b2db-bae090c4356b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d54e4086-f160-4369-9b50-b9971a331d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9572d6b-9ece-483e-82fd-9d80f5f233d9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034ddea7-7aa9-4f2b-89c6-6b845ca49525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26dc37a1-909c-4527-b0f2-111233607956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24db0175-6c63-451b-a47d-9acf65326151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e79bdc-7261-472b-9a5d-bc2e1f5580a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c77682c-384a-4194-a507-80015b691996",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8471495-fd4f-4b24-867d-5db66bcc2ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a821a396-1c78-4406-bac3-761de854297b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdbc799-d341-404d-a436-bbf205eab6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3e7d45-e8ec-46ed-b7ea-ce342bc34285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a983e315-1d72-4dd6-9cc2-462a312d0a1a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540bb6c3-8e6c-49d5-beb6-a31f322fb762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de11988-03fc-475a-972f-76704d5d0003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61949984-e0cc-4fa7-97f5-328d13b4a86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9406139-1531-4ea7-9c42-d81a8dd3052c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f450ece9-f93f-4000-ba47-cd8a0d99f7e5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3805e844-59eb-4feb-ae77-e08c1c5f0bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdf84f5-8e70-440d-a391-778e3947cd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e2a93c-f084-4239-9740-238033b75e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8f4a6a-7271-40f4-8e29-394c90c29999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6669421-1403-4b30-941c-0066d62ff92c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b33281d-da44-445a-915f-2d5f7371bed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4280d88-ad6d-4cdd-b426-440e323c831d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b11019e-5f00-4db0-9426-cc008b0d8a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "08b59a5e-0019-47d6-bab6-3395d203fbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c248fde4-df78-40cc-93fd-20d587622542",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6884f79-8235-490e-a8e5-d5493675a38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdc4e8a-82e8-4a5f-b488-726846b5ba93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a8dd5e-f660-4c1f-b62f-abfd4b96cb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "61a14741-aeea-45f0-b6cc-a4e94439210a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b5900a-25a6-4129-aece-5fdf856a39a4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022b6a7a-1352-475d-b295-6a5ea5907956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25b039b-4e0c-44f0-aec3-ffb3389e60e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db388b7d-6eff-44a5-8cf4-0fd3091e8311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c533852-4fbc-44a6-a26b-e46868067a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7890996-8f6b-47df-96fc-822b3d557e9a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e3ba35-3ccb-4e10-92f9-cc1486fb762e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4016afda-51d6-4e0e-86cb-24cda149a1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850b0e19-7573-4de9-b072-066abd365797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f24808-834a-40b4-98f0-0ac898853a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be68851-6819-42b6-a08f-7c51c8ce8aa2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829c3aee-af87-499b-9581-98ca95799b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a52091-6aa3-4a79-bc6d-8b3033f04fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63f4029-77aa-4d19-b07f-abebe74ae018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "935cd3fa-b377-4930-b9d5-2f3ac21371c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ccce5e-e02d-487b-ad29-a75bc877c55b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b74294-39ce-4ace-89f5-812a11150cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb08844-dbbe-468d-9624-b4ea1b5dfb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3099e6e3-fa67-4a7c-bc4b-633514ad352e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e09b3d7-5699-4fbd-ac1c-484ffa32b531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329faa53-ed53-4369-a6a9-7970466bb129",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7eef79-39bb-4b8c-9b40-decd602766b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd644898-c12f-49ef-9bf2-47c75ee86a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a16fcfc-0f90-4c13-a04c-9267dfb62655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cda1ce4-d284-4378-9277-333008b5e546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16af5aa-7fa8-4351-836a-09cba552d623",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a87ef66-3ccd-47db-a27b-10c0bc93445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdffad45-d557-4eaf-97ae-418037c36eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c0587e-6777-42e9-a176-c9f472e278e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50023758-c92b-4e71-93a6-ce083653a7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afd5eb8-c08e-4063-9b47-501b2b8c08f3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5331bd70-be65-472e-9601-1424c0c9d552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae3d658-a14c-417e-8713-cebc9747a5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8157acaf-caef-4f3a-a970-61304979d18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "863505c0-0967-4c16-8919-b51074a2adb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8805c1d0-abdb-46c5-bd25-a21ef2564f68",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2015fa76-cf7e-4c82-b80c-37331dd7c092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5969324d-ca2a-43ba-b0a5-ecf5256eb88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b80c263-add4-44da-9fd1-f7e24de13c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4697cfac-b8de-404c-85f0-2acb3e2ae1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ea0dc1-f2cd-49b1-b843-a605041fd860",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0884ad9c-1227-4081-87bd-84756d16ef03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d47ed1-70ca-43ae-a8d8-2e85a6d14f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772b7481-e819-4851-a917-20b80db4b856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "525b8d15-b14c-44b9-beef-048da3230331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9074ee-2cb2-4521-a2aa-39ddfa59b34d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a428587-e370-4c90-a1f3-8f1560d5db83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914d2641-82ec-4151-99aa-53cb792ee549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b0d9b8-2ec5-4dd7-98a4-d5a84a665338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa25a60-695f-4fa4-a97d-5b1d665ebc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb5dc40-a90c-4d99-a4e7-e79b442e06cd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ef8e94-2cdb-4bb6-b0c7-b85c9a80e932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73db0c9b-59c2-4aa5-92d9-07a05bffc47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa2a599-c78b-41d5-b57f-5026b5e6ee95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b222fee-ce18-4058-b4a4-6b2878caa9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024ca183-6ab5-4ae0-94cf-c9a4e629df11",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f8fe56-5289-4750-98eb-ae504bcf0e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b50f498-2e7b-4c88-a307-dad222abde0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f12944-bfc9-4e28-93f5-f306a2bff23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a59b00b8-f4e4-49f0-b80e-b4e718b26052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e5d2fa-48fa-4c6c-b0fc-7fcfbbc8cf2f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9bafc6-8ace-4a85-ae54-81e934726361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35d4376-378c-46bc-9e54-b4b4e71f1cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70e6092-8200-4654-8de6-b34fa2d86287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d76be9a0-d384-4c04-bdd1-cf49021f5312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e0918c-6e12-4b1b-ab03-288ead658625",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad7333e-33e4-4385-9d90-0f88713d19e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a5ec48-1517-4b45-b130-eaa9bbcd9bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdab412-c8f1-4f62-bb49-919d6f885d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9d3f71-1f96-421d-aded-e54e25d141ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b387527a-f061-41bf-bd5d-b47a5f42aa43",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f90c89-dbfd-48fd-8a1e-d86150aa326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c83980-fbde-4b78-83d5-3c654b40f4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcdc282-1c57-40ad-85ef-423d816afe26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8039aff2-544e-436a-a0ef-2ab356a2ee08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465df48c-c7fb-40f2-acf0-cd314f0c5341",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb645fd3-6ec7-4d84-a34e-9659725b8410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c053cf26-f72b-42d3-b8af-bf1a346e3e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3458cf1c-07e1-4575-856d-91367e5dee5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4821c78b-d294-41ea-84b6-50c6061b1a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b139b54d-cddc-4790-919f-217c3d70b4d1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75927f20-3635-4460-aca6-3ff8cacc391f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d456a2cb-37d3-4252-9c38-48556969e53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39514b88-2e05-49a9-9765-c860115f2e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cea244e1-6673-461e-be41-0d77e5ddf027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3837a1-3590-4455-9a7b-01271e302a14",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebbd4b9-65c4-4dd8-8c89-f52418e55d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89253d9f-6a94-451e-a46a-a9366d110a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac2301b-5429-4240-9ad1-3cf5be894293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "23e96a78-0151-454d-b553-ca1e83a9a771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f898ee5-6bb8-41b8-bbb1-ab663e97c2ee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31225fe7-4d1d-4c77-b4ad-ae15d0ac36f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0ac66d-b8a9-44e1-b6df-2b5e4259d97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6608d31-387a-4bda-b55b-1785d3350c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c1fab1-0d40-46a7-a20e-1c8c80edacf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1036a1e0-39a3-4003-b1e2-40495604d7c3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec04f64-2d7a-428d-a03e-d23b4c2f8a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341d46a9-7ef3-4cc2-93c3-ae2db20100b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde3e638-f99a-4b02-a6f7-0577f4ba25e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d684d18a-ed0d-4e9f-ac45-0a4792863722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43246757-c8da-4a71-8ff4-46750873ebfb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60da24c-4e45-499c-9f8a-ef5b6fcff8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d94626-1756-41e2-996b-2f6dfd6e49cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a1e926-1cad-4cb7-8f7a-d4a9b700ec5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "56b1d7b5-bee3-4fe2-baa3-24693ce3b1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c6f461-14a0-4216-aec3-95b2d0881feb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abe780d-daf1-4a5c-8a58-4f34d516e892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4419f1a-eed0-4939-8b24-6fc8be0fd4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78096930-d6e5-401c-a576-5648b8d0136a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f606dae2-28e2-405e-b863-1f797759c424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af29cf53-1fd5-47e0-9e16-59b269579c3a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc044a2-eebf-4396-88ce-841b73a58362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "55e785f6-e97f-4b3f-9fbb-475b550540ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b60cfe-afe0-4ccf-9e35-89f92a698e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "da4a4545-5a6e-4f2b-ae95-d4df48a2e273"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "38132463-3564-4053-8f34-304536678ab8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be77f1db-62dc-48e5-b25f-605ee728c7be",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0d07da-6e9f-419f-8551-d8cca8ada79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bce8fc8c-b8ef-45a8-85f5-4b1a7398d7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7a16f1-f11a-48b4-92e2-88b24190b55b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dd90238-d728-4d6b-aed3-2da00845568c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82f922bd-28ad-42e5-bf0a-a7c96f7b46b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "125b4cb4-ac5c-45fc-a770-8c4e4b8c29c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e178f0f-03e7-4c46-a645-7fac5bd9a295",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e250104e-c07d-4e70-aca8-a9dfd0a478cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3bf4ecf-15f0-4569-975e-0d5d34d77933",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "349e492c-f528-4289-b4c2-d4095019ffc3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53ba2971-3b44-4aab-8ed3-5dc03ed4984f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e03efe23-bc2a-458a-a4a4-191f455bc1d9"
                }
              }
            ]
          },
          {
            "id": "7918e258-5b85-497c-8c3c-bf0af2224add",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa91d910-331d-4677-9237-5fbd29ea4310",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "689042e3-c997-4828-a099-9545501e9f98",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6e8b62-1a35-4451-99d3-abcf6f3e1fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0f100a41-47ef-49b6-848f-590165857223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ea8ad3-61eb-4e51-8535-bafae5f9bd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d914bf5d-9c85-4c8d-822b-107f0f995f41"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ce59ead-1755-4d39-81e4-4f2f16259e5e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfd7159b-f84b-414c-94cc-ece69f1c8c41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6115c00c-340b-4d09-9eff-55f601c69ac2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa2a237d-c0c2-45c1-8500-ddfbcd16412e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6546df94-95e5-43cd-9530-16f5c6070743"
                    }
                  }
                ]
              },
              {
                "id": "7fec7859-8a50-4be2-89de-f3103563b2eb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe2e4026-56c3-4f4b-861b-411dc3db69bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a23170cc-0921-4d8b-a4ae-e8da3ca006c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9c435ad-0e5e-4fac-9537-aaff21a22a8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ffbd4a53-efcb-4160-9ead-131bf0b489ac"
                    }
                  }
                ]
              },
              {
                "id": "a93a650c-3063-40e5-9e22-f4f2406c9ad5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da9922cf-dda1-458d-b546-9397f5a6adea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc07b5a3-c565-47b3-9e77-c6f4fe92e78a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "514d66da-8683-469a-9f88-700dbdfe9594",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed50e69e-6354-48df-b44e-e13b32398f38"
                    }
                  }
                ]
              },
              {
                "id": "3a1c2265-4840-416e-b611-ede88ef29a9b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b83a2222-8b26-4657-b939-7e7bcabe80cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9d69882-7dc2-4c44-a955-cd04bee65995"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f612ee5c-96d3-4d65-8e31-6f3647b15d0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "227d6c67-9319-4381-a10c-bbf20f7cb6a6"
                    }
                  }
                ]
              },
              {
                "id": "b893cc5a-2949-4924-9ec4-e807838f50f7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0df8afc-dfcd-4ab4-ab78-a17384cf1d4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33724d54-7073-43dc-b03f-2cb171959913"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c1c3878-1bab-4f9a-ab47-03e1151443d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f701e6ca-99d2-4ffb-991b-078d5beb63f0"
                    }
                  }
                ]
              },
              {
                "id": "88a0c2ab-6539-40f2-8899-9d94314a27d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "485df16c-c68d-4d18-b078-606dc2d2794c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e40c56b-9c7f-4bc3-b5db-fad9e8895a46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13976307-6e39-4687-9ae4-d732be40817e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27ec34d5-b8cb-42fb-91fd-1830b00d5f7d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79b5f559-0bcf-4883-9192-9248c08b3f03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79caba58-2be3-49da-b096-50e22b6a3591"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "953d6cde-81dd-4c08-8bb1-1007a04b5856",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aff1921b-edb5-44c3-a543-1c267d2163d3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2803c1e3-1a9b-4a84-ae7e-f26128a39914",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3a50e2c0-caee-45d0-8e98-2f334d3cd690"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fcd3985-4496-47df-b540-acb17f7cfa2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37f06efb-a5b5-4259-b8b7-f05f76b95d0b"
            }
          }
        ]
      },
      {
        "id": "991a3695-883a-4c40-a2c4-94135ea4f576",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9b53f4e7-f947-4736-a583-61dbaefca788",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ea5de87-bcbe-42b9-95e3-b5679e42c0f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "221cdd07-608e-4a44-acff-62c64ff9b3d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfd9aef-b070-444b-858b-41a8ccc0ff58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc467869-1d64-41d3-aa73-45f8897059c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a434ba-5c7d-449f-8672-e1284517a410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e62fec2-b36d-4d01-94c0-e7a0dd1e0a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb7dcb0-e94b-4d93-b360-6d1d8a1ca751",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d43cf0-daa3-4c3f-bbbc-305828b407e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c56ee6-4403-4105-aa2a-2a5a0b819af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc4336a-fedf-4457-833b-3cbacf823abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8adbd725-7d5c-4d08-bd45-8ef3fd7fc222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f596c62-8ca3-49b2-aaa9-de1014c07870",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2b6b82-056b-4dad-b7d4-f90193729375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74a9029-1bc1-44b4-b9fe-6f4e57840ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56a5560-d1b9-4aa0-a4a2-f054bc495443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54eb7af4-43c6-40e3-8ebe-77d98d66ce99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ef1bfa-07ad-496a-abce-781aee10ebce",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24827d6c-9221-4de0-bfc3-3d79bde850eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08025a89-561c-434a-b7fd-b15001f168e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b79a90-b487-4c00-9cb3-20040d5e2b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "718e3224-de7d-4847-9a21-a83759f49100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3291cc-ea24-4711-afa3-757b5d07acc7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbcf4bc-7140-4723-9a65-a6ec307953df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f195c53-d778-418a-88f2-9d4a82b071ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f48c36-0a26-472b-9acf-f8d6fb040cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c66bbea-69a8-4665-8544-e8821506a6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cfb7f7-972b-4a45-a8e3-e4f9838f9088",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98189875-15aa-4488-b074-9b8c1a06c409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3638a24-5d4d-4bbc-9e1d-14dad6af74a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffba79fc-797b-4350-aab9-f4e81ea097e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c58c8463-6f67-4286-9d4c-927d1418e82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3821486-7efa-403a-bbf8-55e620ce85f1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3ae241-38bf-408f-b178-bca7efb042bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2094d027-9d70-4721-a6ef-d7f42f8c14cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6f6b09-fcf3-40d4-9188-f149adb6621d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "85e2b1c8-9c1a-4adb-80e9-e7d2f2593316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed445d7-2e6a-438e-bd1c-9e2d055a1487",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cb9a63-5a97-464f-866b-7d7585497c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb149c3-e74d-4ca7-8a2e-849c8c95c73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5390f081-db3b-4e95-b0cb-527d8995d922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f61e37-eeec-4d1f-b882-64a1c8994555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1278490b-c0cc-469d-8fdc-27b8bf4133da",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58386be-8b10-4832-b537-fb02cf068110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdee72c-2011-4a59-aeb3-d3337e59d890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb21169-843b-4093-9af2-ed90694e3dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd589ea2-21d8-48fe-81f1-67144b21f503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934b2a15-2aab-4c6b-9c7b-315998095371",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea3d938-4817-4434-ad81-c8fa677523c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039befce-e84d-4e59-a25d-9cebc9f63568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dd4b3c-2763-41b0-83c5-bccf2b8398f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0ca2dc-3fef-428e-bb85-0c2c72c3702c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc2aa2d-f6d3-43be-a6b1-84f11a8ff37c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfb2cc5-7b54-41a2-9637-b2d045e37bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86663703-9c17-4aad-a0b6-00100b64fb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24e7fc8-4c00-4c36-a8c2-455b0aef42a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d2293f1b-b66d-4660-8cc7-05a73901a240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f96c032-5061-4012-baf1-e39ee94248dc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2e5281-e5c2-4ee5-a46e-3b94d54de4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c7c46d-316c-4a2a-8fe8-61fc042c1603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fef7c79-c507-41a5-a698-874a94f276ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e13135f-23c0-45a3-adf2-915d4717c482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee007f0-6fdd-42d0-a997-d0e079f1ad09",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4441198f-25b2-4cb9-8d73-a06ed6974d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50770a8-cb78-4894-ae3c-b5f8e2d328d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d945188-76a0-4397-9f4a-db0a7bdb28db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4392f9c-31c5-4639-ac72-4a3cd1e18a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7582e7e0-95eb-4212-9c6a-d926c324c5a7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9582d31-4364-4b1a-903e-b2e5b496498b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c70e94-67f9-416c-b989-b719eb05cc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed56cb3-0b61-4e67-8640-25ecfc09e032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fef5b30-8bff-40b9-8f0c-4633a407d95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194f5809-ab8e-4b7e-9b63-9ee6f19931b4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caeaa5f0-d316-4794-b98b-6070c93c1933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ed1601-6ebf-4d92-b26d-8f42baea255e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb1c477-5705-4e38-b194-2ed2140f13dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c7008f-5f31-4033-b007-7e88401431ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee7cbb0-c05f-4049-95f9-3cabe46018fe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a6dc9a-afcf-45b8-8315-86ed538e8a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c675f408-9ade-4ba0-bf0e-26054a357a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6700d11-3f5c-4692-b2c4-9cfb54b0dcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ea060a-1d4a-46eb-8379-f7bc0ebb673f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50cfc14-7275-4164-a7df-011cb6b7260b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142fb4ac-2222-43cd-83d5-cd8292c85bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddaa17f-8474-44f7-b9fe-60a994d44207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b9f26f-9252-43de-abda-0f42bfb164b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "84a7c230-7d98-4127-8962-78fe8ad23c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494c3b81-e392-4446-92f3-8cb1a272e8e6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b5ab4a-cccc-48d5-9a3c-a1f71677ccb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34deebee-f2e7-4c74-a082-08b056853631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5dcd51-31d2-41a3-bc43-8b101a79fddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0a863f-82f2-486b-9efd-477e40edbf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf9f481-b6c1-483b-b3cb-f2cbd06bc2cc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8555959-e326-4d8c-994e-71fdde92680a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a37337d-2d98-4b3e-a3f6-e56d43e6a02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2644e16-12dc-4ae8-935c-ffcaad1761e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc2f73a-b5bb-4104-822c-ba68a4132ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c74d2d-53d6-4348-8064-db0e0c71906b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945dc52c-5f42-4f0a-8048-e41765fc5781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8698f5-4019-4a21-b54b-dcaae4c134ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64c4677-3de8-459a-8ce4-a76240f78416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c238d9-d8f3-44e0-8a21-8d394fe3b352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6799ce1b-9288-456e-9571-111dd584e985",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c398c7ee-e510-4414-8ec8-6bb1dd1a3a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01449b2f-3180-4ef2-86c2-e2b83b43a2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0754b185-7abb-4047-91a8-0822cdd6049f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e055fcc0-e0d0-4961-a976-60e97e82c65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67f9657-bb1e-4070-8e49-6a5ac3b15bf6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb78142-bff1-4af0-838e-308d32db6eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc855b0e-47a7-4359-aa17-b3bb42a5191c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a76c1e0-8955-4799-ac25-51c8b39b592a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8caec41a-5ac2-4743-92a6-bacfbdc95656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9487a33-bced-4c70-bfb6-63e27f5dd23a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8765b6-6e87-4066-934a-c1fd5d614954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accf1e7d-ead7-4c28-9537-c8cf80796653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bc5d96-9b76-43d5-a9c5-8dd05f746c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2654ae-7766-411e-a94b-45b9d5a28c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e6e3c0-dfe0-48fc-b3ab-d79d58497808",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d5eeab-fb38-40e2-8d0f-35160d12f3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92944a6-2a9f-48ca-9dce-39814a2e1fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc7cf6a-4113-45b4-a8e5-5a4e14b5ca47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb06bc6f-7850-4982-b9ee-d978cc1a4274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de5da48-cb48-4d78-a340-b22bd1a45241",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776687a3-aff8-465d-9178-1d680fc134ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e51b2f8-c130-46f3-aa3a-478379690d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e8fe71-6489-4fdc-bdd5-4a22d06c0e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f17f6ce-4075-4beb-93ff-a9f57267ddb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b900f9f5-6e01-45ad-bc70-a34240f2ed82",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc884ebb-6f7f-479b-8d1b-f8b02a12069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91529b91-7da0-4f91-95ab-1ca812618e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed5932a-8fcd-4bb3-80e1-92af44d1d166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c272cb-4532-49ab-9f50-9407e5807a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cbffa2-6ff8-4efa-ae39-7b3a4966dcad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60a97cf-2e7f-4cfd-bc92-207d8a8a9c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28807b7-7c14-45ec-a57e-ae80a8e9aede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410c61b3-dfad-4a64-ad4e-981241ded213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81aa1fa9-b708-409c-b816-f6f8cf07692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc09a8dc-1a86-4685-8f6c-63952753b458",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6b6db9-4200-4731-9bc3-06a65c8bdf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb54f28-f75b-4314-97f1-fdc9097f011b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840daa08-2867-41fa-84ce-6c106f8ccd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a5c8bb-31d9-43a4-a194-ab4394ef8f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae75739-5690-470b-a678-d220a7b27514",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c974df0e-e940-487f-9081-b843902b97bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe8f771-5638-443d-b69c-5830e5ac0190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a414550d-51ad-4ea2-8d66-1dae0cb2e645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0749247e-ec4e-4503-92eb-f130b7ffb7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29df9204-a817-4661-a6f8-adaa059f1f79",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452cfabc-3758-4b37-838b-39572e3ec2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84eebb7d-90fd-4fd4-95dc-676e2ac81676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04b1a05-df94-4836-a934-890e0442630c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c1f1b3-1586-4283-ab75-5160ea38ada2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf59608-aff3-4bc0-928d-8e77c748f57d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29a1205-2bcd-4ce5-8479-09c9bc2bc5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c382d0e5-e247-4ac9-b300-db941baf3f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d83232-9a2c-4b4e-865b-e486aeee3172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8b683e-e96f-4f2f-a44d-23f664d63b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d2630d-98f5-4547-a487-10ed698443c4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3094cdc-c593-41ba-84f0-d30f71de638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e79f576-7956-4258-a2af-a490b4eb2f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f12c41-ca3c-4118-ade7-b67a10328a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "586c3ffb-06c4-4d46-ab02-48c9cd89a6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad1e2fc-2c96-48c1-a235-68964a2310ae",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3209fc-400d-4b31-a928-3d878cf64fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f581325-66be-4062-b043-d53ec6555d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696cf41e-0bd2-435d-aaf1-f9fd7c69d1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc748cb7-5fe8-40f8-be1d-b7cd3be0b5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4d1339-e350-4578-a98e-1fb4066d035e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994dc1d7-4e85-4903-86cb-961281a16ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcc8624-f089-4b04-bf4d-87f02e81f3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de79e782-ea1e-4f65-b54b-c149cc9e6e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ee17b2-a48c-414c-884c-93503afb9600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5c843d-595f-49b2-a944-4f2a1e9007c7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1ed355-d126-4081-a47e-1481346adf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cded617a-7eff-45b7-9a0f-e2b6cf6a4b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d7064a-2877-4512-92f9-5762447780ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52799e7-cd55-4904-a3a5-5bdc95c7eeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9931ea8-c412-4ad6-884f-77dcf010701f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb85816-0edd-42ae-ae5a-b4d6a235b28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6815094f-86be-407b-80c4-9e93b610b6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6717a57a-8740-48bd-9b59-b7a40cda7302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "911a21af-37ae-4aec-b1f5-c1af500500a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728883cf-a82f-4f9b-9349-afded32533c3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad516804-dd17-4cfa-871e-585d0b93972d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c0ae84-f128-4895-9fc8-d9af4d91633f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9fe6bb-a087-4dce-84af-5ac42b838aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0da1411-7c45-4a35-85ca-6b7f31c09699"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3e71e77-1730-4643-b2bb-d0294fb84cda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cea046a0-a5d4-4e89-b13a-35e17dd1d953",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc47699-a3c0-4fe9-864c-228158333669",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1453c2-be8b-48c7-9554-a1edd8f7bbb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b840dcf6-38ad-4ced-9e5d-195d4628756e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "823baf5f-7f3f-47f9-a2b7-609902a0ee2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57d019cc-6df9-4780-8766-010c9f0bfd57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e99aada-f0d5-4194-9f2f-43096ccb2b38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49796926-f5ec-429b-bcce-e0ced5b82128",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fb5a769-1982-4cf4-a95e-4e0bf4a80e17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77a65c76-29f9-41e7-a7f8-15de589f2b98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "852f7277-1fa1-4208-8bdc-3fadcfef1b56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85c929ff-d21d-454a-a4c3-472a1f2923c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b84bbc06-9639-4131-ab77-f2e584ee128c"
            }
          }
        ]
      },
      {
        "id": "49710f66-8af5-407f-94b8-ce61095a666f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1a424d80-6929-4c77-9b4b-2d86cba499eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "241b9c58-6416-4ac0-a9d3-73e33f012719",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ab67391-b63f-4e10-bd94-0993d9b36ea8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cc5826-3429-463e-a1d7-ff13505106db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c113f841-173e-4b9d-9525-500b41d5c090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c689a9fe-3c12-4c4f-b8e2-0fe177b35b0a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70ab542-f6c2-471d-a80e-a908bf77a564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb612be-831d-4bb6-9118-3f6d31aa3a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e6cb2a-0025-4d9e-8341-bf7ad5a76318",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc4f050-9962-40e3-b924-c7c6a0f33ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438b7827-3ba1-4048-a9c5-a8a55f379df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445cc806-bc60-4265-9eea-fd5971e60ce5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5d8b32-a040-4b76-a2a4-aa426cd7016d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f642bb-af6a-4d96-ada7-6db6a76a940b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea443370-7c35-4e93-b423-20afbf162607",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505383af-b8cf-4d8f-ab17-accb62ee6d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b5b7d0-6a7a-48cc-8180-d8bbe9580be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b93a2d-e15a-4103-932a-973a266af220",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ff804b-22b0-4197-bb8e-95f97bc395fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883afab5-2d86-4653-81fa-3f98270e5a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d56512-edeb-400c-af53-e32d90b3f5ce",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd76222-7534-4f84-a2a0-8ee8471b7a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5c3eac-bc4c-4dbe-8e8a-ba0b033943c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7898c99c-7fe4-40ed-8117-51a5188c68cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e67eff-903b-47a4-a2b4-bc0a1ef03039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf69a1e-51d7-4b36-8c6e-e7b1d3b2b26c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d4a1f1-7577-4b24-836c-beff3494c1b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68392ea3-861a-4334-ad09-476a79e588c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca7cbe2-bb2e-4236-87e1-8c2ee09b5800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c964c9c1-e4f1-42d1-8518-af27efafb185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5538e220-4af2-4256-aa3c-0b381ccd0b57",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312968c6-ada9-4461-9c6b-b59ab4e795ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99eca4ca-7982-4574-9cf3-e425af6eddca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d10df16-be40-4042-a319-b5be91202306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2b4c43-6cb2-4123-9f97-7ee4751cc6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13710bd6-0243-4e77-85d4-2b13dc366c9c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908c1a48-f6bc-40e7-81b3-057b5ffda297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad619063-c9dc-4e7f-95c3-55359656b3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed10d4bd-0be8-4580-a1bd-f3dfb08517ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9b2b1c-dd00-4cee-bb97-62efa06de6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db58e90-df7b-4055-9913-1fc4cdae684a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b44107-f791-4e41-b3fd-303ffd0d655e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3218a45a-fe68-4f7a-965a-359f0fa2c64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6a37d4-17bc-48d5-afa7-6bf6208f4321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b33a0c-8e15-4415-afea-9f85e5aeb3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f36550e-5e7a-4318-8967-1dc4f89ffe38",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02b03b8-f20a-471e-a7bf-c473a1dcac75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e720f9da-2a1f-474e-a1e2-62b54ccaa7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78421e66-c179-4bd6-b0f1-5a5ba4603687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ceaaa6-6ed6-4aea-8c02-bbfabed7abb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b9a256-7e54-4b9b-8228-7da464ab2d24",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bffcee-dddf-4f10-9091-e50775513007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be6f73b2-ac3a-4be2-9b21-6ba0b4db40d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf59e8a-7110-4b23-b4e0-da2fe31f0df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e71b52-597c-4162-9e8a-71bb250a6cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8696ee-189e-4516-8dd9-d99a52561017",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00692131-c4ae-46fc-8fa1-3be1b0594ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d6873fc-0016-4167-8608-42339cbaf74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f303852-e272-462a-8970-07011caf5044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91eca6bf-aeef-49a7-9b01-612ad7e263bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90308193-01cc-411d-b8e0-bd8dd1dfd5c5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395cfe50-3a82-4fd0-961e-f951217fa8d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd97ad7-4fec-4702-927e-d8e59e54a0e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64eba6fc-7438-4b23-bc04-571e7872a770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fc5695-d53d-4b90-a506-fcdaa16e7619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d1f7a6-5c5e-4a4f-9455-edd42599e51e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988c78dd-f66d-494d-b3f9-3e95ae130ebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43cf8e7f-a928-49d7-a5fa-9a4596307220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d8ed44-b089-4afd-8b11-8b759037098c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3448473b-c219-48ed-9cf6-b6ffd54cb474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88747c9-9ccc-4932-8fc8-76ab39509070",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de408d03-d895-4049-8686-b03dd2be1bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f486d88d-d489-491a-b53a-39abc3e4fc8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25758aeb-e110-43d4-8601-8bae9df6dd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29703e04-5da1-4d27-a5d2-c2b9e8a0d89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38c301d-7c47-4d70-9b3e-0dacdfff3970",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c5ccc0-2730-471e-9f42-89e7c32259f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2eb6c1c-ffb5-4e52-8599-9721a6d3bf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630f5f44-43db-49a0-a3ad-e0f9174752ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2fe52c-5fe6-4d93-b86b-d63180687c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a943dab-1f69-4bb1-bbae-5c811e4d9fc2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0996777-d559-496f-9170-2bb2625ee527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e338d27a-c459-4902-a446-7fdd1b460fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fe086f-c449-4d78-b4fe-52a159252977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98fefd2-8857-4e84-8619-0694fba337b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e024669-aed6-4cce-ba7d-ef4746fd3928",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f524129-c60d-4dc7-afb6-60ef8608561a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377b41c8-d18b-482c-9283-a96422cecdd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bd95cd-d929-4e7a-a10a-4a6e46e0032b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8e932f-7b40-4670-a729-d54d30327c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ea3f5b-e05a-4000-bbb6-8cfe4b065752",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e038c60c-fdfe-4be1-950c-c06086f1afeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42ec6c4-9273-4c3c-b4dc-077a62d8b2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f84e6f-ff13-40a8-8d4c-b96ef56ebdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863fce14-4ffe-431f-bd23-62f33fffa71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a01a4e-d29e-4fcc-9f8f-886432958d58",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8215a0fc-ab68-4c1c-9476-5ea5934ebedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6509cab1-1030-4888-b932-0c5485a9bafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f240a4d7-2ad5-4d86-aea5-320b88c8d09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8377ec5-d0ee-41c5-a2c8-7fd498b0a3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66115793-2c34-4fcd-9b3c-15ecf32f4db9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9c01b2-eae6-4858-9555-e7c0b49f5d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbe686e-b846-4c0a-a313-7d93c26781a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643568f9-5fd3-4276-8b4b-c2f403d5b3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56da462-1535-4594-a158-f86dedad175f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6c05e1-e32c-4525-b141-6c6b9904c43f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c32cbc-f2d0-4ebe-87c4-848e60f220f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f72c1e0f-ea6e-4089-a1cd-a9ee440941c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff9af56-87d8-4598-ba8f-c3643e9afb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9000fc4f-ce5f-40a4-976c-78fee416c24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aed2be6-1129-45d0-baf0-eb92cca74447",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766d7e27-28c5-403f-b4cd-275c8320986a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0321f1d-066d-4a99-a077-894339234cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01485e47-8de1-4352-9bb8-9a434aeb124a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d021e23-ee36-4d51-a9e0-baa79b615f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d2ad54-a016-48b4-9661-722db9c48505",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acf16cf-c191-4c5f-a243-d8eb10615a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e83717ff-1c7c-4b89-ba82-3439d1502ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b60cc09-d162-44bd-a02e-c3554063ccc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da649d3-65f1-44b7-b332-3512697e222d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c9398e-692e-4fa4-87d7-690cbe80ff3d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349f7502-df03-4018-aaf6-14061dcc78f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40525a2-b487-49ed-8abc-d4752ac829ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7f614a-243d-4e32-9733-50b437429dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6991770-0c51-4967-86c8-ec8b1ecde6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f49e8a3-1255-4086-98fc-970078db02e9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78422f2a-71e2-4d3a-89b8-ddbe75ddcf4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fcba3c-1fa3-4182-8bf1-e02a827e44b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817a3e5f-5a7d-42f8-be31-d9b2e59782c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58ec47e-537f-446c-9cef-2bf1c710ddb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ce070c-160c-416b-b109-49109e7a0572",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d25d406-1941-4ad2-8d7e-f5168a967026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cde0020-ba09-462f-9efb-3dc341430f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51db37d4-56b2-483e-bf60-ff913a5b59a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea41a34-009f-4a27-b279-2369d060e3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b222fbf6-7580-406a-923c-a23cffd3d23d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9482f4a-3e90-4988-aa77-3798209cdd5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f4341e-5bc3-4361-a074-0b5e6e5890ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98ce450-05be-4341-a6e0-91cd8dca6266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047e86fb-0e2c-44cd-8910-ca2be222bcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32db4a2-65e2-4441-a96c-ed9a1c97afbd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e54cdd8-2860-440c-9d74-d09b36b94483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f057e93-e33e-4abf-a485-81931e7269c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f5106b-8f64-45e4-96b0-038902a5da3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0f4a7d-6908-493d-9de9-0d63e8bb96e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b247963-384c-40fa-95d2-79c98cb66ea0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf8800f-859c-47bb-a564-a0fe0e02169e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51761dba-57de-47ad-9244-c4186d2be594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e885aa65-ebd0-4752-b13d-2de8f289fbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cfdbca-a9b1-4cb7-8c04-eeff30ebe62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf25192-6713-4319-b850-be53b0f4c9cc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e689998b-5136-4afc-a339-e20405f193d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "993bea95-4105-4293-b4b2-2f6b9e6258f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c66e4d2-7f77-4f49-99d7-7f89fea1a753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d630c75a-72fa-46e0-b5b2-84c59fce8c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf5a89c-def3-412b-970d-d1be9c31400c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22552dd5-5454-4990-a642-8273759fb129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cff07540-04c7-461d-8847-e8caa3b0dbf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3b9470-32fa-40eb-887a-cc8a95c6a213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ed1718-ad75-40ed-803a-e744c335111d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2696a2d1-21b2-4a69-8c8e-93d6fe492be2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad05f139-fd15-4912-863c-522091d292c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7256ce28-6d22-4a01-85f9-27bfe4bae076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57720ef9-bca1-4d75-857f-ee3e1d72e890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7d473e-36ac-4922-861f-1252054a460b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6473a596-fbf0-4d60-9dae-5f1c8d2fab46",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df52a1ab-2939-464a-a3fd-1379de122232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c227d5-23fc-4dce-8048-6ee26baf2468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7660e798-7506-4935-ad28-22ad5d689caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32b77cf-21cc-4d83-97a2-a83b2b37e801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dbcc8a-6a3f-4abe-a984-f3c654a50726",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec59acea-f776-4fee-8b19-596dcd778072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba428eb0-c5a5-4522-9125-3d541b11befa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f666db-5b8e-4b52-8034-2e4ebf6a4a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b1d4f1-66e9-491f-875c-332b3b1fa0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38d0cae-7a73-4e7a-bab7-aa638f2362d8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28df6497-d099-4f00-9a02-470b9ee41002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f41b2ff-fd5f-400f-8c45-3f62e51ce97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80131fb1-e2e1-41db-9e50-59b52c67c2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a93b98-97d6-4731-9704-47c12a736637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5011aa1-c648-4f0b-adc7-b1d9dca10043",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ea3fdb-fb3a-478d-8212-763a27f45a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b4f809-0217-4162-a22e-3fe8c908135c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc09bad-0dfc-4635-99e8-e725a7ebef11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9de6c0-c00c-41cd-bc8c-cf7e0670b320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3df8348-8860-4302-a76c-a18904dc6f23",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed238aa8-3df1-4bf7-ac8c-7dadcddeacd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f425dd4-4e18-457d-a8ec-a8c5dc7f6f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00762e2a-7ff4-4fbd-9f04-711146b421e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f47724c-3162-44f0-b943-5f6e6904b2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b950586-8859-4d7d-ae11-c7326dc7ebd9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d237f16-0c9b-46da-a6d1-0101b088bb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d17321b-e291-4c46-a3cf-78c19ec65a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904aeef0-582a-4c30-8c66-9fb099a9879f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3ee557-814f-4f16-a7d7-be411a704117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9e956e-b4f9-4c7e-a535-5726da7f2c23",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d1b149-2185-441d-a5fe-ba27888eb368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912dd4dd-dc74-451f-871d-25b521bedcf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592fb280-0585-4293-b5e1-5dc374084500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4dfff7-239d-42b5-8a92-1691125581fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ff6d7c-6b27-4db1-b7b3-1c6fc6337c06",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f96fa94-53a1-4822-b1e5-c6698b822940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b8aa2a-2946-457e-b309-60b7d0f571ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a15493-5613-4587-827c-23b5f93a83a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0332d4c1-594b-4a3d-9f02-d31ab5855e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece49752-be2e-485d-b6f2-b16b5f0073ee",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb650fb2-8f48-44be-9688-8a2a3651ea0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90e988e-4cf9-40d0-bf8b-cc92e18842de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a65c3d-edfe-48f6-aea4-0cb847da143d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9de993-b277-4bde-8ef5-d401030022b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2063291-3af0-4435-91ca-52d467e1ad0b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb95dba8-161f-4c0d-b6c4-eff01cbde51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a99582-e9b6-43c2-ab3a-26a3a0cab26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9726ad56-0d23-413f-af19-547fa5532a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7dcc4a-bdb5-4989-9ea2-fe8ad24da7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1d3d01-8d3f-4a67-aeb3-7bc2c9805df0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79476f12-e232-4e50-b07f-4a31cb919f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063fae91-8b1a-457e-8dbe-b630aa124013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b2dd09-ba23-4b96-b4f6-c8a546b22cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09463e59-faf5-4bcd-a340-95de045200fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353232d9-7a06-49d2-8d3f-b1d91f35001b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30f0c61-8bfb-4325-9544-0a9dc641dfec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4a98f4-a6cf-4130-900d-35599f2efbb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91098ccc-e837-495b-b791-8543ad6e6df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4f36ca-c311-4579-90dc-099ed66acfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34218154-5830-482e-b1bf-3788631630d9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea9684b-0b5f-41f2-9ab7-014fe4934151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1725b197-a667-4fd7-8b02-2f3be01361fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7da696a-5abc-4f54-8727-fbded17ca135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49997a0a-0f17-4450-8ea4-2c83dde3f7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d58f501-8364-477c-8650-9d03c27a87f1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523de4d9-ab70-45ad-b103-f7ea41884330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab02cb51-9c08-4735-96d4-d2ac0df7b847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3641a461-584b-435a-8b4b-95c69cc392a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfaaa15-d50d-43d4-97be-df186ba418c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9679d036-719c-4cd8-b862-0b861a76c708",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c631f587-cf3a-48e4-834d-8ff0efea42ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87088e6-ba6b-491d-b594-d2fc4ec4817f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7de21b-de85-472c-bfcc-6280a7aea82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e7c600-341a-42e2-a9a2-2b4397e6dd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3e935f-0fa5-4475-be40-d497e5c93d75",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c8fb36-6276-4664-8e14-94a7550a1dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4ca551-de9e-47c9-ae84-7dc108a4d730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54578645-bdf6-49f6-b6f3-78d0bc2eda37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8252b64-15c3-46b7-b32b-89a215bc4bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7acbb1-e5fa-4419-84d0-fbf85659272d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c84b188-233a-4e78-8e79-4a59e09dc3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd00780-7426-43a9-81a2-9eb3af5f6fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc367dc-ac96-41a9-9ffd-35c87d56e9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e1f3fb-2250-44ef-9fe0-b51f1225dd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbc212f-2b48-48c3-b99a-3b73e20293a6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cf048d-b5c9-481c-94ee-627cb3daf6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d377c00-d8a5-43fa-a0ff-f4d7bde53231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1e5665-853f-4f40-b41b-feeccb272868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171aa564-2528-4aea-a352-e457bacc92ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c9cadc-d9d6-418f-ae91-efbd291103ed",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0863ce00-9186-4880-b6bd-fb4042673f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba68975-3507-49ca-bbce-54a04281f180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d7c85b-9014-47ea-8bc0-83d3e7af7520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93db3158-ef8b-4de5-ae06-cbf1c9d79e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5c0a05-47ca-4466-862a-77bb8d9e49cf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5b69f6-a612-4144-8458-d0a252cf5d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949b517e-3d42-4fc5-8f4a-a2e9d67f0fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165984f4-5678-47d7-82b8-9e8253de7ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28140377-c422-4fc8-a6a5-dcc41dabb5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7636ba5b-247c-45c2-b32b-757d64126958",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54db8874-6616-406e-96cd-24d01cd37795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58946445-c856-4a2a-872c-e609711eaa8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d423d1e9-a4b4-4ced-8d96-ee9851637032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5f18b5-809d-4fe0-acc9-fc0290e1ea08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee112abe-7d16-4199-ad8b-730510f46629",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1c499d-38d5-4dc7-9d54-585e64db9781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb12019e-53e6-4085-ada9-0c6bcab46847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ec0d9a-2f8c-493d-a6c8-40a5518bda80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b106422-a3fa-487d-8001-68a6cdc36a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d51965-436d-4947-ac0c-4af2c941b6a6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18656fce-6faa-4c9b-a8eb-53bce90c8173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf73c11-8648-4d1d-af95-676615aa4b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c348ee74-35c5-464b-9fbc-efedde8c8b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9c76bb-d7cb-4cdf-a4ef-226f6e8b1121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcbb106-fbe7-4aea-8cd1-c8a3249dc316",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1705044c-36ed-4b6f-b8f6-3b78daa47a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c5772b-83ab-4d2c-a6bc-193460917023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbfae70-cfab-41eb-9d56-c5d169d1889b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4452f3-26d7-4140-8548-87dda25532c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706a74e0-98fe-4d50-931e-4801b71463a3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7273bdac-19bf-4329-b7ef-529955cc346e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c725b35-de8e-4457-abcc-8a7e92d589be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8c5130-50fc-460b-a4bb-0971fe255d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce86bc1-af7f-4b1f-a196-8b5a1d83a3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8193087-f194-4154-b171-4940bac5c23c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12608af4-b58b-45fe-9582-3665c0435551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68704cfd-ed66-426a-aaa9-888d8451b9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f98dd6-7d43-4d73-bf17-d707a3a07276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d59945-b28a-471a-851b-c6458b983228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d42927-8395-48af-b0f8-d067620b97d2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefe2a5d-db6f-4302-872f-000b4ec251eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113860ff-5627-4554-9e2d-61826fffc708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43847ec9-5eeb-49a7-81f9-6f61a45973a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2773fc79-3418-4651-8cf4-5fbe9571b2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a50566-cd5d-4933-99a3-f33ae6242daa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c68ccc6-54e2-43af-8399-213bfc9b9bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992b226f-becb-457e-841c-4ae8e5e1df0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77da75a-066c-491f-bf5c-daf106d0ca27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c6586e-cf65-4d28-b910-80c3ab44db19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492e32fa-2785-4434-9058-aa657453666e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6830e39d-1d33-4e19-b60f-b5f586ff39fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "749d29e0-1f2f-4037-9bad-df8ee111d3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c3a0c3-a6f1-4ae7-b6b0-38c03084bc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8116d1cf-190a-443c-ae30-d77482c3ece5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e36675-f3cd-42fe-a79b-f6166d2bd6a3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727f21d4-f1de-4b11-8677-5b1a1ec104ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f4ce691-3a2e-4938-bb83-805b4bb5bfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c2b899-783b-423e-8acd-c0a163e4b382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3f69b6-cfc3-4299-9ced-691041d348b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da33757-6a4e-4140-8fb9-9916399c085d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825ced36-d1c3-41e5-8b00-6b0a5d88960d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6b8fac2-1942-4c58-b5ba-0acf4c8adde9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d160e713-8043-4e45-a420-eda8b9725827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4d9142-215a-4a95-b721-b6d4933edf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca65127-0309-4506-bd2c-5d2ab65b4b7f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e9a9c4-9ae0-439a-be7a-3afad1b31055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e804a3-325f-4cd6-922f-44d67e4bf6e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314ebf1b-33c2-4aa3-8242-24315d3077a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c31b3d-bfe3-41f3-9bac-aeec35bae203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1e9d49-820a-4627-9183-cadf199c8036",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cf3288-e0bf-42d9-a0de-81178dfc85f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50a7d471-26a0-4cc3-99ad-902e6c878484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a608fe-6109-4eeb-9994-69845e917e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cc3761-fad4-47a2-8e02-56a9711d4bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8a2509-417e-4186-86e2-c01ec148e661",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf79fe83-33c9-42f7-acd9-7b1a32471245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2125308-ba0b-4579-b57c-025ea8f61a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b007c796-f4da-46ba-bd17-cf25d430c954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff63ccd-6463-4994-beef-8c77be8e1d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29264000-a4d3-4110-b96b-2477603b99d9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eda96e7-aac3-4a84-b156-bdedd0fdb08e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b1ee73e-1ece-4209-a626-6666f23ba263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec5aedb-9fc1-4c3b-aad1-f9e8f27f8f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8290b3-29f4-4a3e-befd-62cb369172af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f91962-557c-4dcc-976d-e4c1aeb8296d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6069f5a-847e-4721-99f0-3b82411a7cdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90fa342d-2942-4982-ab96-973d9ae2604c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eceeeb9-1e63-4093-8037-e51ce80078c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8730fb8f-5306-42e5-936f-d7c09c40eb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3644561e-c1ae-4ecd-90c4-980815c5a78b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da00b1f-d00f-46d3-9fed-de8ec92bfbf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb62accd-8927-411f-9e36-b71f4cce0b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f0c3d6-e589-4817-ba5a-0fce8ae01600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7686977f-bd7e-4181-9937-fdffc76809de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731da021-f4df-4b26-bf84-5e7090540ce6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8306a7ea-b8db-4f71-a809-d0b7009aeb47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b731476-2003-42a1-84dc-f7f66c0f7021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e708d5-5df0-4fa7-bb2e-ecb5d33f7551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a931eee8-3a69-4385-b764-bcbde8067e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c610a1ec-dc63-43c2-a4dc-4a4f1630b19b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e546357-2070-410a-9ecc-9d4d0bc32847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73740a27-0f5c-4c3f-8a25-c3b49f05456c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80738dc-878e-4def-8a9f-ca8a56661377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f66a2b-0a79-4951-a331-08ec22fc769f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0004d13d-7a42-426b-ba44-2ef90faf0167",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29772bf8-a66f-47b2-b05b-fc5a1ee721ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a7ef8b-a6cc-4bbc-9587-b2701ec9865d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ae8a17-bd19-4157-8dff-e923c49597ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56922681-df5c-4977-a93b-f0eacdd691b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2ff2a2-941a-4a77-b92a-49b2100b07d6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9c822f-d000-4029-8b21-74186d206cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba4ef09-4396-40e0-a687-378dd4442eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3823558a-72f1-413b-81ed-544ca94a31db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b83ff1-a445-448a-962d-295c423ea90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda9be0e-dc2f-4c14-9b90-78fa79be24ea",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e70598c-b096-4919-916e-8ec1c49950a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78bd4125-eab2-4b83-a836-8a7898d726d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001cfe1d-3a73-4497-b3a9-f028c600970d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1825e01-3dba-400f-8e77-ae6365fb0748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d5e8b8-4fcf-49fc-bee3-76d0ac8cb2e5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab10ccb-3f74-4172-8e7b-86992c28591a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298a5991-2698-4aaa-8df5-0452b097ccea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5ca09e-64ef-4b6a-b27a-bc6c11478ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db06aff6-acf6-4940-9e4a-2e6d30b93ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a0831f-d123-49f3-990a-fc18c8d048b9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a83a6b-261e-4c77-82aa-df7f29b4304c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c647f6-b619-4cfb-b3d1-58dd68abfa70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c0b32f-1241-4bf3-9318-c616bd0868c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c5e9f1-3078-4951-9e85-18035caa86c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d43d17-ac05-4d8b-85ab-a2135f5cd72e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e91a18e-fa1b-4909-ab8c-3124ddd1a984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fba0da6-3bdc-4360-b735-6478ad956109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d38777-43b5-46a0-85fa-f6c4af741457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc12e43-066c-44b9-87e3-80d504006da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965bc6d6-1925-4427-a3ff-187cfddd197f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42273e5-99d7-492d-aa59-087ada6f3874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e469621-a699-4a99-b7e3-1a94a3b51fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ba6bf8-10a5-4e6f-9217-ed1ebb1011de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5261d24-3851-4600-9b73-498d186afd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab292bf-ed2d-40f3-88b4-d5a690766407",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ad4eaa-6b23-4b54-a135-23ab10f83189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "923b9c80-c713-4469-a2a5-29caf5988f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aef9f8b-9a43-4140-981e-67ddaf9799f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6edd2d7-055d-4d89-b70d-d9590363dbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d994b13f-8047-4164-8aa8-41dba1530506",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ed7bd3-e2bc-4a24-b013-c50d708ca0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2e3f97-a9ae-457f-96ab-ee6856d6fc95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23ef254-27c6-4f83-987e-cd3292a63fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4be1f74-9cce-4bdb-b30b-fce338a040cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47938935-b5e5-40b4-9af2-4c09222a8301",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0874edc5-d1d1-4571-91a4-2753d1f6809c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd16b478-95e4-4e94-b990-d9d6f3c58211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba852035-c39f-448c-82f7-a3840806553d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e613d844-f364-495e-9aad-6a644b3bd326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2aa8a21-11cc-4693-97b9-799dfb71fe72",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6697203-c606-4259-9907-a0777fc0606e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814fe9fd-e960-401c-9e0a-748c65975d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d293fede-4e19-4230-89a5-a8c1a6d9e449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37917766-4ce2-4aa7-a50f-f4fcd6bce295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bb207d-9f5d-46bd-9373-719c7160d4b3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0c4991-c878-47fa-ac2e-07e289908d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e5fe60-89f4-4a6b-bd2e-287a93d2edaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853ae1e8-a12b-4608-8822-050bf83d487c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f453ad-580c-43de-897c-aeb8fa606c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5a8e9f-f6f8-42be-bc94-f5f1afcfacd9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7096ee4d-cacb-44a4-9f09-cd0cd71fa8b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c403d40-bc8e-46ba-bf17-644a65ee6602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff51d7e-1491-4dab-9d70-f3f0b761dc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a7c2fb-83cb-4f6c-a3a9-ffed3b4e60b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7272c7ca-82ed-4e35-b0f0-3e6ece50f754",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f41d141-b010-4310-a2f3-c71c2cd14d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2649f80-4e17-4a7e-8c39-aaf0769d2a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e233ab58-c5f0-4bf0-baf5-d5ccde677b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1b1d0c-be96-4afb-a61f-bcab440b85fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b4c6e5-7d97-41d1-be98-748255f64572",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47563ba2-9866-4a7f-b771-c6dab3d3ac7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe588ed-bf44-409e-a223-dd0cad856336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9d44a6-8f85-47a3-b13c-07378a4019d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdced869-ecd2-4489-b3c1-7b28e8b61c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9462d862-c4ed-4a26-8b76-d11ab3c6e42f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22280d4c-f98d-4ff2-9e0c-5d51b4041489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd3fead7-6725-4a7c-946c-5ff16a6fb86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af216ca-d1b0-4b77-8b29-d004b3c20fb4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c01c375-d277-4dcb-aa00-4ecb5b591514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992ea9d4-9eda-4c1a-bbea-9ca78a7b0779",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8daf8e3-f448-45ce-90e1-075612f709a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a03d5424-b250-47fb-a046-8ea7eb3a59f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a831213d-dc70-4e85-81af-b57b0a356bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d6b2b6-115e-4807-aca5-044a0779273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b486b6-73c5-4f0b-8223-398df9d07ef5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b17c062-e747-44ba-863b-ae0e003d28cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff4628d4-574b-4974-9642-e0cd8861c538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bafec4-5e35-48ec-9a68-d9a2c2e4fddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38482a6-5383-4b60-9293-6219aed4ddf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87a8f1c-b8be-4a12-9d54-d7e3ff594324",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fb3eb7-a948-4889-a619-63883ab0e60c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a143be-c9f1-4685-a515-6426ec5a40a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff46e6da-c6f7-4bc1-9592-71a9d40f8632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcf8e14-0c2d-43af-9b4d-f4c7515d0b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35eb78e8-f06c-486e-b30f-ed53ad4aa698",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3e1256-0bc4-4c41-84ea-e8112dcce4f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af0c3c68-ad44-4940-b7e3-7068cea5ba31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6cc93c-9dac-4c52-94ef-aa520d3540ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12bccb1-d92a-4f9a-91c0-84ff044fe0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794a74f2-3ba5-4b44-8241-eed1b0732b69",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a1b2dc-39cd-4410-bba9-767babfb8e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "609804b1-5ae4-4124-a461-156f3effc44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc284a8-1314-4c97-afd1-122e6566794a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd46f6bc-f7bb-44d1-b593-71813fc5096f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c7aa22-a4b9-4d43-9be8-77003be8047c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91de8554-f6ad-4499-8597-7fbda65106cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f9b1e9-ce75-4db3-bd8e-af585d9cf96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcaa6d3-3577-41e1-849b-be0dd67f34e6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96050b86-e375-4cb5-a4e2-7eb86d2682d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a9e49e-453f-4b6d-9b31-4cd2bc6fe3ea",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fb40c3-d3c0-46e3-bee9-ddd4ec64fd7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eefda7dd-3270-4e06-b0c5-8aefdbca90ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9e027d-113f-476c-bf7a-d6056c4813fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18eae213-0dea-47a0-b813-889a842b3dd1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7402a93b-11d9-43ae-a59e-b94e800828cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0e2cf71-807f-418a-ac84-8fa10e4daede"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f87f91a1-1a41-4157-a88e-a2e145610a95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "087dc4c5-7c61-46d3-97ee-ff802ce57924"
                    }
                  }
                ]
              },
              {
                "id": "a3b63e38-afe6-47d9-950b-5ea8b3fddf16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fb18d97-cfc3-4459-8ba3-b7051bf566d0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd121f8-5f74-48b7-8e52-2a1049c12cca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7f710147-3fcb-4380-8200-3b2b4963b131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3c7dea-7f28-4512-839d-2cf01207c24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1244b361-7a54-4aff-9070-13ff4e6d1dd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fcf84c2-de10-436a-b0a9-30491667875a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70a4e1f4-28bd-418a-b7c8-92de7deeed2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17ac66f5-4a46-41a0-abbb-027e4bb8fd1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50183c74-acf0-47f5-832b-5b5bc7756702"
                    }
                  }
                ]
              },
              {
                "id": "8fc18724-bcf0-4013-a446-f5ce03772ceb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1c59b525-103a-4ef6-9813-bd2fe5d8d18b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426ac4ab-7b96-419d-b746-ea4f262c39a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "aef913e6-9f43-4dc8-aed8-304f9eb96d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bce213-5f23-45bd-932b-52ad84ded96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fc5cd1-bef1-4bc5-b038-eb66088bbae6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5cbe8d1d-6669-401c-900e-4b58a541f24e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b508378-c37e-42e0-8cd5-4a8de3b530e9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e80ebec-845e-4fd7-ba15-10460c455a63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7ded4d39-01ad-4b6b-855f-2b9e24b132ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "160cd758-2c34-4c40-8310-21eeb092b10e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "696bab68-62fb-4f5f-bd51-b15dcb886db4"
                    }
                  }
                ]
              },
              {
                "id": "eba01b87-ce50-4440-814b-dec91f230e4a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9c03638-9123-490d-8413-da62f962c48b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dccb1fcb-6bd0-4991-9091-f1e540e4a71b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a9859c7-9da2-4e1a-9aac-4bdcf7a8e381",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0273edf5-d8f7-4b2d-90eb-5edccfe641c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "002e3822-0ebb-48b4-ac6d-d6fb6ac4fd05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "95283003-38fd-4080-8681-aba2190165c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c1a0c46-a44f-40a9-b1c5-fdcf7dc23fb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "345090b7-8936-4b1d-9243-f5e71c20dabc"
            }
          }
        ]
      },
      {
        "id": "3e3082a5-a2a9-41fc-849e-7729af42111a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "186bb329-3a5e-418a-a063-e887c4909664",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e42146e8-d2f2-4b9b-a8e3-66a72c1084bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eefd8e2c-9b57-4aac-8292-9e36b0cb62b4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0d8002-1d31-4a1b-bce1-81574dd6507e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "be34e973-2d2b-4f00-9760-3d0fce46611d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf65d9f2-aa27-4947-a393-d733bed8aec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79736981-90cb-4a95-be77-7b8b99e17d98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "572def5d-542d-4532-96b0-5b292c259b42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "410608eb-cdf8-4550-9a79-8b26287677a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a4224ae-9ff7-4539-abfe-aaac73d35e4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "248e6cf9-9590-4e96-857a-108f2d1858ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5b03a14-a7b8-4996-a20e-b8b3dbaabea5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c344d415-ea1d-4f28-868f-a682984d9d54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee5e0548-c58e-4615-a31b-ec824abda476",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c795453-1795-4691-8d9d-cb37b3100a7c"
            }
          }
        ]
      },
      {
        "id": "74ad87c8-c06d-4ec8-bf5e-abda4381ce09",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d1dc0015-c297-4410-879c-cf856b943736",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdc5e04a-3b6e-4ceb-90c4-f91c652e4f9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa52d7a5-7272-4dcf-9292-f1c46cfae75c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb724e10-eb3c-4678-8aff-53023ff85f0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adcb55c2-2b01-455e-b9c7-9634c995314a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3a034e-8cf5-4e6d-8b93-4b5f83aa315c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9508d11b-2111-4b11-9b35-c9c1b403a8de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34fcdde3-6c55-4dae-889b-b7efe63c477c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a5abe1a-5a50-49f8-ba38-06c1909d4fe6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e739403c-09c5-48f1-9272-009cc7c5f631",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9bbccd5-0b42-4bb9-b862-39341bbbb28c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e9a983b-7ca3-4b75-8fd8-d6a3867cfb91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0316d3bd-67c2-4863-92ff-4ca97989e42b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1b6fff0-05d9-4b0e-b100-5b8fef594c5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19d4a43c-b69b-481d-a62c-3eb9287490f1"
            }
          }
        ]
      },
      {
        "id": "689556de-04fd-42c1-9eca-a04f041781b7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "784d49aa-e0fd-4a32-91e9-50c637810eb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5654ba8-ed1d-4fe1-9198-b8bcf646a543",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4aaab237-4cde-4fdd-a1cd-6b905319dc91",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b8a65a-dd20-490f-8f79-322a3dab2a90",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6ecae3b-e4c0-4f93-8271-fc5cfdc248a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64a09c4-a1d7-4ef7-b67c-1051a1ec0d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "911b229b-c9a4-4924-bddd-48a48b9dcb59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a229685d-6017-407d-b0e7-66ad76dca658",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dcc07a6-a964-486c-acfc-b36ee7b48b0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd8a8b55-139f-452a-9bd1-a0c4e2a621ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5c85ec3-b36a-477e-bc55-5433fa5b7fa8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c4e22fe-ef65-4315-8625-c2e58a3936d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c6f578c-e947-4412-a5e4-4d7ac91c9df5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c081c694-2873-41e2-90af-8ea7ee44f5fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "046fcb83-651b-4733-a9d0-2d84448cf37e"
            }
          }
        ]
      },
      {
        "id": "b16f1068-55fe-4bad-b59e-2d00d1ef0c56",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e03898a-75ad-4bb3-b4f8-964c7c96eab1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0f6a648-eb93-4281-b13c-d8243ce3ef03",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ac1db6ae-6398-4ced-8a0c-845cb200ad96",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17390e2c-50a2-49fd-88e8-b50b3bd822ce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38d92719-f54e-4946-9fbf-622d261bdf18",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 334.4642857142857,
      "responseMin": 9,
      "responseMax": 8896,
      "responseSd": 1282.299587791978,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718930259514,
      "completed": 1718930352082
    },
    "executions": [
      {
        "id": "cb235867-20e4-419e-94f5-2a38037eb906",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "94ab581f-5761-4c04-bcc8-990ccde6957c",
          "httpRequestId": "31802ac0-f574-44f8-b883-2ea0d5048a31"
        },
        "item": {
          "id": "cb235867-20e4-419e-94f5-2a38037eb906",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "44638af6-e350-44be-aacd-392b64d11eb7",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "fb7affd9-09ae-4f92-9a11-bd70bf072e73",
        "cursor": {
          "ref": "7e203746-e6af-4fbc-9950-3a6679ab9726",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6e653266-4428-4b29-9f95-25213b026aa9"
        },
        "item": {
          "id": "fb7affd9-09ae-4f92-9a11-bd70bf072e73",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "27c37480-8d10-4f81-8665-bf02baa68839",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "b549a668-e898-4bae-bdfa-5800e77f036e",
        "cursor": {
          "ref": "0d97a2f4-0813-480c-a12a-d1552b0baa8a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cf0d593c-4b25-40c6-ab96-8f03a146dc46"
        },
        "item": {
          "id": "b549a668-e898-4bae-bdfa-5800e77f036e",
          "name": "did_json"
        },
        "response": {
          "id": "be2c90fa-5cb6-48f6-bd37-6d09590fb3f9",
          "status": "OK",
          "code": 200,
          "responseTime": 465,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7633aa6f-faf3-4eb5-916b-06c400312263",
        "cursor": {
          "ref": "e7b21a8e-554c-4b86-aa83-924db06c0caf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7d894e94-b894-4e32-9104-4a78625c61c9"
        },
        "item": {
          "id": "7633aa6f-faf3-4eb5-916b-06c400312263",
          "name": "did:invalid"
        },
        "response": {
          "id": "bec3d510-7290-4151-aeef-d9c62896922f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2015,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7633aa6f-faf3-4eb5-916b-06c400312263",
        "cursor": {
          "ref": "e7b21a8e-554c-4b86-aa83-924db06c0caf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7d894e94-b894-4e32-9104-4a78625c61c9"
        },
        "item": {
          "id": "7633aa6f-faf3-4eb5-916b-06c400312263",
          "name": "did:invalid"
        },
        "response": {
          "id": "bec3d510-7290-4151-aeef-d9c62896922f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2015,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7044b8a-5bb5-426d-9b2d-b1afa017ce85",
        "cursor": {
          "ref": "b26cee9c-0338-4371-b521-ba9063ff8ea5",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "73ff292b-4bc2-48bf-a950-8f8ff9f84999"
        },
        "item": {
          "id": "c7044b8a-5bb5-426d-9b2d-b1afa017ce85",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "95ca5e36-ec2b-44cd-88b6-ee072fe817e9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2601,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5c0c3d-ea72-438e-80dd-95cdb08d7b79",
        "cursor": {
          "ref": "566ccb09-cbc5-4000-9661-50ae80c73b6c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0d287ebf-0349-45be-9620-97a2049c268a"
        },
        "item": {
          "id": "2c5c0c3d-ea72-438e-80dd-95cdb08d7b79",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a4cc3dc2-2d48-4e1a-8223-88a6d2b316c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2297,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef08f3e1-fb16-4fca-b35e-afa75209b707",
        "cursor": {
          "ref": "864fcab9-731b-41e0-a388-d8d6aeadb239",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f146c60a-68b6-4666-b92d-f28f2ff051f6"
        },
        "item": {
          "id": "ef08f3e1-fb16-4fca-b35e-afa75209b707",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "71dd712f-82b9-4edf-9fea-86610d95f3f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cb6347-6c13-410b-b5e9-2976da73698a",
        "cursor": {
          "ref": "1d1deb0c-6d87-46b0-8c14-99a8ae9d5a42",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7c8c677a-3626-4bf3-b1d8-2f649a656042"
        },
        "item": {
          "id": "79cb6347-6c13-410b-b5e9-2976da73698a",
          "name": "identifiers"
        },
        "response": {
          "id": "3cadeb01-7054-458e-bff3-340644671026",
          "status": "OK",
          "code": 200,
          "responseTime": 2506,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7305431-947a-4a6d-b3ea-aa88196f4f34",
        "cursor": {
          "ref": "a3c31e82-1bb6-45cf-842f-5c3d63542c1b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1c16b9a8-38c8-43e1-8d81-d5f41c16945f"
        },
        "item": {
          "id": "a7305431-947a-4a6d-b3ea-aa88196f4f34",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d246c670-3c5c-454b-85c0-6b3d2d041f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c78a98-619e-40c8-8b48-d4031f491940",
        "cursor": {
          "ref": "07dd5ed3-320d-4f65-acca-09fb14cf8f18",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d7a0ac9a-b19e-41f7-b3fc-a09d824dee01"
        },
        "item": {
          "id": "b5c78a98-619e-40c8-8b48-d4031f491940",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "05822cc9-c2ec-401b-807b-c74926d7c2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856c4214-a782-4bb9-b347-ccaf3e35fe07",
        "cursor": {
          "ref": "0a54e3aa-372f-4b17-bddd-432c76919c36",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "71e59743-2909-4339-ac35-f892b5c99495"
        },
        "item": {
          "id": "856c4214-a782-4bb9-b347-ccaf3e35fe07",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1c7ac1bb-ea5b-4100-a117-3dfc2bdf3be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb076c4-a27d-43e6-9ce0-ec9bc5fe1327",
        "cursor": {
          "ref": "ccb5364e-8743-4ec4-8f8e-52f4eaff8740",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d60baf09-7c4e-445c-afe2-3795c1fa9615"
        },
        "item": {
          "id": "bbb076c4-a27d-43e6-9ce0-ec9bc5fe1327",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ee6fa898-b6a9-4d30-b96d-676a28d4f5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62ef05c-ff6b-45c0-8039-d545b5560855",
        "cursor": {
          "ref": "be522c65-cfc5-4826-92d9-1083cec50927",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b2c6e582-d366-4c84-9b14-5fbd641cb006"
        },
        "item": {
          "id": "b62ef05c-ff6b-45c0-8039-d545b5560855",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6ad15832-f39f-4ce7-8eed-1455cbd4b069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47ff824-be2f-4138-9050-a0941e5e2d1b",
        "cursor": {
          "ref": "3f962fa4-ee60-40cb-9ed5-6dd3af0957dd",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0830d2ea-15be-408f-a75b-c36ec24acb0e"
        },
        "item": {
          "id": "a47ff824-be2f-4138-9050-a0941e5e2d1b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7f3a3f93-4cff-4783-bf73-163c7dc86c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ef2721-80b7-4771-a374-8522c90201ba",
        "cursor": {
          "ref": "059ae588-b385-4645-97b1-8fbfcef1ab7e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "29d828de-ee26-40f0-84ec-269abdb354af"
        },
        "item": {
          "id": "31ef2721-80b7-4771-a374-8522c90201ba",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "daa503d0-c065-4425-be38-64f6ff41adf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfee50e8-4f24-4ba7-bd9d-8649e2eb5c2f",
        "cursor": {
          "ref": "22120ae6-711d-4a6c-8dea-997654a5270f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a1e8def0-6287-4ebc-ad8c-7516999b77a9"
        },
        "item": {
          "id": "dfee50e8-4f24-4ba7-bd9d-8649e2eb5c2f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2ff660f3-e162-4cac-ac6b-d86580ff45f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24099e05-a7f6-476f-9d29-5aba9944463a",
        "cursor": {
          "ref": "0213a74f-c692-40ce-b01b-ee52fbc530ab",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "02ec9d90-6293-4f39-a925-4bc0c690eac3"
        },
        "item": {
          "id": "24099e05-a7f6-476f-9d29-5aba9944463a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "98cbfbf1-7530-470c-bcc8-274e03b60b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916e36ed-5788-46d6-8681-f48c1adbdada",
        "cursor": {
          "ref": "04e8499f-de76-4a59-801e-5e9cbd61088d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "66ba07e6-b016-435f-8a2f-9ac6515e332c"
        },
        "item": {
          "id": "916e36ed-5788-46d6-8681-f48c1adbdada",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dba86bd1-37b4-4a1a-96c7-4e40d56eb90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884865b0-a28c-4c15-8416-2a6e5c3a73d4",
        "cursor": {
          "ref": "e1264e77-6647-4c16-b9c6-6f93b3d09b33",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "559094c5-3153-4556-867e-818aa2688584"
        },
        "item": {
          "id": "884865b0-a28c-4c15-8416-2a6e5c3a73d4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "72ed0496-e5a5-406d-b82e-363d782d6674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172b501c-8005-45b2-8a5a-4b510006aad2",
        "cursor": {
          "ref": "ae390dd6-e8fe-4ce2-bfb7-30dbdf904d6b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "557b6cd0-7a71-4863-bb2f-f880b450a3b4"
        },
        "item": {
          "id": "172b501c-8005-45b2-8a5a-4b510006aad2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8a9b5cf0-4af8-4114-a1eb-89354078180d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e685cec1-05ef-41bc-95e8-ac0e6e5f2e1f",
        "cursor": {
          "ref": "825ee2dc-ad7f-420f-8095-39ff9dd018b1",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2ca290c9-73f7-44fb-9aef-74604662a547"
        },
        "item": {
          "id": "e685cec1-05ef-41bc-95e8-ac0e6e5f2e1f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "23fb590f-56f4-45f2-8cd1-118b60571491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c49cb6-89e1-45b9-bd47-e9eba616040b",
        "cursor": {
          "ref": "cb0ee9e9-eb09-46fc-836d-abe7b194cb1c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "df76c71f-9114-46fc-ac6c-bb30564c499c"
        },
        "item": {
          "id": "a3c49cb6-89e1-45b9-bd47-e9eba616040b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c338fbd0-63f3-4e20-9fb5-ddb2cfd7e82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d223d1b8-693f-4ec9-b726-39cec1530c86",
        "cursor": {
          "ref": "4f543382-961d-4804-8e34-4acaa53142cc",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6863437e-71ce-41d0-a111-84c742e5d546"
        },
        "item": {
          "id": "d223d1b8-693f-4ec9-b726-39cec1530c86",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "29e5cd41-6e19-40ce-a3e0-0b18db544cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a285e2f3-4cf7-475d-b37f-38d814bf3107",
        "cursor": {
          "ref": "d02f8ec2-e7c2-403d-8e83-ccece0350069",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "613ab88c-3616-4b72-9023-61b94bb39572"
        },
        "item": {
          "id": "a285e2f3-4cf7-475d-b37f-38d814bf3107",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e6102947-5ec7-47fb-81ab-63f2a2683477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665acaaf-3323-45b1-84c9-a41c17bc3952",
        "cursor": {
          "ref": "572676ea-1dc4-41f5-9443-a7d9d4ec541f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d7e37a13-eb06-4d5e-a201-2d13bcb7c494"
        },
        "item": {
          "id": "665acaaf-3323-45b1-84c9-a41c17bc3952",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7294b5cb-2b2a-4112-b254-f8f4d902c056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d886a12-6640-4794-b9d7-140370c723cf",
        "cursor": {
          "ref": "4ebc75c2-1a7b-4e15-8f89-1b770cd08f5b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "71a535bb-41e0-464a-bc36-acf4eb5013e0"
        },
        "item": {
          "id": "2d886a12-6640-4794-b9d7-140370c723cf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b646b054-9cda-4ee6-be9d-288118c166f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc48778-85b2-4ca0-8ca3-9e55621e774b",
        "cursor": {
          "ref": "3084ee56-a041-4373-af28-6d524064067d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6f7f4179-a982-4052-ad45-90a64478c4a9"
        },
        "item": {
          "id": "7dc48778-85b2-4ca0-8ca3-9e55621e774b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "33240f7b-1a5d-491b-9028-e10655717100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85b825b-67ba-433d-acdf-df4beb13ca14",
        "cursor": {
          "ref": "69933bfa-c375-49ad-989d-e36b20b7ac06",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "66d00ecc-90fd-48e1-9a8a-1f920ffdd2db"
        },
        "item": {
          "id": "f85b825b-67ba-433d-acdf-df4beb13ca14",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5877ef32-9bd3-4b34-b51f-b8f8121b75ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9606c43-6f07-457a-b52c-6b6642a8ceaa",
        "cursor": {
          "ref": "00734d0c-dd2f-4cea-b39f-06f6d06d2904",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "174c491c-fd5c-4e4e-8754-0159f9c7d89a"
        },
        "item": {
          "id": "d9606c43-6f07-457a-b52c-6b6642a8ceaa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d2ea6cfb-194b-4f18-85ab-8b3422ee742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2352eac4-a25f-4ad7-8696-c9f38c5c2ef2",
        "cursor": {
          "ref": "b6463578-9ae7-4af3-949c-19da738a833f",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ce0b746b-6693-4f4e-bc04-dca1dfb292cc"
        },
        "item": {
          "id": "2352eac4-a25f-4ad7-8696-c9f38c5c2ef2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "24ec711c-3405-4d9d-ad71-33a892a9da64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3353d8d-c52f-4b7a-a0fe-ed6826b5ab83",
        "cursor": {
          "ref": "01504801-3a87-48ac-be26-19520d41ea1a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "18a760b0-a393-4730-a5dc-af93e2b0cee3"
        },
        "item": {
          "id": "a3353d8d-c52f-4b7a-a0fe-ed6826b5ab83",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0edf3647-e538-4531-83e5-ccc97b0b3eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dc271f-95b4-43a0-9a35-0355786b4697",
        "cursor": {
          "ref": "ce5f3bd1-5304-48e2-a2df-c849b45b1ecb",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ff6dfe5f-696d-4bb8-a14b-8066e872dc5d"
        },
        "item": {
          "id": "b4dc271f-95b4-43a0-9a35-0355786b4697",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4a4e3b11-9242-4722-b412-32a2a03dc874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e277ba54-e48e-43dd-b285-c00b5994cc7e",
        "cursor": {
          "ref": "44106ef8-9063-4b15-adb0-a3aca4b755b5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6b7311ca-2d00-4361-8857-d56db3368502"
        },
        "item": {
          "id": "e277ba54-e48e-43dd-b285-c00b5994cc7e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8f35b858-202a-441a-a0f6-eaa18238819d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bff363-7548-4793-b13c-4a63d847b194",
        "cursor": {
          "ref": "d80c5d13-f60d-4957-9e12-8b5d1294f5b9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "865cbf2c-e6fd-4e05-862d-ce2b7c378dec"
        },
        "item": {
          "id": "83bff363-7548-4793-b13c-4a63d847b194",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cf78b4ed-2000-4349-a8dd-7828843934dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff60538-0bf1-48a9-870f-479bc95ada39",
        "cursor": {
          "ref": "272c350f-45a0-496f-9130-4c3d8e51fa0d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "428f4c66-1482-4354-9198-ad1eeeb9caaf"
        },
        "item": {
          "id": "eff60538-0bf1-48a9-870f-479bc95ada39",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "460b4769-ca44-4913-a016-6a0a31836160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0d6af0-f09f-42c7-bd53-c3edd5b733a9",
        "cursor": {
          "ref": "3f67ffb5-87db-4b66-9a59-c887765fff07",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "41b81dbc-8845-480f-91fa-3cbe5dcd9877"
        },
        "item": {
          "id": "5f0d6af0-f09f-42c7-bd53-c3edd5b733a9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7a20d825-ad18-4526-a004-9acfa27e3d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449e01e9-eb77-4162-a6d9-a371301b30be",
        "cursor": {
          "ref": "42aed461-3402-4cf4-9c5e-e92748f9841f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9c718e6c-a782-4d15-b5b4-6594123c0645"
        },
        "item": {
          "id": "449e01e9-eb77-4162-a6d9-a371301b30be",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2d5557be-2011-445a-a414-94430f165444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9743b277-acb3-4533-a02e-d637e7f96b23",
        "cursor": {
          "ref": "a1be5afa-fed6-4093-abe1-d2dc2deb89de",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "45720c5f-4e58-4fef-a501-6ab6c9f6fc61"
        },
        "item": {
          "id": "9743b277-acb3-4533-a02e-d637e7f96b23",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a7a861a0-2195-457b-8272-ea47d32a915f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5732ea4-1630-4155-8816-b7b9bf339859",
        "cursor": {
          "ref": "5c7e4a37-c1ad-437c-b479-d3736a175700",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "df97d0a0-82dc-4f5e-8ed8-891d2bedb45a"
        },
        "item": {
          "id": "d5732ea4-1630-4155-8816-b7b9bf339859",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "160e7d5a-98b4-4c56-aa11-85956e86d84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5662feb-a044-4aba-8f60-1ceba9a470ca",
        "cursor": {
          "ref": "6d6296de-044b-4ab1-8f5e-3446c6561b82",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "04c41c91-4d30-4137-9d10-6e5642b90f9f"
        },
        "item": {
          "id": "c5662feb-a044-4aba-8f60-1ceba9a470ca",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7ea73a5e-0355-4748-a1ce-f997aab2773d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090d3834-8be4-45fd-801e-e974e7e40f97",
        "cursor": {
          "ref": "db0d7b29-6b73-4818-9377-0bc2ba9ae299",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "aa889789-ea76-4541-8190-f69792097179"
        },
        "item": {
          "id": "090d3834-8be4-45fd-801e-e974e7e40f97",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b6cd754f-0225-4ba9-b1f8-e7e864688083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c254d892-395e-472c-a52c-6164039ad31f",
        "cursor": {
          "ref": "21a46073-d4d9-4e7b-b993-498091cc6465",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4257883e-de8b-49f7-af7f-7fcd3638d0d8"
        },
        "item": {
          "id": "c254d892-395e-472c-a52c-6164039ad31f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8273ef6e-2c43-47f4-a88d-77ef2c295556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a70818c-5c8b-43ad-8215-4aa79c723c9a",
        "cursor": {
          "ref": "b9333f3a-1d06-4d1f-89da-d80fb48033a2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "88b18d4a-c5d6-4d83-8f44-085bb3fbc3e8"
        },
        "item": {
          "id": "5a70818c-5c8b-43ad-8215-4aa79c723c9a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8ca01b5e-283e-486a-a83c-1f8188bf8b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512c9996-37ec-4b7a-b607-5c0f8fcac97b",
        "cursor": {
          "ref": "401e4d15-1acb-462c-9398-404597218699",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6a2dd88c-b704-459b-8153-a9eebcbd7e57"
        },
        "item": {
          "id": "512c9996-37ec-4b7a-b607-5c0f8fcac97b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a3af5925-699c-468b-a22e-5e747f33cdd8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 102,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61157e8c-b7aa-4bfb-8458-48196bf49b05",
        "cursor": {
          "ref": "a544029c-3884-4419-a0b1-9693afbcf6b6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "179f3cdc-3d5a-4a30-bf29-3d74a160dc60"
        },
        "item": {
          "id": "61157e8c-b7aa-4bfb-8458-48196bf49b05",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2cf8ce12-70d1-4ae8-8768-f5a26422777b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4886e02c-c95a-4142-ad37-03f7a1b02cc4",
        "cursor": {
          "ref": "57bef10a-0a89-4bac-b934-b69a4d417d37",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "adafb749-116c-445f-a783-44e3a7918ed8"
        },
        "item": {
          "id": "4886e02c-c95a-4142-ad37-03f7a1b02cc4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "eb5c5892-a455-4db7-9de1-6a9836f52db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01970623-d471-45b1-b5f8-5ecf0f432939",
        "cursor": {
          "ref": "51bff0cc-15d0-4d3a-bd3b-2ab56dc49e84",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dd05ba51-20ba-4c56-ae62-ab191c94f01b"
        },
        "item": {
          "id": "01970623-d471-45b1-b5f8-5ecf0f432939",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9d9fbc5a-2090-4d4f-b5dd-cebb8cdafc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdc2179-492b-4c32-8cdb-09dd9b0db021",
        "cursor": {
          "ref": "ff35414f-5c42-457e-809a-b75f34117135",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ad400985-8714-415d-bb76-cecfebcbec76"
        },
        "item": {
          "id": "cbdc2179-492b-4c32-8cdb-09dd9b0db021",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cc1dbada-0886-4cf9-83e2-cc175514c044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59cc6ed-ca71-4a31-98f3-fe7927adcc39",
        "cursor": {
          "ref": "8b5dc82f-d4e9-4c7e-ae64-838ce1244359",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "858addde-d525-4f05-a169-83dbb569549c"
        },
        "item": {
          "id": "f59cc6ed-ca71-4a31-98f3-fe7927adcc39",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bb12c659-7759-4b4c-9c86-a031e2ab2fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c403c73-d8e2-4248-b1a1-80fd7adcbe74",
        "cursor": {
          "ref": "fc936668-35a3-47ec-a44f-c9d33953f3f2",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a212feb8-1f51-41ac-913f-e0afd27ea12b"
        },
        "item": {
          "id": "9c403c73-d8e2-4248-b1a1-80fd7adcbe74",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "508d2d07-bdd6-4d76-8efc-c42270be4b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b778da9-ffdc-4116-858c-57ffdc555339",
        "cursor": {
          "ref": "b0861393-15c0-48ec-b174-08e79c63f674",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "05e4a5e0-35fc-4c24-9c0a-81b47a54bdd2"
        },
        "item": {
          "id": "4b778da9-ffdc-4116-858c-57ffdc555339",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0cb5c5ac-54e1-4931-8883-739f5a499e87",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4432c5b3-5f44-4882-b47d-6019495c7f8f",
        "cursor": {
          "ref": "2e1f39b6-229f-4f8a-ba9f-e1b7ee8405b4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7bb70b73-1e49-4d52-b131-de9797484c0f"
        },
        "item": {
          "id": "4432c5b3-5f44-4882-b47d-6019495c7f8f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "123fcbb6-2a80-45e7-befe-9e55ae21d3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b77b7f-a34c-4442-be0d-9c06aa8135cc",
        "cursor": {
          "ref": "8a6937fe-2820-411e-8e61-d6584587aa98",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f3ed793f-b8d8-4468-8df3-3d6540e1fd07"
        },
        "item": {
          "id": "61b77b7f-a34c-4442-be0d-9c06aa8135cc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b48d7750-4d4b-4edc-beb3-b64c4a1cac0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56999362-8af3-48d2-a683-7656f0d9b84a",
        "cursor": {
          "ref": "cb797964-b1a9-4340-bb28-281e1743b557",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b4ad3e0a-e302-4ef7-a75b-648c3ab5cb20"
        },
        "item": {
          "id": "56999362-8af3-48d2-a683-7656f0d9b84a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f92ed3a6-009f-4837-b6a6-fa762429cf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c138ea-c0f8-4bc0-b2f4-bccffd6a441a",
        "cursor": {
          "ref": "e5e15c11-642c-4bdd-9b4f-a6fa046730a7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "45e49e26-6bc8-4347-bfc1-39aecc378067"
        },
        "item": {
          "id": "25c138ea-c0f8-4bc0-b2f4-bccffd6a441a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fe67e105-851f-487d-a8a1-f9baea048645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91689c42-a49f-418e-ac8b-9c6e0efeb930",
        "cursor": {
          "ref": "a820b608-dc02-461b-8512-7a687fa2c1eb",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e167f477-23db-4752-bdee-1ded419b39b8"
        },
        "item": {
          "id": "91689c42-a49f-418e-ac8b-9c6e0efeb930",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "200334c3-10ca-491a-8878-937242ac9995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3221eb75-86ca-475b-bece-c91af0b6ed4c",
        "cursor": {
          "ref": "69b684a3-5395-4236-818b-09a71098aa2f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4573e2fd-3b98-4fb4-bb9c-dd707960f0a3"
        },
        "item": {
          "id": "3221eb75-86ca-475b-bece-c91af0b6ed4c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5bf8703a-5c2a-43e0-b0b1-e1e5cc7c844f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dd99f8-64fe-4c06-a079-c2c1c058e74f",
        "cursor": {
          "ref": "6d44d95a-1a5b-477a-a569-5cb56765dd64",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9106edd7-a574-4481-91d1-fb90f3679246"
        },
        "item": {
          "id": "f8dd99f8-64fe-4c06-a079-c2c1c058e74f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4b8428d3-4b9a-45c2-a639-29dc2d27cd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d773ad-4198-4c98-be1d-b3402549ab9b",
        "cursor": {
          "ref": "90375271-e2e9-4711-9132-95bf557c60d6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a3dfd7a1-26df-4df2-bc4c-7c075d7974c6"
        },
        "item": {
          "id": "99d773ad-4198-4c98-be1d-b3402549ab9b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "86bb1e50-2576-4c16-9555-2f13dc01db41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde56280-57ac-4841-8186-07370390d4be",
        "cursor": {
          "ref": "24e4aace-fc50-4ddc-92d3-245987fcbb1e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7d187c1f-7a2e-499c-946b-607522ced6a4"
        },
        "item": {
          "id": "cde56280-57ac-4841-8186-07370390d4be",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1cc8c397-8e33-4a3c-940e-2e3a0bc7992e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3896970f-6585-414a-95b7-dacfe1e88836",
        "cursor": {
          "ref": "b85ad01b-1a25-4303-af55-f2e2a99faba7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d4fbeacc-a732-4924-8ef8-f92e5d38a92e"
        },
        "item": {
          "id": "3896970f-6585-414a-95b7-dacfe1e88836",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5cec1957-9393-422a-9902-b65ecf2af771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124c969f-7661-47fd-8824-0bb6da5cb5c3",
        "cursor": {
          "ref": "140f449a-ebce-4b2c-bda7-ce0f0f294f0d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "11874b1e-6f13-416b-ac2c-bae25f51266b"
        },
        "item": {
          "id": "124c969f-7661-47fd-8824-0bb6da5cb5c3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cb4f3270-dc39-4d07-a667-8f2fdbfe141c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b9ec11-c6a1-46b6-9712-3439cf83cfe7",
        "cursor": {
          "ref": "c91c333c-13ce-40cd-92f9-7972b541b1a8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8b720095-2454-4991-9195-d512a8778297"
        },
        "item": {
          "id": "45b9ec11-c6a1-46b6-9712-3439cf83cfe7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "043425ed-dead-44a1-afce-c432f4089c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b62a62-bb9b-4072-8e8d-7b5f4135d98e",
        "cursor": {
          "ref": "52102e0e-fce4-4971-ae97-63df38c18cb6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "650b5239-2446-4908-b0f7-8c219b34137a"
        },
        "item": {
          "id": "07b62a62-bb9b-4072-8e8d-7b5f4135d98e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0d606a7a-c7bd-4463-b22d-f7a6ee046662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb95cf18-13ae-4294-854e-d66f5fcb1353",
        "cursor": {
          "ref": "94a6babf-9e0c-4a8e-a921-3a2f484e354f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "781d142e-f6ca-4265-ae0d-e7744fc2d68a"
        },
        "item": {
          "id": "cb95cf18-13ae-4294-854e-d66f5fcb1353",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2c311720-96fa-4858-ad8c-91427b94641d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05f5751-9a04-4b49-b5cb-81226dad3ff4",
        "cursor": {
          "ref": "7b8c51d5-19ae-4932-a3b0-a3238e13bc25",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "413cce73-1ba6-4ea8-8b73-a2f141444e10"
        },
        "item": {
          "id": "d05f5751-9a04-4b49-b5cb-81226dad3ff4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5e4e0c30-c545-4555-a3a3-d911d7988735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdf13dc-f14c-4a69-8af5-aa91289aee03",
        "cursor": {
          "ref": "0296aaca-519b-47bf-8e02-0e251d40441d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dba3665b-839a-45b6-bb9d-de940d560dde"
        },
        "item": {
          "id": "3fdf13dc-f14c-4a69-8af5-aa91289aee03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "186f45ef-90b7-4432-abcf-178b190851cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4808d65c-390c-47b2-8b45-8a797bc85533",
        "cursor": {
          "ref": "71fc4f9c-6dc9-44a0-9917-9ddbed58ad7b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "47d4819c-e7ce-42bc-b942-95601ccfbe47"
        },
        "item": {
          "id": "4808d65c-390c-47b2-8b45-8a797bc85533",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5dea75af-9088-4614-ba80-d4e274bbf45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498fe190-e5ec-4c05-9d92-fc8bfc6e107c",
        "cursor": {
          "ref": "9adff963-be00-430b-ba01-8b6c1aad0020",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "30936eeb-3438-414e-b7ea-9ea746b8857f"
        },
        "item": {
          "id": "498fe190-e5ec-4c05-9d92-fc8bfc6e107c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ee6ec1f7-f276-4eb6-a6cd-1bbc0d3cc3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89183a81-24e4-4861-b31b-f386495e9d35",
        "cursor": {
          "ref": "a49c7d6d-0459-4615-ab56-a4e8cfd9c997",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2d12f75e-1c65-4425-b02a-6b14edf0a7f4"
        },
        "item": {
          "id": "89183a81-24e4-4861-b31b-f386495e9d35",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "73244a4e-cf41-4f45-a340-b6dcd786e193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65171764-30e6-4927-b268-4a38e1236acc",
        "cursor": {
          "ref": "0fc12897-dc66-46c0-ae60-a0b4fb341a47",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0d601a48-6a46-4594-bad1-64684b7790a2"
        },
        "item": {
          "id": "65171764-30e6-4927-b268-4a38e1236acc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "17527827-bf5b-4f5f-88e0-8eaca0745cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9572d6b-9ece-483e-82fd-9d80f5f233d9",
        "cursor": {
          "ref": "a26bf7da-ce14-49d9-8303-be19e965ca41",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5a5d881e-585c-455c-8a30-bcf144f2ef94"
        },
        "item": {
          "id": "e9572d6b-9ece-483e-82fd-9d80f5f233d9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "094ac1cc-d053-4219-99f5-5ee08183f61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c77682c-384a-4194-a507-80015b691996",
        "cursor": {
          "ref": "067294f7-02be-4b82-9eb6-a3fa134698cb",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e3b39b7b-af21-43dd-9606-8ca200455cfe"
        },
        "item": {
          "id": "9c77682c-384a-4194-a507-80015b691996",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ac412044-70ba-4d2e-93fa-edcbe10bdcb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a983e315-1d72-4dd6-9cc2-462a312d0a1a",
        "cursor": {
          "ref": "42526711-2af7-4655-a624-31731cf3bba9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "708329b3-b340-4cc9-a780-af09561ec086"
        },
        "item": {
          "id": "a983e315-1d72-4dd6-9cc2-462a312d0a1a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "291a1dbc-8744-47df-9303-87e42ed4807e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f450ece9-f93f-4000-ba47-cd8a0d99f7e5",
        "cursor": {
          "ref": "f34d806d-2abc-42e1-9c2d-d3cd879c4c37",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2ceeff65-cdbb-4615-8ab2-9815b9ca8264"
        },
        "item": {
          "id": "f450ece9-f93f-4000-ba47-cd8a0d99f7e5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e2282dc4-d36b-4c5d-b05d-937e8e4b3278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6669421-1403-4b30-941c-0066d62ff92c",
        "cursor": {
          "ref": "f907f764-75b3-4953-86e7-043b799ae541",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "29e1067e-de56-48b7-91c5-c0ae420d33c7"
        },
        "item": {
          "id": "b6669421-1403-4b30-941c-0066d62ff92c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "144d28c6-549d-49cb-a9ac-dd91c0c8bca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c248fde4-df78-40cc-93fd-20d587622542",
        "cursor": {
          "ref": "0e235bee-f75d-4a60-a2d6-ec7b3614348c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1f6ad0bf-3f7a-4c0b-91e1-193559c69426"
        },
        "item": {
          "id": "c248fde4-df78-40cc-93fd-20d587622542",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4f54ed76-efc1-4ee5-8da5-cacaf1505be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b5900a-25a6-4129-aece-5fdf856a39a4",
        "cursor": {
          "ref": "43c96028-501c-4d2e-bb86-7b08ba798dfa",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "27ab38c1-06ee-4f46-bde1-cf3ccdc51d9c"
        },
        "item": {
          "id": "b7b5900a-25a6-4129-aece-5fdf856a39a4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "85ea5860-9958-414c-a7b4-4dc1270d60cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7890996-8f6b-47df-96fc-822b3d557e9a",
        "cursor": {
          "ref": "00328e20-7bf5-4196-9032-c5413771e951",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "be152ec7-1d01-467c-a6b4-574447a6c098"
        },
        "item": {
          "id": "a7890996-8f6b-47df-96fc-822b3d557e9a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0fa4d9f6-1e3a-4bd6-81fc-4a708f641009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be68851-6819-42b6-a08f-7c51c8ce8aa2",
        "cursor": {
          "ref": "84a851a4-1d9c-472a-89d2-ba4c64972a04",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7d4fe9ee-24e5-43cb-811d-1c8e9bd55994"
        },
        "item": {
          "id": "6be68851-6819-42b6-a08f-7c51c8ce8aa2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6277d1f5-2bc7-421a-9913-e32263a2eeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ccce5e-e02d-487b-ad29-a75bc877c55b",
        "cursor": {
          "ref": "ca6a12ca-3611-41ea-b14b-10ba6147faf5",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0fa137f5-c280-4443-bf68-0fdb8f90e578"
        },
        "item": {
          "id": "01ccce5e-e02d-487b-ad29-a75bc877c55b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5d19cc9f-5372-4934-a8b6-4c705fd4d534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329faa53-ed53-4369-a6a9-7970466bb129",
        "cursor": {
          "ref": "7761b89b-cb63-42a2-a475-c5fc0dfb0893",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f580b70c-0b7d-4bff-a466-15725b201fca"
        },
        "item": {
          "id": "329faa53-ed53-4369-a6a9-7970466bb129",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "37c3d0d3-6743-4fd5-b1de-edc4e65fbaf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16af5aa-7fa8-4351-836a-09cba552d623",
        "cursor": {
          "ref": "074db38a-d461-463c-93da-392797fc4390",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0aef3aea-2334-4427-ab87-cd233a3326c4"
        },
        "item": {
          "id": "f16af5aa-7fa8-4351-836a-09cba552d623",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "327c0a52-881a-447c-8416-9268a60bc0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afd5eb8-c08e-4063-9b47-501b2b8c08f3",
        "cursor": {
          "ref": "32cbbd33-32cf-48bd-84aa-69e853954cd3",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "909332b0-8979-4a87-bbee-bb7eed3db09b"
        },
        "item": {
          "id": "0afd5eb8-c08e-4063-9b47-501b2b8c08f3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b3b06fcb-1ffe-4204-81cd-0df1aeafb08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8805c1d0-abdb-46c5-bd25-a21ef2564f68",
        "cursor": {
          "ref": "5c47f5de-23e3-4858-a3e4-e2c4373882b8",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2d9f2d7d-7314-45bf-beba-6418dc3a0a0f"
        },
        "item": {
          "id": "8805c1d0-abdb-46c5-bd25-a21ef2564f68",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9fe04d21-85dd-490e-b655-30db638a494f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ea0dc1-f2cd-49b1-b843-a605041fd860",
        "cursor": {
          "ref": "e213ce7f-5a9e-4966-aab5-7299a5f5857a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "561e90fe-0144-49e3-912b-ce740dea3673"
        },
        "item": {
          "id": "95ea0dc1-f2cd-49b1-b843-a605041fd860",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "83134f3b-baa2-4b46-82e5-40bcf9efa676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9074ee-2cb2-4521-a2aa-39ddfa59b34d",
        "cursor": {
          "ref": "4ac68704-a29b-40ba-b034-6c98550ca892",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "831832c3-4334-4514-a223-2c4f326502a3"
        },
        "item": {
          "id": "ff9074ee-2cb2-4521-a2aa-39ddfa59b34d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d73cb5e6-f867-4cf5-96c1-cc3935369a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb5dc40-a90c-4d99-a4e7-e79b442e06cd",
        "cursor": {
          "ref": "524511c4-0008-4713-b972-bab80ed2565b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f0a32362-7250-43d3-9144-1f8fe92221a0"
        },
        "item": {
          "id": "1cb5dc40-a90c-4d99-a4e7-e79b442e06cd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8d6831cb-753c-4fcb-aaa0-011c8e60327f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024ca183-6ab5-4ae0-94cf-c9a4e629df11",
        "cursor": {
          "ref": "4bf31205-7163-4be7-8659-fb93ba7f3e07",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b5a66d2d-34b6-4983-a8ba-199b8953c7b1"
        },
        "item": {
          "id": "024ca183-6ab5-4ae0-94cf-c9a4e629df11",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3c0ff88d-16e2-4312-b0a7-ad91963fd5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e5d2fa-48fa-4c6c-b0fc-7fcfbbc8cf2f",
        "cursor": {
          "ref": "ce1f008f-8030-4732-9754-0ce794cabf9a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ed41d17f-8811-4bed-ab8b-8823ef38f8cd"
        },
        "item": {
          "id": "01e5d2fa-48fa-4c6c-b0fc-7fcfbbc8cf2f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "60f71dab-01fc-440c-9eff-1629dee29594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e0918c-6e12-4b1b-ab03-288ead658625",
        "cursor": {
          "ref": "59974577-edd3-4225-a476-4b2decdf35e2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cc49b66c-7c29-4ce4-a001-644fa72561cc"
        },
        "item": {
          "id": "00e0918c-6e12-4b1b-ab03-288ead658625",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "90c85bfa-6c39-40c0-9485-b074f8bd4084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b387527a-f061-41bf-bd5d-b47a5f42aa43",
        "cursor": {
          "ref": "da52734d-f41c-47ba-8e2d-4d130235fb33",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8aea21e7-56e3-4d4c-9cf2-f7ce53f98f15"
        },
        "item": {
          "id": "b387527a-f061-41bf-bd5d-b47a5f42aa43",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bc566626-a218-43de-98e7-fbe1a5495989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465df48c-c7fb-40f2-acf0-cd314f0c5341",
        "cursor": {
          "ref": "99b2e532-8b3a-4ffc-a664-05f2ee273892",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "927b4c8a-27dc-4702-91aa-197db273ddd0"
        },
        "item": {
          "id": "465df48c-c7fb-40f2-acf0-cd314f0c5341",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "86604588-fe34-4209-b995-9bdd698fa6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b139b54d-cddc-4790-919f-217c3d70b4d1",
        "cursor": {
          "ref": "65f14208-c35b-4285-bdc9-1ffb29907436",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fc57b219-86c2-46aa-a576-6396fc86f82a"
        },
        "item": {
          "id": "b139b54d-cddc-4790-919f-217c3d70b4d1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f98b77ff-b0d2-4466-91f6-3e4466245539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3837a1-3590-4455-9a7b-01271e302a14",
        "cursor": {
          "ref": "5e4ab598-fd3d-403b-b425-a237469ceeca",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "919de68d-978d-4e4f-a8d5-ce6c0f23c70d"
        },
        "item": {
          "id": "9d3837a1-3590-4455-9a7b-01271e302a14",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2e422c11-d3de-4f2a-8fc2-e5bd6631e2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f898ee5-6bb8-41b8-bbb1-ab663e97c2ee",
        "cursor": {
          "ref": "f38777a6-a652-4875-b649-00e92d045e9b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3acd9912-35db-4661-adf1-6523c28be79a"
        },
        "item": {
          "id": "5f898ee5-6bb8-41b8-bbb1-ab663e97c2ee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "21e2b61f-378c-485c-b4f6-9d644252a3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1036a1e0-39a3-4003-b1e2-40495604d7c3",
        "cursor": {
          "ref": "29266ae5-4fcd-41fa-baa4-aa11bf634b8d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e88b523d-a3e3-48a5-b17d-52863a816bc8"
        },
        "item": {
          "id": "1036a1e0-39a3-4003-b1e2-40495604d7c3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7a8bb521-b679-4bcf-9777-995788000897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43246757-c8da-4a71-8ff4-46750873ebfb",
        "cursor": {
          "ref": "cd84d602-1692-489c-a140-a2e24f00ce03",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e67ada93-54c3-45d5-8303-c0eaa1178f9f"
        },
        "item": {
          "id": "43246757-c8da-4a71-8ff4-46750873ebfb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4d5fc3e6-0c54-4135-ba36-04cf2b935c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c6f461-14a0-4216-aec3-95b2d0881feb",
        "cursor": {
          "ref": "e52a0de3-d8e9-49e3-b6af-8a631f60fe6a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e7a12fdd-c22a-4e40-b291-eb44320d3533"
        },
        "item": {
          "id": "c4c6f461-14a0-4216-aec3-95b2d0881feb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6f60cb4f-67fe-4113-8b90-d802e6e2c938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af29cf53-1fd5-47e0-9e16-59b269579c3a",
        "cursor": {
          "ref": "2fbda525-87d9-4a02-bcac-c95d3510abc0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b28c474c-7503-4008-b3bc-f437493000e4"
        },
        "item": {
          "id": "af29cf53-1fd5-47e0-9e16-59b269579c3a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f0dd476b-9351-4c27-a370-ad895f79068d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be77f1db-62dc-48e5-b25f-605ee728c7be",
        "cursor": {
          "ref": "4405867b-d28d-4455-baf3-3723443d2e92",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0ab17394-ebc4-4e15-a839-ca630c5ed1d3"
        },
        "item": {
          "id": "be77f1db-62dc-48e5-b25f-605ee728c7be",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ce652f57-aae1-41f0-bf83-e5df88b9d44e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689042e3-c997-4828-a099-9545501e9f98",
        "cursor": {
          "ref": "d973bbf8-73a4-4608-950d-e249828b7d74",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "041a84c8-09c7-4452-9a19-cb47af89c3c1"
        },
        "item": {
          "id": "689042e3-c997-4828-a099-9545501e9f98",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "25574602-f065-4c7a-a98e-2037472e2457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9ce59ead-1755-4d39-81e4-4f2f16259e5e",
        "cursor": {
          "ref": "ad2ebfd3-90e1-4475-968f-7ae3833a9fd9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "78cc1eb3-c328-4aec-b10e-747d275ba8b7"
        },
        "item": {
          "id": "9ce59ead-1755-4d39-81e4-4f2f16259e5e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8dbebe26-eb96-4c12-9add-b487c887e728",
          "status": "Created",
          "code": 201,
          "responseTime": 8479,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fec7859-8a50-4be2-89de-f3103563b2eb",
        "cursor": {
          "ref": "67efad88-8cf4-420c-a0a0-267fbf43a706",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "56e0ae3a-4f93-4f4c-9129-af8d33708fc0"
        },
        "item": {
          "id": "7fec7859-8a50-4be2-89de-f3103563b2eb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5af72287-c719-4ebc-ba6d-0a80c68b9763",
          "status": "Created",
          "code": 201,
          "responseTime": 7642,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93a650c-3063-40e5-9e22-f4f2406c9ad5",
        "cursor": {
          "ref": "9e3141d3-bc34-4bec-b025-1611856432da",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aafdcda2-0731-40e8-9428-49198b30a064"
        },
        "item": {
          "id": "a93a650c-3063-40e5-9e22-f4f2406c9ad5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b93b6ee7-df84-4712-8525-fa21249d50ed",
          "status": "Created",
          "code": 201,
          "responseTime": 7937,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1c2265-4840-416e-b611-ede88ef29a9b",
        "cursor": {
          "ref": "c76fe89a-50b0-46e9-9371-b24163385f2d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2ac26d5a-d1c8-4b50-a085-61a49c68bc6a"
        },
        "item": {
          "id": "3a1c2265-4840-416e-b611-ede88ef29a9b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fc452f02-acc7-4313-9a23-372b06a5728e",
          "status": "Created",
          "code": 201,
          "responseTime": 8896,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b893cc5a-2949-4924-9ec4-e807838f50f7",
        "cursor": {
          "ref": "28d045d8-aadd-4fdc-9cdb-bd161a6e7b60",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "24b3e86c-3f80-4ca6-a9e0-828217c05e1b"
        },
        "item": {
          "id": "b893cc5a-2949-4924-9ec4-e807838f50f7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3c9e5031-7b5c-46f0-a98a-fe7967ba5094",
          "status": "Created",
          "code": 201,
          "responseTime": 7874,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-21T00:38:41Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-21T00:38:41Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "88a0c2ab-6539-40f2-8899-9d94314a27d8",
        "cursor": {
          "ref": "90e7256c-d27c-4298-b5fe-cce39881af08",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "516d672e-9946-4d84-9609-1d3e095cd608"
        },
        "item": {
          "id": "88a0c2ab-6539-40f2-8899-9d94314a27d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c8ca4821-7e7b-45d1-a896-17afbda74e80",
          "status": "Created",
          "code": 201,
          "responseTime": 7992,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221cdd07-608e-4a44-acff-62c64ff9b3d0",
        "cursor": {
          "ref": "6a3954f8-798a-4300-9a03-0ab7d9d579d3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "76be54bd-29e8-4bfc-a0b5-e328aadc1b73"
        },
        "item": {
          "id": "221cdd07-608e-4a44-acff-62c64ff9b3d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b460f537-d93f-48aa-9312-8814b8f60dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb7dcb0-e94b-4d93-b360-6d1d8a1ca751",
        "cursor": {
          "ref": "83a71093-6f57-4de1-a508-3cbefa4d72a9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bc58a309-54df-4bdf-b17d-c5d12e8e0231"
        },
        "item": {
          "id": "fdb7dcb0-e94b-4d93-b360-6d1d8a1ca751",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e48abd30-3326-4373-88ba-77c4b9694474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f596c62-8ca3-49b2-aaa9-de1014c07870",
        "cursor": {
          "ref": "f40e28b3-bc2a-49eb-8bdf-8ddac09adca5",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e9f4e3e0-7a4e-490d-9902-6c01ea99b150"
        },
        "item": {
          "id": "8f596c62-8ca3-49b2-aaa9-de1014c07870",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "878be231-c24e-49f8-a937-196dc1eb955c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ef1bfa-07ad-496a-abce-781aee10ebce",
        "cursor": {
          "ref": "50e2b4fd-b72d-4344-a7d8-20a5211b13be",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "08b2afd3-ea3d-4067-a2c7-88f9db44c267"
        },
        "item": {
          "id": "26ef1bfa-07ad-496a-abce-781aee10ebce",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "05287da1-91dd-4bf1-9e46-98ee3d2fcbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3291cc-ea24-4711-afa3-757b5d07acc7",
        "cursor": {
          "ref": "3fef3955-8571-47cf-b4fc-a18079659d7c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8218fca3-fe20-40da-9c54-3b4c6c76b64b"
        },
        "item": {
          "id": "6c3291cc-ea24-4711-afa3-757b5d07acc7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1863ad1e-7421-42e2-ae75-82f3b2643428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cfb7f7-972b-4a45-a8e3-e4f9838f9088",
        "cursor": {
          "ref": "be5afc73-ab56-4c3b-9bfa-164450c33772",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6ecc60ed-6118-4b4f-86e6-21e6bfca8a40"
        },
        "item": {
          "id": "32cfb7f7-972b-4a45-a8e3-e4f9838f9088",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9f0bea86-e6ff-4de5-87ad-dd1f769755b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3821486-7efa-403a-bbf8-55e620ce85f1",
        "cursor": {
          "ref": "9a6eeff7-2135-48ff-9cba-8b9df3c29870",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "da29cf9f-2293-46a4-ac9b-7f0e39474a56"
        },
        "item": {
          "id": "a3821486-7efa-403a-bbf8-55e620ce85f1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1f2dc5ea-2573-4406-868e-457c957b382f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed445d7-2e6a-438e-bd1c-9e2d055a1487",
        "cursor": {
          "ref": "9a379f31-8b79-4760-a5f4-950c1f92cc61",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "22752732-fb2f-4ad9-b41f-f33e8b8458e7"
        },
        "item": {
          "id": "8ed445d7-2e6a-438e-bd1c-9e2d055a1487",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1ee56650-d381-4539-a256-cde235386b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1278490b-c0cc-469d-8fdc-27b8bf4133da",
        "cursor": {
          "ref": "5a62b89a-2a16-44a9-9459-1b39e3bff5df",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "766c03ee-820b-4a4f-82a2-ec2f562bbc62"
        },
        "item": {
          "id": "1278490b-c0cc-469d-8fdc-27b8bf4133da",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b6c3eff6-0da3-44ef-b234-a8862adb437d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934b2a15-2aab-4c6b-9c7b-315998095371",
        "cursor": {
          "ref": "91944095-2b6f-4daf-80a6-422cc2ac49d1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5ce6a76e-918f-4d75-a13d-7b08a2477c8d"
        },
        "item": {
          "id": "934b2a15-2aab-4c6b-9c7b-315998095371",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f005e725-44a6-4c35-9a17-32159fa52cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc2aa2d-f6d3-43be-a6b1-84f11a8ff37c",
        "cursor": {
          "ref": "4616a6ba-fcc3-416a-a423-de7ca19e670a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e6507283-61f4-411c-b906-a9764f073497"
        },
        "item": {
          "id": "ccc2aa2d-f6d3-43be-a6b1-84f11a8ff37c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dd6b479a-34d1-4616-bbb4-fed8d98a40a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f96c032-5061-4012-baf1-e39ee94248dc",
        "cursor": {
          "ref": "a4fd196f-fa67-49ac-8917-1cfb1e97b0b6",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "133977e4-0fb6-4506-8afe-efea9face738"
        },
        "item": {
          "id": "8f96c032-5061-4012-baf1-e39ee94248dc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "785791cd-ed3b-4c70-9323-2af01ec87b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee007f0-6fdd-42d0-a997-d0e079f1ad09",
        "cursor": {
          "ref": "b2d1c1f1-bcca-48a4-aa02-ba7ada32cf3a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dded5776-2833-497d-9cd5-d8c556d14633"
        },
        "item": {
          "id": "cee007f0-6fdd-42d0-a997-d0e079f1ad09",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "44796f2f-b7c5-407e-b8b3-a69e8292972b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7582e7e0-95eb-4212-9c6a-d926c324c5a7",
        "cursor": {
          "ref": "65560aa3-94b1-44dd-bb05-c23b44552431",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "145e20a8-470e-4547-b0ce-b17bbbce94bb"
        },
        "item": {
          "id": "7582e7e0-95eb-4212-9c6a-d926c324c5a7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "35331c8c-b384-45d6-9c94-4436a907c946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194f5809-ab8e-4b7e-9b63-9ee6f19931b4",
        "cursor": {
          "ref": "a0088cf8-58ae-4df7-9692-7eb708946281",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "50060e71-3f49-431c-94e0-779fccb17667"
        },
        "item": {
          "id": "194f5809-ab8e-4b7e-9b63-9ee6f19931b4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5c966d7d-5465-48d6-9807-06794d7b1176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee7cbb0-c05f-4049-95f9-3cabe46018fe",
        "cursor": {
          "ref": "477093f4-276e-4232-895a-11a339d46275",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cf552d07-5262-4ec0-aa5e-f696f3584875"
        },
        "item": {
          "id": "9ee7cbb0-c05f-4049-95f9-3cabe46018fe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "257ea764-c085-4c43-8846-6089d1552d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50cfc14-7275-4164-a7df-011cb6b7260b",
        "cursor": {
          "ref": "718ddc7e-1148-44e9-a7f4-682e0afc3bc5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "eaeb88f1-e91c-4937-8eef-a42242a1f5a9"
        },
        "item": {
          "id": "f50cfc14-7275-4164-a7df-011cb6b7260b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "002aee8b-1938-4a49-b06b-23e673bbc4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494c3b81-e392-4446-92f3-8cb1a272e8e6",
        "cursor": {
          "ref": "929d7951-ed3e-4a4b-b8a8-2b692be5e3d7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a87ad07c-d0c1-4e59-8f96-c7d43b898ad5"
        },
        "item": {
          "id": "494c3b81-e392-4446-92f3-8cb1a272e8e6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f1a410a6-d2c3-445a-95de-fd5b95ff6103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf9f481-b6c1-483b-b3cb-f2cbd06bc2cc",
        "cursor": {
          "ref": "7828d776-8d47-4cf0-aa1f-046eb5efdd07",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d3983387-fe26-4480-80aa-42868595cdbc"
        },
        "item": {
          "id": "1bf9f481-b6c1-483b-b3cb-f2cbd06bc2cc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c05604e7-8415-4436-a89e-30635c63d554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c74d2d-53d6-4348-8064-db0e0c71906b",
        "cursor": {
          "ref": "0f86caac-0804-41f6-b138-2a4a0cf632f5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "05b3b81f-7ad9-4032-adf0-eecd7feef261"
        },
        "item": {
          "id": "26c74d2d-53d6-4348-8064-db0e0c71906b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "685b138c-b6fb-4ea6-ad54-4a194803bd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6799ce1b-9288-456e-9571-111dd584e985",
        "cursor": {
          "ref": "10599e3e-1b31-424b-9feb-98f7ca2a8f74",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1c5563ae-65ef-4eb7-8a2c-06dbc8082f48"
        },
        "item": {
          "id": "6799ce1b-9288-456e-9571-111dd584e985",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5dc60bb0-c9bb-47fc-904f-16d7aaba1871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67f9657-bb1e-4070-8e49-6a5ac3b15bf6",
        "cursor": {
          "ref": "1ae47159-7ab8-4755-b345-f659cabdb866",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "273b9c21-c366-4089-a1fe-2cbb91cf2f11"
        },
        "item": {
          "id": "a67f9657-bb1e-4070-8e49-6a5ac3b15bf6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f137ab3f-b828-4509-8bdf-7c29e079210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9487a33-bced-4c70-bfb6-63e27f5dd23a",
        "cursor": {
          "ref": "7d959c32-bdaa-4447-a827-2f83071e511d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5217e585-f210-47f9-bda8-72004ffe080c"
        },
        "item": {
          "id": "c9487a33-bced-4c70-bfb6-63e27f5dd23a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "66dc467b-e5a9-48b9-8bef-6000de4cd8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e6e3c0-dfe0-48fc-b3ab-d79d58497808",
        "cursor": {
          "ref": "9a4ce7ed-8068-4185-afc8-a929c80b45c3",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e2bb9b80-5eac-46ab-b1a4-304d46986325"
        },
        "item": {
          "id": "17e6e3c0-dfe0-48fc-b3ab-d79d58497808",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7035728b-ffcf-45f2-860c-68eabf3a304e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de5da48-cb48-4d78-a340-b22bd1a45241",
        "cursor": {
          "ref": "b6c07270-c6fd-44c0-899a-780996405034",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "32f54322-7ef5-47ce-82f6-03ff4e92f85d"
        },
        "item": {
          "id": "2de5da48-cb48-4d78-a340-b22bd1a45241",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fc3aa4be-e9ed-4fe0-9c54-bf10918035f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b900f9f5-6e01-45ad-bc70-a34240f2ed82",
        "cursor": {
          "ref": "f3615980-bf68-4162-9bc2-8a46c077c734",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4f3bfd76-8fed-41d6-81fc-1a8443e385d0"
        },
        "item": {
          "id": "b900f9f5-6e01-45ad-bc70-a34240f2ed82",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "14d21828-74be-473c-975f-d8d92bef4cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cbffa2-6ff8-4efa-ae39-7b3a4966dcad",
        "cursor": {
          "ref": "8a9acfb2-579e-481d-b76b-3ca3986bde97",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c4790deb-ba76-4a2b-b8b2-1139725c372c"
        },
        "item": {
          "id": "e9cbffa2-6ff8-4efa-ae39-7b3a4966dcad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "85c57599-fe7c-410b-ba7c-a81c417c6669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc09a8dc-1a86-4685-8f6c-63952753b458",
        "cursor": {
          "ref": "cef34ab9-a633-4ef4-b413-cb6d58ecb1b8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "502609f2-f7b1-4fa4-a23d-1c97ec9aa04e"
        },
        "item": {
          "id": "bc09a8dc-1a86-4685-8f6c-63952753b458",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b77a7920-717b-4163-b21f-3b3e81a22091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae75739-5690-470b-a678-d220a7b27514",
        "cursor": {
          "ref": "b18a6276-dc58-4076-b215-e00b666c8885",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "aa2f15d3-e5cd-469a-ab9a-bf032925e1f2"
        },
        "item": {
          "id": "2ae75739-5690-470b-a678-d220a7b27514",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a8744282-4f66-4fca-a228-3cd26709d640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29df9204-a817-4661-a6f8-adaa059f1f79",
        "cursor": {
          "ref": "0e763498-9be2-4b4a-9459-00f5a7059175",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "31c61e23-ca1b-4061-9b6b-be97eba3e5a3"
        },
        "item": {
          "id": "29df9204-a817-4661-a6f8-adaa059f1f79",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c31cc02-e5d9-4e38-a68a-6537fb898bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf59608-aff3-4bc0-928d-8e77c748f57d",
        "cursor": {
          "ref": "63e72db8-c24a-4b91-8ed1-5ff058a2ec14",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "be2cf2d7-4dc8-4e1a-90c7-6bc1a2088f46"
        },
        "item": {
          "id": "baf59608-aff3-4bc0-928d-8e77c748f57d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cfb43eaa-f138-4528-9a58-b9147988bbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d2630d-98f5-4547-a487-10ed698443c4",
        "cursor": {
          "ref": "9b2bc397-0a56-4dbe-afc7-f64b7938382d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a22b45b9-0b9f-4124-b1b4-87185b3450f1"
        },
        "item": {
          "id": "e9d2630d-98f5-4547-a487-10ed698443c4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7a6ccde4-3401-4ce5-bd71-d2940ed1b8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad1e2fc-2c96-48c1-a235-68964a2310ae",
        "cursor": {
          "ref": "22234d28-4a28-4a36-ada3-6c6050cd554e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "accb325f-fcc9-419c-a56e-fcec22e7a2a4"
        },
        "item": {
          "id": "aad1e2fc-2c96-48c1-a235-68964a2310ae",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "05f66deb-7a94-489b-aecc-c670e53ba805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4d1339-e350-4578-a98e-1fb4066d035e",
        "cursor": {
          "ref": "244b6856-cdd0-4878-a96b-4e574cfd3c52",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "92107cf5-fc1a-4168-9b11-a8dcad8f2175"
        },
        "item": {
          "id": "3f4d1339-e350-4578-a98e-1fb4066d035e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5f0e9e59-aca0-4447-af06-03e539f19bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5c843d-595f-49b2-a944-4f2a1e9007c7",
        "cursor": {
          "ref": "ce76322b-5e24-47d5-a1cc-bfa8e30d421d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dcd36c69-b260-4ae2-aadc-114fb5e65580"
        },
        "item": {
          "id": "7f5c843d-595f-49b2-a944-4f2a1e9007c7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "877be17e-e650-49b9-b187-567bf0df0cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9931ea8-c412-4ad6-884f-77dcf010701f",
        "cursor": {
          "ref": "9cb16712-0d68-434e-8ad7-4a848d927c5d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a96fdeb6-50b5-4518-95d7-aa746d81f8be"
        },
        "item": {
          "id": "f9931ea8-c412-4ad6-884f-77dcf010701f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2fb520ac-409f-41f7-8ff9-990fee09f111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728883cf-a82f-4f9b-9349-afded32533c3",
        "cursor": {
          "ref": "dbac277b-8946-4bfd-ab32-52d1f48abdfc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6cf97bf3-e83f-4b0f-8c66-d3f001f26f7e"
        },
        "item": {
          "id": "728883cf-a82f-4f9b-9349-afded32533c3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "64755f09-92a0-47b9-a8f0-c60e7090215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea046a0-a5d4-4e89-b13a-35e17dd1d953",
        "cursor": {
          "ref": "a08cf6b6-1276-4570-b597-6f53aeb9bbd0",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e73831ef-7dfe-4f78-916a-b6a70022015f"
        },
        "item": {
          "id": "cea046a0-a5d4-4e89-b13a-35e17dd1d953",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3fe00288-48a6-44e7-bfa6-66a3de9864f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab67391-b63f-4e10-bd94-0993d9b36ea8",
        "cursor": {
          "ref": "8758fcb2-1464-4965-afee-4a19a79ed677",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5925ba0f-c90b-40bf-90d9-cb7d83faed48"
        },
        "item": {
          "id": "1ab67391-b63f-4e10-bd94-0993d9b36ea8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1b56de1d-6dcf-47a4-a4df-da8cec4b63a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c689a9fe-3c12-4c4f-b8e2-0fe177b35b0a",
        "cursor": {
          "ref": "8f72ca00-1a6e-4346-9273-8d72b71bdf96",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d2ede77f-49be-4d51-973f-3a9ee9a7a3e9"
        },
        "item": {
          "id": "c689a9fe-3c12-4c4f-b8e2-0fe177b35b0a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "11a58997-e8c2-41c5-b3c6-0efc68dabe23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e6cb2a-0025-4d9e-8341-bf7ad5a76318",
        "cursor": {
          "ref": "f96086b8-5d68-4967-bdc3-ecaef185b214",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e2c8b994-6520-486a-b004-3b7828b8f7c5"
        },
        "item": {
          "id": "f2e6cb2a-0025-4d9e-8341-bf7ad5a76318",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8c5c86fa-0854-4b9c-8fd0-76e19e718dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445cc806-bc60-4265-9eea-fd5971e60ce5",
        "cursor": {
          "ref": "cc671b8b-1d9e-4a94-9ae9-318c9c4e28ec",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8ebe1a15-c9d7-47a0-a8c5-9fddb4be8def"
        },
        "item": {
          "id": "445cc806-bc60-4265-9eea-fd5971e60ce5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ba12b7eb-e857-405e-8b16-f83fcea9c3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea443370-7c35-4e93-b423-20afbf162607",
        "cursor": {
          "ref": "be846557-3322-4e9a-a5ed-22aae46664b9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b77e575e-697c-4279-a182-a7e7c446492b"
        },
        "item": {
          "id": "ea443370-7c35-4e93-b423-20afbf162607",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "014daf9a-c459-4969-97f4-8a62e4d8f08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b93a2d-e15a-4103-932a-973a266af220",
        "cursor": {
          "ref": "a0b24ea1-65d5-47b9-87cb-003c994bcd86",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "46c71bc9-ad0c-4ae7-91af-f0526435701c"
        },
        "item": {
          "id": "92b93a2d-e15a-4103-932a-973a266af220",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "67524ac8-521e-462f-9612-d2647b0da858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d56512-edeb-400c-af53-e32d90b3f5ce",
        "cursor": {
          "ref": "7da4b142-354d-4d9b-b4fe-aa8a952ecf5f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "56eb2774-e1ec-4f31-b259-4efcfc4ad4c4"
        },
        "item": {
          "id": "63d56512-edeb-400c-af53-e32d90b3f5ce",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "482725de-4f4d-453e-986a-d76331402126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf69a1e-51d7-4b36-8c6e-e7b1d3b2b26c",
        "cursor": {
          "ref": "195e5287-df86-46aa-8ac5-15e233bd4efb",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "31835712-bba3-4013-ad3f-d9b1b5a9e907"
        },
        "item": {
          "id": "edf69a1e-51d7-4b36-8c6e-e7b1d3b2b26c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "847d17a2-1f2e-4431-9c82-02ffdc9a8934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5538e220-4af2-4256-aa3c-0b381ccd0b57",
        "cursor": {
          "ref": "a1d21a52-731f-4d51-a75e-42ba27cf2f2f",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "912b5956-98c1-4169-a1b9-4a9c23140d10"
        },
        "item": {
          "id": "5538e220-4af2-4256-aa3c-0b381ccd0b57",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "18cc2a4f-1509-4573-afdb-e3f58cf355cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13710bd6-0243-4e77-85d4-2b13dc366c9c",
        "cursor": {
          "ref": "c3189068-45e4-454e-af8d-ff10691bf360",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e7f2813a-05e0-4600-a5f8-6007e977882e"
        },
        "item": {
          "id": "13710bd6-0243-4e77-85d4-2b13dc366c9c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9eccafac-373d-4e0e-b7af-481caa1658f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db58e90-df7b-4055-9913-1fc4cdae684a",
        "cursor": {
          "ref": "d4a0927b-8a84-46fe-8184-f425bb0d6cfd",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5506d11d-96b8-4d1c-9309-dc019fb0672c"
        },
        "item": {
          "id": "8db58e90-df7b-4055-9913-1fc4cdae684a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3850f490-dc3a-41c9-a75d-788bcdc02c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f36550e-5e7a-4318-8967-1dc4f89ffe38",
        "cursor": {
          "ref": "127d47b0-84a1-4a52-b9f3-7d9f6e6e5286",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8e29986b-340b-46b7-9361-b046f9bd3e4e"
        },
        "item": {
          "id": "8f36550e-5e7a-4318-8967-1dc4f89ffe38",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "adc6fe72-9178-496a-81e0-5ba324e211fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b9a256-7e54-4b9b-8228-7da464ab2d24",
        "cursor": {
          "ref": "d8074662-1011-4e3f-97f8-59999a54991d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "dcc56ac6-757a-4b31-9017-b6042ba3820e"
        },
        "item": {
          "id": "d5b9a256-7e54-4b9b-8228-7da464ab2d24",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bd111a79-ec24-43dd-85ff-25968d6b8c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8696ee-189e-4516-8dd9-d99a52561017",
        "cursor": {
          "ref": "30f4057b-5033-4023-a9bf-2005ae54c5d9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2daef6c0-61cd-429f-952f-e76d966a8404"
        },
        "item": {
          "id": "0c8696ee-189e-4516-8dd9-d99a52561017",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "89b10f50-4096-4aa5-ac4f-30e90e75f34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90308193-01cc-411d-b8e0-bd8dd1dfd5c5",
        "cursor": {
          "ref": "defaa7e1-67d5-424d-a624-cced54b25361",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8c98ab5a-5504-4e29-b5ee-97bbd8e305df"
        },
        "item": {
          "id": "90308193-01cc-411d-b8e0-bd8dd1dfd5c5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "22126396-0ed4-441b-bd18-a2197976ac2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d1f7a6-5c5e-4a4f-9455-edd42599e51e",
        "cursor": {
          "ref": "3b63b4ef-a12e-46f1-ad77-07d12285f139",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "59a5b8c5-af66-4bef-927f-a060734239c8"
        },
        "item": {
          "id": "c7d1f7a6-5c5e-4a4f-9455-edd42599e51e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e9f46796-a932-451f-ad22-9cedf71c6c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88747c9-9ccc-4932-8fc8-76ab39509070",
        "cursor": {
          "ref": "fa50473e-0c39-442a-8f01-2b547e5259e3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "603751d3-d95f-4d2e-a510-55d622f02f91"
        },
        "item": {
          "id": "a88747c9-9ccc-4932-8fc8-76ab39509070",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "71f02194-fa43-4cb5-8817-62ef1fdfb14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38c301d-7c47-4d70-9b3e-0dacdfff3970",
        "cursor": {
          "ref": "9913f843-c44b-431c-afa6-653bf46cfa84",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "65542d4c-bdc9-4720-b1bf-9f3e832b1148"
        },
        "item": {
          "id": "d38c301d-7c47-4d70-9b3e-0dacdfff3970",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1e3731f4-afd6-4c30-80f1-e22c307d18d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a943dab-1f69-4bb1-bbae-5c811e4d9fc2",
        "cursor": {
          "ref": "bcf5d224-319f-4e1c-a01d-953766dda575",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5213518f-190d-4eb2-8bb5-90605e767645"
        },
        "item": {
          "id": "4a943dab-1f69-4bb1-bbae-5c811e4d9fc2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "127f7e94-f056-4e2e-ba8f-8970b9ec7bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e024669-aed6-4cce-ba7d-ef4746fd3928",
        "cursor": {
          "ref": "425bd3d7-ec3f-4fbf-953b-fbfa7d691ca5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e7493276-ba90-429e-a0fb-95f22c1e08ed"
        },
        "item": {
          "id": "7e024669-aed6-4cce-ba7d-ef4746fd3928",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3d3230ac-f420-4551-ae7b-107843f9668b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ea3f5b-e05a-4000-bbb6-8cfe4b065752",
        "cursor": {
          "ref": "e160d037-23e8-45df-8f15-a2a64457f7f0",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6ec2a621-1e0e-4ee9-81b7-7ead4b9feb4d"
        },
        "item": {
          "id": "c7ea3f5b-e05a-4000-bbb6-8cfe4b065752",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3a3c0974-e54f-4e0a-9dd7-193ccb3b9841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a01a4e-d29e-4fcc-9f8f-886432958d58",
        "cursor": {
          "ref": "32d6f58f-c016-4e1f-b586-d7b55b1d2fd7",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ed7dd3cd-fe3d-49e2-b7a1-92123ceb9078"
        },
        "item": {
          "id": "82a01a4e-d29e-4fcc-9f8f-886432958d58",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3b4d1674-2bfb-49e1-a4f8-a3e298137a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66115793-2c34-4fcd-9b3c-15ecf32f4db9",
        "cursor": {
          "ref": "f6d6ec26-2b65-40f3-91b1-c464f3eccfcc",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "11301dfa-9394-4e74-9ff5-f09033e900d2"
        },
        "item": {
          "id": "66115793-2c34-4fcd-9b3c-15ecf32f4db9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "11ba080f-967a-475c-a2e5-4809307e0754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6c05e1-e32c-4525-b141-6c6b9904c43f",
        "cursor": {
          "ref": "b9777118-a59f-4df3-ac91-f88801a26eef",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "130e5812-e15b-4dd3-8a6b-eed45b09a20b"
        },
        "item": {
          "id": "cb6c05e1-e32c-4525-b141-6c6b9904c43f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7edfe239-68fc-4303-a73c-0fec3399cd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aed2be6-1129-45d0-baf0-eb92cca74447",
        "cursor": {
          "ref": "23114b3e-6563-4514-8533-20ccd8507659",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "407d5443-4a88-4b4d-98fe-52a4e8b6e59a"
        },
        "item": {
          "id": "1aed2be6-1129-45d0-baf0-eb92cca74447",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c9158618-fef3-4504-abad-c22ef9f6d2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d2ad54-a016-48b4-9661-722db9c48505",
        "cursor": {
          "ref": "499fbe34-6ab1-4f9b-a52c-5f0e5b2f5cf2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6dd1ffc2-8750-4029-a0ca-5323b3db4928"
        },
        "item": {
          "id": "51d2ad54-a016-48b4-9661-722db9c48505",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "93060ab5-f41f-4b97-b65b-030f082a9fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c9398e-692e-4fa4-87d7-690cbe80ff3d",
        "cursor": {
          "ref": "aa599797-4469-4a9e-bd6c-fd688c063c7e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bc9f922e-5bbb-4dd3-8be2-7550d269a7f2"
        },
        "item": {
          "id": "a0c9398e-692e-4fa4-87d7-690cbe80ff3d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4848fe19-4aa3-46ef-b604-602f757dc85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f49e8a3-1255-4086-98fc-970078db02e9",
        "cursor": {
          "ref": "fdb56931-a2b0-4139-a1a4-604b36ac97c2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6a260181-3662-4a34-8f06-60a41ee9fd2e"
        },
        "item": {
          "id": "4f49e8a3-1255-4086-98fc-970078db02e9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d43e9824-47fd-4549-bb6f-9d989a2b76bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ce070c-160c-416b-b109-49109e7a0572",
        "cursor": {
          "ref": "088266a9-fe0e-4390-a05a-71add4f06eba",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9e737607-0e41-4883-af83-30ff5efea7a5"
        },
        "item": {
          "id": "87ce070c-160c-416b-b109-49109e7a0572",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "20524bb1-0b86-417a-944e-4c41e542d7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b222fbf6-7580-406a-923c-a23cffd3d23d",
        "cursor": {
          "ref": "78391a24-1821-4a0e-9701-85d47d2cd9c3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "107cbb5e-9901-4275-8782-8377b89479e3"
        },
        "item": {
          "id": "b222fbf6-7580-406a-923c-a23cffd3d23d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4aea9914-a507-461a-9560-f9a5c5e04d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32db4a2-65e2-4441-a96c-ed9a1c97afbd",
        "cursor": {
          "ref": "b0412314-afa0-428f-814a-2432780493e1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1cc3816d-8328-427e-97e7-7441ac9fd356"
        },
        "item": {
          "id": "d32db4a2-65e2-4441-a96c-ed9a1c97afbd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c7da6791-a220-404e-b173-f8df27162f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b247963-384c-40fa-95d2-79c98cb66ea0",
        "cursor": {
          "ref": "30e337ba-1611-49e1-a447-8c609bf08969",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "236160d1-dac8-49c5-959f-ed95b7810d28"
        },
        "item": {
          "id": "7b247963-384c-40fa-95d2-79c98cb66ea0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e089887a-39be-4666-9e2b-0dfd3aa55b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf25192-6713-4319-b850-be53b0f4c9cc",
        "cursor": {
          "ref": "fd5802c8-fc48-45f1-a69a-cb33fc6846f3",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5efadf4d-73c6-442d-956b-80b55bc99535"
        },
        "item": {
          "id": "4bf25192-6713-4319-b850-be53b0f4c9cc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4726fb90-1783-4b61-a847-835efa9e88b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf5a89c-def3-412b-970d-d1be9c31400c",
        "cursor": {
          "ref": "f1478780-35e4-4d4e-bb8c-3622e88bd616",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9e0edd61-4051-4009-ad5e-2aea69e66910"
        },
        "item": {
          "id": "4cf5a89c-def3-412b-970d-d1be9c31400c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "481b2839-63a4-4622-9b46-5a1c072716e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2696a2d1-21b2-4a69-8c8e-93d6fe492be2",
        "cursor": {
          "ref": "f6c7651c-a5d1-47ea-8898-3cfc7f56417c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d31bd0fe-c6ea-4ac2-9b49-126484340c76"
        },
        "item": {
          "id": "2696a2d1-21b2-4a69-8c8e-93d6fe492be2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2299a6a0-ac5f-4a56-b223-0452a85deec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6473a596-fbf0-4d60-9dae-5f1c8d2fab46",
        "cursor": {
          "ref": "ac5c7ec8-725b-4b66-b486-eb0161b8d797",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "017fcdaa-6601-4f9c-87c8-89633d599d41"
        },
        "item": {
          "id": "6473a596-fbf0-4d60-9dae-5f1c8d2fab46",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "91259ca8-5cc5-432c-8f76-64e520b4726f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dbcc8a-6a3f-4abe-a984-f3c654a50726",
        "cursor": {
          "ref": "8d7451a0-c4e2-4abc-9e4c-89509aa09915",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6434b4c1-ceb7-4233-8997-c34d75d40322"
        },
        "item": {
          "id": "d7dbcc8a-6a3f-4abe-a984-f3c654a50726",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "49c6150b-c596-46bb-850e-1b696408a615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38d0cae-7a73-4e7a-bab7-aa638f2362d8",
        "cursor": {
          "ref": "b1805e6e-641f-425b-ab6f-ba03c4e5c93a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "46ee0a7a-5f24-43a5-98ba-2432522b3cfb"
        },
        "item": {
          "id": "f38d0cae-7a73-4e7a-bab7-aa638f2362d8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d1ca9d45-c54b-4b73-a734-08e8854776ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5011aa1-c648-4f0b-adc7-b1d9dca10043",
        "cursor": {
          "ref": "58236c5b-d1df-44f9-a784-0ad82c9bdb1d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b50c4c8f-fd39-4316-9f2a-3ac03ac1c77a"
        },
        "item": {
          "id": "a5011aa1-c648-4f0b-adc7-b1d9dca10043",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "84e6f3e3-1009-42d0-b1ee-b3926bf2af57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3df8348-8860-4302-a76c-a18904dc6f23",
        "cursor": {
          "ref": "f352ba80-e1ac-4fa9-9edf-0ef12045c8d6",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "92a758ac-cc8f-456b-b82b-03195efca7d6"
        },
        "item": {
          "id": "e3df8348-8860-4302-a76c-a18904dc6f23",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "21ebc873-3bd1-4f04-b49e-9d0a16587c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b950586-8859-4d7d-ae11-c7326dc7ebd9",
        "cursor": {
          "ref": "a5d95d89-477b-467e-ac6c-cccc5baf1789",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d98007e0-1d4c-4b59-bdeb-9c3f39007390"
        },
        "item": {
          "id": "5b950586-8859-4d7d-ae11-c7326dc7ebd9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4530b7ea-68a2-4578-846f-8df135ef0a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9e956e-b4f9-4c7e-a535-5726da7f2c23",
        "cursor": {
          "ref": "704f9d1e-3ef7-4878-b8fa-90680c82a207",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "23c03d38-6fe2-471e-8ac5-3bfb179857b6"
        },
        "item": {
          "id": "1c9e956e-b4f9-4c7e-a535-5726da7f2c23",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "26e23703-fcd0-4006-a345-062701933db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ff6d7c-6b27-4db1-b7b3-1c6fc6337c06",
        "cursor": {
          "ref": "97525c83-7fea-48b8-851f-7fd43fe31342",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5c8e39d4-58bf-4521-8c21-1ab27b0753c5"
        },
        "item": {
          "id": "b0ff6d7c-6b27-4db1-b7b3-1c6fc6337c06",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "32d7e720-1c49-4c1b-b14f-efafc7d1c873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece49752-be2e-485d-b6f2-b16b5f0073ee",
        "cursor": {
          "ref": "07b5f401-9664-418d-9082-e8e592a79c2c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0cf3bdf9-1508-4db8-8dfe-ad94f59bd21b"
        },
        "item": {
          "id": "ece49752-be2e-485d-b6f2-b16b5f0073ee",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6c57d952-6e1e-471c-8076-f87c15a58891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2063291-3af0-4435-91ca-52d467e1ad0b",
        "cursor": {
          "ref": "39dd612c-df6e-4e90-bc3d-0ef3aef07592",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ff80533e-3142-4d52-9110-620cab537422"
        },
        "item": {
          "id": "a2063291-3af0-4435-91ca-52d467e1ad0b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4d8a534e-f5ef-4652-969b-e604a4ab90d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1d3d01-8d3f-4a67-aeb3-7bc2c9805df0",
        "cursor": {
          "ref": "b3bca26e-1606-4ac4-b4cc-a6f400459898",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "14ff6f65-bd14-43da-9b2f-0e93d1780ae7"
        },
        "item": {
          "id": "7a1d3d01-8d3f-4a67-aeb3-7bc2c9805df0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2d984b9b-b546-4dac-bc27-162f5b8b97af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353232d9-7a06-49d2-8d3f-b1d91f35001b",
        "cursor": {
          "ref": "3cdf41ad-5e08-4e19-9469-c919b09a41cb",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4bd93d37-ba52-4608-b5c3-fe547d4ca69b"
        },
        "item": {
          "id": "353232d9-7a06-49d2-8d3f-b1d91f35001b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5d7dc04a-429f-4b10-94cd-d274c54c36a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34218154-5830-482e-b1bf-3788631630d9",
        "cursor": {
          "ref": "59c91a10-9985-4e98-a174-9b8acd050949",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e671893b-9544-454e-9edd-50329d6496d8"
        },
        "item": {
          "id": "34218154-5830-482e-b1bf-3788631630d9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "03026d46-1827-40f5-a086-fc713ba13779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d58f501-8364-477c-8650-9d03c27a87f1",
        "cursor": {
          "ref": "a8c6e85b-e392-4e2f-aba2-0d17cc55c2b0",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a0e77e83-8fbf-4fe3-9f6d-ebf4f92942fd"
        },
        "item": {
          "id": "5d58f501-8364-477c-8650-9d03c27a87f1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2f327f1b-c642-4176-afd1-f9d5b6af46b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9679d036-719c-4cd8-b862-0b861a76c708",
        "cursor": {
          "ref": "d793f3ab-0c35-4b84-962d-b775f69fb175",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4ae8b21b-8232-45da-8dee-f33a04ded900"
        },
        "item": {
          "id": "9679d036-719c-4cd8-b862-0b861a76c708",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "91271031-aec5-4e76-810e-487978820790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3e935f-0fa5-4475-be40-d497e5c93d75",
        "cursor": {
          "ref": "11fa6913-842d-4e65-90fc-61fb92d0c2ce",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "27fc1236-de9d-41f2-93ab-dcd3d35a4072"
        },
        "item": {
          "id": "3b3e935f-0fa5-4475-be40-d497e5c93d75",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f9ae581a-1155-473f-a776-46694310d67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7acbb1-e5fa-4419-84d0-fbf85659272d",
        "cursor": {
          "ref": "29e0f41b-f1c5-4bc7-94bd-602b184aea86",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "477c175c-ab2e-4e28-947b-bdf3f72a204b"
        },
        "item": {
          "id": "9b7acbb1-e5fa-4419-84d0-fbf85659272d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "41248e58-d736-4074-b45c-9b799180a352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbc212f-2b48-48c3-b99a-3b73e20293a6",
        "cursor": {
          "ref": "be789541-a37a-4c05-8f0d-fb44eac1a4ca",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0fa36bbe-4cd3-43bb-8d12-10403396aafb"
        },
        "item": {
          "id": "8cbc212f-2b48-48c3-b99a-3b73e20293a6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fc495c89-0760-4a71-9986-92c80df16249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c9cadc-d9d6-418f-ae91-efbd291103ed",
        "cursor": {
          "ref": "b7d05a39-7bd0-4acd-9100-faa3c224ce8f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6290567a-0fbd-4f0f-8f3a-fe26af1d6039"
        },
        "item": {
          "id": "a3c9cadc-d9d6-418f-ae91-efbd291103ed",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "139577ee-f7a6-4c68-8c5b-20d3f55b5f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5c0a05-47ca-4466-862a-77bb8d9e49cf",
        "cursor": {
          "ref": "7aa7e156-8bda-4dfe-b453-47d75b1defb0",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "18a760e6-405e-4744-a630-579a94a3ea36"
        },
        "item": {
          "id": "1b5c0a05-47ca-4466-862a-77bb8d9e49cf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d46d364f-2545-4bc4-89d3-fa6aa82287bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7636ba5b-247c-45c2-b32b-757d64126958",
        "cursor": {
          "ref": "f34cd7b4-912b-491e-b54c-c6fc392df72b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "850c5b66-98b0-4b76-83e1-2787186af05a"
        },
        "item": {
          "id": "7636ba5b-247c-45c2-b32b-757d64126958",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d7f7e0c5-2249-4749-9a48-47800b6d57bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee112abe-7d16-4199-ad8b-730510f46629",
        "cursor": {
          "ref": "a2dd58fe-4b05-4e1f-808b-559a03109aec",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ba6de90e-8564-4cf5-8823-ab8da5c4fc8d"
        },
        "item": {
          "id": "ee112abe-7d16-4199-ad8b-730510f46629",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cc635c2b-aad1-4eb7-9979-0f3ba9eb99bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d51965-436d-4947-ac0c-4af2c941b6a6",
        "cursor": {
          "ref": "4f0e4734-3186-4dd8-929e-ad5b1ba350bd",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8c441976-4b8a-4e17-b9e6-ceb7c8e4ac20"
        },
        "item": {
          "id": "35d51965-436d-4947-ac0c-4af2c941b6a6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d981f92c-a179-441d-9dd9-4dc5806cf8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcbb106-fbe7-4aea-8cd1-c8a3249dc316",
        "cursor": {
          "ref": "b7e122c1-1ee2-4f59-b2ab-acd14e7fea77",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f9ac205f-7f73-4154-bcdd-9c98a573e6c6"
        },
        "item": {
          "id": "bfcbb106-fbe7-4aea-8cd1-c8a3249dc316",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3d1c3682-66fd-4505-bf8a-c8839fed9521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706a74e0-98fe-4d50-931e-4801b71463a3",
        "cursor": {
          "ref": "70172f02-482e-4a12-b86d-bc962d189bfb",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "71f13202-61c9-42a3-9243-10f945f7ccc7"
        },
        "item": {
          "id": "706a74e0-98fe-4d50-931e-4801b71463a3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "500c9b61-f69f-4e06-8543-477d3fcf7c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8193087-f194-4154-b171-4940bac5c23c",
        "cursor": {
          "ref": "c7d3c9e2-9a72-4a24-b7fc-8b106834f704",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ad56e2a7-d92c-4894-8230-1b5b2902b0a5"
        },
        "item": {
          "id": "f8193087-f194-4154-b171-4940bac5c23c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "36826dd6-27cd-4714-b84c-330333f173cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d42927-8395-48af-b0f8-d067620b97d2",
        "cursor": {
          "ref": "b3bc2f61-0f0b-4bf5-9353-3ef6b8e65a7a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f327bcb7-901e-4666-98ee-8350423f03a3"
        },
        "item": {
          "id": "43d42927-8395-48af-b0f8-d067620b97d2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8aaa81dc-c96a-4aae-a388-1d922d2167d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a50566-cd5d-4933-99a3-f33ae6242daa",
        "cursor": {
          "ref": "7bd2fdd1-a811-4586-bbde-963a76584203",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fea799ad-cb3c-4b4b-8890-91c3261dc581"
        },
        "item": {
          "id": "20a50566-cd5d-4933-99a3-f33ae6242daa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e5e3cdd1-3164-4ae0-9cce-445d0215df4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492e32fa-2785-4434-9058-aa657453666e",
        "cursor": {
          "ref": "a9d423b2-34fa-4a70-881e-d90411a8093d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0ba942f1-18dd-4b30-923d-499cd0460ff6"
        },
        "item": {
          "id": "492e32fa-2785-4434-9058-aa657453666e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9fd647ff-61e0-4e91-8ca4-84bb533e1452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e36675-f3cd-42fe-a79b-f6166d2bd6a3",
        "cursor": {
          "ref": "b1a5602f-f10d-413a-bbc9-86f11d290c1a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "63a8464e-e2c9-449b-b156-1dee2cdd5687"
        },
        "item": {
          "id": "b6e36675-f3cd-42fe-a79b-f6166d2bd6a3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "68f32409-0ee8-4261-b1f3-d84254eb14cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da33757-6a4e-4140-8fb9-9916399c085d",
        "cursor": {
          "ref": "5d6d4479-462e-4306-ab84-b96a2ecaa415",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "105c188e-2b68-42c8-a4e0-bd7af5fb4e45"
        },
        "item": {
          "id": "1da33757-6a4e-4140-8fb9-9916399c085d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0d4f190c-11f9-4378-a1ca-d513dfa2533b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca65127-0309-4506-bd2c-5d2ab65b4b7f",
        "cursor": {
          "ref": "ff68754c-2fd8-4800-979d-af08e37101a9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f21c2573-c371-4602-a15c-b4a5006e0b81"
        },
        "item": {
          "id": "cca65127-0309-4506-bd2c-5d2ab65b4b7f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6c05ee74-c132-40d9-b4ba-fd5c0dd0aa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1e9d49-820a-4627-9183-cadf199c8036",
        "cursor": {
          "ref": "10a4f8cd-673e-466d-947c-07bf5190a566",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "947f8f5f-c698-4498-833d-06c4faff857e"
        },
        "item": {
          "id": "ed1e9d49-820a-4627-9183-cadf199c8036",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c17bfc22-b008-47f4-8cd0-b6a7b926cc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8a2509-417e-4186-86e2-c01ec148e661",
        "cursor": {
          "ref": "3717ef5c-ea53-4793-836b-995c5ebb3ea8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d8fe4eb6-b808-4c4f-8bde-ccb006a79b7a"
        },
        "item": {
          "id": "8c8a2509-417e-4186-86e2-c01ec148e661",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1f47ab60-fa2e-4fd6-8a0a-b7ae5df73730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29264000-a4d3-4110-b96b-2477603b99d9",
        "cursor": {
          "ref": "cc19ec83-45ff-41f0-91f9-4320bb8fd1c5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d8672401-c046-4f47-a6e6-f6fc8a6d52ae"
        },
        "item": {
          "id": "29264000-a4d3-4110-b96b-2477603b99d9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dee7d443-2e59-4487-b0f7-ce5e9996415d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f91962-557c-4dcc-976d-e4c1aeb8296d",
        "cursor": {
          "ref": "4ae00997-2191-439d-ad19-48e81ad02819",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b22ab15-6e78-4599-bcfa-e723a42ec9c3"
        },
        "item": {
          "id": "88f91962-557c-4dcc-976d-e4c1aeb8296d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b0269ebb-2101-489d-acb8-2a4ce6694a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3644561e-c1ae-4ecd-90c4-980815c5a78b",
        "cursor": {
          "ref": "e6994746-0614-4e26-87e6-64360f72ab27",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "144b997d-9bfe-46c8-b79d-891096cb2202"
        },
        "item": {
          "id": "3644561e-c1ae-4ecd-90c4-980815c5a78b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f3ff1964-ee2f-4130-b2e1-025c7697a698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731da021-f4df-4b26-bf84-5e7090540ce6",
        "cursor": {
          "ref": "a4f006c3-7a00-4774-bdf3-cdd35e5bd125",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0ad6c6fd-50a0-4da6-a1dd-b5ea7f4851f1"
        },
        "item": {
          "id": "731da021-f4df-4b26-bf84-5e7090540ce6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "076d6cb5-aa4d-4323-8e01-3edaeefebbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c610a1ec-dc63-43c2-a4dc-4a4f1630b19b",
        "cursor": {
          "ref": "ccff6c3e-7a6a-498d-9924-415003d77df6",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f03d2b18-ff0c-4ed8-8e32-e295f5d4b0f5"
        },
        "item": {
          "id": "c610a1ec-dc63-43c2-a4dc-4a4f1630b19b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "10085b7f-214b-43f3-9085-ad2627425569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0004d13d-7a42-426b-ba44-2ef90faf0167",
        "cursor": {
          "ref": "a6221bb7-8df7-46cd-9577-6951ef496fbb",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7b77b779-85fb-4e1a-8844-39a6b3f22042"
        },
        "item": {
          "id": "0004d13d-7a42-426b-ba44-2ef90faf0167",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f7b07593-b7d3-4792-a62b-493f05ea7280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2ff2a2-941a-4a77-b92a-49b2100b07d6",
        "cursor": {
          "ref": "8e83625c-4972-4ff4-8931-1f3681022431",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b666ef65-fee7-47fd-a0ba-09ef82141e18"
        },
        "item": {
          "id": "cd2ff2a2-941a-4a77-b92a-49b2100b07d6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8b5c9df8-2439-4205-a10a-a9c7dd1b98ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda9be0e-dc2f-4c14-9b90-78fa79be24ea",
        "cursor": {
          "ref": "a035426d-04df-458a-9846-0d7edbe65146",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e90f4605-edf6-433a-b89b-979ec4b693fb"
        },
        "item": {
          "id": "dda9be0e-dc2f-4c14-9b90-78fa79be24ea",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1f848f98-cc41-47cd-950c-a1c7f0a9b5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d5e8b8-4fcf-49fc-bee3-76d0ac8cb2e5",
        "cursor": {
          "ref": "ec349e81-d591-4885-9391-d5105145063c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a044163a-ac47-41c5-9119-30c0d5eda745"
        },
        "item": {
          "id": "86d5e8b8-4fcf-49fc-bee3-76d0ac8cb2e5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c009b9b9-a756-4b73-8dd3-410e017b8674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a0831f-d123-49f3-990a-fc18c8d048b9",
        "cursor": {
          "ref": "fd68e0d2-7e31-4fbe-a110-bed9aa7ab92d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4a7329c8-06c9-483e-ae75-df7a29c35349"
        },
        "item": {
          "id": "14a0831f-d123-49f3-990a-fc18c8d048b9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7b85e435-1919-4f08-87a9-dc853fa836f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d43d17-ac05-4d8b-85ab-a2135f5cd72e",
        "cursor": {
          "ref": "d08060dd-ae43-4866-a9ce-6fa836abc8dd",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9f58e8b5-421f-4a70-bc34-b01578bbd907"
        },
        "item": {
          "id": "51d43d17-ac05-4d8b-85ab-a2135f5cd72e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a9943e10-f6db-4371-b9b3-926e1937b0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965bc6d6-1925-4427-a3ff-187cfddd197f",
        "cursor": {
          "ref": "9b5cb3df-65a0-4b73-8fdb-0805c89fe5bd",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4bae8996-04f1-4df6-a45e-1dbd11042aa0"
        },
        "item": {
          "id": "965bc6d6-1925-4427-a3ff-187cfddd197f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "91245bd7-7ddb-4978-8e6b-bddaea90f627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab292bf-ed2d-40f3-88b4-d5a690766407",
        "cursor": {
          "ref": "0e376e8b-b05c-4c0f-b317-d386364b12b0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5f3b104f-9cee-4993-bd1d-a33d752563a4"
        },
        "item": {
          "id": "7ab292bf-ed2d-40f3-88b4-d5a690766407",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "eb97cc96-fc49-4a72-881d-4123974aaf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d994b13f-8047-4164-8aa8-41dba1530506",
        "cursor": {
          "ref": "ed69f7e2-6186-40b6-ad14-ff3ebc4fc0d3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "039bc991-0226-42c0-9e11-74e530b52732"
        },
        "item": {
          "id": "d994b13f-8047-4164-8aa8-41dba1530506",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "42b24d6f-3590-4b65-acbd-c7f26db3bb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47938935-b5e5-40b4-9af2-4c09222a8301",
        "cursor": {
          "ref": "59735434-66a0-4b62-9841-56519619f275",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1ebb40ea-69aa-4da3-a447-1e33b21ab2d4"
        },
        "item": {
          "id": "47938935-b5e5-40b4-9af2-4c09222a8301",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a75ccbfa-2175-467d-8ad0-66264991b0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2aa8a21-11cc-4693-97b9-799dfb71fe72",
        "cursor": {
          "ref": "c0b57987-0c99-4c57-97b4-810957c4908a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a98b8c33-c8d7-47eb-b4c7-7a3e1d3f6b4e"
        },
        "item": {
          "id": "e2aa8a21-11cc-4693-97b9-799dfb71fe72",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1db056cf-06dd-4190-add5-fdd1b34b3597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bb207d-9f5d-46bd-9373-719c7160d4b3",
        "cursor": {
          "ref": "c3c87410-fa35-4567-885a-bc048ba2500d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5a5671dd-b5a4-43da-a4f5-dbd58293b599"
        },
        "item": {
          "id": "39bb207d-9f5d-46bd-9373-719c7160d4b3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a274f86b-322f-4870-8bf3-11ca29a45337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5a8e9f-f6f8-42be-bc94-f5f1afcfacd9",
        "cursor": {
          "ref": "bdc29aa1-b6ab-441e-9180-f65377837307",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d55b8d8f-c397-4bd4-a025-fe3c8ee8ea10"
        },
        "item": {
          "id": "db5a8e9f-f6f8-42be-bc94-f5f1afcfacd9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4c207124-23e0-42df-9096-8c8c5d344bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7272c7ca-82ed-4e35-b0f0-3e6ece50f754",
        "cursor": {
          "ref": "894e9287-4da1-4d2c-b881-c2d760c43fe4",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7d9f4f38-e366-4348-9756-04eddbf2545b"
        },
        "item": {
          "id": "7272c7ca-82ed-4e35-b0f0-3e6ece50f754",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4689d65f-0069-4a69-8fba-2d871c32c36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b4c6e5-7d97-41d1-be98-748255f64572",
        "cursor": {
          "ref": "87acf1eb-2a65-4ad3-90fa-410c76932f05",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "276a6122-235d-4dc2-ae80-d93615c8a40b"
        },
        "item": {
          "id": "57b4c6e5-7d97-41d1-be98-748255f64572",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "30568bf0-4496-40f5-9a9b-ac890790f597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9462d862-c4ed-4a26-8b76-d11ab3c6e42f",
        "cursor": {
          "ref": "d1d45852-3960-4cd8-b2b6-d39fc2e0cf6b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9c5f6cf7-6801-4e3c-9190-728528503760"
        },
        "item": {
          "id": "9462d862-c4ed-4a26-8b76-d11ab3c6e42f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ab8bbc62-ae5b-45d4-8094-6e8ca9095ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992ea9d4-9eda-4c1a-bbea-9ca78a7b0779",
        "cursor": {
          "ref": "eb5232ab-8d73-4015-a009-df452697fc83",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "42de962b-e854-4930-848e-e86e388dd252"
        },
        "item": {
          "id": "992ea9d4-9eda-4c1a-bbea-9ca78a7b0779",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "93c8e1ef-cd0a-4b5f-95f5-610196e595d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b486b6-73c5-4f0b-8223-398df9d07ef5",
        "cursor": {
          "ref": "651c314c-6b17-4fec-8ab7-90f3c820f5d1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c58f738c-1d3d-4aa1-98d0-c0cc7056c219"
        },
        "item": {
          "id": "c3b486b6-73c5-4f0b-8223-398df9d07ef5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "432edbd4-ccdd-4b48-98e6-d6a03b6b4701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87a8f1c-b8be-4a12-9d54-d7e3ff594324",
        "cursor": {
          "ref": "d444637c-4542-4652-b086-4e0216cab9f4",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "20d22409-a071-43fb-a390-0210d4f3bccd"
        },
        "item": {
          "id": "a87a8f1c-b8be-4a12-9d54-d7e3ff594324",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e22745ee-e925-4eff-b814-3b2a69c41562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35eb78e8-f06c-486e-b30f-ed53ad4aa698",
        "cursor": {
          "ref": "6bd41c01-01df-4606-a732-4df2f1443781",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "28ace92d-8109-4ada-8273-362a32eb0c2b"
        },
        "item": {
          "id": "35eb78e8-f06c-486e-b30f-ed53ad4aa698",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e4a690d2-8f48-49d5-8524-e48fb1df3519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794a74f2-3ba5-4b44-8241-eed1b0732b69",
        "cursor": {
          "ref": "bf9cbde3-b86a-481a-aae0-75bd5127db4b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1c0a91f7-a10e-49b6-9131-f517c6de69e1"
        },
        "item": {
          "id": "794a74f2-3ba5-4b44-8241-eed1b0732b69",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e8aec86f-64ed-4175-b8aa-696d16d44ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c7aa22-a4b9-4d43-9be8-77003be8047c",
        "cursor": {
          "ref": "8c332ee2-ccf1-40ca-a468-ecbf6332e1ab",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "222a5ee7-e94e-4db0-94e9-6fc5b34934b9"
        },
        "item": {
          "id": "69c7aa22-a4b9-4d43-9be8-77003be8047c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "15e1bc2c-91f2-49dc-8a62-3441a13b0280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a9e49e-453f-4b6d-9b31-4cd2bc6fe3ea",
        "cursor": {
          "ref": "52effe77-fa85-4628-8ea9-e491db9427f5",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0737d58a-2a65-47ab-9a98-cc4a4139b462"
        },
        "item": {
          "id": "15a9e49e-453f-4b6d-9b31-4cd2bc6fe3ea",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4f27aa7b-cb7e-498e-9d11-af8b71151a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb18d97-cfc3-4459-8ba3-b7051bf566d0",
        "cursor": {
          "ref": "d463c33c-09dc-45f1-8084-14005e93a05f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f5e60c4a-8cf0-4b0a-bf1f-62e31ac1ab28"
        },
        "item": {
          "id": "0fb18d97-cfc3-4459-8ba3-b7051bf566d0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9a94bedd-d27c-4505-812c-d6bd8c74a1e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c59b525-103a-4ef6-9813-bd2fe5d8d18b",
        "cursor": {
          "ref": "4a98fb08-2674-41d5-94da-a5e5287060c6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7725b29c-4351-4ca7-a478-d71e369fee32"
        },
        "item": {
          "id": "1c59b525-103a-4ef6-9813-bd2fe5d8d18b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "99a16b46-db09-4ffc-8f4e-edaf22d1fe49",
          "status": "OK",
          "code": 200,
          "responseTime": 2330,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b508378-c37e-42e0-8cd5-4a8de3b530e9",
        "cursor": {
          "ref": "fc99a164-ea0b-4f3d-bab2-986a108f98ce",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e55e2c3c-cec4-48ec-adf5-80f60b9ce0e5"
        },
        "item": {
          "id": "5b508378-c37e-42e0-8cd5-4a8de3b530e9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "053d4645-a86e-45ca-a1ca-7c249fd36cf9",
          "status": "OK",
          "code": 200,
          "responseTime": 2886,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba01b87-ce50-4440-814b-dec91f230e4a",
        "cursor": {
          "ref": "8697a107-70b4-4148-9bfa-5dd53f8c4ab9",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "49cdc842-e742-4648-b503-e40a9b24db46"
        },
        "item": {
          "id": "eba01b87-ce50-4440-814b-dec91f230e4a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "178c90e7-a1b7-4622-b16a-fe89c7562488",
          "status": "OK",
          "code": 200,
          "responseTime": 2544,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefd8e2c-9b57-4aac-8292-9e36b0cb62b4",
        "cursor": {
          "ref": "8a855032-b973-40dd-8ebe-3b3f72145f81",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cec8428a-3567-4962-8aab-a68bc916037f"
        },
        "item": {
          "id": "eefd8e2c-9b57-4aac-8292-9e36b0cb62b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "feff6e3a-f482-483e-ad28-4a59f8ccd175",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefd8e2c-9b57-4aac-8292-9e36b0cb62b4",
        "cursor": {
          "ref": "8a855032-b973-40dd-8ebe-3b3f72145f81",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cec8428a-3567-4962-8aab-a68bc916037f"
        },
        "item": {
          "id": "eefd8e2c-9b57-4aac-8292-9e36b0cb62b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "feff6e3a-f482-483e-ad28-4a59f8ccd175",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa52d7a5-7272-4dcf-9292-f1c46cfae75c",
        "cursor": {
          "ref": "9ca406bf-9555-4165-9211-8127de42b86d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f9c62b9e-cbc7-4074-9364-64756c484a96"
        },
        "item": {
          "id": "aa52d7a5-7272-4dcf-9292-f1c46cfae75c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d2f8d4df-dcac-42db-9630-65fc7a478985",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aaab237-4cde-4fdd-a1cd-6b905319dc91",
        "cursor": {
          "ref": "f8de0d8f-af98-43e4-b874-34e2bdd0ad9d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bab54375-d3bc-420f-9ed2-de1f3305ace7"
        },
        "item": {
          "id": "4aaab237-4cde-4fdd-a1cd-6b905319dc91",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a17cf2d0-6646-4bc8-8390-8ef8fc8450b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}