{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3401ce0c-61b3-4f54-8a97-06e850811581",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4693389a-9e5d-4d23-95d9-4e82091ca1d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac072e3a-615f-4004-96b3-8961b6b59b95",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e2880541-1fec-44c1-bd02-09000b3d62cc"
                }
              }
            ]
          },
          {
            "id": "704cb35a-8918-4c93-b707-dc683ecbfaed",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "786ad45d-0267-4cbe-9187-7864a432dd3f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "edb80e2b-f41a-4372-9cc0-728b0b58906f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7b2e47a3-acd5-455d-9870-1ada5c3aa0a1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e34f5e0a-1c17-4dcd-84f7-1fdd5d916a99",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e965ecf-d1d0-418a-818c-9f6ebd54465b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cba1f1ec-5139-4b3c-8105-de663868e99b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b9baf8e-f137-4cdf-a9cf-c67716f98714"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd205507-550f-4aa7-8e2d-4b43d51e753e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80b65595-3ec7-4f2e-8a85-ee4fa179f391"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "28f4a05d-7635-4bca-8789-0f32366d190e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec3f5c72-10b1-40f8-958e-74c5331640eb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba26c010-e072-4ba7-bbc6-0cd40b7fe9b3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4e83ce01-e836-4e7a-9d41-e85c9d3eae8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8e35161-3942-4f94-aa2a-76adbce446fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "617e19c8-14ba-444c-99d4-db6d8eceb174"
            }
          }
        ]
      },
      {
        "id": "4123a8c3-549a-4082-b0aa-c0ed733e8eb1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c55d3441-fc16-4a75-8f79-3e5a814a5208",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebf5f295-3170-473a-a624-94bc598b3ae5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f411ff26-a5e7-4e40-8fa1-2d8dcbaecfd7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b9a217-8ab6-4ad6-9e9b-ea5af8dcaf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b4efd4b-54e6-4cd7-a2f6-12d583625663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55246ff9-8128-4bc7-ae43-bf49ea3f7471",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5a6ffe-67cb-4f86-a756-29f442090d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10c7e212-4a74-4a57-b823-eb7c10f619bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edccaf07-bd4e-44a4-abd5-626bfb2257a9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a31092a-6796-49fe-8b9e-ec064f61c589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d296364-bf6c-41d3-8884-7a7488831313"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04f79979-bd35-4643-ad6b-5e959ba4c937",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05bbccd7-6cf7-4345-a7ed-640a6a33c80c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0024f8df-a7ad-4ceb-bd65-826038b63da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1f0ecd6-5684-4490-8071-0d3ad971a15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0738a350-f821-485f-ab4b-209eb39f492e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6238f2a0-1719-4f30-979c-755485cdfeff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e25d5ff3-4cc8-4d68-8b2e-48bcd11d34ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "613fae27-f2a0-4626-bbbb-dd741d5d35d4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4005c3b-5311-4736-9d8f-2aa14b339f83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d36af206-e596-41c7-88e7-d8437416635e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfbd7953-b9f0-4709-95fa-f3ff039875cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "37e19ac1-c786-4b96-b517-0583f52e3cd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87bdec73-04e1-42a9-b3a3-fc3119bef652",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93a074fa-550b-4242-b3b3-ab8265be9527"
            }
          }
        ]
      },
      {
        "id": "5cebb72c-5a87-4bfa-8b63-7753e9b2e35d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3e427064-2c8c-4128-bfe1-8b81008cdbb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b437ed11-7fd3-4f6c-8487-557f427dda6f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b3b21cb7-8938-41ec-a363-b2e252cfef8d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fd38d3-72ca-4e48-ba80-5be53e3619c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9828afb-bfb8-489e-8939-7c6c0ca0b487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a7e269-aa9e-44b5-b4cf-02f6f13564d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff5c2817-8304-4362-9322-a1628ad35ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6179b8-b418-466f-9b38-b619c3251ad2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a901b07-c56b-4da6-b05b-22d59e760f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db75cf95-4593-4e46-a570-9e042ec728e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48975260-fda8-4d4c-a2d4-902c695f0a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47d8f5e3-5e2e-41dc-845e-4d55e168c82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb9fad2-c06d-4f59-8d47-36cf33d2ab7f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b331e20e-162e-49db-a68a-16e7d7eadb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e0bdfe-dd0b-456b-a6b3-5b619e97834f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c73c78-98e7-4dc8-8957-de7d1d02e10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dfa6584-d2ee-49c8-95d7-543b5074890e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96559f3-11d4-481e-9b45-44ecc371d607",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535ea05a-8fd9-4412-bdf2-db730586120f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a311fe87-c680-47af-beaf-6089f83b2a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa3611c-5429-49b9-bd1d-98059031c71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e00b7c73-76ad-4fe1-9f41-57ada66391f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0c0b14-e2b1-41ef-8c27-48d0fde6cb00",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10b0ee7-400e-400e-b87c-25399775be5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5b1a99-d191-4450-86a7-fa585982601a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1456809a-cd28-457c-a637-57e3c703f7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "399ec976-43b3-4004-894e-6896b2663a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedff7c1-7c5a-4472-81de-02ee5e151f0b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468620f3-3947-48db-9341-bec8003744a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0514d83d-c522-4cac-937b-18e5ed30cf48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eb772a-1f23-466a-ab41-19bd0f327192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dfed2c1-eea0-413b-aefe-bda836731d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e0be42-aac9-4d9b-b89d-e209425c7a57",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dd3f24-d03e-4adf-b77a-5f2ddab4384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a724d81-4a7c-4700-a447-464956f40d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59b56ee-7143-4ed1-99ed-ba8bbe142c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26ee5a4a-254a-4657-bd72-9eedda9d887b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0020118-d81a-47d0-b7f8-9a506b3a0046",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb8d166-2147-4210-8c32-20eea9ba9cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0070bb7-3a0a-439e-95cc-dbe7fd27bea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a563124b-4c80-4de9-b479-f14e7f3904f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c15b81f6-3161-41b4-8028-51a0ebbc0701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8a5e6d-6320-480c-9249-d48467f588a9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffce6ade-2b79-48de-b090-407322bef38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d8e90d-fd04-4858-a323-f52bfadfdec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be273850-9663-4f9b-bf86-a99ac6cb903c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e85b138-5bea-4385-b8ae-7d5a56ec2d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d005d55-eca2-4a7b-8917-c6b23f9848d8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95b0735-5ef7-4c5c-a5ba-537ac84c86da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756520df-5d75-4556-aa82-e25825d73764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6fa05e-3952-4d63-a2f1-7da0c9fe054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5b9b483-b22c-4fac-be6b-bc707ee71479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c73022-5ce6-415f-a198-5307f4739859",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2982d6f6-f43a-47d4-b85e-8afe03541650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6113c1-c6c3-4c1a-be14-38a4e2097978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3926125-fe6f-4817-a2b1-b21588caf663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54be4af0-aa21-461f-bdd6-33c0e93d4902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c54ac1-737f-4e69-8de0-46beb4cee8c0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36df5d00-a560-4659-a901-b562d5e802c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5c8524-ebdd-422b-ae90-327f9e23b2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1719ea6b-39ab-426c-a051-428c102cf99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53ff1e9d-a463-44ef-a567-7431d0f6741d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914414c5-489a-47ca-ac96-c8b9af5418b8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9027caa5-c508-45f4-9d56-2f8055dab752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491f37f0-89ea-47f9-9d66-f5309595e864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65b1953-6cff-4113-9a9e-149f124bd473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea4f48ad-aefd-4036-bda7-72fdff31b4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7921322b-7edb-4a59-b2d6-33510e4cee9f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23a4442-5b8f-4672-b212-53268bd5b47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83dfe2c-c5f3-40ff-aa76-cbe2027cb6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f3c479-7014-4745-b8ff-ef17e22d93ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e609399-6e15-4f8e-826c-e6dcf336cd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5715b2f-1b90-44a1-b583-1da5c8ea6389",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028b6435-3343-413c-b37b-b81200fbcbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1f3523-2602-4dcb-8881-604931abea3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b99adfe-d637-44ba-9337-4e4712f9226b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8461da0-e672-4718-906e-be8dc72f46e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae10292c-82ac-4fe9-b4fa-b6f11ffdc2e5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a9ff67-c6ec-4c7f-92d2-0e01df7a4d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696f5dd5-ebca-41bf-a894-231e9fbf5d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d19eaf6-d54e-476c-a9ec-9de2cda7ae3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6afb86ea-7d5a-44b8-b4ff-52a9b22c64cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d31c2b-c612-4cc3-8ba4-2feda7bbadbb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81cf8bb-5cf0-4c85-b4a7-6d77d96ced64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782835e5-8e56-4dce-b6b8-0cf6eb260a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6954357-f3b8-43cc-8ae0-45ed2feaaf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ed471ff-c2a4-4e13-80fa-7ff6fe666e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c492ced-fd56-4144-979c-a4f12c9ccef4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d89811e-f9af-4891-ad14-c444e737a8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b1f3a3-d6e8-4268-90e2-792f9559df1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118d774e-db25-4bca-a95f-df482fdc0318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb673e99-f624-4c3b-b65e-06bc10f26eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4285c4fb-366f-4f0e-8ff7-2a64ebc3faaa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b64aa87-1d8f-4188-abb4-c7d1482810a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779b7117-6cbb-4b30-a416-fa0a5128ebe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770e2c04-7209-4d46-95ea-152d3cc24b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "712e3559-d259-49a7-bb23-23b2a488765e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d257ec7-687e-4121-a92f-a81bd56b3cb8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6428d0e0-c874-428a-89a2-43aa139aa0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bc4d21-d0b3-4199-86bc-3d0fd5bbe399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb46fce-f69d-4737-bbfc-8493d21cef40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14bc2f9-9c12-4975-86c8-c2373e06d531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47951b99-9af2-4272-aceb-e33e0e3e2d14",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09580b9e-7449-4cce-8656-8efeaf69a9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c04742-844a-46d9-a0ee-cd0fd9e8e242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb12218-feaf-4130-b282-babbfe401702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0adf72-c11c-4f2d-88d7-61773cb533e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4380e19d-6231-4821-963f-1902eb558baf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e14130d-91a0-4166-9344-291532951d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5983004b-eb27-48fc-a907-aaaadbb090f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bc6e7a-d981-4b16-a0a4-eb28bece2730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1369dd40-6479-4762-84ba-367d1eda51f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216f020a-a1d0-42fe-be22-09f9c6e61ffe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f4a514-cbf4-47cf-9bac-651f3403eb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9c608a-9ae5-4b25-a15c-ef78417bfebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4902d29c-7065-4d93-b2fd-332e40f1653e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44f07aff-13ba-415f-99d5-bda0f2a0507a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdc01a7-d0e2-4390-9fd3-f0fa201f2979",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90012c9b-2039-4d64-8719-da42c2ebfbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dccf6dd-d7d8-42f0-ac96-26e662441842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72340698-e918-4438-9935-636c0e8bb23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "611d261c-3b7d-43e4-bf79-132d5bcb209a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8907c109-2427-42f7-a987-180587e10947",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe6932d-a75f-4cf9-8a7e-3af9f1258392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea38c101-5c31-47e5-97ac-0d7f7bcc5a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3645a76-c350-4bb4-a979-12a87c66d78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20fda0a1-f224-41ba-816b-91def9105c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c80944b-c722-49b4-acca-53a3a54ad156",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0e3405-58ea-4fde-bf5f-22247237777d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2926a23-8158-4067-bf82-895fd0a9f108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caa35da-0c6a-4858-a9b0-f5b1614c787e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f8178e-f540-41a0-b10f-64a14c4fd4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592f5449-2467-4e56-889d-334bc0f74b96",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a4b7b1-c0f9-4ef2-a7db-46c8f0603481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54d3b7b-9dcf-4a10-bda4-74a825da0a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6669fe7a-f800-4a2e-85d6-0bb1cf9b2df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b491ba26-f723-4263-9684-1b6584ed06df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f53e5d-b416-4d54-8125-36d6e5dcff18",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7a45cb-9e46-4010-b2f5-b1517afaaa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d1ba7f-f357-45c4-aba0-712b2f9157d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1643a03-b8d7-47c3-a6ca-ffe89fc69ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3284be09-a8ff-487a-b14d-3d132a21439d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f67ab05-407d-4020-a488-227eba7673f1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c2e107-b92b-43d7-bd1a-48b0385441bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa558aab-12bd-4914-9b16-f12dba57d445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a555717-1a10-4560-bc54-58d370829ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e82e18f9-a1e5-47c2-91a2-80eaed560ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6abc4e-9cc2-4372-b33e-f76259aadf1a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d1f412-4792-4e0f-a816-ede19110198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b52b3ea-cbdd-448f-963b-24322782ab0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a6380d-cd29-4a2b-9695-475f76fda4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "70f43163-6814-4438-8fd2-8ddc40dbdba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b190af-d064-43e5-8841-eaef3172e7ca",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8932287-9f5d-4921-801a-6e667b3fed6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99081937-0772-4562-a7a4-3edd83ac3bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cfe96d-87d3-448e-9323-a592be52beb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2527db-082d-46c4-add4-ede21d09c954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfe6bd6-f0a5-42b9-bf28-307869d64fb2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472a32a2-5b94-4976-982c-ae41f39928a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df71fd2-f50a-4eca-8b2b-bfb89822a747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31db768-bc6e-4ca5-b8ac-cdf891d80673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0617a4-7e64-401f-b461-f9b5e5eaeead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0d12df-c545-4cea-9faa-45799ff39a18",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e0f151-3198-4d75-a90f-eb125c304f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee081d9b-e6e8-415c-8cc3-86428e69f312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b207fd-558a-4659-9460-28cd0e8689f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a682364-746d-4183-a7b7-4a7cd9294c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1e45fc-aefe-4b53-bf25-f7cf1022e27c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944e969c-b90c-4a41-829b-f9d5f587feef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d3df4c-019a-4f7c-af9b-e1c29ee86d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69eceb4-dbf2-49d2-872b-4c00acec056d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d27bb3a-518d-4435-a376-f294f8d94048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0807d57e-ec65-4f40-983d-74fa8121e63c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b93508-f3f2-46c4-995e-a3bb29007720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b46e18-2ef7-48fc-a371-2dfe36dd3074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a818e487-5bbb-4617-a022-912a22fe26e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ddd665-df36-449b-9c80-1bc72bc0256f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc61b06-6bba-4b20-88fd-a80e21c6bc30",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ddc502-c6ca-4e78-a917-350e3b5273a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7ebdf45-84d5-40c7-97c4-49c3978164b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17fa7ae-80ed-4a5c-b967-0d38c9fa96c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fff72732-510b-4b41-992f-cd4bd74815be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19dfbab-5f4f-4211-b746-3e52d498f53a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2995f00c-4289-483f-aad1-fd8475d0443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556d4cfd-e688-4aac-a02f-38001ba99098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3188ef89-480e-44e6-a221-da235f236b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c75503d5-c305-494d-b489-74b9e83a1bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abee9d95-c8db-4308-8c51-b7190ff59f0b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e3b089-8783-4851-a5a8-108f1c60485d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5337db49-d74a-4051-95c2-f8c0e50bdc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd81056-47d7-4e9d-b8ce-979f4fca05c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7effd0b-52c9-4f06-ac93-90629ab75cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0be9a8d-ed39-4346-877e-f7bac8994ec3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2615d562-2ff5-4b93-aa71-1eb08047362b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef955087-51cb-4630-b898-b16806f97241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7574110-1194-4b77-a854-024d4427505a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "853d1bf9-cc90-4fb1-b186-188ea0af855b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb71fc48-e19b-4c97-bb88-da03a80ac928",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbc3b05-0824-4501-9d8b-b7fa8974361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396064ed-71e7-48ee-9c96-90e801df80c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a0a54b-5ea7-4910-bef9-31f4480b559b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca795849-1721-498a-8da4-745389fed9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c92fcf2-634d-4282-bee0-89e419be724c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4466895-d2a4-4f89-81d4-bf8f364076ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aeafde4-48ef-4a5f-9e4b-960004a29279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40da402-b068-4def-a8c3-354311aff565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5733b4f-fb2b-475e-a1a8-542b5ce47ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5cc8f1-64b3-44c6-b36a-318053f59f97",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47b47a1-54f1-422d-8e89-672172a66b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb87e43-e7de-443f-8611-71f8f34dddfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3731e0c9-d12c-43ce-98b9-5e349b716991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "195d3ed9-efdc-40c5-85f5-b1756238c2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17b9a2a-04c1-445c-8851-317d1a2da133",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c415439e-503c-402c-b3e3-a6efbe434be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cccf761-58e9-4661-a9f3-44e414aa5770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b2f4b5-2d98-49c4-84aa-c6a67c0423a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "854d3742-1548-4102-a625-ad3497c7cd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e42f02-0a2b-42d9-92d4-43fc83f19e1b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fe48c1-f51a-4084-abc7-8114bcf5f970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197145f6-6f5f-4927-89af-1fb8a3392ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055c9844-7aa2-4487-b2b2-350eaf01e436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "88910224-dd8d-4c9f-a2c9-7d461094ae84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f341b780-f2da-443a-896a-928b2b711f8a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23454a25-6061-4d01-a1e7-3ea913a3a524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359a792d-5ee6-4eed-a075-67865d139161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b1f27e-7edc-4059-9121-e872bd35e481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "722c7349-e392-41e4-a403-2dd6d5ba8151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8169aeb9-016f-46b7-a99c-bb3351921cf1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace68e10-c699-43c9-9de4-68ecf8ad129c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267e1cba-ebd2-446d-9475-bf7b2ae3aa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e50dac0-e017-4768-91ee-ff8bfacca7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a15c8c7-68c3-4c4b-9f88-5bee91b29c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c0bb99-955e-49e7-bc81-ae46a2ecfb7f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1768d860-c0a0-4428-9fe6-714245c29024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e768a3-b531-4b50-9d3e-43e5cc8066c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9d5b6b-5c56-4d14-a324-1a77bb68e8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73377da8-e5ed-4e49-966c-935b841a63ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe1d1ca-f2dc-412f-8a6b-e7b314037b48",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0c2059-a8ce-4b18-b25d-ea35bb83172f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989bc041-e068-403a-a40b-b54cc089f45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b76017-d46e-45b0-82c7-d8c0bbda2bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa5d71e-79b0-491b-ae58-bba37e58e471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9963d88-f1d0-4cd1-9e67-f1a2255c332c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6efb8a1-d2a4-418d-8807-838a96b74506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adc8972-1755-49eb-a036-3056d8840e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c80e09-f9a0-4c08-8c11-1ca3c16d06da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "421821d4-5105-43cf-810e-682ea20c1dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1123f34a-8726-4209-8dd1-aae83d925b9d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579020dc-3554-4326-a3f2-e53b323c2c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73441c7-f120-41b3-a773-cdc4eff56ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1103af3c-cb3d-4584-b99e-eeb2983567ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6081e618-747d-482c-87c6-92643ab23271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3957e11-5ca5-4b44-9f6a-97f6417de9d6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a260f7-5302-4d42-9cbe-8f50e6d0618e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5f9ae4-34dc-453a-8c6c-d802a90e28e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2eb487c-d137-41a4-baa9-047820dfc28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c07c43c-01ed-4a83-b8c8-e16dbaad877d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a916bc76-43e1-4bcc-bd9f-9b10c5027340",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9f18fa-e042-490e-a86d-bab9fadda061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eabedcd-13ae-4d37-af5a-a5895483a7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125e601c-8d30-435c-af2f-b5d53587e43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74c08c22-57da-4064-be75-3b2d810f16d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b805ea-4ee1-4ce4-acaf-df73db67a8c1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221b763b-5dd2-4916-ae66-2d3f40212a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5c2b06-93ef-4cac-ba98-f706eee12270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7098032-19c2-4b10-b5d1-3affb09cafec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90dbb609-b69b-4256-9d7f-8251e794e4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574c4897-c5ce-44e1-9b9c-26279822aba4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d74308f-35f9-407d-b3fb-e26416af02ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fa4d7c-4c11-4047-833b-02a52800ac73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd26a1f4-8674-43c5-9b94-c9698d903c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05b87cec-db5e-4cc0-8a7f-0dedeb2e91dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea8d443-efbd-458f-910d-5f905172bb30",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4bea13-eb56-4cf9-8a3d-cf80b100df45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1321391-cb75-4a43-a0a8-744d9e6eca53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7925e5ec-893e-4934-a4d1-27c2e8165ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8272f461-e9ce-48e7-8503-f47950bdc1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119bb057-e90b-40b2-a838-f5f92184090f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece44cf5-6d7c-43af-bac5-a48d155e8d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c2869e-429e-476c-ae5b-3f64872a8d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b891bc7-7bc9-46ad-8442-3e328f29c226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc0e52e-5e0d-4e34-a9c1-fddd5cc3868c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17117a2a-c311-43f4-8442-4a3d822cf7d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab992cc-ca36-4110-ba30-46f90407692e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c4e9bf-36b2-49f3-a271-c048c882a135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289b9a30-e105-439e-a7e0-1d3c5a2d2168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05f25654-e2d8-463c-be84-94115cc70367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee2f944-1283-4cc0-ab41-1a9d91a708fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc6c6a8-e5c3-4ab6-b351-f14853988852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4a39bd-cfd9-4750-8c8e-3f76ac0d79b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8c11fd-ec0e-41ca-90fd-8ca5996a9650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c80ddc87-2909-4be0-bc46-01f108935fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24208aee-6927-449a-961e-4d94e59b6a5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367bb2a6-14c1-4cdc-a418-e8342f01c3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1790b469-a3c5-4d64-9a45-220d11ed808b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5645a73-d39e-4212-93b6-56c5fca7efba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "453363ba-a544-464f-946a-b6ee3ffd9e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac456b29-00d3-415b-bae9-cc126746c47c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b161e900-e7e6-4c01-aafa-f1663df1d818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a554ef-7afd-450d-addf-5506ab2de069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6440463b-bd22-4d6b-8c09-e8dd1984d665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb03a0aa-87a5-46b1-bfca-ebebc7776c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1010fba3-1f2a-4722-b8cb-f740a0730f86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2e6449-63ef-494e-96cb-b7e38f44adca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46d82c1-a253-4f2e-9c94-e87d58611c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf429b9-2299-4db1-b441-1143ebfe174c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "424e063a-45b5-475e-b1b9-afa8df1a95e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c7ddbd-19fb-4058-8b50-931a8540be9b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ed0635-ac31-44a2-8dfd-1d5d09fbd7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e49f518-894a-4f68-a5a5-71c5530b060f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69f5de8-02fa-49b0-acb9-3614b8ca8466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e891de-1579-485c-add7-e97fe089a59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2282c5f9-7c37-47a2-beb8-859137f59111",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad7af04-cf53-43be-a83b-107a3b3d0503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc08d742-7d31-4824-b6b1-70ce832be55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb63fec-8e31-4dbd-bd4e-61bb598ed374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2ce5f8-8246-49e4-9891-f351cee3b08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4d5c31-9729-4134-8bde-ce61a1071229",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf764f8-35ae-4884-8d30-b70352e30282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c80b71-f618-4540-88d5-62fd0ab1024a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e760ca51-da4e-419b-87aa-5bd634b4c30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a028bbd6-ac51-4278-b5c0-4edc3f901ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88aadef8-532b-4055-be73-2669c251d8aa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac856390-fe86-4cb0-bab7-7c2a5d19d0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399c380d-63df-47eb-9087-186be9db4c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d973cf49-c553-46a6-b659-75bc27b21d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e95d58-d5e0-48aa-9113-6c779e226e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4416444b-fb0d-4632-b51f-379203e1dd9c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d9621d-8cee-4a15-9ab1-66b5fc6056ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1e78e3-d8fa-432a-93df-4add604bf07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e6cd07-f9de-4cc3-85a3-8142b2a0b88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7d37f3-1df6-4b6b-9e50-266456b0ce9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89d0f3d-f213-47b5-959b-024dabf078ac",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa5922d-e178-4a17-b428-ee679a716786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479be45d-c42a-4bc8-b3c1-7ab916133655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f482028-db41-415f-a0bf-b882cf1d1c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98432cd2-373e-4fa0-9319-dae0486e93a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba791df6-a74d-4b50-af1c-9d47ff2b0117",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bf9730-37b1-4b29-90d5-6390b3582a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56028018-0dc4-439d-8d27-33c23eef7d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e7df9f-1ef4-43e6-b5a7-b821802c8f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb9d0f5-65e5-4b78-ae59-31d874371b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b005dd06-fbcb-42d4-ae16-e2569b63ad81",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fda87c-536a-4b35-ab7f-2f525c4be8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f4c8a4-a5d5-4fae-a20a-72829434f4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be5c014-a0da-4a84-b884-443cea2c7eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4885a7-38a4-4ffc-b5a4-d847ec660d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c386dcd0-dfab-4150-8c23-ecc47dfd94ef",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da341c90-3ef6-4ee2-bb39-21cc4fd4c0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afaa442f-f2f3-4174-aa5d-a00ca33fa0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4feb6ee-1608-4b17-a445-7ee97d55aa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f713641c-4dcc-4628-87c6-8350359a6361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0f9d2b-6af8-4b6f-b55b-3f5790b18b83",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa6b72d-a0bf-40a0-a75a-b3152db252c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb903956-60ac-476b-b72c-58e555942040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fea599-2d01-4852-b2c1-257890eb1e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f149a8-b4da-471d-8ef0-a607b93a77eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ee6e32-ec71-4e9f-88bc-1e2cf1658a55",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329956a0-ac1e-4a65-9f22-895163163acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e85fd57-5df1-4c8e-b257-b95cdc5effc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba34ded-dadb-4f66-bbc7-06305803c12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c0df32-deb6-498f-a050-4169c44abd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800aa7c9-8ca4-40d5-8962-738333b31ace",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a315b0a-59de-47ae-b226-631aca7fc38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc47222-208c-48e5-b6c4-95453d8331c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ec0a00-edf5-4c5d-bdc4-8762f64b92d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee61614-8a07-42bf-8341-dcd99626bfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7a7678-f214-422e-a2e2-86d8c21ff9ce",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa03feb7-e309-49bb-8137-118c2453561d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc02e50-1617-4ded-80be-47abd707fbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed142637-1f8b-4992-b39f-d0d6c6bfec8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "321e96c9-70cc-4a9b-a9bf-e81dbd56ea03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de4e0a0-3c4e-42c3-9200-32265fa63bd2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadb4e2c-06a9-44e6-9d46-fd8aa039c403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3423e77-91cb-4ac6-9520-49a70a6c5d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce875705-48e6-4814-8ed6-99b37183ee96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dceb06-b1b2-42b4-8694-a2257eba5e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda7331c-2560-4266-b8ea-ce6f53ca94d4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340897fd-1c2c-4837-b498-a9ed8a998b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a4123e-4505-4826-8025-0d03a611afaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b291d8-45cf-4742-baa8-67b6d291c613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5786691b-343f-4337-8521-3e5afd2ade10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0b941b-d847-414d-8512-7278fc8e59a4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a93e1f0-8178-4eaf-88cc-9d9765fec280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d740f14e-7053-48d4-9ad5-c6d0347cd0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5045f2-12d4-4d2b-aa34-575f39930b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3c1f1c-69e3-4adb-8511-b282582c36a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b60465-b13c-45aa-8daa-54eb1a2e5c73",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52471174-031b-4bb2-9ee0-26b72e13b730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ac41f3-3a98-42bc-8ade-b64b1fcaa9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d63b3e-7e14-4e6f-8170-57c5b96018e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "850e1a39-ac5b-4ca1-a2a8-82ad154dece8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c702a5-3738-4e8f-938e-ec8a430a9514",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d55a617-873a-4c04-8aac-cc2f3381809c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859b4e52-a279-4d2a-a87c-2ac5f298c913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f3099c-613f-4558-852a-6823e794a0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0fb809-54c1-41b9-9053-b8abcf0d887e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6082f6-5017-441a-b528-17305704e7f2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af3deba-c89b-49ec-83ee-1fcc8d2ca005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67691c8a-d7ab-4ba9-a6da-6ed2afb3beb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d2154d-663f-48b3-96d3-dee89fba1b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94b1d282-281c-42f9-affa-b849e05ab4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ec555d-d14f-460c-a8e0-bfe2385815e3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25359489-f794-4be3-be17-53767401e3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7e3cdf-1691-4908-b7eb-32bdacef75d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195b3cf7-ac4b-4592-ace8-b480f0c0c1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e978b159-2f03-439e-9b76-d5cb84f545f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab76d5eb-baa9-45d3-acc4-addfcdceb676",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b767f010-c608-4980-ac3e-9b8fc8b2b092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539f5401-bd0d-489e-8d71-495bf0659541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214b3bcd-8421-455f-a18a-2a43fc8d3d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2257abe3-4509-4db5-be05-a79bdd67e3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbe7570-5929-4c42-98c3-856018063834",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61827da-7621-4983-a26f-e3bba4d5f0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63aea2fb-34b5-4cd5-8adf-d9c8ea88b6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30056e28-5026-45ae-868e-b87aca8c719d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d95f9d92-4dc2-454c-83a9-1b954cde1841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8784c2-6b6b-44e2-bdf2-2831967eedc8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea215d1-7d8d-49ce-bcf0-e75a8cdfee65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36780496-1ec1-402b-8f6b-794fcb1d97c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c740b49a-8ee8-4634-a6ad-5c620ca47a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b28f5a54-e871-41ef-947c-fbd1c68f3914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef599611-5102-4af4-a4ec-072588b9c0a1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b286f0-667c-4f2d-a6ca-0354373ec864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7cd08a-fc7b-43af-8911-26e193c0386a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54bc670-bf5b-484d-982e-a6f9c108fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74e138a2-2834-41f2-b89d-7f1c8ce3eb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0d5c44-6e1a-401d-861f-452317d78aa4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e428064b-cc69-4500-9f12-78384d32ff14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e3efa9-f4e0-4762-a4af-35380f9d3b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e840bfa-c8a9-4c57-9e39-b22a11bd2813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "290ca06b-d314-4e8d-a10c-d0c034dfca3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a51eba-76ea-4e6e-81a9-128de1bc9714",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30540394-0507-4de9-9c47-6393051db3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b453489c-4e26-463e-afdf-a51b25574bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf23544-8358-49de-aa2d-cae34849edf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3600af6e-91f1-482a-b520-72a2d5f07c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82715f95-c2c4-44ea-ac40-cdecf0893772",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041fcdb3-e879-43f3-b419-fd77386ddede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b779fe-5bf1-41cc-bdd2-f46f62196304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caefe5d1-718c-4d86-8c96-937b5253a741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ffa900-103e-4502-bf4b-a72c98f75e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bea15f-5d24-4eaa-b488-7bb8c99b3020",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1885da4b-2f0d-4806-af73-00ee9edf1e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66ae179-65dc-4e16-9e09-a3dc6b2d7e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe4d942-e74b-4173-8097-35d3be0c9253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8db88de-20a4-4b56-ba94-8ea0e4ee41fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd28a62b-5bbd-44d4-98f1-47dc3a57f593",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f9594f-e097-45d6-9ac3-8458277ee1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8628a1-4794-4933-bce8-488db439ba9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d07af0-b932-4499-8138-b2a85322f9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1840c7b2-5d9d-4161-b971-78ad09e35410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a84289-4051-4ecc-ab5a-be57f7879bd0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4f1039-ac89-4c5f-930a-1b311ee192f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9173dd54-b569-48e2-b14b-2ccbedd538e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc385bc2-9ab5-4fd3-81a7-7859c82ac002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "64928f7e-0941-4b57-b80a-1bc078a74fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc46f36-a443-4531-8d22-47b50c886d88",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2351c29-626f-479c-a472-f0fda1e51e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "37fc3065-c32e-40da-a5e3-c3e82b238a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2765b045-368a-4c1e-a994-9c8ca3108989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e93ead80-ca61-40f2-8a4b-ed50b862884c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9783a08d-9c2d-4dba-90b3-c1951f5c9049",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87076767-c564-4bcd-91a6-a1761f626fbd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3054a6e4-6118-4d6b-bddd-0516cc8de3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bea1f969-77e0-4932-ac94-4ec0cdf4fc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b251b62-b879-4ce5-aa68-f40add291c22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de6e7183-1275-49d8-b54c-0880ab1b13a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "559d813f-d2ae-4370-9722-15a40b699345",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5873a442-ce0e-44b0-8d00-f7415852a914"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7fedd16-384e-42e0-a979-2d056b1f0941",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14f5454b-30bb-445b-a2e5-390cd220511b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b9d2016-4c54-4c56-a616-9091ec12b869",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb92950f-d166-466d-b65b-ed98a8b0b83c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53d82be9-8522-43ce-8bb4-2850b8d82b8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77cf9339-626f-46b5-a34e-d62162cc4adb"
                }
              }
            ]
          },
          {
            "id": "9020abba-8783-4f12-9dfb-c2593ff2ff9e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64b0c893-0923-4790-a8ee-3fe2cb8743e1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ef11ed5-eb5c-4ae5-a389-f30fea2ac01c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67070bf7-9154-4ea9-a5ff-217e9fa18738"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "627eb711-8688-45a4-9d00-9747ad74fdd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4da865e7-97be-43f6-bd47-3190d81ef5cf"
                    }
                  }
                ]
              },
              {
                "id": "2c3e6564-6522-4ddf-b641-68de9388d5f6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cb966c7-e3fa-4a57-91c6-2b38589b4a30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b865743d-0aea-41d9-988a-f10299efd7a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc0295e2-458a-4b55-82e6-3fc9dd015e55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa5b58dc-30a4-4c0e-8ed9-2a9f442d44d0"
                    }
                  }
                ]
              },
              {
                "id": "08f055a6-c699-41ab-aa8a-64c1a68454b2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90149d92-97b5-43a1-be96-106c456a0840",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60a87161-3aa5-408a-8446-9b1e19df9acc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1376416a-c565-4cd2-aa36-212799a549c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1590d307-63f1-43f1-b941-8b895e46ceea"
                    }
                  }
                ]
              },
              {
                "id": "c7a65a67-12be-446f-8c4d-ba50ea94e027",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d093155-837a-4e58-b043-4e84a04f8dca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95cbb459-3be2-4528-8f90-113110ca6f8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dfb1dbf-0966-4586-87ec-353652ac09f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b83f3393-5af1-4c83-915c-cfc41b77e23e"
                    }
                  }
                ]
              },
              {
                "id": "cf3b1657-ab7c-4642-923e-0c81660d6df0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "720e0775-5b9c-4833-b19d-67478979965a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e66aebc-c07b-401a-bbf9-b7d0a2f97f99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f49e9ac-6fdf-41d4-8521-7e9e5164b5f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e44f13d1-e72d-463b-9cdf-cd4eb28c76f3"
                    }
                  }
                ]
              },
              {
                "id": "31175583-4348-430d-b2e2-c0c143e9c33c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2010b44f-1b39-4374-a01e-19155e3cfb8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0bc1132-38d8-4187-aaec-d163a3b0aafe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f200a62f-e704-40f1-895c-8b132df07eb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60f87538-3ec4-4490-a807-67794d804a5b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72749f29-44ef-4461-9698-58f45bc15e63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a99ff5ab-ee59-4bd6-a040-3f8b0140ace0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d8e33948-b5ba-44f9-8568-a3586b9119c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "675cc9ec-02b7-403a-9064-18e5c5399384"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09a0afee-4285-46ea-8d5d-2c61cb3e2b76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d0cc5b82-604f-4fbb-9616-bfa1bbae17f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbf19472-b394-4efa-88ba-c306e6fa5170",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d1ec22d-36dc-4591-b430-0c4eac73a6d1"
            }
          }
        ]
      },
      {
        "id": "7f8e46c8-b0a8-425c-a9bc-0082b2611a3a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ddb6b536-5c2c-443f-896f-3b6fe52c35ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de47e774-7d63-4287-9098-9b31438bc5fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2df11e6-62db-40f3-a1da-7484b4325a8e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1228034e-8bbc-4040-82b1-9a532ef3da86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448a9afc-060b-4163-a683-04f7bf918185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33acab7-d0d2-4ff8-b7f3-64c6fcf7d139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c597048a-261b-42cd-8abb-4e6bfba8d626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751da8f1-6bf7-4865-9019-aaac1b0e7e27",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e59e3c-9d2a-453e-bdf0-64c32e1a07b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a896736a-6193-4de0-99b5-01a6dbf355d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6149ec0a-bd40-40e1-8ef6-5b7d520e3ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1abbf753-19c2-4977-ae51-7075825968fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bb97a7-39dd-48a9-bc5c-19bba48a6e1d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e628e8-3978-43cd-8d60-753a74071260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c84abb-a06c-4766-bd24-d7dbe3a4b8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c312f696-bc76-465d-b77f-1aee631f804c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc84b07f-3582-4e29-adb7-4021ac45519e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce87d68a-13bf-4c36-babc-a4d99b61a107",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be8f600-1e22-4b3c-bed4-01249621f800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14ef600-0538-4ff8-b9dd-4dfba19f09c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f518d13-bb50-40a5-b74b-f90fe65e5f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0d7b65-26b8-4fb0-8470-825620856385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f398c604-c7c9-4014-b367-31eb966b2486",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fe4160-086a-409d-a92c-c11073adbe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9104a22-c3fd-4ae6-9ee7-92264f8036a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9549e08-c47c-42a5-a743-01c1914d4257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d53dd3-463a-49be-ab7b-2ae1f8dc1e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38a8c9e-5da7-437d-bcd3-433da0de7f11",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194b98ea-05c9-40b4-9668-d1af98362e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b767f8-d550-437c-b1ba-68034bbd0ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65573a8d-86c8-455d-adaa-548f9285bac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f76c88b-06b5-4e07-8e83-0ab5836e4f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2916c9-4e90-48d8-b3b3-4d67db0017ba",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f0f33a-a236-41bb-9e41-0db7aff80702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4eb29a-5231-4621-aec1-3c3feb640bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c461c7fe-f53d-486e-8d7f-11782dd6045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "da77d56c-38d9-42a9-ae4c-74116fb63f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd7285c-ee17-4708-86ea-654b6109c725",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c009d86-4ce5-41bf-8437-7ac21dedec78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085e2d70-d051-48bf-afb0-12ec2d37a51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6b8eb0-3d2e-44c0-a0dc-f9c3202f4e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b46001ab-5296-4843-a2f3-85f4fc2d75ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994049cd-d6e5-448f-bb55-5ee1bc84c7ae",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb515d2-9f5c-4c60-bf49-0687b3e501de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a5330f-0828-40ff-a3ed-6795e52d5c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e33993-83f2-4175-81e3-72b3d5b6108a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "454b8fa6-0d64-4f35-a517-f88a49226541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f0ed1a-f739-467d-ba0d-61ffe39bc7b1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f06c0dd-cd5c-4436-9744-6c0979e0f9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30866e54-2ad0-4622-b135-d1a8ffe94d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e75ff8-5593-4977-ad84-6a45c6526d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d9834c-ed0e-4f4f-b182-5164f363e146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cc55c0-fd35-455f-b84f-d276c1670795",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adedd8e5-abc1-46ab-825b-a46fa57849eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeaa0bd4-edc4-48ab-bd88-a15e67789f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc660b5a-42fa-4167-a7cf-d308a0943e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fab614b4-2e7f-49d6-8fb3-acbd989d9a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc42b22-240a-4bb0-88e7-54e3d3954d1e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371e2848-9589-48c6-a59f-b2c675e2bf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c4f405-a5ab-44a9-9d61-dba702a13a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003013c9-fb4f-45b1-b92b-7a34ce36d72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7feb4722-58ae-4250-9c7a-fb812d337a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39481f7-1a8d-42cc-93c5-4390d2765bdd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993bf39e-705f-406c-8440-972bf05010e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec3121a-13ec-487a-9d88-093dc54b876b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45539441-8f82-444b-9fa5-90d9883ae9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a01684e9-b57a-432a-829f-9c8f7b021a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31408f6-46c8-4ca5-b9a0-6c4da4d9edea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74464ee-8174-4516-a0b0-6f522c8f0216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3615fc70-8950-40c5-8eb0-aca103b6e996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f381cd69-e621-435b-9b69-cb3a00e25c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fc20dc-a7d0-4f6c-8a7f-f2722c545310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2bfae0-7027-48d3-9c4b-e37a24afc469",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2fe9e7-18f3-42b9-8565-2be362860fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d285a34-54c8-4a5e-acd5-58f9f8f410a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463c4bd4-f394-4653-98a5-bd442362e023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9944eab-944d-4ae0-9e95-b3277ab29fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90bf5ac-dd8e-423d-8e7c-dac9c80ebd46",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c151ffca-18a8-440b-82b2-230f35b84579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3492117f-8041-4dd8-99cf-5f60d9a6aa24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c513ad22-ce7e-4603-82c8-fac4719155f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4ff341-eedc-49c7-ab9c-9bcb2dfa5523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7837ebde-42bc-49d7-99e9-1635bd1b65a2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e1bb16-bc55-40ca-9c10-a38667c26f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e19241-8a7b-4069-b80d-1767da507df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57f7fbb-a077-47ad-8c29-a4e33b84d21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a581e1b-402a-4077-9107-762ba5f32739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e17cc1e-af37-4930-ac3d-452115cfd602",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03fd849-7706-4e67-82ba-61161a210664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabcd9b1-7e9e-40ea-9e37-e27943223ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d9e1a9-80f1-4970-bbd9-75762bd844df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83cb4913-fb08-48b5-b214-bce29ccf4ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630364c8-13fc-4210-89b5-9fd097eee46f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c3e47f-65ee-42a7-93d5-2db59b7783dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbbfd94-eedb-4ff2-a58a-887560072db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6351bd0-2f2d-4627-8b15-4dd0038c1578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee22867-754a-49e0-85fa-382214f7b07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2506cd1-bcab-4ebc-a6e6-0f2292889f35",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e405da6-78bd-429e-9358-c078953ca1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1734e73-de15-4432-9ed4-4f2721a1e9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e017931-019a-4acd-a8bc-a52e69f80f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e43bbb8-3a7a-41f7-b494-c35159620923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19994e3a-0469-4a9f-af41-6d18c2aa9d9e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8770272b-74dc-4b2e-8e5c-8c15ae0c484b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83792bd-e938-454a-9eb1-42d386a17652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cec85d-0125-4ffd-8dca-9a5d1cd419d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7338f5b-0c66-4fb6-8e72-7dfc4ccf115a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1538ab20-71bf-44bb-ba51-98f740a6957b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf791b7-a289-4b3c-8ca3-0f2896960d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de12c97-50f6-4efb-ba23-c558469b5245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7e9491-97f8-4912-a5fd-774dbcb3a73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "587a7572-c2b7-45ef-8d31-33bdf2b3a296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda5bc4b-1410-473d-9a32-ea541a6d8ccf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54ec8d2-dc20-4905-a492-12d9b7cd8c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c30bece-c173-4967-89af-4c89dd61a8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12301c8-1305-4909-bd2b-38e765f24716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0d7523-8a04-4985-9107-d6e825938809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674f41e3-2f47-4dfb-92ca-c8e9c649806a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d50489f-e495-40d9-9e5a-4a1bc8a5a9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30af2d9b-08cc-4b29-bd4f-543eb030efb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22fbb93-bf19-4b5d-a449-1f6f7a535e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f2db74-98cb-4c41-8528-ed6ccebd3546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc62b7d7-928f-4cb2-aa8e-4c7ea5af50ce",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386df7c4-8aa1-4f67-9310-8b36fcf42953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e7be9e-5b12-448b-aa0b-954922c67b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d742ad-d493-4ada-9c6b-83626eadedc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "480c828e-e5a8-45fa-94f3-6573ffad7429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4199e951-a83c-448b-b430-09332f79fff5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d949c92f-88b5-40db-9f0a-35d234c96050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566a61df-41bf-4a81-9bc3-934a2b7cbb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d53b4f-a70b-421d-a80d-c7214cb9833b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a59272-6b97-47c3-a464-bbd7cbdd1122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bbe802-4459-4586-8271-f2bee52d99e6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7c6675-06a6-4880-8c12-f579471b12fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed82b264-1bfe-4efe-908b-30d0e0942144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71003686-379b-4b1d-ad62-a7f7482520bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f6ac47-7131-40fe-976e-728a4f8c62b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6208a5c4-6a18-4c7c-93f5-dd57c9d14815",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17fa537-7ccf-4f4f-8b1a-31c92c59668e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd414df8-7f78-42db-ba02-c9cb5d805324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1664e0-8e84-4d97-89bc-9c89dce9b755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5eaeac-9a57-484b-bf8d-5396c344478d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c64b09-bdf5-4650-ab00-ba0281b14f98",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922c190d-7427-49ed-99cc-f2fbf25c5eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc70bb1-9770-490f-aa8d-506eac7becbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16719bd-2edd-4881-9d87-348625e13274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0c2449-6962-459d-8848-c1717e537a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5969bf5f-8ca9-426d-9692-43998d0a1c13",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585a420e-c53e-4e8d-8563-ee14929a9c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cce9a9-dd9b-4dcc-8038-384330bc02fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fc9564-6af6-4cde-b5c5-ad700afe9a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c382c5de-537e-4326-8719-32f8ac16f061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8842f72e-e669-408d-9f9c-ce7d8c0b4527",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8c8909-799c-470b-a813-df9f039f593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7eed12b-8b5f-42e9-9c13-b66f48e32a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814ecb03-fd96-4028-aa12-17662e3ea2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9d4f82-ff53-408e-a40e-3b5e8c1c3d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97851183-1f44-4f12-a3c2-0c0a8ed07f41",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa161a83-ac21-4800-a082-aabab47b8e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e6737e-795f-41ec-b22b-8667ab67b5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a16351-6aa6-42a3-b48a-8a0318dcf0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d2671b-25eb-4b33-b004-62fe81a09e03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a338220-f904-4b6b-aaed-f82d8940a2b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4996a8ba-6f34-4b48-ac21-23f1851c2a0b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e1c498-3db2-4587-b646-58802b0ec056",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3a92dd-eb72-4045-abf5-0d4110c3545a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15cf026-7198-4ac1-a70b-1ee7160b278b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78f6d290-f205-4782-8d15-ba181042c519"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ee1f880-5962-43f5-86b5-bad1855aa86b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d032a0b-b40e-4e4b-9026-a8ce11975266"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a431a58c-78f9-4f90-90d9-f7efdf7dc81b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11768f23-0f76-4294-9511-18ce8cb607a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acef0629-0ef9-4aa3-a193-0600d016d857",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e951c907-725d-4dd6-9d1e-120dde9d2da0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37e01e29-d5f9-4c4c-ae67-0ff2ae4937d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cae4dc6b-f861-4668-b67b-1d4062599db4"
            }
          }
        ]
      },
      {
        "id": "a436a8c5-f955-45fb-878b-2e9c46f27fa6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f77f2dc3-9cd6-4e90-98c6-68e65529eacc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bdc6a6e-3a65-44a5-b978-7c37242bc507",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0b8f37f0-a972-45bd-b8b0-b77f0d3feefe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a494a30-9201-4ef1-80e5-ca839a4951de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b17f7a-364f-4be9-9f1d-0f9f19284fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e69ca1c-fc96-4d0b-9d3d-00406872e62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "25dbd56e-c4c1-40f3-ae49-5e9cabc4f7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94902744-32cd-4226-a8d1-5d298883327f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff399794-373a-480c-8ab5-45450f095d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6620d4-28e3-4143-9b1c-0fb7a7c96767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be28dccc-63eb-4d23-976e-187f13405370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "968e996f-6eb9-46f5-89ce-12fac90da2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103a175d-5ba5-4b91-a9ad-8684086e44be",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb22436-af6d-4d35-b30f-261da3248155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1a2d6b-e4a3-4fa1-96bf-4176cccc2ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ffaaf6-5dc9-4bdf-afd5-05c9079ad44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e243fd80-7274-4e79-8b10-9494f7a31e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f78a59d-c945-42c8-bfa9-ceaa5e479968",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930af798-a78c-4d80-bf53-b580b7b9d775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988da355-0db9-4960-8fcb-000ffeed6a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bddb82-a93a-430f-9dde-bc588a80953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef72eef-9314-4ff4-aec2-13cd6fb13d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ff7791-99d9-4514-b999-8a57179d727f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568884fb-fb21-4d6a-b709-18d90992e1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93951dba-6292-477c-ab68-6622619b6b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4026483-75f4-47d6-8946-fd717517be5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af68bdd1-96bb-4a6f-b622-79a4dda6ba58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b410f9d-b9a7-4b09-92db-ce27c745326f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c7abe4-e310-43e0-84a9-9df822916791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a422834-b00e-4a21-a18c-66865ad904eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d6f9e5-3b00-4e12-a995-93492fd7d59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c72d245e-cc64-4aa3-9064-e135f98d5ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a327792b-9117-4355-a938-01d39ec2507b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef101bbb-3ec4-4080-9541-6c00bbd137a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f712a1-1311-4839-a348-16750ae3c933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac606ba0-548a-46a9-9289-a70a7ae5f90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdef9b6-9235-422c-a927-307020f82232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5770e1-ca79-46b0-b993-a2f5577a89ce",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dae21cd-7562-41de-9b45-34526b2d8544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637efdbf-59a1-421a-885e-30037a1800bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d637e7b2-c856-4ae3-b71d-bd5f13ea881f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7624aba4-6422-431a-882a-72f3c96969e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0ce06f-c237-4d38-8e23-fb04bcb4deb0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57c125d-8db9-4266-a56d-b632a00ac5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03eb18c3-0729-4534-a8b9-6e26bc29d451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30504501-46ca-43b0-b644-0b317052edfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a47604c8-2fc3-42b1-a140-c624409c62e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb067070-f62b-4b00-a0fc-cbdfa075cd22",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c87b517-01e8-422d-b928-aa081ef4ecf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de488df-5aff-446f-a187-a960fb1ca210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60165ec9-8b27-443c-944a-cbd80630c382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98ad2655-f2bf-4bf5-8cf2-9d05f60aac78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6a7612-df52-48a5-85af-04fe52fe1295",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5be1e46-81f3-4124-bfda-cf94b0d85886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a44842-0c29-4251-8659-a43f8e138dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ca6397-9e94-4cc3-943a-b274203a2a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "69a7aeab-f415-45a7-b75d-1a8a20019165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17795f60-6ab8-41e6-a642-a4539b63de0b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48979e68-5bf8-4ec1-b5a5-bf617baaa27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ceac88-5ba2-4190-ba58-d565ab1f02f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd7f927-b300-4a7c-ae9d-c65347e7dd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f61b04c1-81a4-426f-a47c-5543dd975afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68c4f6e-47ad-45bb-b28e-4b39ed1ca962",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa99368-74d7-42ac-ba34-bd118b12cee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327eba8e-09fd-4e1b-8a9d-f0416886aab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b004bda-dae4-46d1-898b-86cba8a8f34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d719d8-e5eb-4185-9302-3c63e2a8c290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6d1d11-d5b1-4941-b706-76194fed67d8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2c39dc-9793-4d57-bd5d-52093ff26f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed201c48-6428-4975-a4ec-da1a1ce8a889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bf74e6-d91b-4b76-9b33-dab6705508b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4baea1ff-7361-43ed-a73b-977bb6dda5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f1dc3d-19c7-4a2e-9309-de887fae7ae0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e8468f-6031-4211-82e7-6c877b5f670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5ded5c-f349-4102-bfde-4579e45c7fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63269d90-2872-4292-af93-1aaf19930b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e501f58e-7eba-47b8-96cd-c803a63b55ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b7447a-5cdc-4a64-ae47-5743f9f7fea7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cea4ee-df92-4e22-84ae-dd1a291ea205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26410bcd-4d08-4a33-a6a4-9eb1a8e77c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1518ba8c-9b83-47b4-9543-1f8607f8eeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "619ed3a8-629a-4118-8824-4e21081b1c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9162099-3144-419d-b609-4f595ad3d57c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6cafa7-d147-4938-bb03-ca189e0c5706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0980184e-7c1a-425d-a92d-1cea950a4486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e7ac06-6cda-4fb9-9bce-109314a46bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc41aaf7-7d5a-4378-a6eb-6d3052ce83f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c002db6-4907-477f-97c9-c1869a025824",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459b9b9b-dbff-435f-80cb-2eca3e26c272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f74034-36f0-4a4d-921b-1e4ba652a08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d3f58e-4f6b-4cd8-9dc4-fc2e43b2a2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af4e92b-f03d-4e81-8c66-f7123fb1e58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220f66ff-c053-46a8-a885-4cafb38eb620",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b505bb9-eb76-4fb7-a080-42efb0abad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f772041d-6b78-4f4b-b5cd-e5cda1d6a140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9e79a0-f1c5-445e-994d-ec271bb34a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87394c84-50f3-45cf-8a0d-a31626cfc66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea9f3ec-486a-4b33-a25c-fbbae1f9cc22",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa983f5-8fb2-4e92-a3b2-6b39c6c75675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f729701d-d49e-48b0-a6f2-dc99726d1e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349b60fc-dd5f-4d97-b9d2-db78ce2459ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0906eee7-e12b-4d15-a891-0bcbe09f5c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1586e8-1f70-4c24-a65a-88545030d5ce",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f29e0bc-5a28-4719-861e-ed9e4363644a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b651f9-d7dd-47e2-ba0b-e0aabd8bdd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c263763-2729-46ca-9c6f-97d01d3ccdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da541de9-0ceb-4516-a819-df8fb05b26af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1333cf-23e2-4e96-931d-31915bb593ae",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2238df-f25c-4810-946b-cb23b4ed7399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eeffef5-0cff-4a92-8cee-45c9e7bb5bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e671e555-1f50-4612-b403-f88f31848d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98baefc7-8abf-469e-a8ec-2d02c64dcae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4873f5-a3d8-43cf-9485-8f7b97770897",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f783af55-a07a-4f2a-8f70-7ab0ba03adfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71db3d85-ec03-45bf-b953-8b253cb1b5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7a956d-c98a-4dcd-b2f6-76d646da2f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cebc0dd-7dd6-4311-baec-9937a57beb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db52b20-bc48-4724-b273-3ec79664f044",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f9bc25-b0e5-4b67-812f-ccb105f4f918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f09eef8-c299-47e2-985f-3cd598efadac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240ffaae-58dc-44c6-a32b-1ce5e2cf8dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5c5e2d-70f1-4f06-acda-f32149a078ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28690efd-9aaf-4a73-95fc-7b593f306ff5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b1d9a4-7506-433a-b41a-0e49c554aa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23361845-2751-4546-a38f-b776b74521c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a911d4da-8077-4c92-ac4d-7f54b5084b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "396de9fd-7e52-4560-8c86-bc62a37fd9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850e82d3-8c4e-4117-af2f-b3d47bc8e747",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7290bf-f81a-4bc7-95df-f138e3dfaa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a621676-3cfd-491c-bd89-4f2423078490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5634555-6b74-4c45-960e-a768e09cb503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9264a74-6000-4075-876a-6b726e692458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d47f575-59dd-4311-9563-1b98d9833e02",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca181e4-7814-4d63-9e84-4d70218ba2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2bcd450-e156-497a-aba8-60f24b45b063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af891c5-1b37-4a90-9e26-898f17e3a2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7051be1d-460b-4e3d-9b38-63bdabe896b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a75a56-12c0-4a31-803b-1d0e257d1bcd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb95690-75f0-4a9b-98ca-c7718ef050dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed9a589-d630-47a3-8351-bfe0b722da1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1558fdea-ee2c-46a7-b263-afb910b4aed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f771f2-3c04-4414-ba03-739f288ab176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbb7055-faae-4095-b17e-0ad6fb2ceb6c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67358d69-4f1c-4319-9655-6134c26fd575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b13870d-0ddc-441d-9e2c-d8cd922aaef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf7e1c4-675a-4661-a3d0-e2bcf8feb984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06af9eb5-3cdf-4d46-bcb8-97dae25aa836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97b108e-4863-42f6-8e60-1ef43e3753d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b4fa8f-f0a0-473f-a823-99af336cb410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172f70c5-9d83-4687-9b95-1e66d8cb3057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f071caf2-a073-465d-b9b9-b55574c079bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86099b5c-e7f7-47b7-a726-22c085e2f4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb71bea9-0032-4775-8096-49da2ed56b17",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82e1faf-4a00-4942-a087-6e0ba5045964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1633872b-4237-49c5-90ae-9f4c0bd3a9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a9aae7-be92-48e2-9314-ee295d653f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaace9e-032d-4d48-ae0e-efe55f82e0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed59bcb-f3d7-43dc-88e3-6cac1323140b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef3ee9b-eb71-4642-9289-c524c679f46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52f238f-119a-4aea-9547-f051b6e635f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30961242-0989-47c0-af27-3c45e7a2b6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05730df6-f604-45d3-af87-dd807be4a0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2058ee-d8b5-4fd2-8df6-96a946b5c655",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2eae1e-3ed9-4adb-8c13-4cf62d027297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ad0525-d788-4bb6-91a3-d1d713dbe234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03366d8e-7adc-41ad-9d03-d72ec8a4bfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ab6f58-0061-4e01-bf3c-a7e2b8790391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a130364e-be74-4ed3-8db7-26b05d358a27",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76222db-1da9-48ba-9eec-0c9b90a00891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e850e7-a18c-4df5-bc2f-38489ec952d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac298a1-9adb-432b-ae0b-1ec5ef9c4859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55347a8c-c75b-4472-918e-fed7c8d36157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d438d8c-33be-4d9e-9d7d-23254ebbda3e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa5c721-c3dc-45e3-be6a-fe17370801dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d2e073-c060-44b8-80ce-11fe286ec2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231f7180-1dec-4f88-86af-0b85369a2b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e007ac70-31b8-4a12-a2d8-a60e9d53b406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522b8f6d-ccc8-4847-9a9c-9b5d03ef5008",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7464824c-5255-4d64-a401-9d061bf75742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f190da4-ae9d-4ec4-b1e5-756b3eb76ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abdc844-8022-4e36-b638-9fb3bea1b5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbcc0557-4257-416d-8313-f1feaaa17591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0662ace-8a97-47e8-aa43-5ae20bac7ba9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830ac53c-aa70-4c84-92f5-db7778026470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc0bb4b-0a88-4cb0-b5ed-bcfee5035c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5955916-14c0-4b65-8c47-10e6f55654a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d0a711-44e4-480f-8425-575ab5a8d610"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c69f6d6-f279-4e14-a0d1-edc74e46af1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f10ec4bf-b239-4a86-a92b-4e112f1165f0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3aa89a8-c3dd-4f21-b2c6-437e4b976713",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "16ca4044-4e30-4cb1-a22d-161e39d235dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f197049-8dc8-420d-bf86-22fa94504b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ff824cd-7949-49a5-88a9-7d2947909138"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3615bfdc-bb07-49aa-a010-f1ec4655b34f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaed6330-e94e-4c29-b283-ad52cb7be4f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efd77427-9155-417a-801e-1cca24c60577",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bbce344-bfdc-4c44-94be-619b154a9f7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc9c714f-6627-43ea-9091-34d0ecf9d978",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6cd8dbdb-69e9-48c2-bd6f-eaf0c382f8c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be091fc5-0e90-4574-852e-78641f963e9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbe75126-be8d-4d26-8b68-a1c30a813e16"
            }
          }
        ]
      },
      {
        "id": "070aa396-8d54-4d2e-be90-75b2539a0b7f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "98dcad51-083e-4b08-b65c-bb31eb0e1b59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc19d7f4-6fe3-4d1e-ace2-4d0e3b650ac5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee1bee58-e14a-4e6c-86f4-554d72d84380",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108756db-3563-4e15-a2f9-1706759fac95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de39e9f3-682c-4550-a1be-24796859ea16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353ef8ca-9362-4b09-9ffb-eeb574eb8776",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb639ab-8db6-4f68-b2fa-76da4ff52b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e149bd8-3621-40f5-a06a-f57cdc625a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76478278-aed5-493f-9536-82d06076e7bc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc769e7-610c-441c-995c-f78335400e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2041cfb6-1a8d-4f9a-ae02-dcab631c1467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de27f75f-e505-4f2c-85de-2677f67b1724",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a538db-ffa8-45c1-a4c6-649455096f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d7bd5b-1c66-4123-a9a2-134a67f7896e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf8c6f0-e373-446a-8bcb-2cfaceb76fd3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49235531-f35e-4f32-87cf-e9de972d840c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911a742f-e7e4-451e-9e76-6f48e3bae242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75970e72-b168-4425-8792-251a5b33fbed",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be0149d-46e2-43fe-855f-90274edbc332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0a10a8-c760-429c-97d4-97abfe4596e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc195254-a548-415d-96eb-f4610f94933d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29862d76-0b3f-41df-a415-82b5aa74c08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27ecd92-1334-44ed-b897-e6af0850168d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61170a11-cd94-4010-af51-c45db5284bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bcaa2a-417f-466c-9de1-e73a5bd18acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05506a2-b739-49fb-8ff8-a6438a65fa5b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f169c5-c3b0-4cae-bc44-a0be5f7d8824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cbfe21d-b714-4aac-b873-31f0cb72de85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14528aa5-d9fd-4e52-adc5-bc339e76bc69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7df3d4-e4e8-4800-b926-29b483f80df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb9aa87-aaab-44de-9747-3d739c5a9a4d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad63329a-ad9b-463f-8576-4d02e8efb5ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd0aa8bf-17ab-4273-9df9-5511ec66aac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a72935-8833-4882-a674-f2216173a367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188a92c4-1e38-4d98-a37b-b17ec320454d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6201a9c4-ace2-4e8f-91d2-fec4f859f5f8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cf60ce-869f-43f1-a526-79b543620903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "929b5297-16d4-4f0f-b8b3-5af82c6c4ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a586d90-29fd-48db-982d-1a3c25aea953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2daca603-12e7-4930-9836-6023365bf7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0c7d26-3017-43e0-a95d-a48bc1fac70b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaa1d5d-0f84-437e-9c09-212a34c1d4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4e0749-8004-490c-8fca-c44c71e98035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498b383d-5ffc-434f-b8f9-2762a152e6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5ae2b0-1426-4bd8-896b-a883b3649812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f110d0-1958-4000-a174-b507100182b0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71564d8c-3896-4a3d-b732-4c07533ebc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3993b42e-b2da-4a83-8d0a-dd2b287be630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be99a294-63fd-43e7-9854-c46fd960011e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f304d6ee-9d7f-4c8e-a483-24baffb08232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e34a58-907f-49ca-b370-21ed45f9eae9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09fa21c-fcaa-43e9-a33b-2f42bad25add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ef1ca5-aed4-4ad8-865e-32519f5108bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5b438c-8d29-4de2-8a83-06ba5f611b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b19ae75-5218-457c-9aba-142957428646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd72ca6-7fca-40a2-b151-96de47cde9c9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef588ec7-1c4a-4f03-a086-6153af81926a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba2822e-71ee-4d5c-9e86-12d5ecb4c88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbeb2e0-8798-4b62-ad90-c76249bea2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52ed3df-e5d7-4b0c-9db9-9f2a7ac9f14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64d3531-200b-4aea-bad7-72d6b4c4b96b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9028c7-8b14-45e3-a9a0-4cc81e90eb13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad4e76a-ce83-4c73-9d3f-cb398fac8276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381bcce8-4b55-4c2c-88f2-66d774006931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7308236c-dba8-4b6d-9826-a81afd89d61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754778ca-fcaf-43f9-b8ca-6ca0b4acdd38",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12423ee-97bd-4fae-a21c-91d83c08e375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ffb6a52-9691-4df1-90dc-b50f7cc9575c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32214e3-f522-4b36-a8da-eb177ee9c0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e434727a-2b58-4e5d-b749-fd7fd9986a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4d3e15-dc11-4fcc-a7e6-ea35c035324a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c48160-d09d-4ab6-87fd-ff7202e1abfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7682bab-39c5-48a1-9ecf-ca8328a02ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a54883b-e62e-4813-81d7-1d272d0d6bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b963be0b-7426-49d8-9e55-0f301d1d13cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d726851-bdd0-4b12-a05f-04c24c5f1552",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4b4174-0063-4475-97a8-9b891f2e6a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff607bf-0f13-4ef2-bed8-d0db60eb1415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe03d05-2109-4d2f-bf0e-6038d474e1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5c2792-53d8-47c6-b963-1d6447d5d888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57bbd64-8ae3-4997-8f4a-851ed7931890",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4899b32a-ea78-4f7a-9565-7d55923ca8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a1e815-b3dc-4c36-a293-48181d62b16a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cfcdd2-6b52-4bed-97b2-c9a116653f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a49b8d-d84b-454f-9406-7a92919e7dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c33213-be77-401f-af00-2f858b30bf1d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9999d1e-86a7-440a-a9de-6171ff188f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e42661d-116f-416e-ac16-6a712641c059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cd6ae9-0d4a-4ce6-96a6-acae2e58f012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa396c6-076e-4c04-ad9f-017571224eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2aac1b-c5ab-41e7-b264-5332b30a1438",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1456f7b2-e5f2-4ef4-b07f-f10f0405d8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218c8062-09a7-4be4-ae24-fe97e2d1340e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ce44ea-2e94-44d7-bbdc-2f215dd10400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e47c11e-0720-4d23-a586-544850614d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e993313f-44f1-4b16-9675-5deff62dd7c8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122baf5f-b9ca-4636-ab11-7b0a4386ad6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104e6a06-b1a1-4c77-8e6e-80baa468d35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf57bedc-8737-40ab-8444-04f78dac77ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5da3cbb-24f5-4547-a022-759f33267724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d79cc66-858f-4521-b18f-a393bfca2bee",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0442a5-639d-46e8-b4fd-fb87c6edeecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e47ee8f-e54a-40d0-9e49-b33cd4a5588a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b2a62d-b30a-4f5e-a3a6-7cb07632ad3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff1b716-8544-4c49-8cc3-6808f1c3ff16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dedf673-207c-4f2e-b72b-5fa8837b7fb7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af27356f-2a13-459e-a1e4-2cc6f6a99966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2000b50-0038-4200-b8ff-7c4c4f39972b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a831ad2e-2ad5-47ff-9bf1-79682bc234a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69dda30b-87f8-4013-ac80-d702478748fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d3e1c0-ba53-4db4-ad07-3f4b586fd86f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1650f775-fa47-4493-ab98-1d190c227816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04efcc9b-f414-4a8f-8e00-d7f8122baa2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17181e20-5392-4279-a7a9-00388acaba36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c776837f-c3a3-4236-a1ed-d04bbd200fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2eb358-51b3-4844-bc62-b472fd0155a4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c398991-962d-4823-918a-97711a74a8fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c69c2d-37da-4c80-bad9-72d7c889cc00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9f3073-13d9-4591-9093-8784e3801bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed981fa-810e-482d-bbcf-776ecc97adb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7572e027-bdcd-4dfc-b3aa-a159f15a10c5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d1896f-3454-4e43-8886-c4124becb526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e07088a0-4e5c-49c5-82a1-4b562d76e32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa04e12f-20e2-4d4d-bc94-b26835e63370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc6431b-adcc-456d-85a9-b266bd19e388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227fb782-ece2-4aa8-b468-c1188f287706",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24103593-2e18-4786-a0b9-57b8653afc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7043293e-9441-4ab3-86ad-355fa3dc90b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99a16f1-ea07-4855-aed2-17fb8398c987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ca1e85-8eb7-49d2-b8a4-b5b2affeb32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ac88c5-6457-4741-a155-3c1f7e5ff54f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b821960-246d-49cc-89ec-bfdb4acf26f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3642422e-f508-4f32-aeee-990cf337286c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6a57ba-6863-4fe2-9496-e3c2dcd38de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b52ddd-3a23-486e-aa1e-80dea21ed597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d494a005-411d-49f9-82fe-90cf30a74252",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d81097-e104-4054-9156-de4b6b295bae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17f4de4e-6710-43ac-9906-318cf3cddfbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4d653b-383a-406d-a7b7-f179800de24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac68ff4-b83b-4bc5-bc4d-65c3ec56d765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6823f896-a384-43f6-996b-d9c61c3ad352",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64758256-41f3-49e7-ad25-249518ae8106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50cac474-6639-4d6d-a614-9c7572a49d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc44398-3eb6-45dd-b6f1-2980e3c8cb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09903afa-1d4a-4bc5-9a1a-a8b6aef17bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49ea691-ab32-40f5-9fbc-4abec9df98b4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8268e2a9-459b-4145-9740-6d08fa799ec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70141317-e62c-4b6b-9786-f0705ce242b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978b7d80-41de-44af-b240-b09868e437a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348b64b0-defb-473d-9fab-dd74a2e72f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8c6fd0-7255-42fb-ae27-100642ce7fb5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9993e42-9515-49d7-bc0f-b35e78c9b523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd8bb319-2b6f-4c69-b3bb-43c3dbb90f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1284cbc-8426-45ee-a8e3-6f560b9a4a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a2b373-5a45-4397-a1c8-ce1cb8c604a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4afa7c-9dcd-41d1-8a5d-7dcc4be6fa8c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85068d59-6235-47bb-b4b8-1d64e0f0e353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661d2ede-2490-445f-9b51-0b58355738b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d21ec61-681b-46f5-8ea7-cef26d6c9010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5944c9a-9113-4ac1-9bf5-315753dec9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d4434c-bc95-4e85-bff8-a14534fc8c62",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cf834d-3762-41d1-abaf-43ef18c48ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c18746-e445-4ffc-a016-3df0fc43ff1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589b0f78-a8db-479e-9b0e-95f5c1d06453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db945611-5db7-47fe-99b2-a0b6674b267a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dae620-1cb5-475d-9a51-7ef5bf1a113b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdf3bf0-a857-46d7-b050-3aad1b5e122a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2af4bee-4889-4d34-93eb-8c2d7bb4580b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c32f990-e87c-4ef7-b861-095d2b0e6686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce19d73-a472-48b6-b25b-84470a9663ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8823512d-4670-4de8-ae5f-5ebf6fce3e79",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6a0be3-74e3-4ecc-80a1-0d8921e53012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ced692-c2e1-4784-9a7e-d88b1bc7dab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403cef00-156c-4b83-8d8c-0797904b32d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9d9758-fba6-492d-9008-cf1a25ecb34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122e05f3-0c50-4af7-8480-02130c8f8e99",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35b71e7-5df9-41ba-b417-b5738cb7eb7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a31f69-d23e-4990-a976-ef13ae28dd74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b492eb85-9dfc-472e-9c89-0bd8bfc5cb5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e71122-e703-40ef-b752-a7d6d7e798a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeea6e8-744a-4d18-b815-66ae81a79f25",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b629686f-5a49-4f3b-854d-1b0faec75b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cb46e4-984d-459e-9390-522b68b1b7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339491b9-dc2d-4982-877e-38e3f25f35b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b39a7a5-96c5-4240-8bab-b50692762ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afd45c3-9421-4dcb-a79b-d7e7bb696eaf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1fcf62-278a-4931-8342-4f3625dc9913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deffa09d-a212-4afe-9275-f77a279be240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d560f9d-04fd-408e-95fa-ad5d036f0e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c605abf0-7323-46fb-acba-a897f7d7089f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70af394a-192c-4d8b-9145-d9377abd3001",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43583f1a-3cfb-41d8-808a-08c0205e1a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98f98c1-5537-4e1b-879f-95d3427acec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151e195e-14b0-4b81-827f-10baa7b3c9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753d705d-ca6d-4209-a7f5-2ddff4c87459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa0447d-863c-428b-a8c7-656b1fd032ab",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89aa19f1-3846-41eb-9c27-b137ac5fde85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46295902-cb75-4612-9ab6-cbd1ed0e0d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f285d25-83d9-463b-9660-865d487bfbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34b63cf-1741-419d-93f2-67c07aa547a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1d3927-23eb-467c-8b27-f4b0502cdf80",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de86ab95-92ca-424a-baba-560e40ec7035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63a9ea0-ee7b-43d9-a474-bc6925e1d668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2c70de-5716-4663-a872-00acad5250ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75814310-55db-45c4-8e29-162f3341115f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91dc5e5-26ee-4012-987b-586ca9963548",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b1409a-1728-4b82-87df-07a547965676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460b72b7-0563-4027-98c8-c55b597c8765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c6a516-5049-4280-8691-5fc6feb81992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc1f088-7d9e-49b9-a755-5295167eb59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f0a1e0-688d-4074-9d03-cb43c7711451",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003e3c86-6e40-4d40-b70a-15f841878574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f629ff18-bab5-4482-bb13-681f92a54cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f5699b-e26e-48cc-b03d-71fc501d1342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0980cd30-3943-4ba3-b122-ec9a870a6f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f13695b-6d32-4c1c-ad76-21b4ac547b0d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f66b57-21a8-44f7-a591-70425204cfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b0845e-4a11-4403-9588-1282d157dad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f95086e-8741-46c3-a255-b444b96d8200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a348f95-9c14-4fd8-b36d-fc1089e3ca0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5f659b-e1f4-4b15-b00b-5eb835d4ea01",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3370ac-1cb7-44be-9ff9-04c2c0b92838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a34a6d-efcd-4856-a882-2b5c2b189603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e75397-9bb8-4a8a-9fff-60d5bc1957de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979f0144-bb99-4cdb-9b13-90b551d1e29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37c9b00-6f15-4849-8902-347d73ad3ba0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc22a8f8-f50f-40a7-9cd7-fc8556326a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fd8f92-cedb-4223-aa79-08392cbaa92f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf558fff-06ef-4d2b-be19-ac112b96115a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f06a066-542c-47d4-ab1a-4700f5b2d971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82b8344-408f-43de-aa76-df4a7db8a31c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a848f32a-dbd3-4970-a2e1-3f1968919da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fb0e93-e041-47bd-8dfb-d118aceb4d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482aa5bd-daa9-47b6-ba3d-58c356b71bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe566cf3-4ece-4116-82cf-61bc77237424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6935b3c2-fe9e-49c9-8ac4-15dff2f6d5bf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a74e26-1e7a-45dd-bfa6-506a30e6e15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2752cf1b-b2ff-4a19-b8f1-6e5a00f0aab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fb651d-8eda-46b2-812f-431f8a8ee0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8ece2c-097b-482b-96b7-1bd4d22bc936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1e8fb4-e65a-45e3-9656-db0dcfb4a730",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b314a9-07f3-47a5-bbe2-d7353997fa95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e514b073-4f48-48ea-afe0-326c6e8ac63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3eef9c-a6d4-43eb-84b1-1d2d92bcbfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0419ecac-4562-4d09-91dc-1f7c545d7813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94d4ee2-7aa7-4962-8503-83a743f5d4d1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da92626a-e381-4955-b474-c17fddee9560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a9faa5-72a1-43fa-a8ed-c6bff15b6551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6426d6-79a6-4285-8840-05f7b3a61972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15357911-cae4-4e65-9d02-c26386df957b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a127ed2-16eb-4202-a335-b9b905f45581",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5b9204-3cf5-4852-b941-b2171fd48820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cc27b5-bda0-4e3f-8c4b-01c429da7a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f40d9d-47af-4967-b984-625e19c82537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fbd44f-2a35-4da7-ac5d-dd59fd6ff5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95a2818-1765-4d2d-8260-5deef8e0df8c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6723e7bb-ba05-4c9a-8b01-1dbb248ab52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89aeb433-df7f-4f2f-9750-01f25805bab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e608faf-a4b7-462f-adcb-66c23580a561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596a8083-250f-4f85-8cad-3a357b77614e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c74f6bb-0b9f-4648-822d-2f4a0dc7b1c0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edc05d9-32ee-4546-aa26-b6f2da0f22b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68de3066-809d-49a0-937b-82ebbc8db3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75a59b5-478b-4dbe-be44-70b880ccc7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b647df-533e-47ec-8187-8e8a08cc2858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d503c93c-c144-4889-a941-abb6e96a178b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b96edaa-3aab-40e0-a18d-0b56aa01da78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe460d8-f802-4939-a590-84a2e0f859fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08586cbd-2673-41ef-b18f-c8453154da70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af4c5c7-713f-4506-b6da-686bec433d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d908e008-fd24-4604-b34c-aaacf2220194",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9368b2-e4d6-443f-8f30-e80adfc170a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902b10ce-4d20-45d5-9776-1cb2809dce6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e75d3b9-5326-4610-a97e-e6c17e5096c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d41b2b-98ae-4325-a707-1a1ce9f66e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a793ec-066e-44d3-b4a8-68a2d382b1d9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6f0598-4b07-4ad0-976a-4b907a68bc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b468f0ff-8b46-4a74-95fa-8fffd4dfcd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a1d426-b176-473a-835e-d3c392fe95ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de69b885-12d1-4382-a11d-6c584cc79bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d62c5d-1406-4276-aeaa-a9b3f7402e73",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773a9bee-3976-47c9-84e9-5062c2bbb6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a9e6da-08da-4b02-9144-a8678cb03b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840c6d11-8f9e-46a9-ab47-9b4b5a413ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa73ada-8f8f-4f58-b91a-262b05ed8a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4cb5dd-6b46-4c72-948f-d481b79b9db4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec83247-09c6-4e24-9ddd-ef58348ea4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b35fd2-73f1-421c-973c-474e6a1b90f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81b2a99-1307-4bb1-bde6-c1302dd8038b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5351991b-7506-4c12-9c64-91b1b9c90e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114e25b3-c440-41a5-9b00-8fa48495c6de",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55ee9d9-0227-4d90-bbc5-28a3aed858ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873e1bd4-2023-4855-9e7c-ff24b04ee205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e1e13a-f0ce-4891-a3b4-37bb6f500c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac835b49-4fc1-4236-81f6-953f68116ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b0cb8d-c82e-491a-8142-584b7443c32a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e2e3e4-9b21-4d5a-be58-3bb022164299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a570c2d4-fd51-48a1-9941-8c07d69fa691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27414665-b2d2-4448-82fc-b04a1cc9d276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3e2fac-5a48-4adc-b949-aeae98078e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a543966-4eda-4a18-9691-dd5e4576a563",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af6a748-22d2-462f-8f31-3faf83cd8d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01a6c00-26c4-4991-981b-7878c93aa1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8059bc5-06cc-410e-a1f2-6467e15f0545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e14327-ab22-4b55-80a8-3bb07fb2b65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cca289-30df-4202-bc3d-2f57014cbc69",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d909ffa3-e290-45e3-a203-dbbc8cd812dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f722d24d-0ed3-4639-8f16-ae049d137a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f14609c-9d69-490f-a3bd-492a46b48192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830cdd4a-46d9-4825-bb79-1b4e533c3779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f6c58d-39bf-4f56-81ae-1aaff2956a0a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bd3944-ed8c-4171-9582-dc7431dfddcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8c3002-1887-46eb-b170-885a0879cf90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c08712d-6938-4129-a444-f6e981acbd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7704575c-2618-4a6d-bfde-0f7babf6cf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f13e567-32d2-4943-806f-77a5250d5ef5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff315950-5e9e-405f-9c8f-276e14a85237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb61a97a-b42b-4b7b-868e-79e1b22b801d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065ffcad-0ac3-44e1-801b-1bb73894782b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ceb5d87-8cce-4030-939a-bdef7f314bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003fde3e-8aa9-4985-b318-fb8a62fbe1c6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab2b388-1337-48e7-8c63-6ccbf5594ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37af32ef-7fba-4a25-a200-e3402f4d3f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e35b6b-9a05-4bef-aca9-7fcc698186ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942fcd6f-887f-467a-b3b1-5a43dc66f9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0fa34d-6f45-47d1-9b23-8c33c85bcb33",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8342e8dd-43da-46a0-b8bd-a9f46755d435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5bdd82-19d8-44aa-9876-d81c7dc2a874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8a494c-b156-4f56-9b88-412e8839613a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b8f95e-e7ad-4afe-80ae-0c343e15a17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7167f75c-454d-4861-8bf9-7b7e8b72b404",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555c0f6e-16f7-43ac-aee3-37d5d8b170d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00f6ed9-2ae9-455d-91dc-ab83ad9ce6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9909f1b-f7a8-4666-8a45-f103e36d7aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7805f9-1795-4525-8ee0-90cff2352afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42391e03-2b68-422a-a1c6-5dae5e2de437",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c410ff-2774-4305-a3ef-97c48e3ec1f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ec257b-bd58-4fa6-b6e0-6c5c68bff268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9f5050-34f2-4ca9-9692-65d9d165068f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e04fab-9bea-4bd6-aa97-fb23d5566498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e52f0be-019b-4bfe-97c3-3edd4ab42742",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cbe4f1-7b3b-4dd3-be33-b6db95b9baaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73fdb5c8-d69f-4a21-afce-34256cc792a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d383dd8-0ae9-4d3f-92d2-000dbb85b49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a79fa8-6a82-40eb-bfe7-fa96963be880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0dbea98-6d2c-46d9-b7ea-668b73491d40",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3980e0e3-32f4-40e9-991c-7c6d867be843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63002881-5806-4433-a948-de9a4900484f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530afbd2-2165-42b0-ab2b-c68c9ff5cc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7b517e-b38f-480b-9845-c2baeca9ed27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b31d3eb-c5d6-426c-8032-fcdb96b29da4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b146a715-580e-41ba-aa6f-47356bd04ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4101c2b0-a87b-4b91-a7b5-caaf092411cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264c022a-75b5-48b5-9d79-ae431ec290ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a3eb71-2fb5-4e28-85e7-43105a390c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df037f9-e4f0-4d57-8df7-0037c305d763",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3d6cbe-aede-41e0-ae80-7f1d4e879c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c138bb7-b209-429a-8aec-5a9d6e744e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c8f7f4-2522-4c53-9c71-0d86778c90f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e64596-f6e3-4a72-b92e-ab8c59a83999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2b1c3e-c4ca-4805-8146-759d7949fd50",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7b2b35-58e3-46ef-a3aa-fa6f57c03e8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aacab7a3-bfde-4a2b-a488-436c216b1e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95807dee-7565-4039-8a7c-a6e56f886a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0da5daa-9d2c-4462-ad42-d4d721b86f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d319b4-aa3c-443b-abd3-4f17d5b236fa",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d304a16c-d539-42f0-80e5-e9f89f097eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c94033f-3d9d-4e54-b196-358f83285c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f719c30c-627f-4662-9d7b-46ac50656c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0853b8a-6efe-4a35-8277-2557ddc25b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b36a8b-1ba1-41c4-a0e6-652c03e2d812",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df728a84-afba-4443-ab4b-3873f23b5a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec685c88-c89e-422f-8af4-073cdaaf851d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fa29d2-80a6-43e7-bbf5-700f74a776cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db98044-655c-437c-a8bb-56c8899584dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8327ce76-1c92-439b-98c4-7572e6041ef9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55087545-62dd-4226-90dd-20fe07185a7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c89514c-540d-4ac7-9c74-a4761624259a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f937815e-266b-450f-adfd-6635be4fa04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07217fd8-19f7-45a4-ad93-c01fa7087590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8a87f8-3092-4158-bc0e-f64418c7c2a8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aee08eb-2867-4b0e-9655-57f2e0536829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a081ae6a-2fc2-40c1-b6b6-eefd5b05b44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661ab2c4-f12c-4489-8f97-49e42edd8b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f97e699-ca3e-4e1a-93b0-58f0323dcad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc238e3c-3682-4c4d-ac7d-b0c5799aaf7f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6ad6e3-adc9-4784-ac2a-7c4686fffda2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f55c67-6c96-4193-94af-71754a053763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a1bdfe-5278-4d09-9a4a-2770691bd75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7455fd3-f216-4317-9d92-3c1bc9087a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b241be2-958e-44f2-b6ee-7bccb095b193",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbfd5eb-6942-4061-96c1-cfd1bad3022d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b509b7-f07d-4afe-b183-20b13c4ccb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3340a45e-8d10-423d-8a65-cf669925966c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0769196-dce1-4c16-b74e-7701f5d4a908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c89aeb0-9c39-498d-991c-1ecf68d174ee",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1431ceb2-ff56-4481-8f61-3f046f18fe0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059bdedf-2f69-467b-921b-5c6ab039623e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0560f548-fcea-4992-bbbf-1995396936d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429bfb16-4b6f-46dc-9eb0-77a0f6fbae62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5cdd7e-a919-4e00-814f-aa2fc02eac8f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42c4187-1b4a-478a-b001-c00b14856ced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68bf3980-5167-4c72-b492-177975647d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411a59b3-bf74-4769-ac3d-f32947df90ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384eb1f0-d1d2-4306-a90a-a15ec909feae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fac1abb-a6c8-4d5b-88f3-604e274d0ba2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003cc786-4f09-41e1-b96f-f8b76d325d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f36eb6-079f-4d39-b8b4-1d578688132f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154a051a-46d4-47f3-b02e-09e803c3017b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64992f5-f06e-4bcc-8334-4f48803af57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cb2bce-a0d4-4c5c-88cb-c2ae431dd96c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de96a36c-e5c3-4304-be5c-1da829c5c7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcb25e3c-213a-46c4-8b88-945a9919de42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4322253-6c56-4758-90d9-16e4c19ba089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9de22e-0451-46fd-9eb7-a596aca53150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed041a0d-45ee-48a6-bf19-a23f29583909",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7482afda-cd7f-4553-9279-1db8413ea25a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a1d02b-2fc0-4968-aa2d-9e754f3dee9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba6d5a4-af5c-47ea-b835-71d80d670281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56414aab-08da-4c95-9e1c-a04177d178f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53237e8e-9d48-4933-8e09-70ca3f2d8e32",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e71920-ddd9-471c-92e9-f17f205714c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d8649dc-0f95-41ab-9c61-27fd8a32a798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6219b668-b348-4bab-959f-fec3ab7bf58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9151588b-d879-4420-b55e-6f6e7bca67ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db9ba1c-c8dd-406c-995b-b9bcb3c8ae9f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd778d6f-a791-4d29-bc2e-facf9b61bb15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97259cc7-d6a7-43f3-9cd9-6423492605af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2350c4-cb2c-4d26-9ced-34c833d8eb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9411991f-28a1-4018-92b4-0581d19cc687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd3cb44-07e5-414e-aed5-e30f45e15faa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f666a4-c4f0-47ed-b33f-8cc01d3db2fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a5d52f-8dd8-464c-bfa7-99fa1afb19bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f48b0a-e543-4288-bdab-7e7262e8bd51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b94ff85-273f-4972-a146-de00af319ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a14369-7728-41c6-8a79-a852ff6c6927",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beca08df-9e17-4f0a-9914-f3c24bf05971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c23b4c-b5ab-4dd1-90bb-d068fb1f9796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4026b3e-c45e-4047-a6a4-2021ea981caf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4421f3f1-d01f-455d-b57e-e90f70689c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc835562-dae8-42c3-a107-d82f3f096d86",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4599ce-1f70-4d9c-b8ed-a6931c20ca23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ecbca9-842d-44db-9435-61e40cf7027e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0e5b63-45eb-4d3a-b5fa-539437cbf63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbea0e99-6800-4664-93d6-00ab2e4e9652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732c6c0a-ef8f-49f0-b539-24dff8799016",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bd8006-2427-49d0-b2f0-5b6ea347c8ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e4a49e-fef0-4ec8-a423-52abe51f2a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf564d7-dac2-4b8f-a328-a18f0e15fdad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3340b4b5-702a-442d-91ac-4233597d55a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdb9338-649b-4172-95d4-e1e85812ffc8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ce3a96-920a-4b47-b802-cffec00bbb74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ca2ffe-5ee5-4cf8-9393-de3f6e122a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ba87f4-c4a5-4bc2-84b1-f3b6949e52c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755bd282-7c45-4497-bab5-c52953e90a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa271ef-26e1-4728-b1ab-6921681d01e1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c0b460-e1c9-4fa2-9db3-973661a48339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57c12a00-5f03-43f7-a371-5a245845747a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effd42da-426f-4955-b72c-f6a2fbd9f283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999a7934-8b65-4f98-af69-9ec9df11f485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0586b5-63ae-411c-85e4-c0d31afbe523",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cbaf8f-96e3-4ade-85e7-72d2b47b876f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a1dbdb7-6fac-4200-ad41-3fd3a35499ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ea346d-e3e8-45ab-a564-96aa99536b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e76d503-0590-47eb-81ec-6d0156d276a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a81a27d-d977-4e65-9b84-2d163b203655",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581bb2d-4435-472a-861c-5f53cf581cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a195f5ca-9a41-44fa-8ab1-bbe46e84b6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1a4805-fbaa-4523-8a90-fc2ca61260ac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87db7b13-2c4a-4f02-8b57-fc77e4f0e297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf5a17d-1dab-4a33-9451-d1382fc2a8e0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d8cb77-a1b7-461f-8f71-630e9b7ab31d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "444b701c-7e50-4724-a85f-c1146053ebcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36ce640-631b-4508-bd4d-14c821528bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52626068-38ca-443f-8416-38c709968249"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0813193b-e11e-4887-913a-16f5bf845b5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9601fe2-ee68-4d32-9eaf-f30611e552df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23bfa7f7-8397-4cc6-b0c4-a54664bdab82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b93ffccb-8947-4f24-bbe6-61add88dc3da"
                    }
                  }
                ]
              },
              {
                "id": "36a72556-c6e3-4546-b568-395939b43256",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd17ea95-483c-429e-8955-d9bab9b6bf18",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754aa024-d473-43fa-aaa2-d5b05f11ac8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c3ec4577-638a-4d4d-b63f-7337e37e926e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba5f284-9de8-40fb-a53b-3919c8d0ac00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81b285bc-acca-4993-9442-f3296a78c63c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "019bf4bd-45c0-4422-ac81-5b9077b52161",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47cfb21b-8e15-4fac-8b22-682cf2146391"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9579760-31e4-4b74-ba85-ec07f2a7b8fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11412bb3-8945-4ec9-875e-baf40306c0a4"
                    }
                  }
                ]
              },
              {
                "id": "de30e1ac-35eb-4066-8bd4-55bedfd884a8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "71ad9097-d63f-4018-b1d8-9dc392c015d7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a98f26-b738-4fe1-b50d-f5cabe33fc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1e866815-ca82-4901-9c98-524c75a39a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e2e2b5-9564-487a-a481-6e703f9f00f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6807f4-ada6-425c-872d-9ea5988bae70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9baf893-cbc3-4b1a-a475-2c6e8051f5a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92c1685b-6a38-4cb8-9cd3-3511ea1edf20",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e4ae1e2-9f5c-4949-b5c4-1578f2a579d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a0b95835-c761-4718-9697-d220196b4162"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6be232b2-c594-48f9-b5b6-2404ea05f7a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ad4176d-8662-4e3a-ba39-095e2fd711e9"
                    }
                  }
                ]
              },
              {
                "id": "5b1b6ed7-94bd-4c3f-8bbd-f65cbd19956f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3000c3e3-4739-4b90-9d5d-d66808cd911d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1f9b4cf3-1c3d-4765-b553-0fd51a6b662b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bab8ee28-749b-45ef-a993-9f789f9185a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b881e4d-d6ee-4ae4-89ae-0ffec925d64e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adbcec32-6665-4c17-a719-0f149f2a34bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d14b8758-0335-49f9-9852-2bb6f1c3cf7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3afc2eb9-0560-4ad2-9db2-cf30fcab7154",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8275b2a-7f91-4206-b6c2-f1d10aa23e52"
            }
          }
        ]
      },
      {
        "id": "425c8ba2-5d4c-4593-81bf-ca2e0c4f0830",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "53069bd5-e051-4954-9ce2-ca671d82f3fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ff58ffb-77e6-4896-9375-c34adcd5a630",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d908092-dd38-4f72-a976-e35776801bef",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1005c166-6fda-45b5-bd5d-a2876793b770",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5682fe60-f9bd-4956-8130-a4048c1d343d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07c9793-2c34-4ed4-9fba-cb46e07b142d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bdc6e99-877f-495c-a411-bc5f4ce84c80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d50000d4-b5a3-4058-ace2-89a722612c41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2441a63-c2cc-407f-9ae5-bd820e30b0e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c533d1c4-66a5-4f17-8d6c-ddfa81a33d28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b54fb030-02ec-4314-94dd-4f160b9072f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a00148e5-1a69-49e2-809f-83ee52cd9eb5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fb0dbbf1-8b89-4b1e-ad5b-e28876ac5e14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcb91dc5-7425-44c5-8693-a25a262cb041",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbc0c464-7296-460a-b00d-95d04801b749"
            }
          }
        ]
      },
      {
        "id": "c143e272-fba0-423a-8d5d-6b72586c2ce7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "61bbbd31-33dd-4d1d-8137-99730c61f693",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9308d27-6bee-4d1a-b954-acd17659989b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51db8914-0f5e-4a0a-a274-1d19fd5664fa",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922ecd59-c025-4962-9d26-b4af8835b6d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edf22a40-4dae-4a0f-9dd0-434b9ccbc419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6d0fc3-2f6b-4a30-b34d-c35037791b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61ad25c9-69bc-4823-95ca-60bedae3bd72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6819a422-3dbc-4275-bec3-7a49a5292704",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa7488a8-1281-442e-a0bb-af0db0c42cce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05ed2f8c-0022-4ef3-a586-7de52a7862fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae019fbe-3ed9-4d4a-9666-368e8a26f62c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e64b5a5-0af7-447a-88ad-ab58a256cd54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28a2c6a6-ae69-4a2b-aea4-d613df45d65d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81542fa4-763a-431e-8dd5-19787083b6e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fafeff37-561a-4463-bd55-43ee34c2671f"
            }
          }
        ]
      },
      {
        "id": "4afff1a3-5135-4e7d-abf4-6cc1580826d7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a877a0ca-b6a3-4d00-b07a-2b131c170c8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29811a3f-17a7-4e21-b6f3-7285d3970f26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d00b9140-2732-49d1-964c-ae9f9dc0b49f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae359d58-87f9-445b-87f0-fb0ec34c52e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abcb2f74-1ba2-4526-a5dd-78fb3187f5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b353ec4-a56a-4d47-a5e9-aee24abac2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49f6f278-262a-42b9-b270-daf1fbf84d3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "babc6630-6909-4c6c-8e1f-c44bb9ebe758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13ed7e29-8f19-4065-af26-2ac69fb08161"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "129f8bb2-262d-485d-992c-203e806c03b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7c2c052-16ba-48a2-8922-4c3afa46095e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad65dedc-6021-4d51-ba95-c2dd71f9c34a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93d6a611-d261-4912-90a7-9bc15cbba094"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2846235f-b409-419f-8064-c25cbb3e812f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7547a83b-e121-46d2-b752-0a5036513e04"
            }
          }
        ]
      },
      {
        "id": "06c9a6dd-60fb-4dcd-b3f6-16026004b2d1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bfc74bc-96ff-47c5-a93b-3f5378fd27b3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c68fff19-d604-4725-8bae-a721eaa3b919",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b5545f7a-7a0b-48e6-984f-73c494357265",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9173b885-6632-42b2-be59-919ff66c7a10",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fd4011a-3a06-4cdd-b477-beaba65ce0e3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 213.7253521126761,
      "responseMin": 8,
      "responseMax": 6533,
      "responseSd": 415.96687206200096,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689381946388,
      "completed": 1689382021621
    },
    "executions": [
      {
        "id": "4693389a-9e5d-4d23-95d9-4e82091ca1d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0b4eb89b-eeaf-4701-8bb7-661caaab76a5",
          "httpRequestId": "3533c50f-c703-4e9c-ab48-06a9d902e301"
        },
        "item": {
          "id": "4693389a-9e5d-4d23-95d9-4e82091ca1d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2e9f4257-ebf6-4678-a2fe-1e5f556a8d5b",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "704cb35a-8918-4c93-b707-dc683ecbfaed",
        "cursor": {
          "ref": "35033434-bc95-4920-ba5a-3d04d9d257a3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a1542488-2d48-4342-a06e-e9e2c3e5e6c5"
        },
        "item": {
          "id": "704cb35a-8918-4c93-b707-dc683ecbfaed",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cf18279f-593f-4877-9479-a60554deb305",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "1e965ecf-d1d0-418a-818c-9f6ebd54465b",
        "cursor": {
          "ref": "d0c39e49-68b9-4e3c-b304-7179b8823f80",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "45a540fc-f1d2-4ac1-b2cb-6e699557d853"
        },
        "item": {
          "id": "1e965ecf-d1d0-418a-818c-9f6ebd54465b",
          "name": "did_json"
        },
        "response": {
          "id": "d6677e41-1885-4131-8573-3894b1981591",
          "status": "OK",
          "code": 200,
          "responseTime": 1175,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f411ff26-a5e7-4e40-8fa1-2d8dcbaecfd7",
        "cursor": {
          "ref": "31241620-d7f5-47c1-a8a6-11f3ee0a122b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "75dc185b-af17-4223-8787-d070f58d959e"
        },
        "item": {
          "id": "f411ff26-a5e7-4e40-8fa1-2d8dcbaecfd7",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a81036d-1329-4080-aba2-05087226b689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f411ff26-a5e7-4e40-8fa1-2d8dcbaecfd7",
        "cursor": {
          "ref": "31241620-d7f5-47c1-a8a6-11f3ee0a122b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "75dc185b-af17-4223-8787-d070f58d959e"
        },
        "item": {
          "id": "f411ff26-a5e7-4e40-8fa1-2d8dcbaecfd7",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a81036d-1329-4080-aba2-05087226b689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55246ff9-8128-4bc7-ae43-bf49ea3f7471",
        "cursor": {
          "ref": "40f87318-d046-491f-879f-defb35bc0044",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5cd7f91b-e7c9-4f4c-99bd-3d55b1336ca0"
        },
        "item": {
          "id": "55246ff9-8128-4bc7-ae43-bf49ea3f7471",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0aa72ffb-8c15-4a31-a80d-597ff0d232be",
          "status": "Not Found",
          "code": 404,
          "responseTime": 362,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edccaf07-bd4e-44a4-abd5-626bfb2257a9",
        "cursor": {
          "ref": "c4a9ec1b-660c-4942-879f-863a82832805",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2cd9c34a-15bc-49ec-bcd4-eed73249b614"
        },
        "item": {
          "id": "edccaf07-bd4e-44a4-abd5-626bfb2257a9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "af84fa2f-fb70-4c8e-82bf-93aaf0e99e93",
          "status": "Not Found",
          "code": 404,
          "responseTime": 279,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bbccd7-6cf7-4345-a7ed-640a6a33c80c",
        "cursor": {
          "ref": "aa6cdbb4-cba6-4d4b-9d31-8b61d98256b2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4403e72e-ca44-424b-93a0-8b7dcacd7464"
        },
        "item": {
          "id": "05bbccd7-6cf7-4345-a7ed-640a6a33c80c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ca39e542-117c-44d5-9e39-11a07ec6a1af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613fae27-f2a0-4626-bbbb-dd741d5d35d4",
        "cursor": {
          "ref": "864c1220-9829-4dba-b2c5-f15557ac625c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2b4d7b9d-d7ab-4faa-8415-8c0afa34665a"
        },
        "item": {
          "id": "613fae27-f2a0-4626-bbbb-dd741d5d35d4",
          "name": "identifiers"
        },
        "response": {
          "id": "7e70cae9-1d68-426f-948b-709f8fe5e64e",
          "status": "OK",
          "code": 200,
          "responseTime": 1045,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b21cb7-8938-41ec-a363-b2e252cfef8d",
        "cursor": {
          "ref": "b44c5955-ba0b-43cf-9897-9ce7767684dc",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "41e115cf-f37c-483c-8870-4e973f61ad36"
        },
        "item": {
          "id": "b3b21cb7-8938-41ec-a363-b2e252cfef8d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "06d2de12-e99d-49e6-bd3b-ed0b7641f480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6179b8-b418-466f-9b38-b619c3251ad2",
        "cursor": {
          "ref": "d3481f45-50d9-4045-8361-00ac73626708",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "139ab2cd-bdc8-4cc8-92f8-e10637aa5b9b"
        },
        "item": {
          "id": "6f6179b8-b418-466f-9b38-b619c3251ad2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ab6a03b2-2500-4d15-a841-feddad10cf47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb9fad2-c06d-4f59-8d47-36cf33d2ab7f",
        "cursor": {
          "ref": "2d425098-6c9c-4d9f-8e1c-afa9a29e7c74",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "34a0aefb-277a-4e2a-bb50-b8275cd0bf01"
        },
        "item": {
          "id": "9fb9fad2-c06d-4f59-8d47-36cf33d2ab7f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1c018b1f-be72-4ebf-82e0-b195140873a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96559f3-11d4-481e-9b45-44ecc371d607",
        "cursor": {
          "ref": "3a2e79a5-2142-4cb2-8aa3-2af22dac8c79",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c7fc3556-80ee-4ac4-8744-c8a3730b93c4"
        },
        "item": {
          "id": "b96559f3-11d4-481e-9b45-44ecc371d607",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "43616b74-63a7-46dd-8cfd-81d5a9cf1d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0c0b14-e2b1-41ef-8c27-48d0fde6cb00",
        "cursor": {
          "ref": "59777dab-7ba9-4133-96bc-065eeb5eb7fd",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6ea33fbb-ae62-43d4-8634-10227c8df07f"
        },
        "item": {
          "id": "6e0c0b14-e2b1-41ef-8c27-48d0fde6cb00",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d801d7c5-1d02-4f3a-9a19-e0a4eda36672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedff7c1-7c5a-4472-81de-02ee5e151f0b",
        "cursor": {
          "ref": "41b07e9d-82f0-4fdd-994e-20ac9a78c83b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "85bf07f8-54a7-4fc2-8138-fb80e9a61be8"
        },
        "item": {
          "id": "dedff7c1-7c5a-4472-81de-02ee5e151f0b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c06de0c3-20a1-452d-82e4-f9a4c2308563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e0be42-aac9-4d9b-b89d-e209425c7a57",
        "cursor": {
          "ref": "3273d95e-4123-4007-90b8-e7de07de9539",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c7d50d5a-238f-4cf6-8dda-ead78726f35f"
        },
        "item": {
          "id": "75e0be42-aac9-4d9b-b89d-e209425c7a57",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3c132b53-a6a9-4624-b50f-2c4a3e3317a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0020118-d81a-47d0-b7f8-9a506b3a0046",
        "cursor": {
          "ref": "1bba0514-fddf-457e-b477-4ccad9c90213",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "83d82825-a1bd-4364-8272-cbd97ad9732b"
        },
        "item": {
          "id": "a0020118-d81a-47d0-b7f8-9a506b3a0046",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3878a72e-71a0-4324-a658-930b8f8d63db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8a5e6d-6320-480c-9249-d48467f588a9",
        "cursor": {
          "ref": "f81667e5-0767-432f-a972-90c62069e19a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b9745326-a7f4-43ab-83d0-d6d1fc3a36f5"
        },
        "item": {
          "id": "6a8a5e6d-6320-480c-9249-d48467f588a9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "64696d86-6da5-4f5e-a749-d4e3f9978941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d005d55-eca2-4a7b-8917-c6b23f9848d8",
        "cursor": {
          "ref": "d015ebf9-f37b-4d9a-b4e6-f3d246cda589",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7178ed9e-c70d-480d-bf16-24e878e3d883"
        },
        "item": {
          "id": "5d005d55-eca2-4a7b-8917-c6b23f9848d8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f581a8c9-fdab-41ef-8c16-7815611b2371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c73022-5ce6-415f-a198-5307f4739859",
        "cursor": {
          "ref": "1e808deb-6c51-474a-b86b-347f0441600d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "30bf6982-ff7d-47ec-ade7-7acaef25b246"
        },
        "item": {
          "id": "67c73022-5ce6-415f-a198-5307f4739859",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a856c0fd-0124-492a-8591-d5a1456cd38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c54ac1-737f-4e69-8de0-46beb4cee8c0",
        "cursor": {
          "ref": "e30f6ec3-9591-4e12-9ee5-8834707ba23e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e89b39a2-6797-443a-a7f7-12f617c0239c"
        },
        "item": {
          "id": "33c54ac1-737f-4e69-8de0-46beb4cee8c0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2b650b68-40e1-48a3-9419-2949acdf7f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914414c5-489a-47ca-ac96-c8b9af5418b8",
        "cursor": {
          "ref": "af10a0cf-69ec-45ca-b068-8ba9865d6f57",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ef61b19a-0a33-41e1-bc08-f9f50cfa5c71"
        },
        "item": {
          "id": "914414c5-489a-47ca-ac96-c8b9af5418b8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "de2ca4fc-3205-417f-a2ba-055a61ad13ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7921322b-7edb-4a59-b2d6-33510e4cee9f",
        "cursor": {
          "ref": "71c12b56-e674-411a-b98f-e54cde75dd1a",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a4d154e2-422c-4044-9570-570a1b4fbe3d"
        },
        "item": {
          "id": "7921322b-7edb-4a59-b2d6-33510e4cee9f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dc1932da-a620-4a04-8198-13ce661df943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5715b2f-1b90-44a1-b583-1da5c8ea6389",
        "cursor": {
          "ref": "7f78a92c-c060-492b-b6ea-62016684ee2e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3e9e4cd8-96b9-4c4b-a9c7-9a54c3f723e3"
        },
        "item": {
          "id": "f5715b2f-1b90-44a1-b583-1da5c8ea6389",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a992012e-338b-4e06-b97e-daf2877aae4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae10292c-82ac-4fe9-b4fa-b6f11ffdc2e5",
        "cursor": {
          "ref": "a20adf88-479e-41d7-938a-b8840c8acb97",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "21f28773-163f-4e9f-8b5f-bba1fc677bab"
        },
        "item": {
          "id": "ae10292c-82ac-4fe9-b4fa-b6f11ffdc2e5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6f8b8d5a-374a-4dac-a1d2-b8a469973e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d31c2b-c612-4cc3-8ba4-2feda7bbadbb",
        "cursor": {
          "ref": "61537054-cd99-4662-9347-da009b537651",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d6c8a25f-8f8b-4f35-930c-c5d2c60860ca"
        },
        "item": {
          "id": "62d31c2b-c612-4cc3-8ba4-2feda7bbadbb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f6928416-b5cf-465a-9127-069fb942e1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c492ced-fd56-4144-979c-a4f12c9ccef4",
        "cursor": {
          "ref": "8e5a3d6d-10ed-47f3-900f-50c5a11f6258",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fdd8eb44-687c-48e3-a3ac-585b61603d8f"
        },
        "item": {
          "id": "6c492ced-fd56-4144-979c-a4f12c9ccef4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "840db439-f12c-4b18-91a9-299855d1e117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4285c4fb-366f-4f0e-8ff7-2a64ebc3faaa",
        "cursor": {
          "ref": "56b612a9-a74d-4cd6-9650-0604def4283b",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bb07a44b-69db-4385-90c7-dac3efcb60ed"
        },
        "item": {
          "id": "4285c4fb-366f-4f0e-8ff7-2a64ebc3faaa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6c63bef9-0668-4ae0-8ae7-ead7ac2b0ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d257ec7-687e-4121-a92f-a81bd56b3cb8",
        "cursor": {
          "ref": "4ae4b99e-93fa-49c6-9cdc-72c9f255808a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a495898d-15cf-44a7-b30c-8df0abd564a3"
        },
        "item": {
          "id": "2d257ec7-687e-4121-a92f-a81bd56b3cb8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5d1c892c-3b63-4d2f-b0fc-89549451794b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47951b99-9af2-4272-aceb-e33e0e3e2d14",
        "cursor": {
          "ref": "5c4c9b2b-3838-4893-ad19-015e289e6845",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "95b5893a-706b-47ca-b1c6-c2639dc7ecaa"
        },
        "item": {
          "id": "47951b99-9af2-4272-aceb-e33e0e3e2d14",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2b46a070-19f4-4e8d-8c1d-d5b266049493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4380e19d-6231-4821-963f-1902eb558baf",
        "cursor": {
          "ref": "369e5bdd-1d20-4519-8194-13667b281935",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "14e310d4-38eb-4fe6-9ed2-f45a902a645d"
        },
        "item": {
          "id": "4380e19d-6231-4821-963f-1902eb558baf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "16d20410-72e0-4556-ab2d-b14f5e51fb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216f020a-a1d0-42fe-be22-09f9c6e61ffe",
        "cursor": {
          "ref": "765e7b05-a3d2-4613-b917-db2d18d23776",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e86960f9-d30f-4966-b35a-8aeccc1cc1f5"
        },
        "item": {
          "id": "216f020a-a1d0-42fe-be22-09f9c6e61ffe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cb6414b4-506b-4329-abc5-5568effff396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdc01a7-d0e2-4390-9fd3-f0fa201f2979",
        "cursor": {
          "ref": "ebac578c-41ee-4ae1-8888-057fe3da5d65",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "96c3786b-fc32-481b-b40f-dd6dcb4fa0b2"
        },
        "item": {
          "id": "dfdc01a7-d0e2-4390-9fd3-f0fa201f2979",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "56ba0daf-b9e5-470f-bb66-9e996a0a61a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8907c109-2427-42f7-a987-180587e10947",
        "cursor": {
          "ref": "cdf34a90-bc1a-496b-b41b-e88f0c668317",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d54e761d-6775-49a6-899e-067bb4f11f90"
        },
        "item": {
          "id": "8907c109-2427-42f7-a987-180587e10947",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dfd3b273-f1d6-4655-83e2-606e5481888d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c80944b-c722-49b4-acca-53a3a54ad156",
        "cursor": {
          "ref": "9b6c67a2-560e-43e3-967d-9e6acff081dd",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ddaddb2c-a18d-4a7f-a640-01604a9db9f3"
        },
        "item": {
          "id": "0c80944b-c722-49b4-acca-53a3a54ad156",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1228012d-1f71-43dc-8531-b10c60897ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592f5449-2467-4e56-889d-334bc0f74b96",
        "cursor": {
          "ref": "33afe3e7-add8-4fe5-9c77-6a0da00dfd41",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "70d07f7c-f532-47e9-8b63-77cf92017865"
        },
        "item": {
          "id": "592f5449-2467-4e56-889d-334bc0f74b96",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a1c1481e-ed36-451b-8a29-de80a59476c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f53e5d-b416-4d54-8125-36d6e5dcff18",
        "cursor": {
          "ref": "b96d6e98-b22d-4613-89fd-e1d043204523",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cfdc965c-9959-42ed-90cc-eb870e22f01b"
        },
        "item": {
          "id": "42f53e5d-b416-4d54-8125-36d6e5dcff18",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "65ef6331-0e8c-433f-9008-9f01076fe4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f67ab05-407d-4020-a488-227eba7673f1",
        "cursor": {
          "ref": "992dca6f-8f37-40b5-a6a2-eeb2d7a46302",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "46b789d6-d8fd-48e1-aa44-8508701e7d70"
        },
        "item": {
          "id": "7f67ab05-407d-4020-a488-227eba7673f1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6e37665f-1054-402b-85ba-4f5b193f558c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6abc4e-9cc2-4372-b33e-f76259aadf1a",
        "cursor": {
          "ref": "b0ee0bc4-76c5-4af3-9e6a-e594cb12924c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "40b011a0-7290-4620-871b-3b341e330d86"
        },
        "item": {
          "id": "de6abc4e-9cc2-4372-b33e-f76259aadf1a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bfc813b6-a81e-4403-8572-77895f9c2b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b190af-d064-43e5-8841-eaef3172e7ca",
        "cursor": {
          "ref": "ae3b042c-c8de-46cc-a0c2-c011f30d3719",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "000c7a8b-948b-4cdd-88ce-abf7de90417b"
        },
        "item": {
          "id": "d7b190af-d064-43e5-8841-eaef3172e7ca",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a977be79-2fc0-4a34-9f46-b83a5326fb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfe6bd6-f0a5-42b9-bf28-307869d64fb2",
        "cursor": {
          "ref": "ddaa1465-ecbd-4fc8-89d8-133fba363ea2",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b1dae32d-7d86-4dd4-a58c-75c01bdec812"
        },
        "item": {
          "id": "cdfe6bd6-f0a5-42b9-bf28-307869d64fb2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f91e3768-9806-46f4-b2b8-3329c8de7989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0d12df-c545-4cea-9faa-45799ff39a18",
        "cursor": {
          "ref": "a88f231d-fb10-4987-aabb-000622410507",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "65b1ecb3-fbd2-44be-af57-1b5e03c7bde3"
        },
        "item": {
          "id": "0d0d12df-c545-4cea-9faa-45799ff39a18",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "831af03c-f4e4-4031-bd52-80d151e0a263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1e45fc-aefe-4b53-bf25-f7cf1022e27c",
        "cursor": {
          "ref": "689c5d3e-d882-4fd7-a23d-9b022184a478",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2c53496c-fbbf-46d7-bc68-de3c7d3eb25c"
        },
        "item": {
          "id": "1c1e45fc-aefe-4b53-bf25-f7cf1022e27c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a032ed3f-0b90-435f-baae-df5fd3d8e5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0807d57e-ec65-4f40-983d-74fa8121e63c",
        "cursor": {
          "ref": "1a736636-5551-4f71-9681-2761c1546416",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "38a8aced-7984-46c7-9bf1-ba5526672e67"
        },
        "item": {
          "id": "0807d57e-ec65-4f40-983d-74fa8121e63c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "615a68d2-2115-4b27-a0f1-73c4d0599b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc61b06-6bba-4b20-88fd-a80e21c6bc30",
        "cursor": {
          "ref": "42b9d71c-ee83-4c3d-a928-1c6dc6f3b67b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1a4bce6a-2021-45c3-8f2d-30f65b733860"
        },
        "item": {
          "id": "9dc61b06-6bba-4b20-88fd-a80e21c6bc30",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "86f26dc8-4a45-46f4-b1ee-1bf8b1c66859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19dfbab-5f4f-4211-b746-3e52d498f53a",
        "cursor": {
          "ref": "b7836b0a-cad9-4dbf-a952-7588c5afc69c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7ad41cf9-f746-4249-a198-2c60e29a165e"
        },
        "item": {
          "id": "d19dfbab-5f4f-4211-b746-3e52d498f53a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3d188267-7aae-4d89-9302-3621268ed320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abee9d95-c8db-4308-8c51-b7190ff59f0b",
        "cursor": {
          "ref": "e20af772-7a3d-46af-bb9a-07b43aa521e9",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0c5a050a-42f9-420d-92e0-95b09c7b07cc"
        },
        "item": {
          "id": "abee9d95-c8db-4308-8c51-b7190ff59f0b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1cb983ae-36dc-413e-915a-f4a8b87e6ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0be9a8d-ed39-4346-877e-f7bac8994ec3",
        "cursor": {
          "ref": "a29174bf-f3ee-4617-b93d-6de1a9720f18",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eb63d30c-3e64-4b6f-91d4-bb2af328f07f"
        },
        "item": {
          "id": "c0be9a8d-ed39-4346-877e-f7bac8994ec3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a9e395df-9964-46fe-8bd0-b630eaa03181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb71fc48-e19b-4c97-bb88-da03a80ac928",
        "cursor": {
          "ref": "e2a550c2-adca-4930-944f-0591e825f275",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "04721b1f-63cf-458c-a180-1e43cf324882"
        },
        "item": {
          "id": "eb71fc48-e19b-4c97-bb88-da03a80ac928",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ec6e2ee0-4ae6-4105-aea1-092067c0cdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c92fcf2-634d-4282-bee0-89e419be724c",
        "cursor": {
          "ref": "295a6e9b-6883-4c33-b0ff-317199097762",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e2880b1c-2a9e-4c3f-a41a-f9d7e7ee9b48"
        },
        "item": {
          "id": "4c92fcf2-634d-4282-bee0-89e419be724c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5bb07734-00df-451b-855b-b1ff8ce7d8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5cc8f1-64b3-44c6-b36a-318053f59f97",
        "cursor": {
          "ref": "ba5ae0c6-5f1f-4c41-adff-f71a555392f3",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b40a04c1-36a6-4082-9833-3c3d9593e5a5"
        },
        "item": {
          "id": "8f5cc8f1-64b3-44c6-b36a-318053f59f97",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1dc01477-c26c-4d8a-9f21-5b920ff410c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17b9a2a-04c1-445c-8851-317d1a2da133",
        "cursor": {
          "ref": "26d977a5-b520-4aab-8892-ce018cc9bdca",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2d6503c0-f531-4035-8e77-6b486ffdcd9b"
        },
        "item": {
          "id": "a17b9a2a-04c1-445c-8851-317d1a2da133",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "aea71522-67a5-461b-8487-4737968ef21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e42f02-0a2b-42d9-92d4-43fc83f19e1b",
        "cursor": {
          "ref": "0dcf86c4-94cb-49e9-aba8-ceff2ca3d46f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "82479080-a15f-47d1-ad4c-188c0fce6f5b"
        },
        "item": {
          "id": "35e42f02-0a2b-42d9-92d4-43fc83f19e1b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "01d43a0a-6df7-45f3-8bce-f827e1cae55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f341b780-f2da-443a-896a-928b2b711f8a",
        "cursor": {
          "ref": "6e4a2e65-1d91-42fb-bef4-151c6349db6e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a7af3dd5-d249-48fc-98be-5f41d1ce50a6"
        },
        "item": {
          "id": "f341b780-f2da-443a-896a-928b2b711f8a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9ab3ff46-6242-48ba-90ab-86252dc71f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8169aeb9-016f-46b7-a99c-bb3351921cf1",
        "cursor": {
          "ref": "a5bdfb15-7a4e-4338-a246-68ef7884b0b7",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "73a21e16-4297-48c1-82c3-41d429b694cf"
        },
        "item": {
          "id": "8169aeb9-016f-46b7-a99c-bb3351921cf1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d38517e0-c236-456c-8555-6e723fa6722d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c0bb99-955e-49e7-bc81-ae46a2ecfb7f",
        "cursor": {
          "ref": "31ae2a8f-6dfa-4761-ad8c-c0d8c932ea8b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f9133f45-3314-4dc9-bb80-bfd9e838e307"
        },
        "item": {
          "id": "56c0bb99-955e-49e7-bc81-ae46a2ecfb7f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5489c52e-4a7f-4a2d-b244-e7663345debe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe1d1ca-f2dc-412f-8a6b-e7b314037b48",
        "cursor": {
          "ref": "e7f8a9dc-20c1-46b7-bf32-57ca79a3c44d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "047b749d-ae20-4fd4-9604-421ba1b9ad2c"
        },
        "item": {
          "id": "bfe1d1ca-f2dc-412f-8a6b-e7b314037b48",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "113442bf-1039-4ab9-b1b1-e2a41da0ef2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9963d88-f1d0-4cd1-9e67-f1a2255c332c",
        "cursor": {
          "ref": "1a4ce00c-36e2-48f5-bfae-5045c9804aa2",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e6d916f4-0a16-4f0e-b526-fa8dfeec9fac"
        },
        "item": {
          "id": "e9963d88-f1d0-4cd1-9e67-f1a2255c332c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "28426bd0-6eeb-4274-968a-71ac33102f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1123f34a-8726-4209-8dd1-aae83d925b9d",
        "cursor": {
          "ref": "ce223170-a4cc-48cd-8df8-5114e51b8b3d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8c4fc438-d792-4a64-aff3-8f4c0e4ce64a"
        },
        "item": {
          "id": "1123f34a-8726-4209-8dd1-aae83d925b9d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5c224066-be86-4b94-8287-20b4c423afb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3957e11-5ca5-4b44-9f6a-97f6417de9d6",
        "cursor": {
          "ref": "b24a9a4a-e124-4f95-80be-3dd78e46d19f",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "34334567-0f87-4a32-b6cd-b4515e495a4b"
        },
        "item": {
          "id": "e3957e11-5ca5-4b44-9f6a-97f6417de9d6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c4acdb0a-7de4-4739-b3ae-9474287ce06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a916bc76-43e1-4bcc-bd9f-9b10c5027340",
        "cursor": {
          "ref": "8df18bd7-9bbc-42c8-ae90-49fcc1609755",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3c876986-7787-4854-9826-259192c6ec03"
        },
        "item": {
          "id": "a916bc76-43e1-4bcc-bd9f-9b10c5027340",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b4a24026-c1b7-41c6-a883-37dcb4656467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b805ea-4ee1-4ce4-acaf-df73db67a8c1",
        "cursor": {
          "ref": "9181b77a-e21c-4cba-94eb-ddcb348bb9f0",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "83bb2b35-fd77-428d-bda4-67448a486760"
        },
        "item": {
          "id": "89b805ea-4ee1-4ce4-acaf-df73db67a8c1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e61c6067-ec84-484a-ac53-65fac218850a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574c4897-c5ce-44e1-9b9c-26279822aba4",
        "cursor": {
          "ref": "35ade066-82fd-4ac5-b5ab-95fb276a0020",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "42cfdbc0-4cfd-4d8d-b71c-6140c6e6bb55"
        },
        "item": {
          "id": "574c4897-c5ce-44e1-9b9c-26279822aba4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e2de91da-46d8-4936-b9dd-0f623c1a9d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea8d443-efbd-458f-910d-5f905172bb30",
        "cursor": {
          "ref": "b8118173-ff33-491d-b7d0-fed0d4617d9f",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "99bef559-fb96-4114-b250-104da81f9bf0"
        },
        "item": {
          "id": "0ea8d443-efbd-458f-910d-5f905172bb30",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6928a63f-399c-4d16-a184-90145c6b1bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119bb057-e90b-40b2-a838-f5f92184090f",
        "cursor": {
          "ref": "3d3b2008-be99-4eb6-ab3b-983f11cbd7da",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8e616957-9422-46a1-b850-f3dbfdc74f77"
        },
        "item": {
          "id": "119bb057-e90b-40b2-a838-f5f92184090f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cc00c3a1-079e-48d3-866b-d382725d2ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17117a2a-c311-43f4-8442-4a3d822cf7d6",
        "cursor": {
          "ref": "271ff481-ac85-4552-9946-37853734f6c4",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d00b4e32-86cf-43f4-8af5-da505a0ec62d"
        },
        "item": {
          "id": "17117a2a-c311-43f4-8442-4a3d822cf7d6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5050e8ba-2a7c-4777-a76a-b07f181db65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee2f944-1283-4cc0-ab41-1a9d91a708fe",
        "cursor": {
          "ref": "937158fc-7461-4133-bdd0-8a0f6392d716",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6511ce34-e4bc-4cc7-9572-bb72a03f94b7"
        },
        "item": {
          "id": "fee2f944-1283-4cc0-ab41-1a9d91a708fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "af17b1fc-50c1-493a-ba0f-fb906b841131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24208aee-6927-449a-961e-4d94e59b6a5f",
        "cursor": {
          "ref": "b73f60c7-7820-4c26-adf5-db27fd5d5a83",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "588052e1-528a-4d5a-bc73-a0f53718f767"
        },
        "item": {
          "id": "24208aee-6927-449a-961e-4d94e59b6a5f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2f4e546a-f044-4adc-959f-e781514e0cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac456b29-00d3-415b-bae9-cc126746c47c",
        "cursor": {
          "ref": "ce8acee1-5b40-42eb-82f4-c7a2b57153da",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a0c54006-0059-447a-a3d4-b14ae9ded5a3"
        },
        "item": {
          "id": "ac456b29-00d3-415b-bae9-cc126746c47c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f45c10d9-1113-49a4-bb7e-6696fa4eca4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1010fba3-1f2a-4722-b8cb-f740a0730f86",
        "cursor": {
          "ref": "339ba9fa-b3b1-4f11-835c-98cd96f6325a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "23bd01c5-0645-4165-b984-fdb18853bace"
        },
        "item": {
          "id": "1010fba3-1f2a-4722-b8cb-f740a0730f86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "74106900-1952-48ac-b6be-4d51d3881d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c7ddbd-19fb-4058-8b50-931a8540be9b",
        "cursor": {
          "ref": "9f15272a-6456-407b-9fb5-a61e4ba81e58",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b084ec36-7044-4971-8ddd-61e31edcdb76"
        },
        "item": {
          "id": "f5c7ddbd-19fb-4058-8b50-931a8540be9b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b68f5fdf-88bc-417e-8eed-100c11700aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2282c5f9-7c37-47a2-beb8-859137f59111",
        "cursor": {
          "ref": "c85b211d-121f-44d3-a230-dba2b79c89d3",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fe7f02e2-5207-4519-ab93-4c8da981d7ee"
        },
        "item": {
          "id": "2282c5f9-7c37-47a2-beb8-859137f59111",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bae2e8f6-f1c4-475e-bb04-04e6915cc495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4d5c31-9729-4134-8bde-ce61a1071229",
        "cursor": {
          "ref": "44a37eee-02ac-4c87-831b-eedc9711c45e",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c3461810-4420-423f-a300-633ac8d5ee3c"
        },
        "item": {
          "id": "da4d5c31-9729-4134-8bde-ce61a1071229",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "093949bd-70ab-4863-999c-4a86e7c5f922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88aadef8-532b-4055-be73-2669c251d8aa",
        "cursor": {
          "ref": "3a905b08-370f-48fa-b41a-bf5955e2c4bf",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2b75b13d-7182-4c9e-8287-22a2586db20d"
        },
        "item": {
          "id": "88aadef8-532b-4055-be73-2669c251d8aa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "66f09ff3-da1e-4f2f-b274-f4e1622d4423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4416444b-fb0d-4632-b51f-379203e1dd9c",
        "cursor": {
          "ref": "239aefe1-cce5-4eb4-9e30-f097e8b32e69",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f4370141-f3a2-4b0d-bda8-7867054a7ed3"
        },
        "item": {
          "id": "4416444b-fb0d-4632-b51f-379203e1dd9c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b253d060-e189-4f91-ab3e-6a67ad95cab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89d0f3d-f213-47b5-959b-024dabf078ac",
        "cursor": {
          "ref": "4e4a39cb-1005-4177-b3c6-004d4a5b97e2",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "84170dad-4332-43b2-90e0-f6fe8ee48162"
        },
        "item": {
          "id": "b89d0f3d-f213-47b5-959b-024dabf078ac",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9d11517e-fbee-4ec7-89e9-5ad8a068b36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba791df6-a74d-4b50-af1c-9d47ff2b0117",
        "cursor": {
          "ref": "2eca7f1a-c77a-40bb-a9da-96cee89e8a26",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "763560d3-be5f-4bb6-b756-f0b38ee91219"
        },
        "item": {
          "id": "ba791df6-a74d-4b50-af1c-9d47ff2b0117",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "15311e17-53d3-42de-803e-ce52b341817d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b005dd06-fbcb-42d4-ae16-e2569b63ad81",
        "cursor": {
          "ref": "a2257082-c047-4ed6-90cc-36525850a050",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "60e9ab6a-5253-495f-bb55-e16fe759bd77"
        },
        "item": {
          "id": "b005dd06-fbcb-42d4-ae16-e2569b63ad81",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "be76f078-f914-44b7-8c0a-2a0dbfc8c67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c386dcd0-dfab-4150-8c23-ecc47dfd94ef",
        "cursor": {
          "ref": "47b8650f-86ae-4219-b609-5187a5aa2044",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "12d77f8c-ef3e-442f-9ed5-663ceb2d3094"
        },
        "item": {
          "id": "c386dcd0-dfab-4150-8c23-ecc47dfd94ef",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9f294466-80ff-4eb3-a88f-dbfb51adc0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0f9d2b-6af8-4b6f-b55b-3f5790b18b83",
        "cursor": {
          "ref": "95236fff-ad9d-4d1a-9f88-2f639e07a5b2",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2c152645-5e10-45e9-ab82-250fbda537a7"
        },
        "item": {
          "id": "7b0f9d2b-6af8-4b6f-b55b-3f5790b18b83",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c127fa6f-e115-4d3b-934a-87b1cb5a818c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ee6e32-ec71-4e9f-88bc-1e2cf1658a55",
        "cursor": {
          "ref": "50ba4dcd-174f-4ff2-b549-187124e63fe5",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "32800480-fe85-4163-9521-e600b39334ef"
        },
        "item": {
          "id": "b2ee6e32-ec71-4e9f-88bc-1e2cf1658a55",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "316beaa5-284d-4358-ba78-ad659c252f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800aa7c9-8ca4-40d5-8962-738333b31ace",
        "cursor": {
          "ref": "322b1014-beed-4dd7-a99c-cf4df73f0d3a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a6a2bcd5-deab-45e8-8a39-eff4c773e0b1"
        },
        "item": {
          "id": "800aa7c9-8ca4-40d5-8962-738333b31ace",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8c960284-e555-4dac-a58f-152900bad7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7a7678-f214-422e-a2e2-86d8c21ff9ce",
        "cursor": {
          "ref": "30d36233-e1f7-442f-b1dc-f19873bec1b3",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f4a802e2-b7a3-4f26-a7e4-f1f72a6abc33"
        },
        "item": {
          "id": "4a7a7678-f214-422e-a2e2-86d8c21ff9ce",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2667b30b-f0fa-4328-b5e4-eb576b6c63f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de4e0a0-3c4e-42c3-9200-32265fa63bd2",
        "cursor": {
          "ref": "a98cd1d8-52ec-4821-b1d2-68716875458e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1b130067-f675-4ed4-936b-d5bc27682d2e"
        },
        "item": {
          "id": "1de4e0a0-3c4e-42c3-9200-32265fa63bd2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "65273634-e9fe-4929-8aa9-402edb07728f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda7331c-2560-4266-b8ea-ce6f53ca94d4",
        "cursor": {
          "ref": "ffe67289-97a4-4036-a2cd-adf3f30b3910",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "003c88c1-eec8-4ec3-a90b-8c241a4928b0"
        },
        "item": {
          "id": "fda7331c-2560-4266-b8ea-ce6f53ca94d4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f26031a4-0d69-4013-9432-c7d44f79ef69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0b941b-d847-414d-8512-7278fc8e59a4",
        "cursor": {
          "ref": "9d78a8e5-ce4f-4920-8f82-26b7b73f3cda",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "298b354e-2b3b-4d34-af54-da2297d61e16"
        },
        "item": {
          "id": "4b0b941b-d847-414d-8512-7278fc8e59a4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3143bae3-6602-4fff-9fa4-d166e16ba18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b60465-b13c-45aa-8daa-54eb1a2e5c73",
        "cursor": {
          "ref": "ec7a92a4-664d-4951-a2a1-b5d00cd17a3e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dfb93868-13d2-46a7-9e5c-9aadb98410f0"
        },
        "item": {
          "id": "92b60465-b13c-45aa-8daa-54eb1a2e5c73",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b5d3eebc-fa53-4214-aad1-1edc5b809e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c702a5-3738-4e8f-938e-ec8a430a9514",
        "cursor": {
          "ref": "d3faacf1-6d6f-43f5-a268-67c6b47956ac",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "49ff5eb4-51b4-4462-869b-c1411df8624f"
        },
        "item": {
          "id": "28c702a5-3738-4e8f-938e-ec8a430a9514",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "41e139f7-2c48-4ed6-aac9-dcb4347e1ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6082f6-5017-441a-b528-17305704e7f2",
        "cursor": {
          "ref": "efb634e2-f75c-4903-9b4f-2ddde0b8fba6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d441b35b-0338-455b-9247-8eac0108f4e6"
        },
        "item": {
          "id": "5a6082f6-5017-441a-b528-17305704e7f2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8d855214-dcc5-43db-b091-17ef60ee3749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ec555d-d14f-460c-a8e0-bfe2385815e3",
        "cursor": {
          "ref": "1d90653e-4058-4c4b-8d4d-e0c7773ed742",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3dfce19f-77e6-4a89-8f55-d4d75c0b6edf"
        },
        "item": {
          "id": "11ec555d-d14f-460c-a8e0-bfe2385815e3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e2e216e5-34d5-44a9-8e49-de357c7b719b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab76d5eb-baa9-45d3-acc4-addfcdceb676",
        "cursor": {
          "ref": "81e21f36-0310-4fb6-96ed-7aa4243442f5",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "035f7ec5-66f3-4ea2-a003-d6e1931ab5b2"
        },
        "item": {
          "id": "ab76d5eb-baa9-45d3-acc4-addfcdceb676",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8906dafa-67f9-4f5b-8162-35c6cfae7471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbe7570-5929-4c42-98c3-856018063834",
        "cursor": {
          "ref": "83492834-6b46-4ed5-82ba-9ba77b913aa1",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "14100e86-aebe-4098-88c1-5217e2ca5a2d"
        },
        "item": {
          "id": "5dbe7570-5929-4c42-98c3-856018063834",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6440ffc0-1c1a-4189-b048-d9609388e51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8784c2-6b6b-44e2-bdf2-2831967eedc8",
        "cursor": {
          "ref": "953b24ce-9c4f-4940-af49-269ba2a906be",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8598012d-6611-4b18-8676-8b1753bd95f3"
        },
        "item": {
          "id": "8d8784c2-6b6b-44e2-bdf2-2831967eedc8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "710a82d3-7f46-451a-82dd-1ed3d8f68e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef599611-5102-4af4-a4ec-072588b9c0a1",
        "cursor": {
          "ref": "d15bc9c9-7003-482b-b792-6a3249974e4b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "31767230-e0b5-4c1e-bf97-a5e424de6026"
        },
        "item": {
          "id": "ef599611-5102-4af4-a4ec-072588b9c0a1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a8efd68a-9dfe-49d2-b146-2fac24691ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0d5c44-6e1a-401d-861f-452317d78aa4",
        "cursor": {
          "ref": "d67188eb-bd60-41ab-8030-cc4c83f0c472",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b8927a56-940c-417f-883d-1c80c3c3cff8"
        },
        "item": {
          "id": "ac0d5c44-6e1a-401d-861f-452317d78aa4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7c012496-dd27-43f7-bdfb-1533c863621f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a51eba-76ea-4e6e-81a9-128de1bc9714",
        "cursor": {
          "ref": "1f1da582-4d85-4168-921c-4344298d1064",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b33fae13-1e05-4f6c-9f7b-e290d6f5cb18"
        },
        "item": {
          "id": "e4a51eba-76ea-4e6e-81a9-128de1bc9714",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "18d82c76-f06f-4674-bf09-2c41c2f9750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82715f95-c2c4-44ea-ac40-cdecf0893772",
        "cursor": {
          "ref": "0b166a28-d9e6-405e-9bbb-df4b19f3cdce",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a38c6068-e061-4a9b-98b9-d1ca5c9ea1d2"
        },
        "item": {
          "id": "82715f95-c2c4-44ea-ac40-cdecf0893772",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ed58f174-9a13-42ba-8fee-3adfeeb8b2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bea15f-5d24-4eaa-b488-7bb8c99b3020",
        "cursor": {
          "ref": "8e73b97a-bafe-4cc3-8169-a7d0f6fb0328",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2aa1cc07-71fb-4f1f-90bc-46fa4292b60a"
        },
        "item": {
          "id": "22bea15f-5d24-4eaa-b488-7bb8c99b3020",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d719301a-812d-4673-a154-53859d3a7652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd28a62b-5bbd-44d4-98f1-47dc3a57f593",
        "cursor": {
          "ref": "437559a7-87ca-461c-b271-b82d911fe9c4",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4e826d1a-82f8-4d18-844a-a307b523a8da"
        },
        "item": {
          "id": "cd28a62b-5bbd-44d4-98f1-47dc3a57f593",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "85e8c2e8-d2b8-4fdb-9c10-dc3074450406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a84289-4051-4ecc-ab5a-be57f7879bd0",
        "cursor": {
          "ref": "f496de61-3de6-43bd-8d90-f52d05084431",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "76e6c6e8-983b-4122-b337-a6212b424aaa"
        },
        "item": {
          "id": "29a84289-4051-4ecc-ab5a-be57f7879bd0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c302c8fb-5344-4998-a51e-34ba4bd9e3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc46f36-a443-4531-8d22-47b50c886d88",
        "cursor": {
          "ref": "ba8b3eb5-f58f-4680-b772-33c37075d686",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8db12bac-6a8f-474b-9201-1612a12f2000"
        },
        "item": {
          "id": "0fc46f36-a443-4531-8d22-47b50c886d88",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "823c0e83-6db9-4695-b5a4-9242efa97ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87076767-c564-4bcd-91a6-a1761f626fbd",
        "cursor": {
          "ref": "0cf61186-3d40-4727-98c0-39ebdf155c1a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "77ef1855-e066-4794-89b9-065b5e1c8219"
        },
        "item": {
          "id": "87076767-c564-4bcd-91a6-a1761f626fbd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4dfcc0b0-7347-4df9-afcd-503034b288a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b0c893-0923-4790-a8ee-3fe2cb8743e1",
        "cursor": {
          "ref": "23a08f8f-e39f-49bd-8921-3e966fb5bf5a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e1eeb42b-08e6-4fac-ad8e-83bdaf2d0750"
        },
        "item": {
          "id": "64b0c893-0923-4790-a8ee-3fe2cb8743e1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5956a0f7-ce3a-410a-9633-2346cb3f0626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "2c3e6564-6522-4ddf-b641-68de9388d5f6",
        "cursor": {
          "ref": "bdcbf9c7-38bc-4c68-9b49-c64d40df22b6",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fd27a89f-cf34-4795-9b4a-7aeb39c2b337"
        },
        "item": {
          "id": "2c3e6564-6522-4ddf-b641-68de9388d5f6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8b703fab-2287-4ae8-9836-f03ffad0f5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "08f055a6-c699-41ab-aa8a-64c1a68454b2",
        "cursor": {
          "ref": "e7955b83-be73-4051-becd-87c73df48b2e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6db4f31c-9731-4890-9120-b9c85ba5a81d"
        },
        "item": {
          "id": "08f055a6-c699-41ab-aa8a-64c1a68454b2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1cdb3d2a-166c-4f25-9a15-58576db6f87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c7a65a67-12be-446f-8c4d-ba50ea94e027",
        "cursor": {
          "ref": "00586943-0b78-4615-aa71-01fcf7833342",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e5778692-47d2-4881-9f34-1357f7c61840"
        },
        "item": {
          "id": "c7a65a67-12be-446f-8c4d-ba50ea94e027",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3b524efc-d40f-44ab-b9b8-a9fa60d0b7a0",
          "status": "Created",
          "code": 201,
          "responseTime": 6533,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3b1657-ab7c-4642-923e-0c81660d6df0",
        "cursor": {
          "ref": "383a7daa-5dfe-4a32-b490-2912bc48de64",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d9f7538f-d2cb-46ac-9b8d-66eb8ab12d41"
        },
        "item": {
          "id": "cf3b1657-ab7c-4642-923e-0c81660d6df0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0210316d-e318-4249-856d-5699c0df2dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "31175583-4348-430d-b2e2-c0c143e9c33c",
        "cursor": {
          "ref": "9eb38aab-8072-4997-977f-3f0a718f2395",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3581fdb4-5eeb-4927-a7db-0abee8fba73f"
        },
        "item": {
          "id": "31175583-4348-430d-b2e2-c0c143e9c33c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2e329b4e-1922-4a15-ae93-0710082f8ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "c2df11e6-62db-40f3-a1da-7484b4325a8e",
        "cursor": {
          "ref": "0a823e16-5d2e-4b8e-ac3f-f14a881bb562",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2e6ed472-ae43-44b6-b7da-cddce4aeb510"
        },
        "item": {
          "id": "c2df11e6-62db-40f3-a1da-7484b4325a8e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c4db603e-be84-4962-94d8-97ee80d9aa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751da8f1-6bf7-4865-9019-aaac1b0e7e27",
        "cursor": {
          "ref": "1424f297-f761-4dc9-9ce8-6e0da5113f97",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e7b3439a-fe49-42c3-8efe-85c105218450"
        },
        "item": {
          "id": "751da8f1-6bf7-4865-9019-aaac1b0e7e27",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b78e32aa-6d8e-4bca-9e0d-3e71afa1a5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bb97a7-39dd-48a9-bc5c-19bba48a6e1d",
        "cursor": {
          "ref": "a80f216c-3684-407c-9eea-938069268c2d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8976a26f-cfee-4749-8291-6ea93084af0d"
        },
        "item": {
          "id": "55bb97a7-39dd-48a9-bc5c-19bba48a6e1d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "649c2065-f878-455f-b05a-8645f08a7621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce87d68a-13bf-4c36-babc-a4d99b61a107",
        "cursor": {
          "ref": "4968146f-d788-44ae-9539-5dbd7cd08765",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4d80b148-5b03-45b0-ae6e-47a1f7b567d0"
        },
        "item": {
          "id": "ce87d68a-13bf-4c36-babc-a4d99b61a107",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "946239ae-10dc-419d-adad-1837efaebdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f398c604-c7c9-4014-b367-31eb966b2486",
        "cursor": {
          "ref": "b8353281-4d4d-43df-9b41-d393f789b19a",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7326524d-9bdb-4a39-8c07-4b67d3076d31"
        },
        "item": {
          "id": "f398c604-c7c9-4014-b367-31eb966b2486",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5189af9f-c2c8-4eb9-8fa9-5c86951bc002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38a8c9e-5da7-437d-bcd3-433da0de7f11",
        "cursor": {
          "ref": "15bf9209-fd13-44bd-85ff-13c7d69f1d4e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e5c3f102-6ba0-4a23-9068-deafd25af821"
        },
        "item": {
          "id": "c38a8c9e-5da7-437d-bcd3-433da0de7f11",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ab7cd172-1b0b-448f-952b-9f82023a6ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2916c9-4e90-48d8-b3b3-4d67db0017ba",
        "cursor": {
          "ref": "7d7af847-ce34-4b7d-98ea-3800adffec01",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e1492f44-e67f-461f-923d-9681355b129e"
        },
        "item": {
          "id": "9d2916c9-4e90-48d8-b3b3-4d67db0017ba",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "933c1ab7-20d0-4ca8-a6d0-f3a9f51c1b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd7285c-ee17-4708-86ea-654b6109c725",
        "cursor": {
          "ref": "6e4e2661-16db-4f76-a9e1-71f171132824",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "88102d8a-3718-4af3-b055-99f8e2c326fe"
        },
        "item": {
          "id": "ecd7285c-ee17-4708-86ea-654b6109c725",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "95a5e1d4-7c21-483f-9f22-d0286f0ba644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994049cd-d6e5-448f-bb55-5ee1bc84c7ae",
        "cursor": {
          "ref": "e0518d1a-2a97-4cf9-b130-3d41d0b8e0ed",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a03f8263-8d0a-46a0-8849-04074c5e0e41"
        },
        "item": {
          "id": "994049cd-d6e5-448f-bb55-5ee1bc84c7ae",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c31b456c-9157-4d45-a973-8da7c86a4631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f0ed1a-f739-467d-ba0d-61ffe39bc7b1",
        "cursor": {
          "ref": "986cc4bc-786e-4587-881f-01e9d3a38caf",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6a1f69f8-b585-4e74-95a4-fb117a15e2e8"
        },
        "item": {
          "id": "48f0ed1a-f739-467d-ba0d-61ffe39bc7b1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "39207bf4-b9f0-4f4c-aa57-91b6e5f79436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cc55c0-fd35-455f-b84f-d276c1670795",
        "cursor": {
          "ref": "14e47e47-f7dc-4748-8c19-3d485a7a5a9e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a7579674-f541-42b6-9739-3aefbb0e06ee"
        },
        "item": {
          "id": "06cc55c0-fd35-455f-b84f-d276c1670795",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5563f8dc-58e0-4be0-a604-09f4d376c568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc42b22-240a-4bb0-88e7-54e3d3954d1e",
        "cursor": {
          "ref": "3e1465b8-6132-44e4-affb-1b6f55b76246",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7dffaba1-2743-4c95-bf10-519376c2a502"
        },
        "item": {
          "id": "bdc42b22-240a-4bb0-88e7-54e3d3954d1e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a31db210-b653-4abf-b56f-fc4dca13cb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39481f7-1a8d-42cc-93c5-4390d2765bdd",
        "cursor": {
          "ref": "39559f7d-fb89-4fc2-bb4d-0691aea471eb",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9c394467-4e02-428b-9032-51bef5698bad"
        },
        "item": {
          "id": "f39481f7-1a8d-42cc-93c5-4390d2765bdd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3f227689-2403-4b02-a0d7-76d410b21b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31408f6-46c8-4ca5-b9a0-6c4da4d9edea",
        "cursor": {
          "ref": "5189810c-a01c-4654-b23a-4d8e07edddf5",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f3c6ec52-0467-4d7f-ae39-d9ce9d6011df"
        },
        "item": {
          "id": "c31408f6-46c8-4ca5-b9a0-6c4da4d9edea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "443b20e4-49d5-49d8-9d42-d667ec8caa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2bfae0-7027-48d3-9c4b-e37a24afc469",
        "cursor": {
          "ref": "3d22b806-b3b6-4ced-a7ca-df28fb10152c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d7c57a8c-1362-4603-9b73-f659be5661be"
        },
        "item": {
          "id": "2f2bfae0-7027-48d3-9c4b-e37a24afc469",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1937a610-a0a0-4ca9-a468-f2fc727d436e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90bf5ac-dd8e-423d-8e7c-dac9c80ebd46",
        "cursor": {
          "ref": "aae6b201-5879-44a2-a767-e1048b6e4d1f",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bb67918d-c17d-4517-a1a8-ccbdb990fff8"
        },
        "item": {
          "id": "d90bf5ac-dd8e-423d-8e7c-dac9c80ebd46",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "67473379-7da9-4599-8fca-155f6677e9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7837ebde-42bc-49d7-99e9-1635bd1b65a2",
        "cursor": {
          "ref": "e0ab48f2-3cc1-44dc-8b52-734ffe686982",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fea9037d-4101-4c95-bc68-abee2714a337"
        },
        "item": {
          "id": "7837ebde-42bc-49d7-99e9-1635bd1b65a2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "24beb367-6a50-4993-8091-131d1e40d735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e17cc1e-af37-4930-ac3d-452115cfd602",
        "cursor": {
          "ref": "1263c286-4df4-4838-b2ba-bf3dc7ab84cd",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "96808066-68a1-4f55-a483-3da63eed4b60"
        },
        "item": {
          "id": "3e17cc1e-af37-4930-ac3d-452115cfd602",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cc6c46f0-58f1-4a8f-99d2-eaa52924a7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630364c8-13fc-4210-89b5-9fd097eee46f",
        "cursor": {
          "ref": "6a340e86-3b21-4e25-82c6-f7c6d8a11cc6",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cf4502c3-733f-4e9c-be21-56698873958f"
        },
        "item": {
          "id": "630364c8-13fc-4210-89b5-9fd097eee46f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cc46ce2a-211d-48d4-a480-9f03b63be75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2506cd1-bcab-4ebc-a6e6-0f2292889f35",
        "cursor": {
          "ref": "17a8312e-d813-4cf3-9dcd-1ecc6474217e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2852829c-a959-46c1-aa18-969622eaecda"
        },
        "item": {
          "id": "c2506cd1-bcab-4ebc-a6e6-0f2292889f35",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e98fb29c-997b-4424-bc85-b137f8656325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19994e3a-0469-4a9f-af41-6d18c2aa9d9e",
        "cursor": {
          "ref": "03c0090c-2492-43a6-a1b7-553585be971e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b923d181-85bc-4bdc-86a1-482fff6923d8"
        },
        "item": {
          "id": "19994e3a-0469-4a9f-af41-6d18c2aa9d9e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "924be28e-8ad9-41cc-98ad-cce3a1277514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1538ab20-71bf-44bb-ba51-98f740a6957b",
        "cursor": {
          "ref": "f83f5d2c-8ea3-46dd-8fdc-c51fad9f8404",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c8f0a9f7-2dfd-4cfc-bb87-88e11998e579"
        },
        "item": {
          "id": "1538ab20-71bf-44bb-ba51-98f740a6957b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "272ad8c6-0af8-4e04-8ad6-e6cbad152d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda5bc4b-1410-473d-9a32-ea541a6d8ccf",
        "cursor": {
          "ref": "32637ce7-bae1-4d91-8f26-2f2d8554f722",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e2652135-742a-48e2-b98c-ea10eabefc49"
        },
        "item": {
          "id": "cda5bc4b-1410-473d-9a32-ea541a6d8ccf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b2589022-f04b-4945-8e6e-d3c0be9e1260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674f41e3-2f47-4dfb-92ca-c8e9c649806a",
        "cursor": {
          "ref": "960ff2a1-3d74-4dbb-bf9b-d5e49635bc61",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d8321f77-d0e9-40b4-8cf9-99bd858faec0"
        },
        "item": {
          "id": "674f41e3-2f47-4dfb-92ca-c8e9c649806a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2563a5a3-03a2-4976-8652-ee0910d4cf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc62b7d7-928f-4cb2-aa8e-4c7ea5af50ce",
        "cursor": {
          "ref": "27f2b243-c96e-44fd-a9f8-41b1d191c842",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ef5cbe7a-d5b8-4697-877e-75ee10f13926"
        },
        "item": {
          "id": "fc62b7d7-928f-4cb2-aa8e-4c7ea5af50ce",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "261eda4c-1b5d-40ab-a5eb-d65aa44d2601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4199e951-a83c-448b-b430-09332f79fff5",
        "cursor": {
          "ref": "1b995e03-fad9-48f0-9f3d-e8ddd1ec6b23",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "43f71643-3087-4044-9ade-2baef20d5fdd"
        },
        "item": {
          "id": "4199e951-a83c-448b-b430-09332f79fff5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9e769b25-f8f0-4122-80db-2b3b65768331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bbe802-4459-4586-8271-f2bee52d99e6",
        "cursor": {
          "ref": "16fc803a-7135-4c24-a5ad-d24ddb6e5081",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bba4173d-fa3b-4e9e-9990-452de39c371e"
        },
        "item": {
          "id": "17bbe802-4459-4586-8271-f2bee52d99e6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e1c225a9-cceb-472b-a16f-d6239d3fd329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6208a5c4-6a18-4c7c-93f5-dd57c9d14815",
        "cursor": {
          "ref": "51bb9bf9-1069-4821-a9da-285ed1359d64",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e51cbeb7-c205-4808-812f-cb0363e13e54"
        },
        "item": {
          "id": "6208a5c4-6a18-4c7c-93f5-dd57c9d14815",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d73ce637-9ea7-4cf8-978e-8dc99dbc13bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c64b09-bdf5-4650-ab00-ba0281b14f98",
        "cursor": {
          "ref": "ea82d95f-c858-4e8e-9695-b046e8b3f687",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ca03c951-daef-41aa-b9ea-359c25db45d3"
        },
        "item": {
          "id": "e7c64b09-bdf5-4650-ab00-ba0281b14f98",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d7a2e6ef-1317-4532-a1c5-439b0f0211ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5969bf5f-8ca9-426d-9692-43998d0a1c13",
        "cursor": {
          "ref": "48d76ae3-ef1b-4c5f-b013-c7048178ad94",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e1a7423d-aabe-4d60-a1ee-b06ef3b6b1d7"
        },
        "item": {
          "id": "5969bf5f-8ca9-426d-9692-43998d0a1c13",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f78ffa53-0272-44f2-b0d5-6ec3fc09571b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8842f72e-e669-408d-9f9c-ce7d8c0b4527",
        "cursor": {
          "ref": "8645f35f-3bd6-4cfa-8724-7063103930b3",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "483ee2a2-76d6-4d02-86b1-71e705eb8629"
        },
        "item": {
          "id": "8842f72e-e669-408d-9f9c-ce7d8c0b4527",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b6e46f26-cfef-4b70-83ae-8c5fa9211fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97851183-1f44-4f12-a3c2-0c0a8ed07f41",
        "cursor": {
          "ref": "22804397-4221-489d-8a57-27dc23f30dbd",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "559990a6-d6ad-4686-9548-904983249a74"
        },
        "item": {
          "id": "97851183-1f44-4f12-a3c2-0c0a8ed07f41",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a7c36d10-d3a4-4626-a872-f219083e89a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4996a8ba-6f34-4b48-ac21-23f1851c2a0b",
        "cursor": {
          "ref": "e0d5e45e-5509-48d8-836f-f9b2491381c3",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "82e4400d-e339-415d-8893-0f73517228fc"
        },
        "item": {
          "id": "4996a8ba-6f34-4b48-ac21-23f1851c2a0b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "210de492-1601-4237-b90b-bef0d6c52f06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8f37f0-a972-45bd-b8b0-b77f0d3feefe",
        "cursor": {
          "ref": "7a281f00-efaf-4139-acbf-299c3bf0ba8d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b4d066ab-ecda-4847-9701-9366c07cba71"
        },
        "item": {
          "id": "0b8f37f0-a972-45bd-b8b0-b77f0d3feefe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0e0064e7-5c4b-4194-b645-ddfb8792628e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94902744-32cd-4226-a8d1-5d298883327f",
        "cursor": {
          "ref": "25ee077f-6111-4c69-bee2-16b58fe735a2",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "17c98f7d-89aa-4ca2-a5c8-121a7776bec5"
        },
        "item": {
          "id": "94902744-32cd-4226-a8d1-5d298883327f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb13c059-5908-458a-9d2f-6f15e95ed5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103a175d-5ba5-4b91-a9ad-8684086e44be",
        "cursor": {
          "ref": "a8f168be-ba86-4be0-9d2a-588ae40b552d",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fc22ac8d-e25e-4942-af61-d9807d7a280f"
        },
        "item": {
          "id": "103a175d-5ba5-4b91-a9ad-8684086e44be",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2561eb4c-cf93-429c-8820-f2a855a920d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f78a59d-c945-42c8-bfa9-ceaa5e479968",
        "cursor": {
          "ref": "51518cc2-b15c-44b0-8133-3a983330152f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1d2eb5c0-b619-4755-96f9-29652fc96a03"
        },
        "item": {
          "id": "4f78a59d-c945-42c8-bfa9-ceaa5e479968",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "637ee784-6206-4a1a-9333-86eeeb17590e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ff7791-99d9-4514-b999-8a57179d727f",
        "cursor": {
          "ref": "54a4ea33-177a-4c35-ba8c-3e8aa5d3d92a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "82d19169-494c-4878-9401-110d60ab0f26"
        },
        "item": {
          "id": "d7ff7791-99d9-4514-b999-8a57179d727f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4b3ceba3-96c0-4fdc-b3a5-27821fd06bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b410f9d-b9a7-4b09-92db-ce27c745326f",
        "cursor": {
          "ref": "f8105b66-8f4e-418c-af8e-b5e3e96300a4",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a2f56de5-1872-4bed-8fa6-4c6bcc8bdef4"
        },
        "item": {
          "id": "9b410f9d-b9a7-4b09-92db-ce27c745326f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "527f9a69-39b3-4785-928f-e078bd949bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a327792b-9117-4355-a938-01d39ec2507b",
        "cursor": {
          "ref": "08ea86f4-9cf2-45e3-89c0-bb788d94b4de",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d2569b7a-71c8-426b-ba62-2fb09171eeaa"
        },
        "item": {
          "id": "a327792b-9117-4355-a938-01d39ec2507b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e00142e2-ec9d-477d-8c3d-8bf8b825ad48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5770e1-ca79-46b0-b993-a2f5577a89ce",
        "cursor": {
          "ref": "23006651-dd99-4b09-aa00-e52e9d5497c1",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b4431437-4020-4f93-9f90-fd57d7d6db95"
        },
        "item": {
          "id": "8c5770e1-ca79-46b0-b993-a2f5577a89ce",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fef0a62f-eebf-4f9b-b217-15f8e9156e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0ce06f-c237-4d38-8e23-fb04bcb4deb0",
        "cursor": {
          "ref": "477d83ef-31c7-428f-a171-23e2cefff8f7",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f43852d1-9e03-4c09-a9ef-1389a8266053"
        },
        "item": {
          "id": "3d0ce06f-c237-4d38-8e23-fb04bcb4deb0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "03baf16b-e9bb-49f2-8b08-3021c39a3585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb067070-f62b-4b00-a0fc-cbdfa075cd22",
        "cursor": {
          "ref": "f7c81e0e-a31b-4ecf-8b0e-5a314a025773",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ebaea507-c807-4a4c-b58b-1baba9bc0e58"
        },
        "item": {
          "id": "fb067070-f62b-4b00-a0fc-cbdfa075cd22",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1e0c25e7-f6bc-4d8d-9a49-d16535616fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6a7612-df52-48a5-85af-04fe52fe1295",
        "cursor": {
          "ref": "4d14d70a-8247-4d15-875b-e966f5f3fee3",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "de52a589-2339-4a61-9de6-983e04c7e07a"
        },
        "item": {
          "id": "cc6a7612-df52-48a5-85af-04fe52fe1295",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "36635cca-2b60-43c4-879c-76471be05406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17795f60-6ab8-41e6-a642-a4539b63de0b",
        "cursor": {
          "ref": "986b03b4-657b-4baf-bed5-cd0e689e3d9b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "548e8aad-dc81-451c-ad3e-d51094486e5d"
        },
        "item": {
          "id": "17795f60-6ab8-41e6-a642-a4539b63de0b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "de480637-2398-474c-8dd2-b021e866184d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68c4f6e-47ad-45bb-b28e-4b39ed1ca962",
        "cursor": {
          "ref": "83323c07-b157-4641-a595-0c7811dfda8e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c093e1d9-641d-4dba-bae7-cab31f159060"
        },
        "item": {
          "id": "b68c4f6e-47ad-45bb-b28e-4b39ed1ca962",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "83ec2727-9c0b-4376-bcc1-2d149d6e1ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6d1d11-d5b1-4941-b706-76194fed67d8",
        "cursor": {
          "ref": "7b0dcf97-dea4-435f-b70b-2919e5d98a48",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0550e64e-0bcd-491d-b81b-e55bf0871c9e"
        },
        "item": {
          "id": "5b6d1d11-d5b1-4941-b706-76194fed67d8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dceaa854-20d1-477e-b625-a19ab16589cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f1dc3d-19c7-4a2e-9309-de887fae7ae0",
        "cursor": {
          "ref": "38921bc9-c510-4133-9fd4-36d42453890d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "65b14689-9146-477f-9e5c-bdffe43501c1"
        },
        "item": {
          "id": "97f1dc3d-19c7-4a2e-9309-de887fae7ae0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d7e9652f-691a-40c4-9eee-d911a5470654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b7447a-5cdc-4a64-ae47-5743f9f7fea7",
        "cursor": {
          "ref": "f334acf3-02cf-40e4-9ccb-aa0f46e01603",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "83c9c2c7-c62d-4de4-b008-c8a2677ab4cd"
        },
        "item": {
          "id": "49b7447a-5cdc-4a64-ae47-5743f9f7fea7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dd2f7a85-a91b-40b5-99ff-0cd430c24123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9162099-3144-419d-b609-4f595ad3d57c",
        "cursor": {
          "ref": "8eecca6e-3bdc-4952-8d18-a0dfc32202a4",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0dfc0032-1ab6-435c-9b6d-3c3b6a522b1d"
        },
        "item": {
          "id": "b9162099-3144-419d-b609-4f595ad3d57c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dcc03579-fe86-4f75-bee4-0def63c5e3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c002db6-4907-477f-97c9-c1869a025824",
        "cursor": {
          "ref": "5c8bd844-109f-470c-b54d-facdaf38dde9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c422b5d1-6e0d-4ea0-9ed2-9905105a4359"
        },
        "item": {
          "id": "8c002db6-4907-477f-97c9-c1869a025824",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7f0fcf90-adae-459b-a884-c31aaa2f8a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220f66ff-c053-46a8-a885-4cafb38eb620",
        "cursor": {
          "ref": "252648b9-7c38-45a8-b64d-26a23650ec2e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b86793c6-3254-475b-9d2d-8003e3f03198"
        },
        "item": {
          "id": "220f66ff-c053-46a8-a885-4cafb38eb620",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c0e22fc4-40b1-403d-90d4-fc113eb45c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea9f3ec-486a-4b33-a25c-fbbae1f9cc22",
        "cursor": {
          "ref": "260ca38f-ec62-454f-b307-0abc71c1a1c6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "19dd3872-f44b-4c2f-86bf-60ece87376e9"
        },
        "item": {
          "id": "dea9f3ec-486a-4b33-a25c-fbbae1f9cc22",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9436c50c-41ee-458e-aea6-4236e8058ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1586e8-1f70-4c24-a65a-88545030d5ce",
        "cursor": {
          "ref": "e9303bd4-cb4e-4c21-918e-cb7e562bc18c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "87aa0ce8-a022-45dc-be6e-80fa7ea180d5"
        },
        "item": {
          "id": "4c1586e8-1f70-4c24-a65a-88545030d5ce",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e7cd3b7b-08b9-4137-b2fe-3300120624b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1333cf-23e2-4e96-931d-31915bb593ae",
        "cursor": {
          "ref": "99e3c568-baae-483a-8164-ba788c0768c2",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4039a5a6-a2fd-44b3-9735-ed9e426d2f27"
        },
        "item": {
          "id": "6d1333cf-23e2-4e96-931d-31915bb593ae",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "769d1467-f29e-4192-b5ba-04cd870bb090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4873f5-a3d8-43cf-9485-8f7b97770897",
        "cursor": {
          "ref": "00d1cfc5-d8a8-47b6-8af7-35936d426815",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ccddf0b3-da29-489c-b0e1-b738ac7bef20"
        },
        "item": {
          "id": "aa4873f5-a3d8-43cf-9485-8f7b97770897",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bba5ba98-6889-4964-bb6e-3143ff105997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db52b20-bc48-4724-b273-3ec79664f044",
        "cursor": {
          "ref": "e215ad94-0f9f-44a1-a2a5-279ed03e26ec",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "548eaffe-8bbf-4b38-903c-b67f8ce92f22"
        },
        "item": {
          "id": "3db52b20-bc48-4724-b273-3ec79664f044",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e0bf93fa-ea12-4480-9e63-91431812ffbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28690efd-9aaf-4a73-95fc-7b593f306ff5",
        "cursor": {
          "ref": "0d43621a-258e-49d0-b82a-940b5ca4de45",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e5563915-1bd4-4d6b-8571-5fc27fccf631"
        },
        "item": {
          "id": "28690efd-9aaf-4a73-95fc-7b593f306ff5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "26b0a622-3cc7-4aa4-b34b-08fd0d925744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850e82d3-8c4e-4117-af2f-b3d47bc8e747",
        "cursor": {
          "ref": "a3e49b13-835e-44a9-bd30-2e18a8ccc765",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e5832f89-7603-4961-897b-10ebffe559f8"
        },
        "item": {
          "id": "850e82d3-8c4e-4117-af2f-b3d47bc8e747",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "69ac2dc6-a40b-4054-ae97-a93eb3da0523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d47f575-59dd-4311-9563-1b98d9833e02",
        "cursor": {
          "ref": "61d47b67-3663-4c39-a090-331ba216eeba",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3ed75618-3d1f-426f-a644-04fc7b2300dc"
        },
        "item": {
          "id": "7d47f575-59dd-4311-9563-1b98d9833e02",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fbea4a98-27ac-4500-bf50-a0ae717f51b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a75a56-12c0-4a31-803b-1d0e257d1bcd",
        "cursor": {
          "ref": "d704e60e-0a68-4465-b5e0-a70eae4b5bc6",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a9275296-474c-4458-9298-6a87e1a0a8be"
        },
        "item": {
          "id": "a5a75a56-12c0-4a31-803b-1d0e257d1bcd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "efa52b3d-a256-47a5-9738-6da9df48e396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbb7055-faae-4095-b17e-0ad6fb2ceb6c",
        "cursor": {
          "ref": "d090fae9-280d-4d6e-9308-6178140d6a6a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "65938f4c-2890-46e7-9411-aa12c5e78c06"
        },
        "item": {
          "id": "7fbb7055-faae-4095-b17e-0ad6fb2ceb6c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2536b77d-cdf2-4032-a57d-5937d0ae4002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97b108e-4863-42f6-8e60-1ef43e3753d2",
        "cursor": {
          "ref": "a838f81d-049c-45c0-837d-09b028be7d39",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e04b4db8-8315-4c08-8579-9cfa7f099917"
        },
        "item": {
          "id": "d97b108e-4863-42f6-8e60-1ef43e3753d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "78e89a6b-2ff9-45ea-a7cd-e207d143f6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb71bea9-0032-4775-8096-49da2ed56b17",
        "cursor": {
          "ref": "09d7b837-e3b7-4a66-8bb6-d142baeda07f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b2778333-adb5-4aab-a63b-380332e87bc3"
        },
        "item": {
          "id": "eb71bea9-0032-4775-8096-49da2ed56b17",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "939ac559-c4b9-4475-bfff-d27a89b88b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed59bcb-f3d7-43dc-88e3-6cac1323140b",
        "cursor": {
          "ref": "3ee9ee72-5925-43f4-93e5-22f1124c0540",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "119e2e60-d058-40e1-ab71-6d6f6c88381b"
        },
        "item": {
          "id": "eed59bcb-f3d7-43dc-88e3-6cac1323140b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7fb94fa0-10fa-48e9-90c2-1e21b3b4a08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2058ee-d8b5-4fd2-8df6-96a946b5c655",
        "cursor": {
          "ref": "e7373dd5-7fa7-4f06-913e-874764f36b2b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "95e74990-f473-437b-b5cd-ec0380ff4e54"
        },
        "item": {
          "id": "1f2058ee-d8b5-4fd2-8df6-96a946b5c655",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "46e13c5b-7afc-4514-98db-c0b0f6db5f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a130364e-be74-4ed3-8db7-26b05d358a27",
        "cursor": {
          "ref": "347bd4fb-ad1e-4517-b0f6-27e455b92cd1",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "50505a11-24d1-4bed-a267-fec5ad3196c7"
        },
        "item": {
          "id": "a130364e-be74-4ed3-8db7-26b05d358a27",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d4a9c970-2dd9-4e52-b1d5-4a752927e3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d438d8c-33be-4d9e-9d7d-23254ebbda3e",
        "cursor": {
          "ref": "45fe1cb0-68ce-49d1-a797-2faaeb5daa53",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d82e1e4a-7693-4cef-9b96-7de7cb1dea93"
        },
        "item": {
          "id": "4d438d8c-33be-4d9e-9d7d-23254ebbda3e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "921b80a1-4529-4519-b6a3-156ae5644ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522b8f6d-ccc8-4847-9a9c-9b5d03ef5008",
        "cursor": {
          "ref": "cf848b24-da53-4e7d-b933-8897f015aec9",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "98b67ca6-bf6c-434c-9957-6665be190249"
        },
        "item": {
          "id": "522b8f6d-ccc8-4847-9a9c-9b5d03ef5008",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4a0276e1-25ba-4eb0-89cb-0ffa8aabbf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0662ace-8a97-47e8-aa43-5ae20bac7ba9",
        "cursor": {
          "ref": "0c7cbd14-2f4e-40fb-ab69-2c47b415db9b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c94bbf46-01f9-4029-9a2e-970aa2d0638e"
        },
        "item": {
          "id": "c0662ace-8a97-47e8-aa43-5ae20bac7ba9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ff4855bd-9405-406e-99c2-502817242baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10ec4bf-b239-4a86-a92b-4e112f1165f0",
        "cursor": {
          "ref": "dce662b2-cf3f-4958-92bb-2d0b90627b94",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "23623f4c-2562-43cf-9d7e-2050c8c98673"
        },
        "item": {
          "id": "f10ec4bf-b239-4a86-a92b-4e112f1165f0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "894dc7eb-7326-456c-8c41-131024305257",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1bee58-e14a-4e6c-86f4-554d72d84380",
        "cursor": {
          "ref": "2dc39013-8a82-405d-b5f4-8dd51b6dd1c1",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "203a8911-d5a1-4010-9785-76749bf35f62"
        },
        "item": {
          "id": "ee1bee58-e14a-4e6c-86f4-554d72d84380",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8f5deb53-768c-431b-ad3a-bb6752ee7493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353ef8ca-9362-4b09-9ffb-eeb574eb8776",
        "cursor": {
          "ref": "8ead0383-593d-4766-9b65-0255517db4af",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8b248054-571c-44c0-9b50-95db6d62e55f"
        },
        "item": {
          "id": "353ef8ca-9362-4b09-9ffb-eeb574eb8776",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "95d796ca-36a8-42e4-b417-13e562211304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76478278-aed5-493f-9536-82d06076e7bc",
        "cursor": {
          "ref": "39058fd2-7a4c-4f4a-a9c8-affc01c849ac",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4ef568bd-439c-444f-8892-d7fcea719056"
        },
        "item": {
          "id": "76478278-aed5-493f-9536-82d06076e7bc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9344bec8-ba43-4efe-bdfe-8e82e0811117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de27f75f-e505-4f2c-85de-2677f67b1724",
        "cursor": {
          "ref": "c4d7d726-9511-47dc-81f0-ebd503cb8b00",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7649ec02-5043-45a8-88d2-a87b6b973fb3"
        },
        "item": {
          "id": "de27f75f-e505-4f2c-85de-2677f67b1724",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b5c69ae3-c640-46fb-b0b8-415ea31a3f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf8c6f0-e373-446a-8bcb-2cfaceb76fd3",
        "cursor": {
          "ref": "c821b83a-8884-444d-a539-d7cf5bd0f703",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d6e4ddb2-5095-4c90-8fc1-5c5960fdfdd0"
        },
        "item": {
          "id": "7bf8c6f0-e373-446a-8bcb-2cfaceb76fd3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f9b6466c-4d56-4810-9255-54b574e0d46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75970e72-b168-4425-8792-251a5b33fbed",
        "cursor": {
          "ref": "3492655b-acf4-4867-b944-6db0adccbdd6",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ad0171f0-e0bf-4bfe-b38d-0bbe9455e9a4"
        },
        "item": {
          "id": "75970e72-b168-4425-8792-251a5b33fbed",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ce1728cf-3305-42ad-a67e-fbf518c1d24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc195254-a548-415d-96eb-f4610f94933d",
        "cursor": {
          "ref": "7da0c247-ba26-4129-a6a9-8b9bbe0da174",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "54eb8a39-7951-49ae-a84d-db34fa4beb97"
        },
        "item": {
          "id": "bc195254-a548-415d-96eb-f4610f94933d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d9afd890-40aa-4569-ba0d-8e4e02f48e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05506a2-b739-49fb-8ff8-a6438a65fa5b",
        "cursor": {
          "ref": "592a7a6d-f402-4416-8966-912d4082dcfe",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f7d870c6-b682-41ff-9226-608882b46f87"
        },
        "item": {
          "id": "f05506a2-b739-49fb-8ff8-a6438a65fa5b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "748ee6d6-83c7-40be-b8e2-66cc1de633c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb9aa87-aaab-44de-9747-3d739c5a9a4d",
        "cursor": {
          "ref": "0bb873e0-94b2-4121-9009-c5e45e9936bc",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8f9622cd-2590-4a73-affe-57e4414fca2c"
        },
        "item": {
          "id": "cdb9aa87-aaab-44de-9747-3d739c5a9a4d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3edfd73f-2368-4557-8ba6-b6fe26015663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6201a9c4-ace2-4e8f-91d2-fec4f859f5f8",
        "cursor": {
          "ref": "99bbc302-6df5-4b66-8608-1645bf6a9efe",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f1e53b23-4d32-437e-8181-5e9e31b2fffb"
        },
        "item": {
          "id": "6201a9c4-ace2-4e8f-91d2-fec4f859f5f8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fb20e2e7-8f16-4ef5-a3ea-a1653a4ce953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0c7d26-3017-43e0-a95d-a48bc1fac70b",
        "cursor": {
          "ref": "32040ae9-4761-4d30-b967-49988ae046a7",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0085036c-c583-48df-8eaa-ac8c935c0a95"
        },
        "item": {
          "id": "7a0c7d26-3017-43e0-a95d-a48bc1fac70b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "92bbf223-6fcc-4e37-88d2-65fcaf1f492a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f110d0-1958-4000-a174-b507100182b0",
        "cursor": {
          "ref": "6fc91083-5442-4f40-bf2b-8ce0887d5b67",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bd7bfe83-44b3-48e0-9020-09f741b54549"
        },
        "item": {
          "id": "08f110d0-1958-4000-a174-b507100182b0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "28b8324b-e705-4b73-b610-7e7bd59fd5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e34a58-907f-49ca-b370-21ed45f9eae9",
        "cursor": {
          "ref": "6a04712a-ec01-4d62-be8e-c3303733e942",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "04a5c588-1f59-4ce2-9b89-82d8779de326"
        },
        "item": {
          "id": "53e34a58-907f-49ca-b370-21ed45f9eae9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b793e18d-d427-4b28-a7cc-556563685a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd72ca6-7fca-40a2-b151-96de47cde9c9",
        "cursor": {
          "ref": "033b7a98-cbd4-43c5-b6ea-638c1297eeb1",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "16d63495-5a52-4f3c-b0da-45a6d8fc3664"
        },
        "item": {
          "id": "2cd72ca6-7fca-40a2-b151-96de47cde9c9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3f08832f-08ae-47eb-86e0-e256de0c9269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64d3531-200b-4aea-bad7-72d6b4c4b96b",
        "cursor": {
          "ref": "d373fc22-8a67-4dc4-8c16-a113cba4777d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "107620e1-a9af-4607-9d33-cced5f02bdc4"
        },
        "item": {
          "id": "c64d3531-200b-4aea-bad7-72d6b4c4b96b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "af228073-83b5-4e0d-bfdc-6bf683ec7c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754778ca-fcaf-43f9-b8ca-6ca0b4acdd38",
        "cursor": {
          "ref": "f22caa38-3e41-4461-b3dd-ebfb2997992f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e40e5c28-7a18-4d31-88e7-870baa8dc646"
        },
        "item": {
          "id": "754778ca-fcaf-43f9-b8ca-6ca0b4acdd38",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d5a4c5f4-9992-4fb6-9bbe-6323e889f07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4d3e15-dc11-4fcc-a7e6-ea35c035324a",
        "cursor": {
          "ref": "1fa53443-1bac-4636-b282-3e59d7d282cb",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7520b6f9-e82e-404c-91ae-62d6010de1d6"
        },
        "item": {
          "id": "0c4d3e15-dc11-4fcc-a7e6-ea35c035324a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6b50c17d-b4db-433f-8bba-2cfadc82fb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d726851-bdd0-4b12-a05f-04c24c5f1552",
        "cursor": {
          "ref": "afa928d8-5035-475f-aef4-39b97c9e9501",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d38eb0de-c05f-4d96-8380-a165565020bc"
        },
        "item": {
          "id": "6d726851-bdd0-4b12-a05f-04c24c5f1552",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2d91de89-144e-4d4d-84cb-8e10ce802541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57bbd64-8ae3-4997-8f4a-851ed7931890",
        "cursor": {
          "ref": "c9b6cbb7-677e-4870-93c0-561aab9dae50",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f5cd1fa2-fdb1-432c-9070-9c964721d454"
        },
        "item": {
          "id": "a57bbd64-8ae3-4997-8f4a-851ed7931890",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4ea54788-abd6-493e-8b2c-d0a75d2d6a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c33213-be77-401f-af00-2f858b30bf1d",
        "cursor": {
          "ref": "84b23000-eeed-4601-a4f4-7d386ec4f6e7",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "312bbafc-04ed-4428-bfff-ce25737df81c"
        },
        "item": {
          "id": "a4c33213-be77-401f-af00-2f858b30bf1d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d358d6b1-ca65-45aa-9f7a-97a404a85739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2aac1b-c5ab-41e7-b264-5332b30a1438",
        "cursor": {
          "ref": "479aa215-6786-44a5-a58b-adbff39a1d58",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "25b1133b-6e00-42ef-82f9-6ca38bc7a3d2"
        },
        "item": {
          "id": "1d2aac1b-c5ab-41e7-b264-5332b30a1438",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3c0b1b64-64d5-41bf-8a86-e9d5b4e18a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e993313f-44f1-4b16-9675-5deff62dd7c8",
        "cursor": {
          "ref": "0412d27f-918d-4ab5-aab0-4fc407222c36",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "73a09cda-085b-4317-a62c-3d471848c12a"
        },
        "item": {
          "id": "e993313f-44f1-4b16-9675-5deff62dd7c8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d8fbf944-fed0-45b3-980b-ef3064717db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d79cc66-858f-4521-b18f-a393bfca2bee",
        "cursor": {
          "ref": "fb8492e1-b163-499c-887c-7e46ee7bc814",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "86f7ef2d-7545-4103-94af-3f3afdba38e2"
        },
        "item": {
          "id": "4d79cc66-858f-4521-b18f-a393bfca2bee",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c3965e71-3971-43a3-8ef7-ddc7fae71b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dedf673-207c-4f2e-b72b-5fa8837b7fb7",
        "cursor": {
          "ref": "cfea71a6-b703-4930-9915-b13af83ecc6a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "89ba7a4a-a723-48f2-bbc4-623cd334b69b"
        },
        "item": {
          "id": "2dedf673-207c-4f2e-b72b-5fa8837b7fb7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4dcdabf7-b107-40bd-b17f-0d3be7a3a397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d3e1c0-ba53-4db4-ad07-3f4b586fd86f",
        "cursor": {
          "ref": "3c80e44e-0baf-4204-960f-0684d6cd4729",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "08bbc9ad-ff5d-4e2f-a1ed-a5455b6b4999"
        },
        "item": {
          "id": "d2d3e1c0-ba53-4db4-ad07-3f4b586fd86f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ca3055b0-298c-4eec-b67c-29445207825c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2eb358-51b3-4844-bc62-b472fd0155a4",
        "cursor": {
          "ref": "a8b7613c-703c-46fd-80d7-5d4399b1d143",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c6a4c2d9-180d-46a0-bcc8-34657fdb5334"
        },
        "item": {
          "id": "3e2eb358-51b3-4844-bc62-b472fd0155a4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cd9ba889-b1da-4c95-a0ab-289b555c4924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7572e027-bdcd-4dfc-b3aa-a159f15a10c5",
        "cursor": {
          "ref": "a9585c65-4496-44d8-b3ce-42171525772d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9f521a9f-6d31-41b6-9d58-a0c013542992"
        },
        "item": {
          "id": "7572e027-bdcd-4dfc-b3aa-a159f15a10c5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "666a1bd7-eb33-4f7b-850c-afe75a6a10dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227fb782-ece2-4aa8-b468-c1188f287706",
        "cursor": {
          "ref": "cd50b606-531e-4978-b94b-ce17143a2a24",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "90986138-4616-4a42-b18b-6115aee4716d"
        },
        "item": {
          "id": "227fb782-ece2-4aa8-b468-c1188f287706",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "78790ec1-2d71-4403-98b2-c08a609a34d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ac88c5-6457-4741-a155-3c1f7e5ff54f",
        "cursor": {
          "ref": "a90b7f8a-2d61-43d4-8041-bb9fa9c05ad2",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0d519808-b8a1-4eff-afd4-3111672b111c"
        },
        "item": {
          "id": "12ac88c5-6457-4741-a155-3c1f7e5ff54f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1547c798-ea0c-4c76-b0ab-0a2e1ea44c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d494a005-411d-49f9-82fe-90cf30a74252",
        "cursor": {
          "ref": "58733b79-0939-46c0-8ec9-a4fe7ff51f8a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "affd2fd2-e422-4634-9d4a-803ef6e3695c"
        },
        "item": {
          "id": "d494a005-411d-49f9-82fe-90cf30a74252",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7ef45006-4586-4a69-b2aa-5ec4e14b25cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6823f896-a384-43f6-996b-d9c61c3ad352",
        "cursor": {
          "ref": "43810323-fc3a-4967-bf74-1609bb41f108",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4c0d7a37-efd6-4f71-8c63-290ca4718cfe"
        },
        "item": {
          "id": "6823f896-a384-43f6-996b-d9c61c3ad352",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9d4ad991-7c4e-4eea-92ce-673a4f73b490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49ea691-ab32-40f5-9fbc-4abec9df98b4",
        "cursor": {
          "ref": "9b8b5402-aa93-48a5-aa84-e4a33e409f60",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cea579c3-c076-4d15-bdde-792271896a06"
        },
        "item": {
          "id": "a49ea691-ab32-40f5-9fbc-4abec9df98b4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ad8d0db0-0fd8-4092-bf43-b66be9b3c1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8c6fd0-7255-42fb-ae27-100642ce7fb5",
        "cursor": {
          "ref": "d197f6a5-2699-4ac8-9e8c-81022c3b18d0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b26b5ba1-af6b-444e-995e-3f555f7c5460"
        },
        "item": {
          "id": "1f8c6fd0-7255-42fb-ae27-100642ce7fb5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "44fe3c6b-50bb-4661-b85f-1b27519a82ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4afa7c-9dcd-41d1-8a5d-7dcc4be6fa8c",
        "cursor": {
          "ref": "2af604ac-19f0-400f-987f-9ce7714440b4",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "06095acf-14a2-41aa-9c94-d4f5a7898c7f"
        },
        "item": {
          "id": "9e4afa7c-9dcd-41d1-8a5d-7dcc4be6fa8c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c0b2d403-2653-4bac-bc92-0d295b03ce3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d4434c-bc95-4e85-bff8-a14534fc8c62",
        "cursor": {
          "ref": "6073cef6-bea4-4d0a-ba0b-efbf947bb853",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "85fb59f2-37dc-41fe-969e-3327f1560cfe"
        },
        "item": {
          "id": "46d4434c-bc95-4e85-bff8-a14534fc8c62",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5717dc2e-ef69-41d9-a72b-41632573710f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dae620-1cb5-475d-9a51-7ef5bf1a113b",
        "cursor": {
          "ref": "86a5b2c1-f346-4719-aefd-8863943569ca",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c1657d99-fe60-421f-93ad-970cb0c075f6"
        },
        "item": {
          "id": "27dae620-1cb5-475d-9a51-7ef5bf1a113b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "101214e4-9799-4450-9d0e-94c31c63ac75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8823512d-4670-4de8-ae5f-5ebf6fce3e79",
        "cursor": {
          "ref": "b446e783-41ad-46ca-ab7e-c0a513e83375",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a204ec8d-e3f6-4359-8dce-08f7db323016"
        },
        "item": {
          "id": "8823512d-4670-4de8-ae5f-5ebf6fce3e79",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f0818ec3-bcff-4da8-95da-5dbe8d0907fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122e05f3-0c50-4af7-8480-02130c8f8e99",
        "cursor": {
          "ref": "0a2e493a-caed-45bc-a9da-4e8b09e4b816",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "308a71fe-edee-4ea8-9042-102edbb7fd0f"
        },
        "item": {
          "id": "122e05f3-0c50-4af7-8480-02130c8f8e99",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7681575f-f91e-4ccc-bacb-21183a5ea34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeea6e8-744a-4d18-b815-66ae81a79f25",
        "cursor": {
          "ref": "f296d113-a878-4d32-b9c5-e548e4105fc4",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a3853833-4f07-44fa-8400-8780ed786a04"
        },
        "item": {
          "id": "4aeea6e8-744a-4d18-b815-66ae81a79f25",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e1e2b6d1-8be7-49a5-a885-d39b917f11bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afd45c3-9421-4dcb-a79b-d7e7bb696eaf",
        "cursor": {
          "ref": "ba584b09-f86e-479c-b5be-023d1a967c1f",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3de34794-f133-4e39-a258-8e40e0622c28"
        },
        "item": {
          "id": "0afd45c3-9421-4dcb-a79b-d7e7bb696eaf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "70d98738-6ea9-4af4-88ce-d8a7b2b7ed18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70af394a-192c-4d8b-9145-d9377abd3001",
        "cursor": {
          "ref": "804d8867-a638-4747-b4ae-d4bd5ddfdb29",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "707721a6-a0ea-4444-b8e0-4896951c9b78"
        },
        "item": {
          "id": "70af394a-192c-4d8b-9145-d9377abd3001",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a305621b-d113-4679-8886-d10d9e7b4cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa0447d-863c-428b-a8c7-656b1fd032ab",
        "cursor": {
          "ref": "b3613e30-f880-497e-8424-e760b887640c",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f99c9c38-f6dc-4263-98a1-14c5339d08b1"
        },
        "item": {
          "id": "aaa0447d-863c-428b-a8c7-656b1fd032ab",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e8659f2d-ccff-4837-a480-c9a63f3f7190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1d3927-23eb-467c-8b27-f4b0502cdf80",
        "cursor": {
          "ref": "d70089dc-750a-4b79-868b-504f7a2bd061",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d2935b1d-7f21-428c-97eb-eb15295be425"
        },
        "item": {
          "id": "7f1d3927-23eb-467c-8b27-f4b0502cdf80",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4496853c-b873-4eae-8f1a-301443ae6149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91dc5e5-26ee-4012-987b-586ca9963548",
        "cursor": {
          "ref": "b9b7a054-cda5-475a-b3c1-9efaaf2af85f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "481fce5a-e66f-4a2d-89c9-ad2f32849e84"
        },
        "item": {
          "id": "a91dc5e5-26ee-4012-987b-586ca9963548",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2ae80d3a-9630-457c-b21f-7849eabe17b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f0a1e0-688d-4074-9d03-cb43c7711451",
        "cursor": {
          "ref": "8805fa5c-ea93-4f6c-8598-026bdc95724d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ba835146-3301-4046-834a-badeed19da86"
        },
        "item": {
          "id": "48f0a1e0-688d-4074-9d03-cb43c7711451",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "22aa81e5-dc9d-42e6-96b5-b336fdd50e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f13695b-6d32-4c1c-ad76-21b4ac547b0d",
        "cursor": {
          "ref": "82c2b12f-448e-4a6c-9ebc-daed8cbe0364",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "300b552a-5d9a-4c23-8724-581061051312"
        },
        "item": {
          "id": "1f13695b-6d32-4c1c-ad76-21b4ac547b0d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f5214c37-5ef9-4546-9958-c68e23fa9972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5f659b-e1f4-4b15-b00b-5eb835d4ea01",
        "cursor": {
          "ref": "b6e5f778-fe0a-498c-907c-f885612ca570",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "710ffddb-43c6-4775-97b1-b85da2ec98b5"
        },
        "item": {
          "id": "6d5f659b-e1f4-4b15-b00b-5eb835d4ea01",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "546f1f57-1ca6-4613-948b-d0d652d4a109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37c9b00-6f15-4849-8902-347d73ad3ba0",
        "cursor": {
          "ref": "160ed06c-3efc-4bf6-a6cd-d45274b283f8",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ce0805f2-6e7e-4e97-acc2-cc29fae697df"
        },
        "item": {
          "id": "e37c9b00-6f15-4849-8902-347d73ad3ba0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8ec41e12-6d68-4b9b-b548-16372f5fbe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82b8344-408f-43de-aa76-df4a7db8a31c",
        "cursor": {
          "ref": "18772c27-e34e-44f2-a0ab-6b822df469c2",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6c57bef1-1b12-4d8b-9b7d-084b335f75fc"
        },
        "item": {
          "id": "c82b8344-408f-43de-aa76-df4a7db8a31c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c027876e-aff3-4972-b81a-ef8958d2c84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6935b3c2-fe9e-49c9-8ac4-15dff2f6d5bf",
        "cursor": {
          "ref": "acde5d59-caea-4793-8685-4ea76a024291",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "60af1e91-5d40-4d8b-af48-029f5c1acfc3"
        },
        "item": {
          "id": "6935b3c2-fe9e-49c9-8ac4-15dff2f6d5bf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5f4559be-9787-4301-833b-907a112d03c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1e8fb4-e65a-45e3-9656-db0dcfb4a730",
        "cursor": {
          "ref": "f977b073-95a7-417f-ace9-9edc7d37ff27",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5115cb74-afdf-47fb-a311-226a44b2d745"
        },
        "item": {
          "id": "bf1e8fb4-e65a-45e3-9656-db0dcfb4a730",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6790ce73-4537-4e51-872c-0f96708a076c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94d4ee2-7aa7-4962-8503-83a743f5d4d1",
        "cursor": {
          "ref": "f99b8d59-d081-4737-9270-12a72944e8c9",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "af7b33a1-ffd9-4e05-b721-ba8c7a3dde0a"
        },
        "item": {
          "id": "a94d4ee2-7aa7-4962-8503-83a743f5d4d1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f378b3ea-75e1-48db-9c27-3c5865bfc5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a127ed2-16eb-4202-a335-b9b905f45581",
        "cursor": {
          "ref": "4567fffd-65e2-4b77-9ff8-be09192a35cb",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "89c77588-a6a1-48e9-a615-375a58b6e412"
        },
        "item": {
          "id": "8a127ed2-16eb-4202-a335-b9b905f45581",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "73b0afb5-c014-4821-9979-c166a45070eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95a2818-1765-4d2d-8260-5deef8e0df8c",
        "cursor": {
          "ref": "a9561b53-0bc2-498a-893b-c7be5df5e24d",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0c8b852d-5ae6-43ab-9778-d58e66931c6b"
        },
        "item": {
          "id": "e95a2818-1765-4d2d-8260-5deef8e0df8c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d28db0a5-476d-4825-b864-16c42f7abd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c74f6bb-0b9f-4648-822d-2f4a0dc7b1c0",
        "cursor": {
          "ref": "4acb0045-bec2-4e60-bcd9-519f6f37756b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c0c08ab4-880d-4686-b801-e191c16f273b"
        },
        "item": {
          "id": "6c74f6bb-0b9f-4648-822d-2f4a0dc7b1c0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5fff2776-f646-49db-991b-404b0e08c384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d503c93c-c144-4889-a941-abb6e96a178b",
        "cursor": {
          "ref": "ebcf317e-a831-416e-95ca-750684b2a2c9",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bccb16a5-2eba-4734-80e3-19055e29a7e4"
        },
        "item": {
          "id": "d503c93c-c144-4889-a941-abb6e96a178b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b3783b62-f5c3-4a70-939b-9f70642d7fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d908e008-fd24-4604-b34c-aaacf2220194",
        "cursor": {
          "ref": "db9cfed4-ce82-443a-b96b-46c6a0e4a7be",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b0102525-395f-46bd-ba6a-79666f45579c"
        },
        "item": {
          "id": "d908e008-fd24-4604-b34c-aaacf2220194",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b625455e-e8ae-4435-98f4-bb444f5a83ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a793ec-066e-44d3-b4a8-68a2d382b1d9",
        "cursor": {
          "ref": "31939b24-9bb5-45fa-b3eb-1582f11745d7",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e3bb5762-d6e8-47ea-a7f7-196cb376117d"
        },
        "item": {
          "id": "55a793ec-066e-44d3-b4a8-68a2d382b1d9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "49461099-8651-48d7-a7c9-c53ad477ab14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d62c5d-1406-4276-aeaa-a9b3f7402e73",
        "cursor": {
          "ref": "1e524747-6f3a-4309-8df6-f19fe7cdaa35",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4f68e328-3025-4a5a-b80b-2cc343c1e515"
        },
        "item": {
          "id": "a0d62c5d-1406-4276-aeaa-a9b3f7402e73",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "65177c8d-95a4-4632-af8e-9a8f68649985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4cb5dd-6b46-4c72-948f-d481b79b9db4",
        "cursor": {
          "ref": "99f38dee-61f5-45b8-bb2a-609636eb197c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5324d453-2d88-4da8-af36-1512251a58f9"
        },
        "item": {
          "id": "8d4cb5dd-6b46-4c72-948f-d481b79b9db4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "55f2f444-f2e1-4ae0-a074-c7503e4a5489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114e25b3-c440-41a5-9b00-8fa48495c6de",
        "cursor": {
          "ref": "23780def-8efc-499c-9bee-b6f6be10efc1",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e707a939-6981-476c-8e23-cfa797894b96"
        },
        "item": {
          "id": "114e25b3-c440-41a5-9b00-8fa48495c6de",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1eb92e19-428f-48cc-91a4-43475fa1ad8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b0cb8d-c82e-491a-8142-584b7443c32a",
        "cursor": {
          "ref": "7bd94c10-3cb0-44c6-81fa-e6b3db683a6f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c765043a-12f0-4f00-aca6-1dfb1637b458"
        },
        "item": {
          "id": "07b0cb8d-c82e-491a-8142-584b7443c32a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "45f21757-a5a6-41c4-a138-7fb079b801cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a543966-4eda-4a18-9691-dd5e4576a563",
        "cursor": {
          "ref": "391e8f26-40c2-4250-af5c-2a178a7e8e61",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "252612d1-1e9e-4eba-97e6-dad5e6857c9a"
        },
        "item": {
          "id": "9a543966-4eda-4a18-9691-dd5e4576a563",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5232a013-e790-4d4b-b471-db739ddcb222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cca289-30df-4202-bc3d-2f57014cbc69",
        "cursor": {
          "ref": "246b1560-8362-40e1-9363-b114b5177157",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9826a87e-f87a-486e-9358-654153f3fa5e"
        },
        "item": {
          "id": "92cca289-30df-4202-bc3d-2f57014cbc69",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5e7c6221-cfee-406c-9919-8df43f89d889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6c58d-39bf-4f56-81ae-1aaff2956a0a",
        "cursor": {
          "ref": "63f98ed1-20ea-4624-aebf-1143f893f0e9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b52d08e0-efe5-42ad-a9b6-02e06e0f81e4"
        },
        "item": {
          "id": "41f6c58d-39bf-4f56-81ae-1aaff2956a0a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f6fdb95a-7472-414b-be86-bee9eef8261d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f13e567-32d2-4943-806f-77a5250d5ef5",
        "cursor": {
          "ref": "413328f0-74a0-4458-bc11-dffd20f9c929",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d802dfeb-63ab-4eb4-918c-274b86ec8833"
        },
        "item": {
          "id": "8f13e567-32d2-4943-806f-77a5250d5ef5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b03b67d8-b42b-489d-abdf-e60c200281b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003fde3e-8aa9-4985-b318-fb8a62fbe1c6",
        "cursor": {
          "ref": "5e035491-3fed-44ec-88c6-39c1c9a21fe9",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2ece72ce-2dbb-4cce-a043-d3867e028b12"
        },
        "item": {
          "id": "003fde3e-8aa9-4985-b318-fb8a62fbe1c6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d98d4e89-b075-45da-b705-1c159354446d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0fa34d-6f45-47d1-9b23-8c33c85bcb33",
        "cursor": {
          "ref": "9032c30e-aeb6-4745-a255-ecf325ed4bb7",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8e7470eb-78ce-4d8d-84f0-c4e19d0c0228"
        },
        "item": {
          "id": "2d0fa34d-6f45-47d1-9b23-8c33c85bcb33",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "41df8524-9789-4f12-a6ce-cbc8ab60fc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7167f75c-454d-4861-8bf9-7b7e8b72b404",
        "cursor": {
          "ref": "26963b62-c8c3-48a4-b22f-807bc2fb13dd",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "04bc9611-5222-4bab-aafb-c230cf074655"
        },
        "item": {
          "id": "7167f75c-454d-4861-8bf9-7b7e8b72b404",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3093db9b-56e0-431a-911b-db296a89e367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42391e03-2b68-422a-a1c6-5dae5e2de437",
        "cursor": {
          "ref": "7acbb4fe-6c54-4ef6-b210-2e69e4e0ba5f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "551d7a0a-21d5-442f-acda-2bf71fd8b39f"
        },
        "item": {
          "id": "42391e03-2b68-422a-a1c6-5dae5e2de437",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "32c7f6cd-8762-4590-8317-f7b00235423d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e52f0be-019b-4bfe-97c3-3edd4ab42742",
        "cursor": {
          "ref": "35dd17fc-7780-48de-b76d-d6af1eb637af",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "89576fb0-63f4-42b2-a47e-8eec43125dd2"
        },
        "item": {
          "id": "4e52f0be-019b-4bfe-97c3-3edd4ab42742",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ea4260a3-6279-4a56-b4f6-f1e80db5b05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dbea98-6d2c-46d9-b7ea-668b73491d40",
        "cursor": {
          "ref": "7214f56d-9c4d-4728-84b1-33a3b0ac060d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e06f2bf0-febe-4a4a-a83e-5106d0337c4e"
        },
        "item": {
          "id": "b0dbea98-6d2c-46d9-b7ea-668b73491d40",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "51d58ce4-412d-448c-99dc-7821494f9f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b31d3eb-c5d6-426c-8032-fcdb96b29da4",
        "cursor": {
          "ref": "a27b4c7b-f8dc-4e3d-9081-ac308dc88134",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ce19c448-dc79-466e-83b8-71b45d69755d"
        },
        "item": {
          "id": "6b31d3eb-c5d6-426c-8032-fcdb96b29da4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1f29e083-3a60-4bc1-83cd-a26e9b65f42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df037f9-e4f0-4d57-8df7-0037c305d763",
        "cursor": {
          "ref": "7ed7aa82-7d91-449e-b661-a6aba16e1872",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3967b379-659b-42a8-9fbc-9d4ce0b790a0"
        },
        "item": {
          "id": "8df037f9-e4f0-4d57-8df7-0037c305d763",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e14a51d9-452c-4b34-b6a5-036d3b3267c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2b1c3e-c4ca-4805-8146-759d7949fd50",
        "cursor": {
          "ref": "ee29d7a8-1df0-4a23-b11b-6d35bfe43770",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c5ca34ca-2ded-4dad-869b-d47db534ecde"
        },
        "item": {
          "id": "be2b1c3e-c4ca-4805-8146-759d7949fd50",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "573a9302-668e-4bca-b366-f68a60cac459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d319b4-aa3c-443b-abd3-4f17d5b236fa",
        "cursor": {
          "ref": "c59871c2-9ab9-4098-ab13-dee2d486c20c",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5a1cf814-2b2b-4def-af44-76073e443fc6"
        },
        "item": {
          "id": "a8d319b4-aa3c-443b-abd3-4f17d5b236fa",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e2c5c15c-79d7-4ff2-98e9-eaa28ed3cab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b36a8b-1ba1-41c4-a0e6-652c03e2d812",
        "cursor": {
          "ref": "ca05ce9b-ee0e-4407-832d-2e6b67930e25",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "85c5ec92-4ee9-4457-b4f5-32855741bdfe"
        },
        "item": {
          "id": "b0b36a8b-1ba1-41c4-a0e6-652c03e2d812",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e4edda06-75e5-46b6-a2bb-608b5aa0f938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8327ce76-1c92-439b-98c4-7572e6041ef9",
        "cursor": {
          "ref": "65af1cdb-dbc0-4555-a6df-1d917c5fb6a3",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "64401eea-529a-4bb7-92df-c8258d7b2143"
        },
        "item": {
          "id": "8327ce76-1c92-439b-98c4-7572e6041ef9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "400ca8d9-3ce7-4646-a5ce-644dd2e96222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8a87f8-3092-4158-bc0e-f64418c7c2a8",
        "cursor": {
          "ref": "3506e521-0cfb-4269-9896-d68ac8971c3f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "15139ce3-16ef-4c45-8d12-e56d72acc501"
        },
        "item": {
          "id": "af8a87f8-3092-4158-bc0e-f64418c7c2a8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1f91aa3c-83cd-4a55-b0a2-8d47034250e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc238e3c-3682-4c4d-ac7d-b0c5799aaf7f",
        "cursor": {
          "ref": "75b2d066-535c-4265-bf42-0394967e4a67",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "73a739a0-265a-458b-a9b0-4194ef82969c"
        },
        "item": {
          "id": "fc238e3c-3682-4c4d-ac7d-b0c5799aaf7f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "004b691f-c2f7-438c-b6ab-498d0e576249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b241be2-958e-44f2-b6ee-7bccb095b193",
        "cursor": {
          "ref": "fc2ce25f-0bd2-45c3-83f2-57dd2f4b1180",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6c8e0ba0-3698-4531-92ad-54aa33353645"
        },
        "item": {
          "id": "2b241be2-958e-44f2-b6ee-7bccb095b193",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2c028e85-1273-4a96-9ce5-242d66d6bada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c89aeb0-9c39-498d-991c-1ecf68d174ee",
        "cursor": {
          "ref": "c8972691-3dae-4542-9c4c-6d9936921a02",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9bab4b2e-6c27-48c3-9356-7f39ac8c35e6"
        },
        "item": {
          "id": "7c89aeb0-9c39-498d-991c-1ecf68d174ee",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fb498742-5f86-4334-8c05-01fe6ea10fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5cdd7e-a919-4e00-814f-aa2fc02eac8f",
        "cursor": {
          "ref": "3020741e-b58d-49ff-9e7a-62205e900452",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5c10621d-2e6b-4c4b-904a-186739c95528"
        },
        "item": {
          "id": "1d5cdd7e-a919-4e00-814f-aa2fc02eac8f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ce0df93e-d11f-48dd-89e8-d3014d09a5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fac1abb-a6c8-4d5b-88f3-604e274d0ba2",
        "cursor": {
          "ref": "a1ce67fd-2f89-46e9-8058-a6f3a812f1b7",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0d515d96-75e7-4496-8702-bbcb2b74ade1"
        },
        "item": {
          "id": "6fac1abb-a6c8-4d5b-88f3-604e274d0ba2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "056b06e3-bbad-42d6-aa8c-9a7d9b2d664c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cb2bce-a0d4-4c5c-88cb-c2ae431dd96c",
        "cursor": {
          "ref": "1f295d51-aedd-4c11-a3bc-01d823be51ab",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9b4de0e8-a0ed-4673-afd8-449077ec49b0"
        },
        "item": {
          "id": "82cb2bce-a0d4-4c5c-88cb-c2ae431dd96c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "65c78092-435a-4540-ba1b-546a571e9b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed041a0d-45ee-48a6-bf19-a23f29583909",
        "cursor": {
          "ref": "58c9e65b-f0ea-4831-b86c-1a908f213a92",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "be3446e2-e4cb-46c7-9663-2897bf3ce6c2"
        },
        "item": {
          "id": "ed041a0d-45ee-48a6-bf19-a23f29583909",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e250d12-0947-4f0a-8ecb-08b4d120983c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53237e8e-9d48-4933-8e09-70ca3f2d8e32",
        "cursor": {
          "ref": "435f1ed7-3f61-4cb1-8a6d-0b07d82bbbe0",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4bfea5ed-2442-4478-97e6-31f875cee2ad"
        },
        "item": {
          "id": "53237e8e-9d48-4933-8e09-70ca3f2d8e32",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7271cb2e-9fd1-4cdf-b06b-42441b441e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db9ba1c-c8dd-406c-995b-b9bcb3c8ae9f",
        "cursor": {
          "ref": "872b830d-2d36-40b9-affd-79b09530946e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fe230f11-efb4-4e96-9039-064aa862d6e9"
        },
        "item": {
          "id": "3db9ba1c-c8dd-406c-995b-b9bcb3c8ae9f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "32ea545f-43f9-49c1-80c3-de73020c8533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd3cb44-07e5-414e-aed5-e30f45e15faa",
        "cursor": {
          "ref": "a100953f-46ff-4d42-a9e9-90803928aa27",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "98d12e2c-15fd-455d-80a5-e7985b7ccb41"
        },
        "item": {
          "id": "1bd3cb44-07e5-414e-aed5-e30f45e15faa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c435a13a-1c15-431b-8ffa-36734778c9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a14369-7728-41c6-8a79-a852ff6c6927",
        "cursor": {
          "ref": "312fb784-3e9b-4ee3-a4af-f135048342c0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c7a26aa6-7f7b-4696-a9d1-de4109c48256"
        },
        "item": {
          "id": "42a14369-7728-41c6-8a79-a852ff6c6927",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4bf2e5c6-c4f2-48bc-92cd-333fa6e89db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc835562-dae8-42c3-a107-d82f3f096d86",
        "cursor": {
          "ref": "474fe78e-9c38-4875-b947-4d1945ffbc57",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5fc4499c-89f3-4fc2-afe0-88f3c22c757d"
        },
        "item": {
          "id": "bc835562-dae8-42c3-a107-d82f3f096d86",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4bba4b87-0ffe-47df-98bc-fca448679be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732c6c0a-ef8f-49f0-b539-24dff8799016",
        "cursor": {
          "ref": "4eb3364d-302c-4c9f-97b0-56181006d9be",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4c6b3afe-5b23-4613-a837-fab410a5130f"
        },
        "item": {
          "id": "732c6c0a-ef8f-49f0-b539-24dff8799016",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4131080c-9697-4197-9b3b-2407194782c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdb9338-649b-4172-95d4-e1e85812ffc8",
        "cursor": {
          "ref": "f3ef5f4e-3b8b-4376-8809-a9d542bcfdae",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c3089369-d90e-4c90-9c6a-9cdb00992c6a"
        },
        "item": {
          "id": "ebdb9338-649b-4172-95d4-e1e85812ffc8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dc029e1d-d2a4-4991-a3ee-a28d92373f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa271ef-26e1-4728-b1ab-6921681d01e1",
        "cursor": {
          "ref": "e0cef007-9549-4708-9757-7446cd4f1a89",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7db1c54e-4295-48c3-a1b3-de4003a6d5df"
        },
        "item": {
          "id": "8fa271ef-26e1-4728-b1ab-6921681d01e1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f4356465-4675-4791-97ee-1f6a6a8e8d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0586b5-63ae-411c-85e4-c0d31afbe523",
        "cursor": {
          "ref": "b53e729a-92d2-4f83-9395-066a2c403c1d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8fab0ab3-ebd5-48e1-aca5-3499a66067aa"
        },
        "item": {
          "id": "2b0586b5-63ae-411c-85e4-c0d31afbe523",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d5c25cf5-4ec6-40bb-b720-19e6c1aacefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a81a27d-d977-4e65-9b84-2d163b203655",
        "cursor": {
          "ref": "58936e69-d9c3-4224-a0ec-149f199dc514",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "638e69ee-42e8-43e1-92da-86932c726724"
        },
        "item": {
          "id": "1a81a27d-d977-4e65-9b84-2d163b203655",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c05136c7-30a0-476a-b886-32c1e3f481fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf5a17d-1dab-4a33-9451-d1382fc2a8e0",
        "cursor": {
          "ref": "4822882c-e2db-4a7c-9f6d-128afedf8d72",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ac03f421-bedd-4f22-ba36-81f423315551"
        },
        "item": {
          "id": "ddf5a17d-1dab-4a33-9451-d1382fc2a8e0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "90345abf-4830-48d4-957b-30c95fc065ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd17ea95-483c-429e-8955-d9bab9b6bf18",
        "cursor": {
          "ref": "2c89fe71-d3a8-42f9-8597-a4af8a5e6754",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e70f5da5-431b-4359-ab1b-753a03d205fd"
        },
        "item": {
          "id": "cd17ea95-483c-429e-8955-d9bab9b6bf18",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f6f083d5-f0e9-4ee9-85f5-d14db47ddff0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ad9097-d63f-4018-b1d8-9dc392c015d7",
        "cursor": {
          "ref": "3f72856e-ffa7-434b-8667-57da262d8a85",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8a7127cd-b285-4baa-b365-aca2eb4bf970"
        },
        "item": {
          "id": "71ad9097-d63f-4018-b1d8-9dc392c015d7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "82aac436-fe34-498f-9380-48fa03065738",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c1685b-6a38-4cb8-9cd3-3511ea1edf20",
        "cursor": {
          "ref": "0bd814ee-ced6-4c38-a0b5-3f8c3c5898af",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3065642d-bfeb-4b7a-a1f0-c87555b42ba3"
        },
        "item": {
          "id": "92c1685b-6a38-4cb8-9cd3-3511ea1edf20",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a9bd1a43-ec04-46c8-b926-740beaa0efe1",
          "status": "OK",
          "code": 200,
          "responseTime": 1807,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1b6ed7-94bd-4c3f-8bbd-f65cbd19956f",
        "cursor": {
          "ref": "ea938d4c-1f02-48fb-9f17-2d0b0ba267d3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e4a070dc-1367-43ed-a7e8-b078ddeaee7c"
        },
        "item": {
          "id": "5b1b6ed7-94bd-4c3f-8bbd-f65cbd19956f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2d16e2e1-8d6f-4a56-8646-6043243d3871",
          "status": "OK",
          "code": 200,
          "responseTime": 1414,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d908092-dd38-4f72-a976-e35776801bef",
        "cursor": {
          "ref": "6c860ec1-930a-4bc6-978d-85456134196b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "149cd995-7ecb-41ff-b2b5-d1c3e2b38915"
        },
        "item": {
          "id": "7d908092-dd38-4f72-a976-e35776801bef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8eb8b26-cbbb-4b2f-aabe-3affce3158cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d908092-dd38-4f72-a976-e35776801bef",
        "cursor": {
          "ref": "6c860ec1-930a-4bc6-978d-85456134196b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "149cd995-7ecb-41ff-b2b5-d1c3e2b38915"
        },
        "item": {
          "id": "7d908092-dd38-4f72-a976-e35776801bef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8eb8b26-cbbb-4b2f-aabe-3affce3158cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51db8914-0f5e-4a0a-a274-1d19fd5664fa",
        "cursor": {
          "ref": "4d05d7a2-7c8e-47eb-a703-20a51302ec0f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "13a35646-74af-482c-bb19-d815f31da96b"
        },
        "item": {
          "id": "51db8914-0f5e-4a0a-a274-1d19fd5664fa",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f56e8b9e-0302-4140-96db-f3ed1aea8c11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00b9140-2732-49d1-964c-ae9f9dc0b49f",
        "cursor": {
          "ref": "679304ea-e908-4e66-9f73-34765514371c",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "62027750-5caf-49fe-9ac1-6b00cb7955e0"
        },
        "item": {
          "id": "d00b9140-2732-49d1-964c-ae9f9dc0b49f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "342a775d-ded8-4c1f-9672-26f1a7e39b72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}