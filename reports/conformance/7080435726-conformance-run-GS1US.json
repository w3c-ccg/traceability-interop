{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "de968644-afc4-4944-84be-5f63e4b1ec14",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c2a0cd1e-0297-411f-b737-ac9bc6f91e31",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "774a4379-78b4-4461-a300-1d3c90f36ee1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bfa1d0db-7904-4355-98de-dc0492c06638"
                }
              }
            ]
          },
          {
            "id": "524b684b-a1d8-47ad-80de-e5b78a3b3ca5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b3358b5-e41e-4bdc-ac1a-b9a72f12dfb6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98182584-7508-4820-b7bb-ef6259bc1144"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2d956f41-1808-4f4f-8a88-02f6b21123c1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "964dd6fc-5929-498a-b729-780db1dd38cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "245540b1-471b-43dd-b891-ed62ae629d66",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b14e6070-1f43-4934-8c0e-c3cea3fff72b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10ff0ccf-400b-419b-aa9c-7d3f03535f3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bcdd71cc-7350-4b3b-b3ba-d9b6676dc3ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57ac19e5-1b06-424b-bd2c-41722bfa20a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a608974a-82e2-4f27-91ae-1a18638f4e13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d721ab9a-8024-4590-8443-86d368f296ef"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ad54bd3-d1a6-4f86-a501-6f5ab8bebe51",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "743965d4-2915-4a92-aece-2c167c0839ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "286145c7-c5a7-4da3-83a8-701b2dad4465",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a978f477-25bc-4d05-b3ae-1adbbd35b135"
            }
          }
        ]
      },
      {
        "id": "3740047e-da79-49ad-9bec-ff9cf9ab4628",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cca79583-7dc8-4270-9288-43dc4906a813",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e35e3b79-bc91-49ea-b3a3-af0849e68639",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "196f0193-24e8-4b9b-996c-827a150a39ad",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80a68f7-afa0-40fc-8b91-0616314973f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51b8c467-7d88-4bdd-8361-ac996e5e118d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6c4381-b80c-4216-8224-44483d86b422",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe98468-48bc-4b20-9c73-4d44c65c803e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c1937c2-37a2-4a97-ab6f-36503673e43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8790f8a9-4d3f-4fa1-822c-a07500dd7551",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d5c620-6086-42e0-bd18-12744c8b4714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47aa1f9e-d7a7-4ec8-9d7c-6bbbb2257640"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1bb1074b-ccb3-4a8e-9098-40501a56a55f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79099801-0cd0-40f5-ad14-fc1c524667c1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710f5459-8054-4843-97c3-a319253cd3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b308f6c9-8e7d-4cd3-aa40-7275b0c4ea38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b7777e-bcd5-462d-beb9-b610e4eacd20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4fdc21-f8bb-40b2-8296-ddda139fb508"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1c0b0549-000b-431b-a79c-b9b331a4a257",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c9e0d85-0499-4e5a-857c-4ddfdcba470f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a095c2e4-b027-45c1-b610-15aa160793a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5adfadaf-2b80-48e8-a810-a12a2c4862b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cca0c45-e0a6-4bbf-aa9e-a8d73f81b54f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3ec07287-5a12-496a-80b5-d8eebd262e20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5892a0c-01dc-47bc-b79b-b7b422d952d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ef242d4-7246-496d-a644-779856f33d08"
            }
          }
        ]
      },
      {
        "id": "b9ffa302-1f0b-479c-ada8-6cbfaf4133d8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "db9494df-f219-4742-9131-006a74163918",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38588366-dbb3-4d42-a1c9-0a8ead955b3c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "18a277f2-caf2-4391-a1bf-2e9a27f6b046",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae11a2f0-25c2-4bf8-9674-80f4c43c23b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac183c1-c4ac-42c8-9424-eb20b1a15d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5f714c-793d-4f39-a62a-1756edd4db87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b139ea0-edb8-4e9f-ab21-47aaaae03932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c345a9-f5a1-4412-8a3f-fc9a4cd1d3d9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca844df-5c13-4215-be4f-cea558ca14ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9788b06d-5e4b-4111-9fd0-56e0dd953e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1670fd-6e32-4e2b-8a81-011fa0dc82d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72c5e1ae-214c-4ae1-84f5-657ea1d2b1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8521fd64-be06-42f8-a9b4-85c462ac347a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7449829a-ca8e-41b6-9bfe-bf638b38f6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa24b40e-949d-4f69-97c0-a57eb2707a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f3fc18-0c2d-4164-a339-a7cc9e737b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "586dbc5f-8f6b-4da9-b71e-b2fd857d6d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5b1fee-7012-40ec-ac6d-fcaacdafd2e2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d95b030-8b35-44d0-83da-2ea3ce467cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d655b255-fa63-4e42-be54-962b8b0c5942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd8cba3-f80d-4100-918b-a44cc9d9923d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4ab7a64-3a22-42ef-ad02-01f197e02446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ea563b-2efa-4779-9e09-34100d2cc560",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a92b45-5d3b-4732-a077-4c431f7921e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd695a8f-a875-43d9-874a-013cf2b2a45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95c7f1b-ae8e-4d36-ab33-09b6c157287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7510f76d-cb5c-4f53-9c5a-fce27b38454a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbd4735-84c7-4296-8955-3abd5dc7f810",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16be85a9-d4f3-4c8d-a919-03cfb6309e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8002c327-45c5-4404-99c4-78704d4824f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57286b41-0f5c-42a7-8b8a-a970e6064fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "946e7dc0-b582-452d-b8ea-2ee41b5ccce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7847e5ad-f1d6-4b49-9103-bfeaa9a8dc8f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b07e44-0321-438c-b0ad-f6df665d27c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc03e1db-ab00-4250-9d7c-dcea6986d189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36600670-dea8-47f3-a527-97c1b7ed39d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa218b98-186e-4a7d-989c-1594393a8dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7146549f-72aa-4f7a-b2fb-a04209082980",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b41595-8aa3-4073-bdfd-9f855d92024f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3fdefe-6d88-445e-a154-d70b4bedf008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75aa7150-fc90-4993-8589-d3baa7339338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1b09b3c-d388-4cc8-9765-568efdec48f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac2427d-4a1f-453d-b82e-c5866c3e985e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0e8876-a00c-4fc3-810c-0c3739f0db61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f9ff73-d034-4dd2-9e9e-335667af3775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a2bd9f-8c00-4d13-92a3-33013f1018f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e75f537-55b3-408c-86ec-934184448c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45739242-a558-4fa6-8a14-a1782baf0c55",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57afdd4e-e0f7-4975-a7d2-fbb30b419726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a76605-5bc2-45de-b2b2-38fbb30ad3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f363af-b285-4a40-9b07-6c012936f880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdbeb970-2c8b-4563-a28f-61f75ec26d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a57e4c0-4d6a-49ca-ac5c-6c76639e1869",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23759256-da7b-4fd0-8cd5-8f41f414d047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1612d6a9-17f8-4d68-b720-3a251d4f9803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67227b7-fa71-4434-8953-ba7855255181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3c17bf6-d09d-4b0f-b13f-adf9c23bf2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676fc5ad-10d5-462e-a298-a21a956a7cf1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5fa215-0886-4c3a-ad89-b70e5ee76b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca1fdaf-8365-4f0c-9271-9ad3a58488de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd3851b-45cb-4f6d-967f-d6889305a4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "091b1c52-8096-4db8-aa72-f7cfc11133d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc83f428-ec59-4853-9f0d-20977216c9d9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc93e10-25e9-44e2-91eb-f1a3ec5b123b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47785538-4222-479b-a211-12159213ea22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8038a1cf-63f8-46f6-8625-f9483866a906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55627d7c-5cde-40c1-b43e-6b97a70c7fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b5e62b-e4ac-47fe-87d4-f1be04405b56",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a28e13e-ff44-4a26-a5fa-6dd4a5a3f17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d21aef-d944-4c13-8622-cf71b18c6955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157670bb-3714-4144-a6e6-a3aabf69c766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8848079-de13-4bd2-92c6-c39fda52ef0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43b12f9-e5d5-43f4-afd8-c727df877097",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0073ecae-90d3-4202-bd0c-6134b78e9341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6d59bb-3b75-4bb9-aecd-8307878c6dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47aa1318-0379-423f-a171-87335c52e83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4b5e2d4-cf66-490c-a5c1-17a40390fb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4b2497-0a4c-4b8e-8274-5c0f86ba3070",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fdee4e-4cd4-454e-99c7-8df2c142fb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b8b1f9-5e24-4d7d-b817-8a28f0a8c7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38850d75-27c4-40e1-8096-05a0d8e300b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a7cfad-5614-4e18-9d2c-f98853a2d5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a676ba65-e4cd-41dd-965a-f302aa514eec",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e21ceb4-650a-4bb4-a368-56da72a63bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b1e2b4-e642-443c-9d17-480476c7b063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922104d2-4eed-49dd-97ca-b35c0f3fb2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d8a52c2-3ce8-4207-92d2-a58ca35cf464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad46d90d-fbdc-4d02-81d3-936dec8fbd03",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91613ac9-21d1-4d63-80b4-97e696621948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd78f1c-5b54-4f8a-bda5-7c570976e72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a849df0d-7663-40a1-b13d-bb8e1e4eb8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddc0bec-60d0-4ba7-a27a-8ed072d365d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b46c82-e129-4184-9646-19a30e2f7553",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f98cc5-0cac-469f-b5c3-1264196aa5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4048b5f2-2c09-4706-9401-602ba1c145e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae7c7b6-002b-480f-8fbc-8a24c16e4e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb04d3f-e5cc-406a-ac59-39464bd1d6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc405cc-2f81-4915-89e5-17f70d49c0cb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc80884-a73e-4770-a873-927670a01aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6da455-086f-4fdc-a4d4-90d041bc2c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f651fa-eab8-45b6-a06a-4a7e44cfc71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "742dd72e-224b-4997-920d-eecca186ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11af649-2875-4ba0-9fcd-7a97df457f8c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e71aab-35d3-4cf1-8fb6-518c6f7a2701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cd5f24-fe4c-45cd-9465-d3325c00b718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d404b1-3a3c-4dee-a730-341e2bf6d42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d638ac-ec33-4a13-9266-9ce5d16b604f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597adcd9-05b2-4cb4-97d3-56cbde98984e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dd4b9e-6d61-4075-b2a3-4e42f6702a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2009aed3-8cba-4b81-889b-e680e5a11e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971fcf55-3354-4e53-9d1c-9b8c7fc85d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e16a079d-e6aa-44ac-a8a5-6e31417465c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc75e41-879f-4983-b565-64a5f410965c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de955a3a-30d1-4277-8352-2539468c31cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcceb24f-bcfa-4009-8728-2e78242893c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f793649f-4bcf-4981-b677-5cc82a5d51a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b977c5-e7d7-42e9-9ac4-bf6d4370f7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b5da84-9f64-4537-ac5e-b90863bb5173",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c0b9a6-d92a-43cb-8840-f343c9bf2cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee9f1d7-6a31-4a93-a56e-cc040e1be3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c755ce1e-f118-45a0-8562-8c372672079f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "41b4bce2-7ce2-4235-a9d5-6b35a0a08770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467f0c6b-4537-4dd2-9e8f-f74973376391",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ff60b4-43c9-4aa5-897e-be6a54d26cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b05882-2ac8-412b-b941-b582ef053aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c91c688-a660-4140-b62e-90efd39b83ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b875cf1-c5b9-488b-8b0f-0b01ba2ba2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fca945-04c8-4216-a7c9-4050785d589b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f11522-72b2-4ce6-95c6-2bb4d96f2c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a5663a-4e91-4364-91cb-a2517163e094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632f3e34-91ea-45cb-9417-409cf0e96cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3215340e-4c4d-4d0f-9a58-ed4632ff1ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbba843-d2ae-44dd-9928-aa83fe874e3a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec21bec-5c16-4ede-a223-35615c7167c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb059f0c-7f62-488f-95c9-b3ff468bf566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36016d1b-358c-4754-8ccd-e5c13e83e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9a5def-d9f5-4ab2-82b6-20ada71c4dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5b70b9-6d6f-48f1-b17c-b765bc442e4a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c5e5b1-37cc-4515-b3a5-8423e90db607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bb562b-2a57-4556-8622-310fdf825580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dac341-d065-45c1-aa2f-43c3d480c9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e51774-d58c-4cee-bc66-221cbc47e033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefb0e69-1f3e-4777-b193-f5f241ec944d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adbbc34-95dd-4fb3-bca9-65cde24d9baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f38017-0aa1-446a-b329-2ebc851e462c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea432cb-904e-476e-aba1-3071c48c8c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94aa8142-cd68-4ef6-864c-c4c9e222d947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc60eae7-03a7-42f3-878c-35d2aaa3b59f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9348d684-9430-4c35-946c-b7555e38cff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255b14aa-24b8-46c6-9895-98c581c68d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3cb1d5-269c-4d6b-b752-8b850d09c19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "489d33f2-0146-486c-82c8-bc987179edd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca78390a-fac7-482a-8df6-eb401ff3b859",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4589407d-f58e-41e7-8563-34f57ec5961d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5948a58c-edcf-47bf-af39-2d62a1eeac98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ec5c80-8cd8-4396-9fba-a6fc0bf7bd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb199e9-7145-42b0-8522-7d42037cfdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaae6123-8b77-40ff-b2b3-3e92d82b1c8c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4106f3-7e17-4f65-a0fc-db493e89c1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713a79cf-d9d6-44a9-b9ee-ee0670227bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86af3c4b-adfb-4e2a-aa4e-30aa611c1916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da2b6cdd-af18-4d51-bba1-9736848b4e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e750f5ff-a9e4-496b-9a8f-5467a3fbbdd1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f87d2f-9472-4c2d-8deb-5e24cfce6867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12ec155-bdc1-4135-978c-439a05d577f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2294b600-1322-45f5-b0cf-a341018152c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "695c0459-faca-46e5-8561-e86eb03f0358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401eb319-2573-466c-938b-cbf57f166c07",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2f5c72-666e-4c29-9d3a-37d6ea506d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304091ae-e593-4be8-9dff-80220dd8dde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000b5c1c-232a-43fa-8f1d-f8c4e187d227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c148b776-b83e-4b76-982a-5c3b18344754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1370473a-f203-4560-8546-b18ff1f80844",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb456a5b-d946-4563-965b-b1ce1b91cb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bc12fe-13f1-4d28-8384-6b301428a868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d8c9bc-3b70-4445-ae0c-3cc76d39f494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b80ca0-c54d-46a3-b1d3-f7b48af115e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf38ee56-4324-450b-80ba-cb68021cf74b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529281dc-0565-478a-a23d-64a1905a13b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8103f853-cc28-4700-a4d7-b5282d3e8cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7535bd1f-0694-4f6c-b12e-91bdb5a9ba58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c077a52a-1e70-4260-b839-b74a981b9761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d25c8e4-ed49-4ceb-8f2a-70873f400f19",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1759f49c-2248-4024-bdc5-a428aaf31c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0a4f43-4af8-4c90-98ad-3f1479322393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c57dfd-a879-4567-a1dc-fe5696d63090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3404be-0308-4113-8fae-e475b1dd61ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f84c08-3190-49d2-9ad9-8391aea73919",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c721ea29-c7ab-4be1-972b-3a4602c1e8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a148f3-b8c5-4ffb-be28-1c43679e320e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ab43df-8c8c-464b-b910-61458f49851e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8335c8-d5ab-4bc9-8f00-effa189f99fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7b6827-9b88-4c15-9d50-0ace80a64eab",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0de70f-f294-4473-b8eb-5fc9e25ae0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c2df71-16be-4498-b934-34b5119e25f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d41ba0-42ea-4cb6-8406-c62a070b437e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "839f39dc-8122-4662-a875-1d008083b781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd78bf-8b20-4664-9f3c-3a7064c08956",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af42e6df-1344-48a9-ae0f-11da28452ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0194677-ceb0-45e4-ba39-c5fc0db9ec94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad20ac9a-e848-4f37-9780-b9e550371517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b91e0e5-ab4e-4d58-bf83-7160c2445e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6c1fc0-e019-40c1-af60-f7b079ae7db1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afa6bed-f9cf-4929-a937-8452b2c888f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758560dd-5878-4d63-999b-137a4c9b13d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6b6483-f7df-4839-b81f-f76803e3edfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d352580b-2adf-41ee-9036-590fc7d6d2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682cb140-a1d4-4010-8fdf-08210ea76e6a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed49909-f934-40e3-a9a6-740fd0a334f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd5c73d-0ff0-4bfd-ba40-26204966548f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f67d525-9458-4dea-a53c-ba4e479c9709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4a88b0ee-c193-4be8-9957-5fd3666dad5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a705d8c5-a0e8-4515-8fa2-0c8e79e7ea83",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98743e9d-7495-4291-978c-e9ab4774c52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b649729-6fbb-445d-8a7c-fb63cd5c65c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2aa3d60-0594-44de-95be-2321365a4e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "299ea28d-270c-41da-aec5-278ff466d178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755b36e3-4bf6-4306-971d-a64411cb5386",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ffee51-2eff-4045-aed9-943cad75b6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834cfeea-cec0-4a08-b388-0a48d4ee0278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ffdd1f-49aa-4d58-bd1d-8740156df229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a3c509-56a5-4694-8c95-b23dced2d281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b151080e-9027-4d7c-ac13-154b2983aa97",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fe8247-85bd-4ecb-9c45-4885c8ff1f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b1776d-48a5-4882-abdc-98c435566674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30aab90b-7457-4c1d-9d3e-dd44005a77aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9504febc-0d87-4cec-ad16-a56de213b667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f93249-5e7a-4da6-8adb-dd72e597e397",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476f2f52-4719-4c74-a075-8f35a37b529b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77ab9f2-e11f-4b65-8cc5-adc91a009b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6765c4-916c-4f17-b3b8-27bc5d9d7b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14fca6d8-5200-480a-a990-1dcf1fe3daa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d6032f-7926-416d-b4a1-2a2f6a6a4f8d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1589b15c-0499-46ad-9a36-8889218ec5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9b026c-34bb-4cab-9059-d93af0a17a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdd604a-98e2-40d1-9fda-bf4d0626f867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d1f543-24ce-4e7d-911c-e3a589fc43ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c680a94b-bf98-4a03-a9f4-52e7557f1c3e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bacf5f0-e194-4849-8d8a-59e695adb994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a530940-335f-481f-8af9-aacec4d0ad8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da770a83-3924-4c13-9ffd-3d425d13dd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b42191b-843b-4724-8a2f-926c3f847455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8c782e-d0c4-4456-a913-5de322a496b8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2749c5-995b-4d6f-9e7f-a340ca32bfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc532434-9fec-401e-890d-efc576e9dad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36050c72-9136-43f3-8d9d-750b0a7976a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57dfc1f5-8992-4554-8a7d-f54b52832b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478d652d-1ab9-481f-a69c-00368a752cfa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3a0bc8-9f9d-4723-b7b5-da36090b788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f70aac8-97c7-49a4-813c-02de224e8bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a41f82-80b8-4fe3-9bb7-350c797f1fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d424ca9-e7b4-492b-a7f7-11fd625cc85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcefa80a-9582-4b2c-a91c-fd131e8445d5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20663ad2-829e-497a-9a97-4676e21acd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24151356-2c79-4774-b7bf-a5ba22d18e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f5269e-af5d-4855-9069-74e10fac1b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "df9cf1cd-b3fc-4078-b238-182d47b15d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4333b2-8447-4c12-907b-0cdf1105a44b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd185ac-f4a3-47aa-85d1-a3ff5cbbcb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec35c76-224e-41eb-9dce-7442e68ef636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20faee03-1454-4db8-a475-aa4bf0a7a34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4971a34e-f526-47cc-a3a1-8dd2c4d4ea72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15522947-97aa-4acc-b74d-cedc283bbc66",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab842924-a501-49c4-9013-d4fef2ce8174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c456f202-6f4b-40ac-9bee-268dc789ce55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b562ce-0370-4cbb-bc6c-b2deaf31a886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09deff89-f9d0-42e9-8e0c-6c208847c4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfca31b-60e0-4dce-ab22-868c545ade25",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2faa7c5-63dd-470d-b8c5-cbfd9650d46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb68f7bc-ace9-444c-88ad-482df064ab14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb58fd4-32c7-4e4c-bd64-240a96b37642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a2dabf-be6b-454e-bf16-d5e5b960ce26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924549f0-cc2c-434f-ade6-3f5642e4e26f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47c7bb6-1dad-446f-b680-75e5352ab0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05b7d6a-15a0-4628-9447-91e3eb5d1d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abc6f69-20e4-4177-a1f5-97a922997d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e0c362-e4c2-4012-9786-b08ee2637449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b501c9-3ff7-43db-acd0-87991b0e391c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bc2840-894b-4e8a-a8a7-5b8b77b9060f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80202f68-b40e-46c2-bb64-3917afe412f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7635a4c-dc5b-4d49-9ffb-037c2b73a8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "703e244c-fe05-4419-b3dc-08e89f877f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fec2f15-9e81-4cc5-bd15-803235ff77fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a99b9a6-6f9f-4dae-ace1-948ae3f23a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9259f967-2b93-458f-a496-ec0ac962ede5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec726b5-7141-4f06-a8f5-bf9b63e40521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "409ef76d-0321-4d01-8ed8-617c7a53e67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c120efd8-b1de-49ff-967f-d683978d38ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901ead42-481a-4d8e-86a8-06384a7ce7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f77a0f-9fc3-492a-9961-f19f119552d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5632707-8980-47c8-9768-2246d421979f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c761be-374e-4f31-a6b7-ede065965ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b7a0a1-3f3b-41b3-9230-b163cc5c3a64",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430762ff-186f-482f-989f-9df631e2b534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995019f6-3342-4c80-83a6-25e82da498a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4072f396-6c82-4636-b16c-3db992286b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e3fad6-b85d-466d-8631-fdb42501e438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa290af-4efa-4668-9cfe-5a11ec68925e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae0cd9-aba9-49b4-8068-2f16345985f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c761e927-9725-44d1-92a9-f74717942eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9c3d0f-dab7-4027-8b9e-dd0e5ff97816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "acc5bf8c-78a4-4f7c-a0fe-56316be12148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e5f3b8-cea0-4758-83c1-65075eb3f60a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ab7ac3-a593-4db4-9aa6-abb7ea3a3fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c2c3fe-509f-4257-b273-8cab9bb15026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2489f563-a709-4d6a-be9b-85ec728046bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bee6e71-c9a4-44d8-ab2e-4c2dc44c84a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d818edc-2df0-4a78-bb87-917eaa70a0fa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d311fec9-5490-4680-91d5-d046bfa6f8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c64c4cf-43fb-44ae-8205-d06da7ab8d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebe9ef1-e2df-44a1-88c6-a439378e5652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c65b27a-f520-4e74-be28-0654f0ca5190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dad8e1-34cc-4028-a08d-a12262e1bb98",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7469862-a0c7-4ed0-a208-d49fef700d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155776cf-232e-4ef3-8d55-d043c5c3c7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7526748-5517-43e1-b285-d59f2996a285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1ae41b-0d87-4bd5-9fc6-77e77275dc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a8bae3-1844-4609-bafb-6207ff316b4b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd418762-f5d7-44bb-89f0-7402fb903cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ded150b-5367-4937-883a-c0dfeef51fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08f713d-e9cf-4b0b-8b7a-923ffac8a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b635beeb-fe9e-4511-beb4-17a79c23db66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42a6d8a-784f-4d56-b60c-c72417c76f05",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c80b27d-ff3e-4808-9a2f-2821311364d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee972fc7-43ad-4dc7-b560-223954140f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a805754c-a17f-47af-8439-4b76b89b07e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71215ed8-7d99-4440-88d6-5e0ee7889874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a3fce3-fa1d-4c30-85b2-0ed06616d3b9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d102dd2-9d50-4769-b94e-6df8a06af19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41bd6ac-2699-452c-9a45-0bd22d83cf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fd2a0c-53ef-4193-a87e-a7f9becbea1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cacff1-c91e-4905-aff7-1b87b2a14172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d972f9f-7e62-4de8-b32c-e067ec27e049",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbc4f7f-495d-446a-8c84-7812dc6166c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9753fb-4f82-4f1a-a2d3-cd4a4c8a9330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19898960-2171-45c6-8270-66a0c4af9274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3449134-5592-4ac9-b5ef-9839d7ce190b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bcee6d-08b4-4ec3-b9f8-3868ce3c6a0b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b49a1d-88cd-4855-a582-46eecb4fd1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8530f62-0435-470c-be01-de78a584287d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08280ffb-2eb2-4ffa-9089-c5f710bfedc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6215fcc2-0921-45ef-a4cf-f595ee5e4b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23a786f-d019-4be3-bb74-3b9ab3d2290f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cff2ec7-e8e2-4c6d-81c4-db362d0e4474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2513ec-e545-4b7f-b407-bc044db8a959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2cb4bf-1dfd-4191-b582-afd6dfd352b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb548a1a-2462-4d7e-8533-84d73533663b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7629873a-810e-4e65-9e6a-1e0de4b4d568",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56790bf4-fd54-40b0-923b-e74cddd0ba38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7f93a3-60f0-499d-be1d-2f7952b32fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92da8066-853d-4dc0-9cd4-0bf62a16cbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c04ad114-1fba-4602-a3ec-cb07dcc72a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e9d19f-8dc8-43c3-923f-e0c70458fbf9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c74db27-a462-4fb5-8177-f6c219adf0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7057eff6-d406-4a12-8f17-a492034a5844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0274aac-7d1b-45b6-9609-093aa12886a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4722e4a-6ff0-4b6f-8827-d6abb9667a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cdd42a-9884-4c15-8fab-d8d4f29a713f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc43a45a-f457-4db0-b8f5-4aa2ac57340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a4db41-a087-4522-965b-0ae7cc504e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0f413f-ce03-4dcd-b838-f04f9e74ac99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60c37699-111b-48e4-9c03-c0368ca4285c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76347ce2-bee2-4692-9bdc-87874611c433",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887db2c9-a2a4-4c92-a3a7-61db7db8e741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238065fb-4e2f-4f8a-b1c6-295bb3ac1768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbb752b-a7a4-42ed-88ae-5dc714691686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a726f318-6595-4619-856c-4fd2a1c92694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30ba99b-577d-4ccc-983c-28f45cc585d1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "addb99c6-cb55-4dee-9430-9dd1376a2d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb92736-e57a-461e-ba55-1c80cd148f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ef2d34-cb21-45a4-b992-ad2d96791db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7439fe2b-48c8-44d4-9888-c671e358dea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80249931-21b7-4a55-ac48-2f3d8c51982c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a82b1e9-e4ed-4e69-bd88-fbbe1a50412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d95d797-e235-4adc-9ec9-c2234e1c44c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1beeeb7d-cb76-4274-a4fb-7c9c148bf5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac687359-36a8-4317-a7c0-1998028b75e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2a1735-452b-441d-8c2d-ec09bf2bad01",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaa8e3e-04ce-44d2-8bb4-0eea3d97f6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810c0abe-569b-4c72-b496-3af15a02a2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79b1696-606f-4ca9-8f52-217365d65f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01d27bef-acaf-49bd-a34c-1c0d59f0d817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0971fe-2a9f-4efa-b139-4edea8abfdc2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d42476-3a5b-40ec-bbcc-00491af3b61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6da9b8-a3df-423b-927d-1f1ca9ea2fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996d4640-ed01-47ba-a94e-0ba43a70d89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c22d8e2-d711-470a-a06e-ab231d1bb0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bd72ca-7791-4cb6-8d0c-518091d9bc08",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be7bd6e-4de7-41a6-9fc3-9c16b03697d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f08e11-831b-42c5-93bd-e32166a60e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d1ec40-31a6-40eb-a043-0cf7795d9838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "212be897-a722-4619-a6e6-75e73edb74fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243b2962-a71e-4b14-9d63-1e558b3d4426",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f644e4-3e3b-4f35-b549-5ea62cc9f266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e81c065-45e8-4f01-b237-4a7903376eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11af854-f449-4532-af03-c05a2f714148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74884607-50d3-4716-bb01-d5dc66ec6c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33d4fc3-9e5f-4365-b471-49ca026d8037",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1bce67-2e97-480b-b8d5-ef1e11265c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec759bc2-94dc-4568-ba21-67de3c909046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb8d4ed-106d-4886-9565-08c43152a14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecd594d-b518-422c-8523-4b7500db078a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadaa0f0-396c-448e-bb08-739046f0b347",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d60959-20a6-4cf5-8198-4fc75077711a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afa76e7-1579-476c-a799-312348eab1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1041111-555c-4247-89bc-6be2739b8406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c14b23c9-c39a-4b84-8a89-1bf68e4b4cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08980c52-9a64-4f5e-b813-77a208954865",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff70218-baa9-4a34-9781-46da07dabe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ba4025-c7d4-4f0a-a9b2-4dcefb96903d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc609af6-7f01-4918-a272-cb41ffffc527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "274378f8-7019-468b-9f5d-bfe73b4c7500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dccba3-12a3-4089-8cc4-1df80a84755c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e8ae4d-fd1d-4f50-a850-b4c4cd4f9f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0636bd36-a26a-4457-9b5c-6e37eec35a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c0e03b-ffcb-4ffa-bec3-ede10639da55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afe62942-813b-4ace-8666-a91186ee1246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5320cdcd-1332-492f-9cc6-1f8035077630",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d6f0e4-8c25-42a1-bd1f-99d3f70a85d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd1ee6d-68fd-4d63-b666-50344a505c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0ebc96-1db5-4286-8901-9eb79f36d26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e008c5-aafb-4128-a851-c939da61f9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b44708-80a3-468a-8564-2c17d5c4c7a0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ac0569-eada-4fb4-bf99-628ace3600a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c24f61-6332-4ff2-ad1f-3af709832b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5062e18-9d4b-423d-840d-a12b9432acf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a41a6baa-57de-467b-8146-0f6156f37632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e6315e-f557-40c9-a649-bc2dfd57831a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cd1994-94b5-44f2-9f30-3c68f638b1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89820f90-dcce-4513-a9cc-201e7b84d772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bfe6d5-7e81-4754-8912-9b5b902eb9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55d1d43f-456f-4e86-b747-fa104d767228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14a165e-2e10-4b21-b114-432fdeac7ae6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de0df39-47e1-42c6-a3b8-184c90a275c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8e87e4-178b-47a2-9883-6f62634e31ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d2688a-8f8e-4003-a00a-d92105ab38d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bffd512-d401-44fb-b808-20ab09b5470f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c450b2a-55fd-4d02-a87a-22850f302ade",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60036beb-25f3-4328-8169-526f773fdecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7f2057-15e8-45a8-8b46-232e6e969dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258bcb7c-c7a4-45f0-828c-9b15c8c71c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5a4347-238c-4f26-b8ad-c109b67cbc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2dd4ce-c57c-4b70-b2d4-66a3f2bcd72f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b01c08a-cdc3-4c4e-b401-96c1db6675ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd898185-b1f6-4f34-985a-2402e3ad9f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87850fc4-110d-435f-bda4-c949e8a036b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a741cfcf-354a-4ea9-88bc-26add61cf97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fc80b0-e9a6-48f5-86a2-d464c42bcbb4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c86e38a-02e0-47e9-8d20-ebcfd7c61416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82dd22db-7f8f-46ca-af3a-14f039e80d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bfb83d-1808-49f4-aaa5-88d057d33aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42d56fff-1224-4587-8066-02e25338446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b987a4-3962-48c0-8a48-88f0df745e34",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e8bf60-ca51-4153-8ba8-ab3d7cf2eee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752c7be7-40ee-43cc-a6ca-bca69e9aae4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0276c1-d6d8-4636-b4ad-4bb0b2cbbe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "024bdcb4-af27-421b-b6cf-a3d2c4fedb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29afb793-906d-457a-b4fd-32bac7a8bd36",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86a9dc7-5acd-426d-ab83-81e37b66d71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "260e1c33-da39-4554-9ca2-44818cd13494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bf1908-6a00-4d36-9503-ecbcf25a774e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8671bb37-4acd-48b3-bc52-db43103ad441"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5dcbb95d-7599-4b7c-8fbb-3c2a738b8ed3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15d2bcf1-c30a-4c7f-8388-4d96290359fd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47a9ffa-04c3-4700-8323-73a4ee9b06a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef51e254-4c43-4add-ac2b-97710185c604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c188a93-acb1-4d32-b66e-3b008b354ad7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30ad00ac-9a49-4e6c-8fa3-55a4a7c55444"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9681c5c-e8a0-4f8d-8fc0-1ce0b0a5dc90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1262cc53-31d7-45b1-be1a-cc9b1623f4ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab20969c-64c3-4836-8392-469f01842958",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23c43c69-4e47-4bea-adb9-09d30d725b4b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0ea804f-9021-4343-a2ae-bbbed14b4af2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "679d93e5-575f-44ca-a0dc-7484f1e0d257"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3bdc324a-aeeb-436b-bb48-e6eecdbe4b1e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73333392-771e-4cc7-b755-c28530705901"
                }
              }
            ]
          },
          {
            "id": "c27597db-7a28-41fb-b145-39c98cadb1c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "84d52b26-0ec3-42e9-b5eb-1e69383d03fd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "92c88105-4ddb-4dd9-841b-ceb0ef390862",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d74428-16fb-42f7-ba0f-9da2ba159b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9d3992d0-1a63-4fd7-8a82-a4cfb1fdbc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb75c168-28a2-45da-aa39-1656dfedad97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672a1289-c804-4e7f-b052-7b1474ce555a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6558e45-a70b-4eab-a900-e61af574b154",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a55e53e-4081-497a-addf-f932d28b2f4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49541091-77dc-4d0a-91a9-2560c5a11855"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41220e5a-a963-4564-ad2d-fdc406696c9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "260ffa30-3f58-4018-a968-60da62800edb"
                    }
                  }
                ]
              },
              {
                "id": "dde154c5-a604-464d-b22a-264631b60138",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd1d344b-6b0f-4fcf-b31d-7413109ae4c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a660570-f1c9-4ce2-a15d-0bdc356a1052"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c72351e-ffa0-4f3c-a243-b8758c0b9b8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0556aaa6-fa73-49b1-af14-0d45c9073173"
                    }
                  }
                ]
              },
              {
                "id": "3e66e0e7-df0e-4789-a9ab-cbc7d689b2bc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c04a036d-44f6-4745-b0c5-9a4e27968b6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "781dac9b-1ba3-4f1b-a38e-44241b7bd207"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63158149-bcca-4826-8f43-98e9a8e69a00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7ddf56c-29ea-4fe8-a1bf-2b922471817c"
                    }
                  }
                ]
              },
              {
                "id": "32eb2758-6ab5-4e3a-9096-8f75da4b121e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29269ead-644d-407f-8d09-a726783cf189",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc5ab08e-79dd-4545-a81b-382ca347c0da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60b42465-85de-4398-b806-de98afd8c3eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ec649a2e-3781-4fd7-ade2-08f01a64fb37"
                    }
                  }
                ]
              },
              {
                "id": "10cf168b-ef7c-419c-b601-80cec8e69021",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae62dcb2-1b8d-4801-be9d-72f035beceb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "add5fdd3-797a-44e9-91b6-d00b699ba60f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06597ff7-51df-40a7-b663-952973509787",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7ea28a60-fe5c-40ae-b7dd-66d59fbac2d6"
                    }
                  }
                ]
              },
              {
                "id": "b5461844-3d91-40ca-84f5-8d6448ec742f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63defe1f-c968-4705-b6f1-a85ff8806417",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "586a69b9-54e2-4a43-82b7-c3c0cc413e0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11d6b3f3-07f0-4675-b0b3-52b35b8922d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94c84bd2-f6e3-4586-a248-56ce9f455bd5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99446811-6c0f-4241-af66-a1c30a03c64b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3eed40a8-97bd-4a2c-b7b3-511398ede3a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d13a9c5d-4f16-42f1-a9a8-55dc94e1bfab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df57e94a-8b2f-4ae1-aebf-5244c73d3f31"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0475ba7-5654-4aa6-be89-4cbc54951e62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "14ea8ce7-d910-4e89-953c-7ca3e21cdf53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79b4f139-76e8-46f7-8130-fa4dd7547ca5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7350a4c8-325a-4fff-87e8-83bbddad4244"
            }
          }
        ]
      },
      {
        "id": "79c76c58-d252-4bf2-9f73-23590cef0f5c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "096dd351-1452-48f1-9e94-52ecd6635b29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e711dab7-573e-425e-bfdb-a26acae0cfe9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a83f49d5-0702-461b-ace5-3b6c40e36328",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba0061f-d30a-4cd9-ae78-0cfb9206754c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb778634-ab97-4853-81be-a0bf7b2aa83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7180eec5-c7ee-4d0e-b1b6-bd6743ae1bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d246bf03-8a4f-452f-930a-60df7c1625ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05996008-37e3-44de-a71c-dce82e867259",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66e0de6-22e0-47a5-aca6-6b41792f0d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24752df-6072-436d-9a07-f4cd8c4d25d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387c3457-e48c-456a-85bd-8268ca282a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e1de8a-b071-424c-9803-7c74e242e922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070db677-2bf5-4890-ab36-84b5d2eb39da",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d354c295-c14b-4c30-8210-480b3394c34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c64c74-cb5d-4232-95f5-6a2847488ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df8ceb7-93ae-4d6c-8ad0-4c9bb12ba95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4f74b8-f590-4f03-890f-e53f6d699870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99cb073-4101-44b6-b3b0-59bec007b52c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f47eae8-017d-4c4e-955a-5e6a2fc8832e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af97dc4-1bf3-420b-acd7-b9a150365f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbae06e-a302-4663-926a-26de0a82e5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c020c47e-bafe-4c16-87a2-102cb97ad299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5e7fd9-dc1e-443b-a825-f1691965f6bf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850a263b-f86c-4449-a8c8-34be43cfa83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c20330-7534-4ddd-8d80-691317e71ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1e583a-43a0-441d-980a-d415df45a642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "507128df-de4f-408c-8bdf-1893b2f08800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38653fbf-d0de-42a6-aac1-a3b6a502d162",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e52503-a959-4d03-9f5e-38d29d267fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362c6cab-7c9d-47c3-8deb-7a14f130f974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc7dd22-64ed-476a-8f45-82992eb0343a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d37f8022-0a42-479d-b05b-1758c2cfc147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fa1433-c1b5-4d5c-a330-9a188c6f3150",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4376454f-4c6f-4951-9029-e3eb4b41dd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cfaa41-caca-44c4-a48a-8d05550f0e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764b65e0-b100-4f88-b851-c3c3f98b044e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e93bf812-679f-4115-b023-d5ad0b98d4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f731fee-abb1-4717-83c4-c5fa9d0cb669",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bda33c-fe5e-4f82-b586-82d067c8588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fb609b-967f-48fc-a152-39e8c3afc337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c694f208-f5f7-4d5b-952f-5ff168adb25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a04ff3-d7a9-413f-a8f2-2253c72dc78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51f1f37-c49c-4d67-99be-a0763ec9e1c3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e359ceb-1c18-41d3-8870-765163d1a47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6f750c-2d9f-4fbd-b105-099bd5aa76c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1d5ad0-c917-41c0-82ac-e37ffe5c4278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb6bda0-057b-44c9-a039-7614cbbd57ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b392e5-5011-4a97-88d9-b135c30cbc70",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac74527-75b6-44de-a626-6f220ef4a30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464ca288-f95e-484e-847b-a694e0e5ffba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f3afb6-bd5e-4ce4-bab4-c84a882fad8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9763db-1eed-40ae-a213-dd6acc7c649f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33d1203-5425-4bc1-8922-aca84306825b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b79c4a-a87b-4d24-8aa0-646863283f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5126c557-4f8c-48de-ba0c-ef42d164c14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d665a4-b5e1-4bf9-9ae0-e9aca673a3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0493a9bc-0361-42e9-aca5-4a225e496939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3676478-4c68-4b98-9bab-45ce50a6e30f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4865f052-1c29-4879-89dd-9cf49bb1c053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424aa5a6-6422-4b2a-88df-46e60845f304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7c3db7-f8f3-4012-a618-c0a3d70bb23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2562d1eb-a56d-4d9b-86ab-615098f2f631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef24541-8b2e-49af-a986-7e052d531070",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3310796f-fdfe-4a46-8060-89e9154427a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9a8c8e-87d5-4b68-b694-2ec919352dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8afea2-1258-46b7-b91c-f62325c353fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d0a455-4e6f-447c-8d24-3acae7df42c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801a3881-e044-4a77-9cae-becd891a5321",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6c9114-a47a-4f71-90fd-2f824dae5cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f50039-fd87-4730-a690-a6d3d44e1251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12b6640-c828-4eca-ab91-ebcd27832dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2026e3-2f62-45bd-9bc5-9712fe2421c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede65afd-e6a0-49b9-bc53-d02e708631fd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f03e4d2-1396-4b87-ac16-bb3a720c87aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9931bc6-2ad1-4481-94c3-0b273eec12ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68936dfb-368a-4dc6-ac57-697c97f00efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c08cc12-d6f4-42c0-85b1-cba89d37b812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e14396-697f-4fd2-b8ff-d4042683c964",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad195f61-5936-4410-9b6d-412d28a6b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d13163-0e09-4371-88f9-6204509f9916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619a8576-412b-46cb-aee8-45f7f46006f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a89fa741-c54e-44f9-baae-6bf98b9a13ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d867d775-d1ef-43ec-8b12-712efe96a22c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d496b491-7ff9-45d4-89fe-1a0620893728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd33f44-9b92-4ea2-b5e0-dcc852bbf0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af92ac0-f725-44fa-b08f-4a0bacf0839b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4497704a-f44a-49b5-a770-0d3ea42ab213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7689f69c-2aa2-4543-8806-32636cf900b1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63d8a0e-b485-46f6-b3e6-70f233fef9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aae4c79-883f-4c51-a083-098329601341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d929fd0-abbf-4dd9-b8c2-f0b780cb3d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9247bb-f535-432a-8290-00ba89bcda12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dc307e-d3d7-4320-9432-d30dae9a0e73",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09207c32-b09b-4a66-9839-4061de14a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b8cba2-c784-45c1-b2f4-70a07901241c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f7b66b-c5cf-403d-bc2c-d31081901161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0d3055-2a31-4ea0-8025-3dd9cb871d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fe0c1d-8e54-4e8c-97df-3e48175943a6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753e3e70-5a1b-4ad2-83bc-9ab99f04388d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5972476c-429e-4d0d-9432-94b842d15f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779e7fcd-347d-4d57-a32d-8856709bcd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d037d87-72f3-4572-94e0-c6349cbd1a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93699323-af86-4bf2-8480-24e0d68389f2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4070372-4ff1-4295-ae87-ce2c6ea26474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b795c599-7751-41c3-ad32-4209a4475f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f926da-9720-4a08-8237-f9ffdc10432a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10eae252-1530-465c-8b5e-52f759838931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b2e260-8267-420e-9b9b-da3016d087eb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6e32bb-025e-4cef-9bc3-714c8ae26b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f160dafa-e699-4832-b0ef-1f00c82383c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab2fa94-6169-493c-848e-8892167b1800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2f300f-dff0-42c2-8223-8429cd7e0b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80b98d2-554b-4cea-a16d-d97efe1bee12",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c25c436-1518-472d-ba64-71f6bac6994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42821710-c3d8-4e26-9cb1-8c660792b3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a56a59-45a9-4e10-a3fd-c648ee8821d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4918a44-a86c-4e6f-8493-2ffc0466511d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae2ddbf-bc31-4af4-b603-a7be2a186d29",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f52a95a-2aaa-4a25-a1bc-6c5af79ea201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7ea899-59ab-42cc-855f-239241599ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860216ea-0d9c-417c-b84a-a6fbb498748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aab6322-0a6f-494f-b03c-b364a3535d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7356807b-793c-4c32-a335-e2e800f973d2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40838035-e23a-45fe-be78-3514eac67878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901bc872-b07a-439d-8c8f-f77a766c5664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff9f7a5-0979-4267-8e40-18ddcad3fd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb103c27-2e76-4e56-a5c2-2a93aeebf8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06722be-f987-4432-90b3-6061e6fed3e0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3aa57f2-6107-4358-8745-31af2e071b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc46c45f-1e16-4627-b3b8-5e8ae7f9fe36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3f045a-21be-4404-af7f-ab696959ff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25e2a87f-436e-4b01-b3a4-88652caa6682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6eff476-ce2f-4cb8-b412-b8fb2d5387cb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c8c0d4-8208-4569-9ded-34dfd331a29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b03990-6c3e-4e4b-9fe9-ed6dc0179cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745013e7-764a-4617-aec7-845388d14e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7459873-2009-4647-8f25-885dacbbffd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db57344-0fe5-4505-8062-6488fc4d8d7f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe8a20a-14ed-4bc7-a59e-fb054e0e49b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcabfba-b6c8-4170-bd1d-b181d149d26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e58d0d-408d-4cf7-96f2-f35a8c0a34fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14df2a60-2794-4b63-a090-9ca3972131fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085cea56-4ef1-4e23-b7e8-0098d7c01605",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb946e2c-63ed-4660-be48-eabfde93c180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76804397-bb83-495e-bb8e-2b92fa037a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aa32b3-8b8d-4ea4-915e-68e97327ab80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a8973d-6b47-4276-acd7-096c1d37a1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25314ed5-7381-42a8-8102-1a313fcc48f0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9f4592-1d5f-49e2-a101-0a78ce07b37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00998ae3-bb2a-4a2b-947f-0b200495a9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87773756-8a5a-4b2f-8876-2b2e07d477eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de12b143-6ca7-420f-88a7-b9c7b1e04839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4e2756-4188-4900-a416-58c8ac2ba2e7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ecb074-4d75-47fd-8a53-606a221b4794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa2c253-5cc6-40b6-9620-9d8bc6ca110f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1fdef6-f065-4891-bd3f-4aa161d7a184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "669d770a-0641-469f-8f9d-88e009e734ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e186c2dd-330b-4839-88bd-eb23a028b270",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a889e5-dde1-49fb-8348-1cec6dd9e7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853be232-74e4-4f2b-8c4e-b0519e9c42b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e4a0e1-96dd-4ae5-a660-c328c11d76a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f683fe-f0ae-42af-8ab5-4bf538952ef5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7d59528-144b-4903-b319-869e65f16b92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5931c9b-a208-4cc7-9a16-77f494406d84",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87da201d-f100-4496-a798-651a0c88cb55",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "83fbd61a-96ef-4a01-9dbf-f998dcee49cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210cb76d-5399-4ab3-adf9-e18b46a7b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ef85109-7ce3-48fc-988f-d243b802fee8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13f1f45e-02be-44ed-815c-e405452ba8cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74cab518-1911-436e-b1ad-07cc42b4115c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c63ca650-2f0c-4f74-ae23-61cb24cea9c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c42343c4-904c-45f9-9046-c3fafab2ce38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a056fa05-3143-4b58-83aa-b8112bbf78df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4facf6e4-786f-45bf-aeb8-87f8471598a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40188f4f-16d0-4636-9d21-eabbb44470c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca2ad859-d9ac-477b-910d-4d5dd735b7f1"
            }
          }
        ]
      },
      {
        "id": "66021863-8e73-463a-8b6a-442a67879362",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "adbb3845-c25c-4c56-8ed6-510f24df1e37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc3f8e39-47ec-44c6-adea-931f2a3af621",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98d15b2b-39a2-45b4-ae68-87b9c2ecd06f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d971e77d-8119-48a2-85d2-819cc0efffee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d31e85d-6438-472d-a30c-d938da11047d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46285426-6e6b-407f-ac4b-ce4f147629fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f574117-fd74-45ea-a6d8-cc7349b31e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efd0ffd-2279-459f-832e-0e7c9591e069",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9578bc-c115-4f8a-8dfb-7972b4b218ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5710df6c-95b3-41f1-becf-d14a57e2b4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f6aec3-8c5c-4d93-98f4-00ef2b172843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e94a4a9-3544-4373-b5c6-be2eda219fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007880ab-35da-4f3b-8011-64de28b89726",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfa5195-ca39-44c4-8947-70b915bf68bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9a9529-bd5e-4fb2-bbc1-ca903bfcf09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc72107-f2b8-439d-b4c5-31fcbb86a1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d062f0d-6943-4982-9b02-1c23d56fcaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc043ad2-d1da-419a-8eae-6354a855af8a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e11090c-f7bb-49da-b6ae-5af7c2886e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7f1b12-4395-4461-aee5-4936b6314ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afbf743-6d8a-4a2e-8cd8-6b814642ad67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b64c8c-0ab8-4f28-838a-49367b842ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3002a937-1ae9-4a01-85a4-9d64eb92f369",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5413d08-d08b-4762-b5be-dc435c2812d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce0efb8-314c-45ff-afd6-798d06522024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe67051-1521-423c-8753-ab4eb637b4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70e2d99b-13da-4f49-b0fb-f203d1a7b519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a93a9a-c72f-44f5-b624-8a4c2e5b3cf4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e01f35-812a-423c-ab1b-373ee186463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06663adf-70bc-4d6c-a5f0-547525102d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf483520-4218-4f1b-95c3-232280232fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d01ba5-1916-45a7-a4d9-7e5c23564552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7719d7-904b-4c39-8abb-0f17bc12be34",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f536dc7a-cd27-45a6-a76e-890f76eb5155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741ada9c-5d72-402d-91dd-0cfdd45bd273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6e1ed0-8c16-4906-a8ff-ae924199f0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd22d8c1-fe87-4213-980c-0389c82e2c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dda3528-30b8-494f-ac73-c4b3fb505313",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe67b00-59b0-4eb7-ba9b-d0f4f409ac3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f819cdd-ee08-466e-ad9d-7599be68869e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44163a4f-b946-43e7-92b0-7771c1b7fe81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7272cd9-199d-4871-959f-6e086f2473f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af569dd-93c9-42bb-8db6-90c19348235e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28f5c6a-d065-426b-9402-4aa580779e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4354d5f-d354-4049-b684-6dbb65bcd4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498d311c-32e6-485e-9c25-ddd3ea311522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09599554-af03-4fb1-873c-5cfaf12d86ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2909fece-2ca0-4fbf-95fa-0e4e40df973d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0ed61a-4aed-4401-92cb-22e1907a2c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b90eb75-9c85-4478-95d0-e1d605a93f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebd51c9-be5c-4f8d-926f-e289d28a66b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb2b567-2117-448a-9430-6f57d034e3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2091ee76-6a08-4462-bf1c-b41a7fc570bf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f9578a-f0d1-41aa-9c0e-3907826cb0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a23a21-c22a-41b1-a6eb-a828dcc68cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc116ea8-8c4b-423c-aa9e-624604e050b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db4d8ab1-6e1f-45e6-b7c3-2ac54f419994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e7ae38-c743-42d1-83ca-bd325bdd0f77",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f7787c-b411-4881-9adc-216676e6e9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ea65f5-d563-4109-a967-57eb2a6525bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38c0d92-7e83-44ef-b5d2-6460c1ed49ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53c0a39e-2f2b-4246-8884-bd3763c2aa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0238c081-c48a-4b7c-b460-f820d04e9b70",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df12778b-3868-4b4d-9ba3-470c882aa686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd5a384-b1d3-4c90-8b19-115e277a42c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5bd3d5-e72b-4300-a4b1-7290c664391a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5ad716-c03d-4e1f-9807-ae8ac67b63e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b392ca-3f74-45cc-9a49-d0111c890dbc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d8e661-06e2-4ac9-91dd-33aa198b6f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964ca2c2-5baa-4424-947c-870759a6fb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57d0d86-f04a-4b74-afdc-50157715f867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db3b6c0-8a61-4f7f-aab9-d3328e242f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d5cee8-0c50-47fe-9c5c-a71c1d5a291b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041d5d2f-a90e-42af-ba48-f846259ca9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f830b3-a027-4543-a3ab-477d347785f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be391d2f-b706-4a11-86dc-071a69dd24bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e775c698-49ab-4905-9987-878476cc8f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2970f1-f341-449f-838e-c3084835573e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8052d5c-7b29-4db4-9654-4b043939ca0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c034681-7d8e-4a6f-b685-eba7876d10ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e9b3dc-aee8-439f-be8c-a77f5f47accb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "043f8ea5-7661-4ace-a4f9-194e88ea3df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc6814c-903d-4462-87cd-be09bb44261f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202b5da8-512c-4f1c-aedc-e3cdb11f4c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b242132e-1107-4009-8aa1-5f48e0e1afdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bd7673-5279-49c5-a7b2-c3d5bb6834c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "18c166a7-9a34-466d-88a5-0ccda32790b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50de0071-fb51-4198-87c4-41f413973723",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927f8720-d1e5-4e26-96fb-6370e1aa3249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93a7316-f6a7-4cc4-b043-0ee9b543688d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47f9338-817e-47d2-b072-a511418f0ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e95a041e-c25e-4f31-82be-852b015c4df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a127ac7-cc65-46b1-b567-a0e7a8e65c89",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b65874c-5aa4-4d94-8cd4-ca7110b12dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81650f36-674b-43e0-bb5e-7c6557013e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31df2a54-db20-4e7f-8c6f-4bab4b86606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "365ec11f-f595-485d-bad4-583b666b0af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b9c2b9-d02f-4d8e-bcc7-bd029789495d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019fff87-32fe-4116-b44b-88ae18dd8b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbcdcdf-4893-4f2e-ab64-3cc64ef763c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cafa6e-5a7a-4249-a9c5-c62042b114db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66a5fcd4-edb0-4c78-a561-dfe2fb257b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666b8fec-fdb0-4cdb-98e8-62f085c6e457",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806fe5b4-2473-4710-8b07-43e583c46f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275ba728-68f1-4472-a4b4-6e85f235bf80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3a7eba-f4aa-46d2-b0af-fe02577d3771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc6a0a6-eae6-44b3-87f9-39dd548054f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1583d7-8183-4feb-9919-6cc5eda514c3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db34dc3-4724-4d0c-bb69-3e372ba820a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465e375a-b127-4c57-bb50-c9f8ce5d6984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc64d44e-52f1-4c5d-b62b-26b1e75fdbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "785d2157-17cc-414a-b81f-8e1367c488c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77b6d08-669d-4ffc-a6f5-0a1b611af925",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ac921b-5a8c-4020-bc8d-182b91dbc3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4713759-3bde-4b5d-bd2d-d6903f27b599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407a6820-5dfa-4b0d-91f3-2806e8974947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab5aa9e-ac90-4243-8029-910dec054733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f594a186-8543-44c8-9a27-f69398a60435",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01a753a-f92b-446d-bd9f-936e7bb8f9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03bce33-4b30-4d86-bdef-7ac531f695b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaffcb8-eadb-4ff2-a945-038e071504a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1535a5-b01b-4aa7-930f-03a968f781ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dad3e46-1fff-4636-ad79-004c3fd88db6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fb3a54-f285-4802-a352-92246a01ccdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68bd02e-6480-4c53-a073-16787450a23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5477c3-ffc0-44e3-a1b5-bd98d090e8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9963c4-e23e-4f64-81f9-08570adcff11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df43292-5aff-4b4c-bd8a-32843d4ee2aa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1e412e-a4aa-4b0b-85ed-1adf76545431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b72f67-84d6-41ef-b065-4b514cc701ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f9833d-9f04-42aa-9feb-f57f698faf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4c32e4-8957-43aa-a7ae-7667a9d70b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdb30b7-bbfb-4a21-9726-86cef2cd1c39",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ef9cce-98ed-475d-a536-3bacea4f64ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492843e9-f1bc-4899-854b-51e530c74929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188acff4-e1f1-4ec6-83fd-5a927942ab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "591d9705-0f9d-4fc5-bbb8-9f6bbf63d9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3133e263-74ea-4f35-9bc2-6f98ddabea43",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108afaa4-b6fa-4315-b236-2455ee06509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b748d679-d480-4e5c-9622-880c6a9c3612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56daae40-582f-435a-8a8a-68a832ac8110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8d0ca1-e1e6-4a5e-aacb-fab528f16bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ea8502-abcc-4af2-9f49-50e437863e08",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4400f113-def8-4ec5-bf97-ed057f529cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02da5e77-321b-41ff-ace3-5f512f6a08ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1e5f2d-835e-46e7-a56a-f8f1d5a1daf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70d3b75e-6640-42ec-a322-44ed782d351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a0ea9b-142d-4a63-9ace-ba9a57c9e63c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113b40d4-263b-4d2c-8175-6b2e381a030e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c285c7e-a0cc-4056-bcd9-8cb2ace1e3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df046609-d5f9-44ce-acbf-1255b857d30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4823dcb-87b6-4c6f-98a0-8622d1165509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1c2155-d4cc-4756-befa-e1264b8a46a2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f281a3-875e-4287-b13d-38f2b22b77f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72df1ae2-4b0a-4378-959f-15cc5a6dd199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e46cbc2-0a98-49c5-a033-1a28df792241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d26fba44-5c80-481b-80e5-14d5587d7f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33208ae-269f-432f-aecd-b7bd70614e93",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd88dd5-3bf5-461e-9610-d20e4d7e4df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723b5444-6f5c-4cc9-a909-ee95cd9dec5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92515bd-fad7-44d6-bf54-45cdb62ecdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60aeb58f-9d8f-45fd-8995-f3a4ad7793e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2ebbb8-a65f-4474-b39d-5aeb8ca06092",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54a5b4e-5cad-4874-b963-9596583433c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46b9d09-29cb-4436-ad46-c64f49f327b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e655bc5b-fc28-4b72-ac3d-afebe57678c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a2e49a-61ea-44ab-8bc7-7306e90b337a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433ed238-538c-44cb-8ba1-fbfae358be62",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba8e55d-3e01-4a45-a4a7-36e8cd81e1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ffac03-1ae9-4e39-94e4-6ef05fd76c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cd9a63-4e51-496f-9534-0dc46e439fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0928ab-5a8a-4c14-b96f-35e9f24ccc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d89ae5-7532-4622-8447-9341c3050161",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1851e96f-1c85-4c5c-b7bc-69f72212541a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b350337d-2513-4d60-b341-f0b4c8517697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6377ceb-57ac-4256-807b-e8df00d952b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c33ca0-1307-477b-9d07-2b08bc9136ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047b3f02-44d1-4ffa-99d7-6d35b8100b3a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd937bb7-3dc0-4ef3-b178-ed72796d3849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ae594a-0f21-4331-b058-266faf5098cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cf959c-3cec-4b8b-b5e1-228f4177a4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3d6655-ac47-4b52-85bc-3ff0042473ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab5f427-7080-4309-948c-7eddd07551a3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711c1063-2759-4023-8168-70cebe504db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd5f706-2826-430b-a88c-9e760c6ae421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1047e5ef-04b9-44db-87de-8d4f810b127c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2306314-4c57-47db-bc8f-1a02c507911a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c1f5c09-6dcf-41d8-93d2-30d089d8fa21",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a144463-23d8-4176-aab5-8b2ad2bd2b88",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb0aa4e-2db0-4c8b-affb-137d59095e5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "828196a4-44b6-46c4-9ea7-a1d5ddd7ca30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8eaf582-17dd-445d-bcb8-d706a1dc34d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed67a55c-7b1f-40b8-8b57-317ea7fae15e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "773da870-6e12-494c-a0a2-fe538b3c886d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15429786-2569-4ee1-b68f-aaad0b74db26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edfba900-30a8-4462-bc88-075e79a93109",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "518f4121-77d1-492f-874a-f79140944454"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e01a71c-ef28-4e72-ba31-6e183a37f53b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6027b077-6d0b-479c-9b9b-8f3a37a8fe4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71190941-45dc-414d-a294-abf73ea789db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33c0ce58-b849-4e62-8107-ea105e62f467"
            }
          }
        ]
      },
      {
        "id": "b6883054-b301-4044-9514-fa19b5787b8e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3b803162-bb44-4a67-beec-82ff81d8e108",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e25ff3dd-63df-45b8-b122-d676f985008b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb8335ed-9525-4049-81e7-383bae2664d9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7aa6bfc-8758-4141-89aa-9dceb54205bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f004aa09-45db-4157-b39b-4bd803241180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6d2758-fd4d-4bc8-bd6e-8b7b1aa49ef8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d57bde4-0142-4dc8-91cb-da6b8780c023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d872fd8-54fa-43e9-bf05-2b0b9cc41001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a688e4-3be8-4011-a531-92182942d81f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775a2625-4c14-4d6d-9a4f-eea74059a1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f62a99-c70d-4227-ab2b-09d437ced199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2802c236-8cde-4bd0-a035-e7d7b76a7734",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0f49b4-692d-4737-8f3f-22fd23193952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6950b8-3be5-4f9a-a562-092c54500afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984157c4-0b3a-49e8-ab92-08164cd10fba",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7118ffdb-8d19-4d80-bd8a-a32c1256cf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45528acf-f76f-4727-8b16-885ff811c1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b8efa7-6222-4dc3-9bc9-52fc3592e118",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbe98ff-5d28-4041-a390-50eecd108cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3c5ef5-11e1-49a5-9ca7-ce41b27648ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde8dd29-3645-4a22-bfa5-ea2d55fb92e4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9c46e2-72d1-40a2-a852-b28ac16b9f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e050625-9680-4bde-a2a0-2076f89b2160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dceb1172-eec6-4b93-bdee-005533fdb8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1853d1ba-593a-4335-a3c7-ae5b293a2b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae79eb75-3931-4fa8-abbb-0ba0ae1b0f07",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9563d7cb-4477-412b-8c84-3370697aa184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70e8483d-34de-4ba3-af10-c6b35392d6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01089969-04e1-478f-a9c0-272528efb94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43548686-6a73-4224-b0d5-26a2c30e24cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d577d5dc-0aec-4409-91af-e897ea676d18",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b91411-7e5e-42a5-86a2-5a790388c056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c5bb2a-db38-427b-8e15-9ee7a0ea9198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d076c25c-5e05-4675-83d1-b4d0a7b1dd7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f27cca-9f83-4de5-be77-2ae41b768fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d3b7f5-faf2-4f62-a3ac-2ae38c1b159d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89da84f8-aa96-455c-975f-230840052f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3bcb22-c95d-40c7-a15b-446d6f35eb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a1fc2c-63be-45e1-85b3-a824cbd40624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b35d060-455d-4759-a9a6-90ffba1b2017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2229f01-caa9-4388-860d-9e003639cb5c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f49dab-5000-4f9e-9f99-f82d77b7848e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829228f9-38cd-4252-9fc9-d3f896f010d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35679d84-a2df-4e4b-a494-7a9d51850e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace3c470-2737-4330-b1b7-07a8e7221713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa38edd1-7354-4860-9ca3-836347953fb3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08936feb-2f93-4b0d-bc7a-ab35edfd724c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150fb614-d7b4-473e-9d92-4dee6b7b669a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e88a31c-253a-446a-b28c-0d522ac8c553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6dc5a70-2291-43c0-94ce-9f4be989eafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e321ab-33f6-4ef3-a9a6-89e5ee2c4344",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e0b517-cc90-44ca-bc76-37b71fe92b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2315eaef-46db-49f5-9b79-1620bd6ae6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff7bc2d-81cb-4d3b-870b-bc784f2eab92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86911584-3fa6-462a-b924-1589665cf3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a56112-e940-4a27-96cf-a6beea47b05f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b107a000-345c-403f-8165-91981829d481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d92e09b-24c5-46a7-9669-570fb9e7fe61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90951451-c1db-431d-afbc-8d03339a810b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0189ae2-5d61-461a-aad7-189eea52d728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bb54c9-bab3-4ea8-8ec9-689168f78429",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38a8205-0c91-4d24-9e75-77ff2c500064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6052076a-5273-49bf-a074-73792a2772f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492db3f8-31e1-42ce-894c-0c66f9b8b136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f79941d-d62e-4e02-bd2d-7069aef01a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc627521-5461-4958-8f47-a6520e205e76",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086d3224-56d7-4260-b30b-298dfc1ca365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00f6ce0b-09fb-46e0-b806-f93dc109a51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a38514-f49a-432a-9103-ccd864d050df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6eaffc-e1e7-4aa6-b7d2-1ab1e192479a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccf62e7-86dd-411c-9b0a-f168b8d5af98",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b9df13-4e2c-4034-aa74-c2925499f2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b1a1e2-1e7c-4794-89f0-b06d902e2444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885e763f-fcc2-4feb-ae09-fbdb6b7ce880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c2a7ee-1a38-4080-b5f6-7796fea1801f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73840c64-ea46-4efc-bba3-c7d91dcccfd9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bc6581-a0c9-4a53-9742-8c27cc9f2c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6233a518-b102-4ca5-976c-7b64c436ef0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af3b60e-b47c-4a45-946e-38fd13643fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bf8cf4-1610-4336-8cac-472aa5e0d095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bbea6d-711a-40d9-b321-4190574a20fe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e35b855-cd03-4f7a-9a93-72447376f1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9046ee8f-6fe0-4363-8473-2014aed1faa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d0310a-84e3-456c-bdf5-2a77e7b5012a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73955893-d31e-4411-91c2-75784ae7aecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852309a8-1e94-4ac8-ba00-54e741763ae4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f80df9-827d-4dbf-aeb5-59a9d016cf0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d8202a-5f5e-43e5-b672-75659691a4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf13bf6-4e3c-4f79-9582-e7d52a39adbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3f27d1-c9e0-49ff-baf1-0cf75d290e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d48bc0-6352-4d50-8dd4-bffd3e64778c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb966ee5-ec6b-4ab9-baa4-cd1c75166827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633d5cef-aed1-4395-a7af-3f5a3df14a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d86041-c6bb-4822-bbcd-d03656f63403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5f00e8-444e-4f3f-bc69-70c17fb4713b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918343fd-a814-4a73-8d38-484e9db294f3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fd49b4-8e3c-4c46-abd3-6302c6045866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c41222d-b3e4-4c47-9a8c-ba3eda32cad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c84c137-1137-4fe0-a361-8aa0e0ae69ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95946ca-604c-4bab-8f99-6e1aa49185eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c520402f-443c-4af8-a132-6d2c0f5b660d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b2cd74-cd9f-430c-bc74-37f2bde20776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0e7f95-fe22-4758-8a75-c075c4ca0abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f5d261-1e51-4400-ad4c-4d5e36c6721d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd019e3c-a262-495f-9e22-1ed0ca0a2cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbd495b-6542-497e-a92d-79c5d4bd8f82",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3b454d-8c51-443b-857f-6ab76071390f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833fe66a-f521-4463-80c8-eb010aec7969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1abf56-e5bc-4dfe-85ce-82c5f99dc7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9bf2ad-c394-41ac-ad4b-23eb247081b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ad086d-7550-4c01-b5ee-04920bcdd24a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b4117e-65da-4c47-8117-ba3abe8b7cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd7f5097-8848-4571-be35-dfd89a61dd9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6586b29b-0852-4a12-be7d-f988bb32df39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b635042-837f-4306-af37-081a41d7c034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9db0dd-2c44-4687-8622-3924ca35e3d3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b17b030-2d23-4944-a8b4-98b13b6e93a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd10700-6df3-475c-87c7-96b1c65c7e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a2ab40-4476-4faf-bd8c-822fe375c8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f88034-6bba-4088-b8e0-2a9e01019e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d2e2be-b5f3-429a-965c-313bea3eb85c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa40db8-a82e-4782-887e-3c020b36314e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef7dc16a-9688-4b06-a74e-1a3df1174559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6753aa0-0cd8-48e4-ba9f-8afb771a6de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134450c3-178e-4566-b175-949357010ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133c4894-dab5-44e9-9305-dc366c4cb55b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd6d9f7-fe15-4371-ac34-b8353a925e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b7e7f8-f46b-4acf-b56c-18e751e39275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e50afc2-6658-4927-b7f7-2b7d646a5460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d92b72-3e93-4054-b8a2-e58b14b5a122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8697172e-7367-4f41-a3d4-abc0ec4923ae",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48d5b9b-0186-4b95-8fb8-88c4079b9e9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2affd6-f52b-454b-9833-a19a6535f020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2f4d84-5da2-4e42-a3d4-be167f5ea40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e702f2-30fb-4e06-a61f-db1b31468129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c0c384-1ffd-47bc-8e84-e2a238324498",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fb80d9-b3ae-4f12-9ec7-9a114f649c21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad8de0f1-db7e-48aa-9402-a55f4080fc71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c7041e-03fc-43a5-91c4-a9e8f1fdef53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d3f246-6393-4cd9-87ed-a9c1d365e400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215db220-d473-4f4e-9843-7c8d050b57fa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c59b034-9d6d-419a-a3d3-ca2143a54fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "839239a6-32e1-41be-84ea-320643babb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546f6b9a-92e3-4c82-9733-3cc146f110c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d831080-506c-4d7d-92b3-882d1e159e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9535f51d-6976-44fe-92b9-e76c9ec8e903",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558737f4-d07d-406e-8431-118f6f94a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc8b06c-750a-4b3c-aaa9-21b1e7a71751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1c3d93-bb72-4f52-b5f2-bf1046df4b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a121acfe-7f2a-4ebc-806c-cfb7c7197750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dd25ca-5d01-4b73-8587-d91c820c272c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b2efa2-5d37-44e5-a12a-8577edf62b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe071b23-579f-4ca8-b8f6-3b1b288bb027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab77a5e3-1c01-4c2d-bf31-caecd347bd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10c70cd-74ba-4f87-825d-ce945305e598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f281b563-e330-4704-b922-913e57c7feb4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a188eb9-7550-4f20-9c15-3ecc3dd09bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2c44fd-ceef-4db0-9ca1-1e98e0eb23ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40092c63-c8d4-4d95-9c0e-3f4c2794d944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9778c26b-88a8-4bd2-9167-35c8f66ff0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a32584-64cb-45e2-bd87-e68f9e17950d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbfa278-0a08-4b26-8fc1-f7adc60aa02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fa038d-6d7a-45bd-b24a-e59f25f10b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e18682a-4c8c-4d6a-b3a0-3aa06df7442e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0caeb9e0-e409-4629-ab70-98e7f3b3fb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d75c969-4e5a-4e58-b7ab-a17ff16b2673",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156ef9b0-f91d-4109-99ee-b92911c9df6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bc4ccf-2190-49cd-ac40-eb016cfbcd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710d8759-67af-434c-8cdc-845fe142b4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6295c4-2c42-42e8-a6a0-5d0da19e60f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e58c965-225d-4043-9ffd-aa7817b6c9b1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de124b57-0389-4b63-8901-2fcd623478b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f236c56-e80d-46a6-b231-11636c2e2a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69511ec-212b-447c-8fb7-772a5d33a4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f2d5ea-6eab-44ab-a02a-23766d8feb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84833349-f19b-4f26-903c-27dabfc346ab",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee89cd7e-ce29-4c0f-9f6b-a4374ad30087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2ff480-05a0-4b12-8167-e99e5b49686f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2119ec72-d058-4b29-ae2f-f5f9e8117860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96dcecc-eacb-4a1d-9a9e-e532e2f78aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c8d55a-70de-42af-9f1d-486f7458bad4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4c5f19-8006-4dd8-b9fc-cce6e590654f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4c61e1-9247-45fc-b428-401dc5ae7301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1b17f7-83ee-41d3-bcab-09fddb04412e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139c9f2c-c723-42e4-9e97-26278c9b1253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16faad93-bc10-44c6-9794-5acee37ddbba",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba517245-112d-4256-95d0-6d046dafde6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84839f28-99a6-4131-9314-23dc954d39f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d7821a-330d-4690-9c2d-d384299a788c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28878030-1ea6-4e11-9f6c-1ec89eb862d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a79ad2-c79a-4f84-a01f-2cbf9cdd0800",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aadc67e-963a-48de-b961-d8bff9b981fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954b4fd2-5d4e-4b08-bfdf-086e8e46568d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fefece7-e374-45b7-a7b7-0a1e07adab14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6a11c8-bce9-45d0-8932-4e8abf1434af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf3b68b-ca21-4cca-8765-c566b3cf6b2a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1cdf23-390b-4378-88c8-fc7962119e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2100920-ac4b-419f-a321-50495c47af20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6787af-7dae-4468-83a3-713fb4160c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6880323-2b29-4dcb-9455-4bf0329fa3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f33bd4b-17ea-4de2-9d3a-ac9c35c498d7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f474cf-b174-4226-9a1a-83d024635542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d35bd79-80c4-4f27-80ab-629a33ebcd63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46afdce-8c8b-4d0d-8002-5d5f70803cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fad389-92a3-4f5e-b978-b84c4a67c009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cea6699-3021-44ed-a3db-1ee7eafa08fd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11b8f2b-3018-47cb-a650-3ec651892064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fe16e0-4ae4-47e3-bef4-10a585449a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004d4ad5-a15d-49fe-8cce-5d4569fd6999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae5eed0-0314-44d2-bca7-1c96bfc566d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cef218a-9e3a-4d43-ada3-a34cc6fb9cee",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0383017b-c18d-42bc-b34b-53b67dae960c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2593c7-6e9e-4147-bffe-5904af0e21b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804d845a-52fd-4a9d-8516-be56f0932728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b6350f-e855-4fc8-b170-b37d3d6ba567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dbb575-3429-4d6a-94b8-efbcd071a630",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389ff1c3-4fdc-40ad-8a8c-fd798c487cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d137d9-78ec-4ae4-b0fe-ef9e5da81f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c8b5f5-cee9-407f-a6f4-039a88ed5b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5aeccb0-c79b-461b-a2a1-51562d0a15e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3c49a2-649f-4c32-a035-f4e7ce4b3eca",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd91fc7e-68e2-439e-a9d8-e129402190a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc13934-683a-4f81-8110-9cbb217db494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0af27b5-83b2-44e1-a54a-41b9b484919c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b999779e-ada4-4ac7-a91e-a5188877089b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73945e1-c5f3-4f9c-b484-6819fa328a37",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666dd2a4-812f-46e1-921c-3c84ab460799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f7144c-8cce-4410-9978-002ad3284c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f94a2f-c6d4-4f5f-b53e-be8b5fd763b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ece5d31-a092-4c97-863d-b572d76a7495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d874365-5089-4c40-b448-148316991d6c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36b380a-fd29-4b81-8865-f2eaab1c499b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef7354c-5040-4f15-a2f3-6ac14c5fe76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bb2642-e5b8-423f-859d-82e22acc1d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a316f8f9-0ef4-4041-b6e7-8b5dfbb07397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75ee4bc-966e-4551-835a-620e568296f3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4c2400-c9da-4695-ace9-5afc6f93fd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb89184-c03a-4fcf-b3f9-a3e7b2e42a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7dfb6a-8d11-4124-abd4-bf3e885ddecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a00608-8b2f-45be-bd97-f386a9266d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68465352-b0b7-4176-9593-b031687c5235",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96d8938-5632-4715-b666-d53fed8f5962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c89148-5171-4143-8764-531bff68fdc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaba457b-1d1c-4779-9187-b0dbb45b224a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fccf615-50f5-43a7-b6d1-832b50d9b7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8584397e-8150-46da-a7e9-e17f9c358620",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4f548c-2793-4df6-a30f-0977c9809691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e792b8-379d-45e0-9f14-b3bb6c55c922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0cfd6c-526c-472a-a79c-4d6f1cf21c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588300f8-3599-497a-a9d9-561394fa340e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683975b4-5b05-4dae-a6dc-22b51de966c0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5521733c-4062-4dea-afb3-a61ccdb4527e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6eb7c9-14c2-446a-968b-d30934761cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53892d3a-c806-4c1e-9b54-d6a95896db87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b8207e-0d5b-4546-a2ee-c2bed3363fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18739cad-6f54-4cc3-bbb7-7c41d7f12394",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9e8e0a-b8a5-4bd4-af09-b50580aba10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a53c05-3794-4e80-8930-d11d3ba5646d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b71cac1-5c92-4d59-a61a-5769b31a20cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed346ba-cda9-47a8-a181-18925e5b5777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e0e6f3-a15c-4f61-a2bc-e35d61625c03",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c3ff68-ebf8-4b01-9591-a92ad0cfbc19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba05101-ea10-4387-8e32-d9075531e0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d1c1f9-f72a-4c8a-94ef-11566087108d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77761b48-3312-4699-9f0a-21fdd9dabd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb6e304-07f2-4b4f-ac94-dd1a077e481c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0225bba-d72e-4270-9963-fd12947bb8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b6c163-fe98-4eed-9868-b73d9d28a337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bcf384-06ef-4b53-9829-4aa893225a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffd2392-92ab-4ff8-906c-51110d6b1c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aa2423-f6f9-4377-b9e2-2659457ea9d5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1840e570-4c40-439f-9d6f-6b29f13ac108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc331b2-6951-43d9-9b16-755712531ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30ec3c2-ede9-43c4-9bd2-06b8de4a4cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8f5917-f77f-46e3-b84d-b6c2ead27bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8e6c06-84f6-48ba-b36e-d8cdffb96c69",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e7cb9b-172d-48a6-8541-88c1cb4cac04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f88a082-834d-40d4-be2b-4138a61fc9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67888704-066a-482f-a14f-a4e5295e72ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3f9028-7dc6-4381-ad7c-ba7f66dbd9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879d4ea1-6cef-47ca-9529-1a0e362ea32d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e15c609-4562-4868-a704-2944ffe6233a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad86373b-3aec-4ef0-8592-cfd2e1c8b938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17479a9-992c-491e-805c-4515be0810ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8af155-040f-45f4-8949-3fbb0ac78b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96289baa-bad7-4258-bb42-66379b7d4b9b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6382c790-fd86-4496-831e-382d3caeabb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e87acc-ef4e-4451-b0ff-0cb64dbd58c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28606fc-cbf4-4bf4-9d5d-0be92b0c586f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8171b402-b7f1-490b-ab5f-9a48d8423a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e89328-4fba-49db-adc2-fc925f83c095",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baed431-f833-41e0-9d98-b431d06b9ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6c538f-2726-4e82-88ee-39c67c3ef679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cd3ddb-c829-45d4-8eed-0e5d3be2728b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687de863-6855-4483-8f54-ee9bc755e3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07476c99-ef42-4553-b1db-5b294d275e1b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7000994-6545-472b-9b5a-3f3b9e1025c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ca7978-8153-4004-a8c6-5716100fc916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788d3a16-e96c-443a-a48d-18d759cd695a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b16567f-c1c7-4b4a-96c8-415b77528467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d99d06-6bdf-46ee-b46a-36b52e331576",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a3f17d-b000-4b1a-8688-0a7df651c36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4b34fb-5b67-47a7-956e-86488074624d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53356b9f-c112-4331-a9e3-19efa297c6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747fc34f-3634-437b-a34d-ac65ee66349c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5967e24c-090a-4006-9262-7eee049e09d6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c3c589-c367-45a7-8822-d9f459d6b37e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "267c5f30-8803-4e92-8989-a6374a456c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b11ea7-ad42-4ab0-a90f-49edf1ab3eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7157173a-b98e-4bf8-85b7-2333d82407ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7e8a18-73dd-48b4-885f-e91516dfccc0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9c403f-bceb-4919-ad51-c17e5d1512b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51b98ee9-ff39-412e-988b-b0e116739ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd6b792-7999-45b4-a903-d6880bc01ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49105265-ed21-4113-890f-647a8ad7f3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669bded2-8ac8-404a-80d9-b38a5a4ff5f9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a6f4e9-ed58-4eea-8076-4ed82b876d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62225c39-fe8d-4c48-a73b-5ce9bf786a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e6a35e-4966-4a75-b3f3-d50b5e92d31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a941e9-1cfc-474e-b2f1-72ae920eaeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6d8acd-058a-4e0e-8a39-62bb4e4fa055",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e82784-d536-463e-b5d6-72f27a950d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b743d41-834c-4e09-89a4-f3bc1bc12467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f338c81b-9cab-4a68-b8d8-c495b8d17b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e4b9bb-5dba-4459-8900-c15c126179ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e96d9e4-5f95-4d2c-99c7-095567c5f8eb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bee05f-b8a2-42af-b2ac-346c7dd5a864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6e4b4e-3901-4a2a-93fa-8eb743778f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da880b5-496a-448d-b33e-cdcbfa2ecc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd6e748-4d1e-4a02-8b87-351f1cffda37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5967079c-7c7d-4ddc-ad15-8b3fd19065f3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe3f8f9-88dd-4da9-ac41-0d7d9a59d0ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870c497f-2db0-45f1-899e-5975ed6c8ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c643b72-b8a5-46a2-92be-5ae04aebe398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f4186f-13ae-4387-be48-02df4dae7819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ccd291-5b16-4b53-9b95-73c1c34177a3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb89521-ee10-4be1-8c1a-2b8772345e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "146deb35-25d9-444d-86aa-fb39bf924563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd3fb6c-0ec0-4824-ab40-19945879f913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5d3431-c3dd-4fa5-86a5-e23c0238c308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc237f8-df7f-410c-a10c-f7ebf5049876",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af05911-b6b0-4535-ade0-19b1dc62dec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1d4f98f-b5db-4573-b511-cfd56a48c21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4ae19b-b0d0-43f6-802c-323235427cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbf48f9-b98b-4883-a525-ded8e28b901a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6120bc7d-7f09-4af6-b98a-3b67ee035c52",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482fcd0d-f05b-4977-99f4-5f5b9fa92757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a4a030-cb3a-4f75-bc48-d9e44f5794e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db431e2c-7644-4a7a-a631-22af3ac36612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b8a361-c9db-4e78-ab3e-ce76075a3df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d6ea89-1481-4ff1-b69e-2f29b246a839",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed6dc38-cf59-4ebf-a53f-548c407b05a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeed5a15-797c-4e29-bfa9-50bcd58480a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06dc39b-12c0-402f-9112-3079a76f31c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e85777-be32-40a2-9ecb-74249c23a97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d508714-621a-4442-a94f-adb9e8c2bfd1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3f5bba-5c76-4af8-a7b6-d50dfc0a8be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66c65004-4ee0-4e09-b516-821e683d9581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8b46c3-9921-4059-bbbf-c8e8346d3090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cdfc7e-104c-4416-8f03-136f1f04a2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e742da-398b-4609-b9a0-cb029b697f30",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbf279c-0ab0-46a3-b744-1b17afb5ce54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86bd498d-2485-4f20-9809-7df419de30b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da00246-0685-4fb4-b206-06d706e979be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38726b36-ef61-426c-ac85-5e110ac1ca39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f1153d-cbef-4e30-8355-d28bfe0da2ba",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f43ce1-975d-456f-b056-3cd962e8b114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf175328-4772-449c-92cf-63598c05bf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585f8a99-02cc-4494-80f7-9cf0e66fddc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3432c32a-d938-45e9-93cf-ecea447cc9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5629bbdd-475b-4f0e-8438-8397a55d55f3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7c31e7-abe5-4ddc-8cb7-77f00f9b34a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87f4339b-5061-4a0a-9947-740391f224f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4b8903-e8a2-404d-96fa-a736b4bb5b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce68124-689f-472b-aa48-606a7f246a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db94c1b9-e38d-4f1a-abd4-76ccff879295",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28b757c-8285-498e-bbfb-aeee47977643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35bbcfad-462b-41c9-93de-b1e4271aabc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5cb77e-0b65-4c7c-8834-7741e2a72e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3b0c56-86a4-4f53-a174-c7017dcafd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db79faf-5036-4520-9096-79fb86cde6c7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e0d22a-c2c6-4010-bee6-c55d4bd76b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a154ac24-6569-4081-8a9a-bfa204edf154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bdeb81-b602-4fea-8303-01935cedb436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1768898-c911-4938-ab4f-48baf3f68c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe41f5c-c9ae-4da6-a671-76449057e53f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1df8d6d-79de-4c43-85b8-6221f07462ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71f9a16-b5c8-4c67-95fe-1cad0ad75e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cc785e-d829-41b8-9f1a-c9a9b64f7a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016b416f-175b-4313-875c-3e987f488226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba92e0bb-786e-42e4-902a-c421b959dcb9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6871f9-2ae7-49c1-bc85-990627a4a536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b99d2b6-afa2-4247-8526-e05a34586d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d48daba-3113-4b09-b39f-efbf84eb5bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ba8f2e-f9e8-4f53-9e81-07aa7bb17463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54f2e75-2ead-4b79-82c8-60576ab15225",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873f751a-c4d3-4b9e-9035-910dca880034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "babb0357-8018-4d40-bda9-600fb22b9fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d7757b-98b8-41a2-9ec2-e69c4181bc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37499665-28f1-4658-a0c8-bfe2fc45c18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2b6f1f-31d5-4013-9645-0d42b49f23f6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad74745a-1e5d-488b-be18-986032952dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc1a939-7020-4e64-8d0d-d57738be6274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229a8b7f-dddb-440f-ac1f-de90b04cba4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d70f65-6bff-4be1-9dcd-28c1bd40bd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40fff5c-cc95-4394-91ed-f4136db16563",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75701cc8-7942-4e2b-acd2-3a3cd7e08637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e28296-06f9-446c-8c07-2d94dcee5117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe6c69a-bb63-4004-8fb5-221f6a12a331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871146be-4f99-4707-84ce-df53c243c952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcb70b5-663f-45ff-8604-fc432ebacb66",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e783aa99-e4a7-4502-afe1-8afc2fc731e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c19ffa-0e74-4416-98f6-9a29f4b2b8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68759115-06fb-47f7-8832-22836f1807d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859e1098-4d7a-42d1-b89c-b185686706cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4b67de-dfc8-4b4e-9f47-2815d7e9c312",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba87416-1cb3-403a-ba9b-2df79ea0539c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92922b04-1b66-4bb6-ada4-5c7982aa3bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a56e95c-aa31-4363-b928-6ae25c4ec0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328f5d13-f7f4-4771-b1fd-ae469c2ef0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a808bd8-7217-4971-bf88-3659ef86169d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518957ff-1757-4862-b2db-69a8a8afa4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f42e33-04af-4d56-8e86-297f45467187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a82d0a-7d2c-4edc-ba9c-793348846fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04506cef-ff77-4a73-8b4d-c18337da495f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f9a83-e697-4637-9a25-914d64defacd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6930d05-91b8-46c1-a9cf-f572fc00b518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f75abfb-e1ed-422c-a9b2-346f73c39b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83660bc0-9066-44fa-aec1-0dc752026848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622ba5e7-07b4-42c2-83a5-e8ffe0ea8c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caaba3f-cd79-430f-87d3-5bf837c914cd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc3e9c6-c9a3-4dfd-9db6-75b45ece65f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf32e18e-f56a-4682-8257-39bd7b63389a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e28d0b-667b-4068-848b-8d4106bcf2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee85f8f4-531c-4c61-9010-4d98f00c019f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1891ec7-ddd3-4516-a6f5-a5657872b914",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58f306e-bfc8-4aad-8432-43d8e5444605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae10afdc-cf19-43c0-81cc-f18334b01079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c178d9-8324-49dd-9b9d-dd9443566851",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d9cdb3-1ed9-4ff3-9672-916f397e1056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cf5dc3-411c-429e-80a8-4962f2cfd37c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24089f04-f303-4a2d-820e-0348568bd7ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "065f5f92-4b9d-4527-b34a-3b3f36f9ca75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf6faba-6b87-4d91-a0d3-ce05ddb57993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9084ec1-f425-4905-ac6e-e1a1d87b3aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83421a9-cd0c-439b-a88a-5778614c41df",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3becb584-4c1b-4f80-afb2-124ad791dffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e48b01-663d-4773-b216-5fdd4ec1c1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665d8744-277b-4d0d-b3d2-9e1b81dc2e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1cabe5-c14e-416f-9114-ded3bcfa71fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823b75d5-866c-455b-91ae-d3e315e4f430",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad770f34-ac64-46d8-bde3-72f657d2caab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea6ae13-fa9b-4c75-96f9-3e677c089bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbc6818-1cd3-4379-9246-c492764ba419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc413e64-1605-4a3a-acff-9b02d52f7af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bfbe15-a28a-4e5f-8cb0-8eaf031a7946",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e67569-b358-41bb-b2d2-c6f0515be28c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0867def-3196-4e26-b102-d6fb32c86703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0cd6fa-6082-4779-a86d-faf1965d07d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec61110d-9ca9-49d1-8ce7-bbb012185e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7b87a0-9a9f-448a-9ca9-34969b35e52f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d73fd48-b121-47fd-aad8-f7fc2d256182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f120322e-b1d4-459e-af0f-247c589c4796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4e1a11-dfd5-4c0a-a5f6-2dbf6dd90293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7b7186-0b7c-486e-bbe0-4b234c6f8e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8841d9ca-b3b8-441c-abbc-9630b9d2cc3b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ff8b12-b183-4577-ab2b-f1a7b2ff00f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feb83d82-8e2a-41cf-ae7c-76993fe0cea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff75c6bb-f5ec-4cef-8d9e-cdd04d6fef46",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96ca80d-b5d9-44fc-afe6-83ab54c54ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80f86ab-6436-4987-8c84-947d4af9cd8a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790b7c65-ff40-4804-9217-754ec1546d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e3c682-ae24-4657-bf2c-49f54db70a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d60def1-3474-4fca-b798-cdb47da3cf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd502c4-8fea-4653-95ff-db2a88479e15"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2754356-c63c-429f-84fe-875a0bfe461f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cdf956d-93d6-4c4b-95ea-2c376e65de1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a0bb2d7-8853-45da-83d3-5f29e5fbbd5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2632b6e-3413-4063-86b8-ea86e18b83ee"
                    }
                  }
                ]
              },
              {
                "id": "2344fd9f-b1ab-4285-a602-32c77eadad48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58432a53-3d1d-4d60-a09c-6bfe6cccb626",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4233d3f9-6842-4276-8f68-9bb9ff8e7fef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "127bf0cd-d304-48b6-aafc-1c8f5d341036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b599cc-f3f8-4c2a-a906-63146a6db15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5581b58a-1803-4823-91c1-0b628c2568d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78411be1-502b-499c-b250-44a2a5b10ccb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db5e296b-66f1-452b-943d-6c80941204c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b139134c-1966-4910-a55c-ecee7398074f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d97e407-3670-4a33-8ba0-4d2c7725058f"
                    }
                  }
                ]
              },
              {
                "id": "541845bf-76cd-4da5-a82a-886089554691",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5d391ae7-db39-4742-ad85-55ded0f24393",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cf7a63-fba5-412b-9a55-461a6c81145a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8e94b56d-0482-4152-b203-5836a58051b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5566e546-9d97-44bd-b5b8-1db07b4d919d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a350a7-b8e5-48e3-a84d-9a13b06d6bb4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "925c6a48-7d85-4f91-962d-21a37318faf2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37247f4d-ee05-4d4b-973e-53ef287a3330",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be1bd790-4ae1-46de-984a-281f498e115a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "316659fd-5557-422f-ba39-65f11c876595"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4b8996b-49aa-4963-928b-cad8f5147a21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed2c61e7-d99e-43ac-9585-8465089996d2"
                    }
                  }
                ]
              },
              {
                "id": "d9be22c0-3704-472c-9264-07ec7ccc7498",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f67a846c-a7cc-4118-92d8-05a75234c170",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "75f36ea5-01c6-4d52-880f-4da97c8b2853"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cfc10ae-4199-4daf-8ba1-decc5c35eef2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f8a288e-de69-4d49-b7b6-2272c4df728a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54d5e275-28f1-4b4d-889f-ca2bd02d9488",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6553ad15-b3d8-4854-9915-e19e2dc8dcae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "801284df-5469-483f-8202-fafe893a94c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0e47874-b0bf-46f1-80f0-27ee36720848"
            }
          }
        ]
      },
      {
        "id": "53d69984-93e5-4de0-bfad-ab92beb66682",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "37753611-0fba-4dc4-a8b6-24f507ca1430",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc9aab91-cb10-4db1-a73a-18f17cd2e697",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "774cc979-b07a-42c3-87b1-a7d019394ba9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130c2d7c-d000-4962-92b5-83dd915128c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cc737e8f-9127-4b6d-a832-2859a0b1705b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d30d751-76b6-4c37-b10e-442d1004e170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d25fbb59-9165-430e-accf-fce16748aa98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4fba14d-74ea-4535-a7d5-0c484b6694ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2ad94c4-6745-41fd-8164-f60b430654e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1553619-3bbd-4f79-a136-b5974a784695",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04b27368-0098-4108-a1af-c6fed7ba8f65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f39b57b-da46-4c01-b515-7a0f661d8ebe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "734fb577-8b7e-4bb4-926d-5bbb2a24496f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bec0dab6-1ab1-465b-b1eb-8f792a2de774",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78e5a3e3-32c5-426a-a3e3-d60fc23dbdb5"
            }
          }
        ]
      },
      {
        "id": "d1095f38-73fd-4170-95f9-e9c72d16fdc6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "362fd99b-1127-4285-a5d6-1b9eff4cbd9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bf60545-2abd-4802-a1e3-f3d56aa92318",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5f49108-1d4d-4521-b1ca-054f3bad90d3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c37cce9-07e1-423d-907d-1d0c824e2a3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e46a7db6-d66b-4af8-9ec0-9a26a54a172a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bab964-7a59-4aab-9c21-4ada18cc5ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "618da90f-78db-46c9-9a27-1a7dfa3c24cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60e52c0e-d1b1-409a-9235-31742e62208c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2656a6db-a312-400d-aa2b-5fd8c17b009e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7549a6f8-854a-4c5a-a796-e795f8b867ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4623896a-390f-4327-8113-cd301ce481bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4c36634-a807-4b96-87f2-c7e94d264171",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27e7d598-351a-44d0-9885-63cd719ab662"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "226cb9f1-9d9a-4f57-b798-d2dc214ea578",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "631d26ec-3c9d-40ac-8374-a657aafaa55d"
            }
          }
        ]
      },
      {
        "id": "693f40e3-a9ff-49a9-b73f-ce4bf061e5b8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "07d12c47-3589-4f02-8b06-0f77b0dfe262",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62b9b11d-4e39-490a-94a5-45b8dfd01b44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "574f871c-c631-45de-b8d1-b9a1f1b2af9b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e5c8e5-8e86-4c67-acd2-1eea0a589a8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70111fa1-95ab-4eb8-87fb-a6e25047534e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccc4eca-6187-46ad-8c1e-74a802d5fa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "987dca4e-409b-4055-9511-7b5aa20946e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7640521f-992d-4191-82bb-c30d0c95cbd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf789fe2-ce7a-44cc-b1c2-051020e42bb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a99ffdf3-28af-4b63-8ff3-549cd127f6c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69634160-8400-4b7a-a9ef-b2b308c072aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f77508e-27d7-4791-8f65-1dbb3f83f38d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f0ee1d3c-a52d-4a8f-90bd-17a1e066ba72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f78a65eb-91ca-4bb0-b8eb-8c3ac27805ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "502f4316-1e80-4b99-8771-9e6bcaae2de8"
            }
          }
        ]
      },
      {
        "id": "a7c79a1c-7326-4fc7-a020-ce3ab15efdaa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94f1636f-4b1a-4b78-ac94-2314c9f4b019",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ee15555-d666-4c5e-b75e-6ed4d7ae3ce3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6ee13414-580f-4787-97e3-513c85c9094f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cec5b97d-3da2-4b8b-9bc9-952af3b9907e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "636a0b88-b953-45bf-bed1-462eb9631245",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 171.39649122807018,
      "responseMin": 4,
      "responseMax": 8786,
      "responseSd": 931.2089259920884,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701650187146,
      "completed": 1701650245057
    },
    "executions": [
      {
        "id": "c2a0cd1e-0297-411f-b737-ac9bc6f91e31",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "63880daf-6625-4eab-871b-7e390db2bf4b",
          "httpRequestId": "bbf851ce-591f-41ac-b28e-b541fa74d3ff"
        },
        "item": {
          "id": "c2a0cd1e-0297-411f-b737-ac9bc6f91e31",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "11933237-2f9c-4ea6-92ff-5044e9f8f5ea",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "524b684b-a1d8-47ad-80de-e5b78a3b3ca5",
        "cursor": {
          "ref": "39174de1-3cca-4c1e-8967-90b456eb50c9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "650a77b1-5cfd-4dfa-b2b0-e31cd67ad848"
        },
        "item": {
          "id": "524b684b-a1d8-47ad-80de-e5b78a3b3ca5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f2196214-cf8d-4099-9f04-22a4def67648",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "245540b1-471b-43dd-b891-ed62ae629d66",
        "cursor": {
          "ref": "78704292-f8e1-415f-857c-1123536c50a9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "70212108-c699-4485-88f2-26668b598232"
        },
        "item": {
          "id": "245540b1-471b-43dd-b891-ed62ae629d66",
          "name": "did_json"
        },
        "response": {
          "id": "72162d00-09b7-421d-82b0-b1c14e6abd0b",
          "status": "OK",
          "code": 200,
          "responseTime": 247,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196f0193-24e8-4b9b-996c-827a150a39ad",
        "cursor": {
          "ref": "e67b2fec-fc0e-40e1-a95a-288964f8fdc8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "90fdc7d5-6a6b-488b-97bc-ca5fe0bc1526"
        },
        "item": {
          "id": "196f0193-24e8-4b9b-996c-827a150a39ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf5c1e7c-5b65-4567-9fb4-cc2fef090c98",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3411,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196f0193-24e8-4b9b-996c-827a150a39ad",
        "cursor": {
          "ref": "e67b2fec-fc0e-40e1-a95a-288964f8fdc8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "90fdc7d5-6a6b-488b-97bc-ca5fe0bc1526"
        },
        "item": {
          "id": "196f0193-24e8-4b9b-996c-827a150a39ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf5c1e7c-5b65-4567-9fb4-cc2fef090c98",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3411,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6c4381-b80c-4216-8224-44483d86b422",
        "cursor": {
          "ref": "8b626cc9-3ef2-418c-bfed-703a0909393b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "de511b13-5908-4416-91ab-4afcbbb97419"
        },
        "item": {
          "id": "ad6c4381-b80c-4216-8224-44483d86b422",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "01afcaf3-1e3c-478c-af12-94243fc64199",
          "status": "Not Found",
          "code": 404,
          "responseTime": 25,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8790f8a9-4d3f-4fa1-822c-a07500dd7551",
        "cursor": {
          "ref": "1fc53a27-293e-4b5c-a690-2782aac3ee00",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "220a3225-782a-42e5-8d95-79fca51bc90e"
        },
        "item": {
          "id": "8790f8a9-4d3f-4fa1-822c-a07500dd7551",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d2657044-1633-4adf-8fe3-03dbe526a10c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79099801-0cd0-40f5-ad14-fc1c524667c1",
        "cursor": {
          "ref": "3b1950be-f94c-44eb-8d9c-2be0edbcd9e5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bc9cc4d9-73c8-4ea2-8a6c-f6015925ef0e"
        },
        "item": {
          "id": "79099801-0cd0-40f5-ad14-fc1c524667c1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "40a12c1f-4f1b-48cd-8d5c-e74a9a1663d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9e0d85-0499-4e5a-857c-4ddfdcba470f",
        "cursor": {
          "ref": "f1161a3e-a584-4b9f-81dc-42a0dc83351f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4234bb58-12a0-41a7-9bc2-5756305f4b6b"
        },
        "item": {
          "id": "0c9e0d85-0499-4e5a-857c-4ddfdcba470f",
          "name": "identifiers"
        },
        "response": {
          "id": "602ba850-bb17-4f3f-8fd4-c3cf420d8cae",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a277f2-caf2-4391-a1bf-2e9a27f6b046",
        "cursor": {
          "ref": "6a724772-f10c-49b8-b30b-ab0b6d73ae57",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "52eb0d0a-8872-406c-9c37-d9352725db4b"
        },
        "item": {
          "id": "18a277f2-caf2-4391-a1bf-2e9a27f6b046",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "22636a2c-d3bd-4aa3-8e7f-31d871445209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c345a9-f5a1-4412-8a3f-fc9a4cd1d3d9",
        "cursor": {
          "ref": "0b22ca1f-479b-49ad-a82e-d4ffbc0fd705",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "efc0efb4-0bc9-40d1-847f-9e88f929b640"
        },
        "item": {
          "id": "d5c345a9-f5a1-4412-8a3f-fc9a4cd1d3d9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1e020aa4-5eef-4999-9a16-1bf0f282f6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8521fd64-be06-42f8-a9b4-85c462ac347a",
        "cursor": {
          "ref": "63451a20-2232-4290-a2cb-5f607a04171f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7d22b9c9-70e3-4e2c-af02-735a6b120dfa"
        },
        "item": {
          "id": "8521fd64-be06-42f8-a9b4-85c462ac347a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "650e1f02-408a-4d11-b961-f03a61d246b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5b1fee-7012-40ec-ac6d-fcaacdafd2e2",
        "cursor": {
          "ref": "1ba77039-1d69-4721-8ad7-16c0e2a2b5e2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a83b1446-1b9d-4bc9-8cdb-a3553f1de619"
        },
        "item": {
          "id": "8e5b1fee-7012-40ec-ac6d-fcaacdafd2e2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a70bb513-8b80-4ce2-819f-e403c22b14f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ea563b-2efa-4779-9e09-34100d2cc560",
        "cursor": {
          "ref": "c5fc2120-4838-4021-8fe4-75c70635b9d4",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "566944ea-6574-4e05-8a54-e7dbd5597258"
        },
        "item": {
          "id": "14ea563b-2efa-4779-9e09-34100d2cc560",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3852f00f-9df1-4cf4-afba-fa61f13546b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbd4735-84c7-4296-8955-3abd5dc7f810",
        "cursor": {
          "ref": "499d0d44-d6b9-467b-97a0-1950cab3405c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "34a1d3ce-7c3b-499d-a7c0-bc622739997d"
        },
        "item": {
          "id": "cbbd4735-84c7-4296-8955-3abd5dc7f810",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c1251da8-1461-49c7-889b-620b5fc7fbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7847e5ad-f1d6-4b49-9103-bfeaa9a8dc8f",
        "cursor": {
          "ref": "c76807b3-4e9a-499a-bd21-7164f7206a4a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5dac6b13-6133-4b3e-a38a-3614a52b5706"
        },
        "item": {
          "id": "7847e5ad-f1d6-4b49-9103-bfeaa9a8dc8f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "41738415-ca75-4f25-8c7c-de048001498c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7146549f-72aa-4f7a-b2fb-a04209082980",
        "cursor": {
          "ref": "16ecd535-632a-4a94-ba52-d4fe13c66573",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "33b72b95-4aeb-40ae-82a8-04d6aeecb68f"
        },
        "item": {
          "id": "7146549f-72aa-4f7a-b2fb-a04209082980",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f8126a86-4205-4010-904d-b7ed7a7421fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac2427d-4a1f-453d-b82e-c5866c3e985e",
        "cursor": {
          "ref": "0b1d45b1-3694-481d-a844-99820abdae45",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "839efa1e-3c24-46da-add8-6c2aa8b91750"
        },
        "item": {
          "id": "2ac2427d-4a1f-453d-b82e-c5866c3e985e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7be3ba72-a2c7-4c83-822b-8ea67debea74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45739242-a558-4fa6-8a14-a1782baf0c55",
        "cursor": {
          "ref": "a5c1b209-1687-4e9f-9628-7424bd9a2729",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "40a0059d-0ad8-4dc9-883c-f5e996f0c05b"
        },
        "item": {
          "id": "45739242-a558-4fa6-8a14-a1782baf0c55",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8c51757b-2cfd-4e8b-8083-9890a91560de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a57e4c0-4d6a-49ca-ac5c-6c76639e1869",
        "cursor": {
          "ref": "054ab99f-0907-47dc-92e2-68d8beb86401",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "61e007bf-c531-4593-b072-2476aac8811a"
        },
        "item": {
          "id": "6a57e4c0-4d6a-49ca-ac5c-6c76639e1869",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9c091af1-32a4-43e1-be8f-b08aa5721152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676fc5ad-10d5-462e-a298-a21a956a7cf1",
        "cursor": {
          "ref": "6c906d82-f382-4ecb-93df-9b5246a3e295",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "62a28110-3c46-4fb0-aec0-162c224629f4"
        },
        "item": {
          "id": "676fc5ad-10d5-462e-a298-a21a956a7cf1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6eaa03ba-55b3-4c9e-b3a1-4ba09f53b2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc83f428-ec59-4853-9f0d-20977216c9d9",
        "cursor": {
          "ref": "45b205a2-5375-4d34-948e-88e73fa693ec",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dfdbfadf-989d-4fbb-a70d-04ca4c59240e"
        },
        "item": {
          "id": "cc83f428-ec59-4853-9f0d-20977216c9d9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3620bb92-1f99-4543-a36c-f40fad73a20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b5e62b-e4ac-47fe-87d4-f1be04405b56",
        "cursor": {
          "ref": "c768d90e-2ae3-4982-89a6-e4eefb0f0a68",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9b006839-7399-4d22-adcc-3e9fdfe2121e"
        },
        "item": {
          "id": "f6b5e62b-e4ac-47fe-87d4-f1be04405b56",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4e76bde2-63ed-4965-b778-348853fb8f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43b12f9-e5d5-43f4-afd8-c727df877097",
        "cursor": {
          "ref": "6239e4db-948c-4467-9fd1-8ec862f8b0f8",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a37cdaa6-f6a9-4bd4-b34f-b09f275c7c03"
        },
        "item": {
          "id": "e43b12f9-e5d5-43f4-afd8-c727df877097",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f6b4748c-9e38-41e7-a9da-61dbd1fc7633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4b2497-0a4c-4b8e-8274-5c0f86ba3070",
        "cursor": {
          "ref": "14aba398-7de2-4218-87bb-081287e01956",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "10da55a3-98ce-42d4-bfa9-49ac96ca3828"
        },
        "item": {
          "id": "8e4b2497-0a4c-4b8e-8274-5c0f86ba3070",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8a9fc2ed-b8de-4985-ad46-254b1c6dbf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a676ba65-e4cd-41dd-965a-f302aa514eec",
        "cursor": {
          "ref": "7e48e7da-a6e6-4f6c-862f-0bd42e1edebc",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d4261e39-1ffc-48c7-a3ef-e4ea20cbcbb5"
        },
        "item": {
          "id": "a676ba65-e4cd-41dd-965a-f302aa514eec",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "67ed89e1-8b20-41bd-800e-cd024cb064ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad46d90d-fbdc-4d02-81d3-936dec8fbd03",
        "cursor": {
          "ref": "e23ee36f-e885-46cb-a120-428c9b1fd2af",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6d0efbf1-6e1c-450f-945c-faa1d0097522"
        },
        "item": {
          "id": "ad46d90d-fbdc-4d02-81d3-936dec8fbd03",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1ab494a7-2544-4a1e-a69c-0337aa390010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b46c82-e129-4184-9646-19a30e2f7553",
        "cursor": {
          "ref": "3a341041-e44b-417f-b828-77ad72c3a20e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c3031096-cbdb-43a2-bd9c-55d0aee804e2"
        },
        "item": {
          "id": "15b46c82-e129-4184-9646-19a30e2f7553",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "988a0818-e34c-4fbe-91d7-bc2227d7672a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc405cc-2f81-4915-89e5-17f70d49c0cb",
        "cursor": {
          "ref": "f07ca77f-20e6-42b3-aa76-163f0aef2185",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4eb2aa5f-ae46-4439-bf36-8944a1735f21"
        },
        "item": {
          "id": "afc405cc-2f81-4915-89e5-17f70d49c0cb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a462b7c3-17a4-45b6-9c3f-834b6c0dc871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11af649-2875-4ba0-9fcd-7a97df457f8c",
        "cursor": {
          "ref": "992d3487-24cb-43c4-934e-26b16e157a6e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "27dff1a0-eef9-4504-be83-8ff9750c9459"
        },
        "item": {
          "id": "c11af649-2875-4ba0-9fcd-7a97df457f8c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d92d6a9b-406d-4d28-8626-e21c05926772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597adcd9-05b2-4cb4-97d3-56cbde98984e",
        "cursor": {
          "ref": "4cc5cf2d-82b8-43dc-8775-cd1cd9892c27",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "567cf174-4ca4-4421-8cae-376ba6c96a26"
        },
        "item": {
          "id": "597adcd9-05b2-4cb4-97d3-56cbde98984e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3ad22a4e-d1a0-4655-9436-9094e4cffaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc75e41-879f-4983-b565-64a5f410965c",
        "cursor": {
          "ref": "3f87c55d-2f9f-4f22-a728-4a9fe0ea77b7",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6f8199f4-3df0-4da5-b413-e56449cd77fc"
        },
        "item": {
          "id": "ffc75e41-879f-4983-b565-64a5f410965c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1446b26b-afae-4e95-bd79-8e8b8a168581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b5da84-9f64-4537-ac5e-b90863bb5173",
        "cursor": {
          "ref": "8f568796-fae1-43a2-84cc-685f89d85ae5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "93503b49-0586-48ac-95ef-297314079eb1"
        },
        "item": {
          "id": "27b5da84-9f64-4537-ac5e-b90863bb5173",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cd183c11-9629-4857-94f7-84f1d6bdf0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467f0c6b-4537-4dd2-9e8f-f74973376391",
        "cursor": {
          "ref": "3c503320-c897-488f-ad72-3d639b9347f2",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3c668684-71d5-47a0-9492-601abc46f435"
        },
        "item": {
          "id": "467f0c6b-4537-4dd2-9e8f-f74973376391",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "be031583-c882-446a-ab03-2dcb07c6470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fca945-04c8-4216-a7c9-4050785d589b",
        "cursor": {
          "ref": "6ef4fe5d-2c5d-4726-a387-441aa590b807",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4f04bf36-f3d1-414b-82fa-073d1dd3dc62"
        },
        "item": {
          "id": "c8fca945-04c8-4216-a7c9-4050785d589b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "962fe755-028c-4452-a2d6-30e4614c1eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbba843-d2ae-44dd-9928-aa83fe874e3a",
        "cursor": {
          "ref": "124b3184-911a-4b88-8fb1-6f13fe27d117",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "aeb7bc10-1db7-47d7-8995-dad9804954b0"
        },
        "item": {
          "id": "9fbba843-d2ae-44dd-9928-aa83fe874e3a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "32d4fa50-d1a1-4397-82bf-823c3698244d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5b70b9-6d6f-48f1-b17c-b765bc442e4a",
        "cursor": {
          "ref": "25727152-4256-476d-b635-a6d1ed4dc255",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b7c127ca-66dc-4481-afb5-f26c419b17a7"
        },
        "item": {
          "id": "ac5b70b9-6d6f-48f1-b17c-b765bc442e4a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a4cbf0be-9a3f-491a-8b21-d9003d262a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefb0e69-1f3e-4777-b193-f5f241ec944d",
        "cursor": {
          "ref": "e0c44c33-71e7-4c9b-91ff-224d195cd950",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "04540774-2168-40c2-9131-eb86b8bb21ac"
        },
        "item": {
          "id": "aefb0e69-1f3e-4777-b193-f5f241ec944d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f1324d15-33ec-4c43-87c0-a050d389e269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc60eae7-03a7-42f3-878c-35d2aaa3b59f",
        "cursor": {
          "ref": "b14b96e6-702f-4565-9afd-30b157ce2290",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a054822d-c9cd-4879-aec2-a9d3cc008fee"
        },
        "item": {
          "id": "fc60eae7-03a7-42f3-878c-35d2aaa3b59f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "edc11760-b778-46cf-a61f-1b19308792e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca78390a-fac7-482a-8df6-eb401ff3b859",
        "cursor": {
          "ref": "40858bfb-8c24-4843-8866-444aafc08b1e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9df7e8f0-2d00-4d32-945b-663261ba8afc"
        },
        "item": {
          "id": "ca78390a-fac7-482a-8df6-eb401ff3b859",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ded40479-1fd3-46c4-9d71-75abb10ce404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaae6123-8b77-40ff-b2b3-3e92d82b1c8c",
        "cursor": {
          "ref": "a2697ae4-d932-4554-838b-b4f10fbf4506",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6bc1faa9-dfd9-46b9-a4c0-ae79f01ca7a3"
        },
        "item": {
          "id": "eaae6123-8b77-40ff-b2b3-3e92d82b1c8c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cf307092-6bab-42e4-a66e-24039138fae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e750f5ff-a9e4-496b-9a8f-5467a3fbbdd1",
        "cursor": {
          "ref": "f9962acc-eb07-4966-8880-f52debb2d031",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1a4af590-a473-494d-8376-b1fc683387d1"
        },
        "item": {
          "id": "e750f5ff-a9e4-496b-9a8f-5467a3fbbdd1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ef2b2ae9-fe60-4cbd-8d9c-8ebb2c48eae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401eb319-2573-466c-938b-cbf57f166c07",
        "cursor": {
          "ref": "38621d1a-1af0-4f09-b429-139b7c3ec987",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "df603646-1c5e-4f13-9d37-79e2e1a058a0"
        },
        "item": {
          "id": "401eb319-2573-466c-938b-cbf57f166c07",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "31da545b-2a1c-46dd-8d43-9842cd8eb086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1370473a-f203-4560-8546-b18ff1f80844",
        "cursor": {
          "ref": "3709582b-fa43-4dcb-bae3-fbbba5ea3a28",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7d8b6f45-8d1f-4e54-a7a7-a51927f3829f"
        },
        "item": {
          "id": "1370473a-f203-4560-8546-b18ff1f80844",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d6e10105-8d4e-468a-ad4d-8e25269e9851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf38ee56-4324-450b-80ba-cb68021cf74b",
        "cursor": {
          "ref": "826e1769-e16b-4ae2-a61d-5cb69ea2ec08",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d920f535-806a-4e5c-8d37-d4483ac7abf6"
        },
        "item": {
          "id": "bf38ee56-4324-450b-80ba-cb68021cf74b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c41c28fe-ef9c-4832-ab0f-b118312337c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d25c8e4-ed49-4ceb-8f2a-70873f400f19",
        "cursor": {
          "ref": "bc6f9ccb-d5ac-4e95-8c6d-0255f946509b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "494566db-e237-4698-9e83-daa513afdfc2"
        },
        "item": {
          "id": "8d25c8e4-ed49-4ceb-8f2a-70873f400f19",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bf1f2fba-bb9c-45e1-a1b6-d23ca619dcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f84c08-3190-49d2-9ad9-8391aea73919",
        "cursor": {
          "ref": "bc8168cb-59cd-4c67-b8ed-dbc60a83168c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "047092c3-4a99-410f-9b7b-899d487cd508"
        },
        "item": {
          "id": "a3f84c08-3190-49d2-9ad9-8391aea73919",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "910f5c7e-0103-461d-9ebc-c7bf2d6de4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7b6827-9b88-4c15-9d50-0ace80a64eab",
        "cursor": {
          "ref": "98a63962-a652-4b2a-8355-c50a40d80288",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4e8e87f3-bba0-44fd-a419-865632a919f2"
        },
        "item": {
          "id": "da7b6827-9b88-4c15-9d50-0ace80a64eab",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ef5461cf-a7cd-48f4-aeb4-7804c13da0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd78bf-8b20-4664-9f3c-3a7064c08956",
        "cursor": {
          "ref": "0bc45308-ff44-46cf-b5f4-e4d44a4be1ba",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0384a83a-b96c-4853-ab71-c4752a88ad37"
        },
        "item": {
          "id": "79fd78bf-8b20-4664-9f3c-3a7064c08956",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1309d531-6844-4595-892c-7b0060468418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6c1fc0-e019-40c1-af60-f7b079ae7db1",
        "cursor": {
          "ref": "2209d3a4-d105-46c7-b119-dc2241415e9c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aa72dfd1-57c9-4017-aaf3-1d52ce69c34e"
        },
        "item": {
          "id": "ef6c1fc0-e019-40c1-af60-f7b079ae7db1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7bfd3999-6cca-4014-afff-f1d53ed72de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682cb140-a1d4-4010-8fdf-08210ea76e6a",
        "cursor": {
          "ref": "20dd9bfb-b739-4e06-9aba-421f1c339e68",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "862e8b8a-cddd-45dc-9df0-0611579c2c47"
        },
        "item": {
          "id": "682cb140-a1d4-4010-8fdf-08210ea76e6a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cb48ec97-7fa0-42ad-84e1-9bd29c986b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a705d8c5-a0e8-4515-8fa2-0c8e79e7ea83",
        "cursor": {
          "ref": "2379ebaf-6704-49d3-96d3-b71d4f7578a5",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b8c2a9c0-07aa-45f5-a417-5b1174650ed0"
        },
        "item": {
          "id": "a705d8c5-a0e8-4515-8fa2-0c8e79e7ea83",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "06066473-c94d-45be-a9ca-f348f7b33cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755b36e3-4bf6-4306-971d-a64411cb5386",
        "cursor": {
          "ref": "3187ab46-820b-414f-bee7-6351cc2f408d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e0e0a996-bd1c-4c03-8a69-a7edb514fec3"
        },
        "item": {
          "id": "755b36e3-4bf6-4306-971d-a64411cb5386",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "eb4a4d08-ac7f-4185-89a3-fd3c0eb1ac95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b151080e-9027-4d7c-ac13-154b2983aa97",
        "cursor": {
          "ref": "ec87a1a1-1b79-4d7d-a831-b1e5b3b0e92a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3bc6e5e7-fd5c-41fa-b51a-3d358b25890f"
        },
        "item": {
          "id": "b151080e-9027-4d7c-ac13-154b2983aa97",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "75a79878-532e-43cf-b6e7-3817bc03816b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f93249-5e7a-4da6-8adb-dd72e597e397",
        "cursor": {
          "ref": "3b54bf8a-382a-4fa2-b90c-cb720b21f0e2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0ebd53c7-d8d3-419c-b5d1-b53d30536ca3"
        },
        "item": {
          "id": "29f93249-5e7a-4da6-8adb-dd72e597e397",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8ae85dc3-74b4-440d-92e8-e65e3300256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d6032f-7926-416d-b4a1-2a2f6a6a4f8d",
        "cursor": {
          "ref": "c00cdeac-fb82-47ae-9592-d8136125cd77",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ce9794b1-507d-4c8c-936d-8634661ab99a"
        },
        "item": {
          "id": "69d6032f-7926-416d-b4a1-2a2f6a6a4f8d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8cb78ff8-e712-491d-9f26-88e22277d7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c680a94b-bf98-4a03-a9f4-52e7557f1c3e",
        "cursor": {
          "ref": "0f7f2160-a4a1-43ea-b6e5-c2b15cf24ed2",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0cacd284-7dd8-4ba3-b8a2-c99c53637ae2"
        },
        "item": {
          "id": "c680a94b-bf98-4a03-a9f4-52e7557f1c3e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0a7fad08-eee8-4332-95f4-85512222aa96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8c782e-d0c4-4456-a913-5de322a496b8",
        "cursor": {
          "ref": "c0735422-9fe6-4a8d-8430-39c2e4c3a6ca",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1fc5e1fe-cb69-4d34-b4b2-d5e608bf7de1"
        },
        "item": {
          "id": "af8c782e-d0c4-4456-a913-5de322a496b8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0f2765b5-7ada-4412-9268-ee98e9abeec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478d652d-1ab9-481f-a69c-00368a752cfa",
        "cursor": {
          "ref": "7bef5c87-abaf-40c7-b914-81ca83fd0969",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ba6e237b-161c-425e-9c91-f5b8fdeaf1c7"
        },
        "item": {
          "id": "478d652d-1ab9-481f-a69c-00368a752cfa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a6f651d4-4c82-4eea-82aa-e8656d2f63e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcefa80a-9582-4b2c-a91c-fd131e8445d5",
        "cursor": {
          "ref": "62042cb8-3c85-4997-ac3a-c9828fa4f575",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1d7e0705-740f-45da-92dd-b247fbdaca9e"
        },
        "item": {
          "id": "dcefa80a-9582-4b2c-a91c-fd131e8445d5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "34c79e3f-9577-4790-8e1a-caaed2b698dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4333b2-8447-4c12-907b-0cdf1105a44b",
        "cursor": {
          "ref": "c684263c-dbfb-4e70-b776-0fcf69de0186",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "50c9bcb6-1ac2-4707-901c-6ac33ce7c032"
        },
        "item": {
          "id": "8b4333b2-8447-4c12-907b-0cdf1105a44b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f6978d40-238f-4df2-a771-cd97f4ecefd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15522947-97aa-4acc-b74d-cedc283bbc66",
        "cursor": {
          "ref": "962aa0ad-f096-4611-89ae-01ea8574c62f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3e49e6aa-9706-485a-b953-7506fbf768e3"
        },
        "item": {
          "id": "15522947-97aa-4acc-b74d-cedc283bbc66",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "354b1157-85d6-4577-b3de-baa96bca45f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfca31b-60e0-4dce-ab22-868c545ade25",
        "cursor": {
          "ref": "56d8dc7d-72ba-429f-b99f-89dd0ba72707",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cde65fff-48a0-446a-b2bb-8c0be172a4e6"
        },
        "item": {
          "id": "dcfca31b-60e0-4dce-ab22-868c545ade25",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "709dddec-c86d-426f-8177-2120f7d0a03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924549f0-cc2c-434f-ade6-3f5642e4e26f",
        "cursor": {
          "ref": "f96fce81-2e28-4f31-957e-cb5eb09461c2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "65b32c3d-830d-49a5-9824-e0d3bfe33ff0"
        },
        "item": {
          "id": "924549f0-cc2c-434f-ade6-3f5642e4e26f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "784035a3-d3d0-4dbe-9bab-faa4a64005a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b501c9-3ff7-43db-acd0-87991b0e391c",
        "cursor": {
          "ref": "2b529dff-17e9-4a6b-8ad5-fbaf4f903075",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5c6f3f19-1533-4826-80ca-e0377716d03d"
        },
        "item": {
          "id": "82b501c9-3ff7-43db-acd0-87991b0e391c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0dcd1ef5-ab82-4a4e-aad6-59b79b28e890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fec2f15-9e81-4cc5-bd15-803235ff77fc",
        "cursor": {
          "ref": "2af26b63-a5c9-4d97-ba06-958f49425442",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9490507f-ff56-4776-87e7-ee0cdf73ad8a"
        },
        "item": {
          "id": "8fec2f15-9e81-4cc5-bd15-803235ff77fc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "82487e6a-ad38-4628-83f7-d54bd86a36e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c120efd8-b1de-49ff-967f-d683978d38ed",
        "cursor": {
          "ref": "8689a794-e0a9-4d92-bbbf-d7886f433dc4",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b916033f-3019-4eb2-b231-2dbeb625c1cc"
        },
        "item": {
          "id": "c120efd8-b1de-49ff-967f-d683978d38ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ff536a5c-8937-4c0c-bffd-a4218b0b4309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b7a0a1-3f3b-41b3-9230-b163cc5c3a64",
        "cursor": {
          "ref": "93e5249b-135d-4109-80fe-39f3e352bd81",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "20fa2365-b69d-4207-8ecc-8b102d6c357e"
        },
        "item": {
          "id": "84b7a0a1-3f3b-41b3-9230-b163cc5c3a64",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5dd8f7a3-eff3-4dec-ab7e-ae5863dec50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa290af-4efa-4668-9cfe-5a11ec68925e",
        "cursor": {
          "ref": "9a371872-48d5-4706-acf6-2ac9b2432b32",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ad7f5287-ec32-41d2-8112-f9a664e40cef"
        },
        "item": {
          "id": "afa290af-4efa-4668-9cfe-5a11ec68925e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "81f4aa73-c6d7-4db1-9395-7f734018eb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e5f3b8-cea0-4758-83c1-65075eb3f60a",
        "cursor": {
          "ref": "7d9cad06-2a18-4936-a41b-76649ac7608f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "23f9a0d2-cb19-4e93-82bc-85c8ff5d8402"
        },
        "item": {
          "id": "34e5f3b8-cea0-4758-83c1-65075eb3f60a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5708b504-5fb8-4e35-8adb-9e42c5f61337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d818edc-2df0-4a78-bb87-917eaa70a0fa",
        "cursor": {
          "ref": "27878ced-d660-4644-9d92-b761166681ac",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "224ee3ae-f7d3-40dd-8ec4-64468731f458"
        },
        "item": {
          "id": "5d818edc-2df0-4a78-bb87-917eaa70a0fa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c5459222-2121-4a40-84af-8d25b76b5dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dad8e1-34cc-4028-a08d-a12262e1bb98",
        "cursor": {
          "ref": "3243cbae-ed0f-499f-b621-d55b1269c835",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "26305b7b-3feb-4658-bbf0-5a0e8fc5023e"
        },
        "item": {
          "id": "54dad8e1-34cc-4028-a08d-a12262e1bb98",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "63887797-e650-4115-be94-ddd3723e0a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a8bae3-1844-4609-bafb-6207ff316b4b",
        "cursor": {
          "ref": "fa73d9d2-3f08-4b3f-b7e3-c4b236d0a130",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e613d3f2-d7f8-44bb-a433-6eadb990bdac"
        },
        "item": {
          "id": "79a8bae3-1844-4609-bafb-6207ff316b4b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6c763ebd-5e3d-47f0-b313-be75beb2624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42a6d8a-784f-4d56-b60c-c72417c76f05",
        "cursor": {
          "ref": "f98995a1-df23-4bd1-860b-af74f572391e",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f31de50c-40c1-4209-bf44-fc56d32fe11b"
        },
        "item": {
          "id": "d42a6d8a-784f-4d56-b60c-c72417c76f05",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f3b084b7-be53-48fe-9c4f-4ec0567aea7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a3fce3-fa1d-4c30-85b2-0ed06616d3b9",
        "cursor": {
          "ref": "7df14f09-048c-4b72-ba2b-cabde3a7fe7e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5a8a47f4-311f-4dbe-b191-0863e460f9b1"
        },
        "item": {
          "id": "80a3fce3-fa1d-4c30-85b2-0ed06616d3b9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4c6c1837-e82a-43e3-9815-7b8f5f0bd917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d972f9f-7e62-4de8-b32c-e067ec27e049",
        "cursor": {
          "ref": "b42fa110-4410-4fa2-85d0-b569cb6856ed",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "74f659c1-2b7e-4dc9-9874-cc21c7506af4"
        },
        "item": {
          "id": "7d972f9f-7e62-4de8-b32c-e067ec27e049",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d7598dc3-3217-4fd0-a921-e84954ca845d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bcee6d-08b4-4ec3-b9f8-3868ce3c6a0b",
        "cursor": {
          "ref": "d3a59eee-4257-46ee-87cd-8a16fcefa14d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7529fdc3-00e3-4527-8cd3-4b786c0cfa84"
        },
        "item": {
          "id": "b9bcee6d-08b4-4ec3-b9f8-3868ce3c6a0b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8696a9bb-b199-4666-90b3-f27562b122de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23a786f-d019-4be3-bb74-3b9ab3d2290f",
        "cursor": {
          "ref": "89231066-5382-4291-95ab-dd75d8c3e83f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7f5e62b7-d09a-4009-a236-4bf17497d4b9"
        },
        "item": {
          "id": "e23a786f-d019-4be3-bb74-3b9ab3d2290f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0c86189a-372a-4ee9-807d-4eec0b3eafac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7629873a-810e-4e65-9e6a-1e0de4b4d568",
        "cursor": {
          "ref": "bbe24bdd-b906-4d58-a2f8-396c382bac39",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ecd8ae05-3779-4fa3-afef-7543555028ec"
        },
        "item": {
          "id": "7629873a-810e-4e65-9e6a-1e0de4b4d568",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f31e32d3-e8a2-46b8-b244-c4cc848961ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e9d19f-8dc8-43c3-923f-e0c70458fbf9",
        "cursor": {
          "ref": "8c61458b-0f6d-464e-942f-5871a9afd35f",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "17be6b8a-b559-4c49-b9ce-a3542b99a876"
        },
        "item": {
          "id": "85e9d19f-8dc8-43c3-923f-e0c70458fbf9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1ee45946-9320-453f-8b58-e395a04f1d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cdd42a-9884-4c15-8fab-d8d4f29a713f",
        "cursor": {
          "ref": "03787557-7314-41d1-9636-6c5a9bee4e44",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4a2a40e2-f4db-422c-b5e1-223f37201075"
        },
        "item": {
          "id": "08cdd42a-9884-4c15-8fab-d8d4f29a713f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "613d72a3-ee10-4a53-b9f3-7b809449bba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76347ce2-bee2-4692-9bdc-87874611c433",
        "cursor": {
          "ref": "62e3c22a-9bda-441b-8e58-b4f9b61fbee9",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d513b07c-e1f5-4748-b975-26ecf4d1050c"
        },
        "item": {
          "id": "76347ce2-bee2-4692-9bdc-87874611c433",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "855281f9-b162-4c5c-948f-e5b0ccfd342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30ba99b-577d-4ccc-983c-28f45cc585d1",
        "cursor": {
          "ref": "2131f74c-3d80-443c-a768-416456217d6d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3a86388f-6977-4b60-b88f-be9ceb5c442a"
        },
        "item": {
          "id": "d30ba99b-577d-4ccc-983c-28f45cc585d1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c84b070-51ec-4d43-8d5c-2008d967d2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80249931-21b7-4a55-ac48-2f3d8c51982c",
        "cursor": {
          "ref": "4c074cb3-4717-4da5-a167-dce7b171be4a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9071763e-0a8e-47a6-83b7-dfd2fb5009db"
        },
        "item": {
          "id": "80249931-21b7-4a55-ac48-2f3d8c51982c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a19ca585-c70d-4ffb-ad62-070b5b18baa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2a1735-452b-441d-8c2d-ec09bf2bad01",
        "cursor": {
          "ref": "52466762-4e5b-4d0c-8849-332f2b2b423f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e0c1494d-41f0-4cf8-9add-ae4155c2dbd4"
        },
        "item": {
          "id": "8a2a1735-452b-441d-8c2d-ec09bf2bad01",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1263bfbc-d6f2-4594-9034-d63e2c34c68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0971fe-2a9f-4efa-b139-4edea8abfdc2",
        "cursor": {
          "ref": "0b2da2bf-0b53-43cd-af5b-1cc4da0f99bb",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "466184de-47e6-4c03-ad77-b999c230c0e9"
        },
        "item": {
          "id": "db0971fe-2a9f-4efa-b139-4edea8abfdc2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0c38c7d1-853a-4320-b8ae-83f9960cb807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bd72ca-7791-4cb6-8d0c-518091d9bc08",
        "cursor": {
          "ref": "47737f01-d2e9-44e5-a137-d64fd5ffdeff",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6f4ac36c-2f7d-4f60-9c59-e070e44e32d0"
        },
        "item": {
          "id": "a2bd72ca-7791-4cb6-8d0c-518091d9bc08",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "de5bdbe7-7350-43ac-b309-d7955a091604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243b2962-a71e-4b14-9d63-1e558b3d4426",
        "cursor": {
          "ref": "dad75dd2-1470-475c-af55-a01f9fb44695",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3ab19651-1f74-4cdc-b3bf-580ccc53a3d9"
        },
        "item": {
          "id": "243b2962-a71e-4b14-9d63-1e558b3d4426",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f9b67ec7-c91c-4ba4-adac-76460486415e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33d4fc3-9e5f-4365-b471-49ca026d8037",
        "cursor": {
          "ref": "3d78d335-25fb-4fe1-aef5-50b095edfa1b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "05717555-660b-45f8-af2e-67c46d45b71e"
        },
        "item": {
          "id": "b33d4fc3-9e5f-4365-b471-49ca026d8037",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "44cbae86-5073-4f7a-9b35-74bd0f8ef3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadaa0f0-396c-448e-bb08-739046f0b347",
        "cursor": {
          "ref": "6ec0253d-82c8-4324-b1a0-dc53a9feb6ca",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9ea2bf8b-3f7d-46ea-987c-9ef72f748212"
        },
        "item": {
          "id": "cadaa0f0-396c-448e-bb08-739046f0b347",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e7500d39-1688-4705-84ee-3690d31ef29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08980c52-9a64-4f5e-b813-77a208954865",
        "cursor": {
          "ref": "fe16d838-15b8-4355-82f7-91877129e14e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "81973abe-a434-4c7f-b40c-ad62202233bc"
        },
        "item": {
          "id": "08980c52-9a64-4f5e-b813-77a208954865",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8e98ee6b-21d1-4b7e-9319-c337c9729571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dccba3-12a3-4089-8cc4-1df80a84755c",
        "cursor": {
          "ref": "c92618f7-0ce5-4810-bd16-15818d231965",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2e29e6d3-d8ad-47cd-b02d-7c870fe443f8"
        },
        "item": {
          "id": "e0dccba3-12a3-4089-8cc4-1df80a84755c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "987fdd16-d0c6-4fa6-beb6-2208ebe75ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5320cdcd-1332-492f-9cc6-1f8035077630",
        "cursor": {
          "ref": "3e05ebaa-e8ce-4279-be29-89b62efd8227",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "766abce3-f778-40ac-89e7-362f6feed57c"
        },
        "item": {
          "id": "5320cdcd-1332-492f-9cc6-1f8035077630",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6a8a58be-6aef-485e-b756-febf903596ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b44708-80a3-468a-8564-2c17d5c4c7a0",
        "cursor": {
          "ref": "5572c1e2-55a1-469a-949b-1401e932860d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e0f45cbb-ba45-45e8-a275-a030ab7ad983"
        },
        "item": {
          "id": "b9b44708-80a3-468a-8564-2c17d5c4c7a0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ea851f4e-0b92-41d2-ba76-096a846ba733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e6315e-f557-40c9-a649-bc2dfd57831a",
        "cursor": {
          "ref": "4ea8ba8d-4277-459a-97ab-650b363d6895",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "726f3b91-663e-4908-8302-7947feeb96cf"
        },
        "item": {
          "id": "20e6315e-f557-40c9-a649-bc2dfd57831a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cdf4b7ea-9eb8-452b-bda7-2e8b93aa5f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14a165e-2e10-4b21-b114-432fdeac7ae6",
        "cursor": {
          "ref": "d766873e-1afc-4721-912f-358052c272ba",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b59109be-baac-497a-af6f-0c19d37de7c4"
        },
        "item": {
          "id": "a14a165e-2e10-4b21-b114-432fdeac7ae6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a2e7a877-3580-499e-916a-2a8a9a0fcaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2195,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c450b2a-55fd-4d02-a87a-22850f302ade",
        "cursor": {
          "ref": "dce42a07-fffc-4a1d-9a86-7cc2b306d017",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "47cb5515-61ef-4d8d-be70-1fcb19ad2ecf"
        },
        "item": {
          "id": "3c450b2a-55fd-4d02-a87a-22850f302ade",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9ac43221-32e3-4d93-936f-e85f8174905d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2dd4ce-c57c-4b70-b2d4-66a3f2bcd72f",
        "cursor": {
          "ref": "8fdbca37-045e-4f49-836a-b0b601ac717e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "789cea79-cf00-49e0-be72-d6d847b1051f"
        },
        "item": {
          "id": "2c2dd4ce-c57c-4b70-b2d4-66a3f2bcd72f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1afd6a95-befe-4cfd-adbf-1efb47d7c648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fc80b0-e9a6-48f5-86a2-d464c42bcbb4",
        "cursor": {
          "ref": "2d8863ce-e5a1-476e-b5b3-7d61bac7cca3",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "db5ea2a4-a6f0-46f8-a0c6-6af13b6b67a8"
        },
        "item": {
          "id": "b6fc80b0-e9a6-48f5-86a2-d464c42bcbb4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f6846bcd-a31c-4bab-9862-32bec0e07760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b987a4-3962-48c0-8a48-88f0df745e34",
        "cursor": {
          "ref": "c67596c6-dcc1-46e1-aff3-5d29e264fc89",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0164c8c9-42a9-4662-a62a-cef7e8e9a3cb"
        },
        "item": {
          "id": "13b987a4-3962-48c0-8a48-88f0df745e34",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3c07f226-7f8e-4c72-8c6b-50e8f0410c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29afb793-906d-457a-b4fd-32bac7a8bd36",
        "cursor": {
          "ref": "4230ff4a-176e-4329-9fa0-25bc81647026",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6e77dd7a-b9d3-432a-bd2b-6a9a128b8cc3"
        },
        "item": {
          "id": "29afb793-906d-457a-b4fd-32bac7a8bd36",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a15a90f8-c179-4c02-9829-05033205b46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d2bcf1-c30a-4c7f-8388-4d96290359fd",
        "cursor": {
          "ref": "d217cc31-713a-4c4d-80a0-5382299818d7",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2413f697-203d-4cb4-84df-4e6de4f4a101"
        },
        "item": {
          "id": "15d2bcf1-c30a-4c7f-8388-4d96290359fd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6295de5e-b8ab-4af1-91d2-3dfb62c47450",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c88105-4ddb-4dd9-841b-ceb0ef390862",
        "cursor": {
          "ref": "e4b51ac7-8692-4e64-a258-69e15c0b19a4",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "81c2419a-3a38-4216-87b5-2256320518a5"
        },
        "item": {
          "id": "92c88105-4ddb-4dd9-841b-ceb0ef390862",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "74ea14ca-4f50-4df3-b9db-b6a61d42bf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c6558e45-a70b-4eab-a900-e61af574b154",
        "cursor": {
          "ref": "e1083758-aa0d-45e0-b4f4-1f47879b9da3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "09bc1e4c-435c-4905-9483-ed41ed42f72c"
        },
        "item": {
          "id": "c6558e45-a70b-4eab-a900-e61af574b154",
          "name": "credentials_issue"
        },
        "response": {
          "id": "37641cd2-018b-4865-9156-46a61a73cd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2077,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "dde154c5-a604-464d-b22a-264631b60138",
        "cursor": {
          "ref": "150b1f77-3382-4233-9e3a-340630a2a24b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "441543cd-d180-4904-b1bc-2a142415e089"
        },
        "item": {
          "id": "dde154c5-a604-464d-b22a-264631b60138",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "16c8bcf0-d165-4346-8c07-abc5b7fb105a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3e66e0e7-df0e-4789-a9ab-cbc7d689b2bc",
        "cursor": {
          "ref": "97fc9c1c-0859-43d6-a824-bba31221da0a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c734fc0a-6274-465e-ac5b-363e7acf41f5"
        },
        "item": {
          "id": "3e66e0e7-df0e-4789-a9ab-cbc7d689b2bc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a6b30328-c70d-4b14-a9a3-f320f549371e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "32eb2758-6ab5-4e3a-9096-8f75da4b121e",
        "cursor": {
          "ref": "45884fbe-d37e-4514-83a1-a97e903fd1cb",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "208a19ea-aeb5-4f26-892d-6d648e860390"
        },
        "item": {
          "id": "32eb2758-6ab5-4e3a-9096-8f75da4b121e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "983cf78f-10c4-4757-9549-79af97d5f09c",
          "status": "Created",
          "code": 201,
          "responseTime": 8021,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cf168b-ef7c-419c-b601-80cec8e69021",
        "cursor": {
          "ref": "d1d95a92-c96c-4897-a896-30402a025e5b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "59d848a8-be04-4736-b83c-a88929b43f1d"
        },
        "item": {
          "id": "10cf168b-ef7c-419c-b601-80cec8e69021",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b999a266-306b-4dbc-8fe9-98e8e1b989e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b5461844-3d91-40ca-84f5-8d6448ec742f",
        "cursor": {
          "ref": "f3f4118a-0a81-4cfb-bb2f-735d74948edb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e2b3a357-056d-4ead-8cd4-ecbd74ed3483"
        },
        "item": {
          "id": "b5461844-3d91-40ca-84f5-8d6448ec742f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fd608eb3-3680-4f93-a5f4-1d6de5d8726a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a83f49d5-0702-461b-ace5-3b6c40e36328",
        "cursor": {
          "ref": "421b7609-65fa-40c3-a47c-b25a91c74782",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "09f2e815-68af-4e3d-8929-3341ae627ea5"
        },
        "item": {
          "id": "a83f49d5-0702-461b-ace5-3b6c40e36328",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b5f55e44-9783-4332-80c9-53ce0d44bcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05996008-37e3-44de-a71c-dce82e867259",
        "cursor": {
          "ref": "8b8b0374-d6b3-4caa-acf1-a18aa759a4f0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0fb4b676-cfe6-4716-8348-3e0807ec832f"
        },
        "item": {
          "id": "05996008-37e3-44de-a71c-dce82e867259",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2ab998a3-7cdd-45c8-99b0-6059db6d9768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070db677-2bf5-4890-ab36-84b5d2eb39da",
        "cursor": {
          "ref": "82ec361e-debc-473b-bc1c-815d0976fb08",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "27b8d0b8-2f98-4ef7-9b6e-f42c548925dc"
        },
        "item": {
          "id": "070db677-2bf5-4890-ab36-84b5d2eb39da",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cb25c00e-eef1-4bea-8d2f-71b18065fdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99cb073-4101-44b6-b3b0-59bec007b52c",
        "cursor": {
          "ref": "171659fa-7873-4bbc-aae4-72dd6567c705",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6ee7a56d-bdc7-4e4c-bc64-22ec9b4032b7"
        },
        "item": {
          "id": "b99cb073-4101-44b6-b3b0-59bec007b52c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "38f403b3-9747-43cc-bfdc-b2f02a894e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5e7fd9-dc1e-443b-a825-f1691965f6bf",
        "cursor": {
          "ref": "a8c8e54f-0391-4359-8db3-121a2dc33104",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a24ede7e-147c-4904-ab87-420dee3d36a6"
        },
        "item": {
          "id": "5e5e7fd9-dc1e-443b-a825-f1691965f6bf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "74ede783-41d1-4741-9592-6dd9cd76adda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38653fbf-d0de-42a6-aac1-a3b6a502d162",
        "cursor": {
          "ref": "8cd3ceca-382e-4575-ace3-625363a8f6fe",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4f82ffd4-6043-4032-b304-e9355e60ddb5"
        },
        "item": {
          "id": "38653fbf-d0de-42a6-aac1-a3b6a502d162",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6c465c84-22bc-4979-af98-dc89f32623cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fa1433-c1b5-4d5c-a330-9a188c6f3150",
        "cursor": {
          "ref": "99c6932c-7141-465b-876a-a108d159be54",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "029e8493-f155-4a88-af81-2f9c822a0bf3"
        },
        "item": {
          "id": "36fa1433-c1b5-4d5c-a330-9a188c6f3150",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9f384c79-d08c-4783-93db-c7739dd43c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f731fee-abb1-4717-83c4-c5fa9d0cb669",
        "cursor": {
          "ref": "bd3d3748-edcc-4521-b1a4-ea51debe5aa0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "02501901-5189-4334-b05d-4ccd6ac8c7d9"
        },
        "item": {
          "id": "1f731fee-abb1-4717-83c4-c5fa9d0cb669",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fe5eb410-e7ac-4911-b34d-98d755c9821d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51f1f37-c49c-4d67-99be-a0763ec9e1c3",
        "cursor": {
          "ref": "d8d71205-d04d-449b-98a3-b885e18c4287",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "22b440c4-28d0-4b54-910f-41fee794150e"
        },
        "item": {
          "id": "b51f1f37-c49c-4d67-99be-a0763ec9e1c3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a5f1bbe5-76fb-4e6c-815e-ad2e566627c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b392e5-5011-4a97-88d9-b135c30cbc70",
        "cursor": {
          "ref": "4b188dd8-a077-423a-aff5-dad99e4f13b3",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3531da7c-8f11-4ef4-883c-6f832b1b4259"
        },
        "item": {
          "id": "49b392e5-5011-4a97-88d9-b135c30cbc70",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b32e3751-da13-47c9-95c9-3e228f0957cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33d1203-5425-4bc1-8922-aca84306825b",
        "cursor": {
          "ref": "bcc6cc8a-2c8f-4295-8024-6cce6f1091dd",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3f6527e3-3624-4663-ab49-3aa5004647f9"
        },
        "item": {
          "id": "c33d1203-5425-4bc1-8922-aca84306825b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce1e30a6-257e-4b32-9b7c-8900c6f605f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3676478-4c68-4b98-9bab-45ce50a6e30f",
        "cursor": {
          "ref": "33691c61-88ee-4e91-8516-c632dc735652",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2be95e84-db9b-4389-ba59-fb4f19a0570f"
        },
        "item": {
          "id": "b3676478-4c68-4b98-9bab-45ce50a6e30f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3948babc-4e7a-4d71-952c-d8cba79dc6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef24541-8b2e-49af-a986-7e052d531070",
        "cursor": {
          "ref": "0ad51fd9-4f03-4be6-b356-26beb8d967f2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "563200f6-2307-4155-b5f0-7a6f49187309"
        },
        "item": {
          "id": "0ef24541-8b2e-49af-a986-7e052d531070",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "87399bd1-f927-432c-b26a-63e2332a7b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801a3881-e044-4a77-9cae-becd891a5321",
        "cursor": {
          "ref": "2c028387-e2a2-4d94-a27e-1f253deed61e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "18cdc8f5-093d-46be-a3f7-fd7d1dc56009"
        },
        "item": {
          "id": "801a3881-e044-4a77-9cae-becd891a5321",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c8ef133e-c571-4d71-9ae1-c8ff7400cdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede65afd-e6a0-49b9-bc53-d02e708631fd",
        "cursor": {
          "ref": "65774a5e-d67f-49f7-857a-1939845c29ca",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cabddc23-5f56-4c73-a593-da12280565ab"
        },
        "item": {
          "id": "ede65afd-e6a0-49b9-bc53-d02e708631fd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3591dc83-c462-40c8-86e2-03fc869f3b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e14396-697f-4fd2-b8ff-d4042683c964",
        "cursor": {
          "ref": "864f7c1d-5d82-4bd0-9273-9a8656217519",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bfd1caf9-006c-4592-be0a-62876abb5b2e"
        },
        "item": {
          "id": "c7e14396-697f-4fd2-b8ff-d4042683c964",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "25a3cf71-1401-4e99-b5a3-a3136688031f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d867d775-d1ef-43ec-8b12-712efe96a22c",
        "cursor": {
          "ref": "817beec5-9d9e-420c-b6ed-da264fc886b7",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e5bf09fd-bcc8-4098-b509-466e20fc77ea"
        },
        "item": {
          "id": "d867d775-d1ef-43ec-8b12-712efe96a22c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e0439015-cf9d-431f-aa34-aec8e9f5ec37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7689f69c-2aa2-4543-8806-32636cf900b1",
        "cursor": {
          "ref": "0e6d7365-e56e-4f1d-a5d0-9d5866bbe002",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "291b46d3-271d-4031-949b-ae500e34de6e"
        },
        "item": {
          "id": "7689f69c-2aa2-4543-8806-32636cf900b1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "71c876f0-de49-4e9e-a87b-14f792081199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dc307e-d3d7-4320-9432-d30dae9a0e73",
        "cursor": {
          "ref": "cab2679f-0bb6-44df-a6d5-3a1ab8a64178",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8265df63-2464-410d-959e-6a774a496d70"
        },
        "item": {
          "id": "29dc307e-d3d7-4320-9432-d30dae9a0e73",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "80b8409e-da63-4b60-9b23-c05907b3a88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fe0c1d-8e54-4e8c-97df-3e48175943a6",
        "cursor": {
          "ref": "32815f52-a920-48d1-a32e-4da0ea23b0e9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f0e6d97d-4bd7-4a62-bc58-d3ca2f383c91"
        },
        "item": {
          "id": "87fe0c1d-8e54-4e8c-97df-3e48175943a6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b8acffbf-0940-43cc-9d45-a53eb35e51d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93699323-af86-4bf2-8480-24e0d68389f2",
        "cursor": {
          "ref": "d0919367-6671-4946-b1f3-66a2eb1b5b16",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "70a9975c-9237-437f-90eb-0737f5cb04c3"
        },
        "item": {
          "id": "93699323-af86-4bf2-8480-24e0d68389f2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "672567b0-a197-4180-9bc6-29ef795cbfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b2e260-8267-420e-9b9b-da3016d087eb",
        "cursor": {
          "ref": "aaa70e71-df1f-4057-a169-114793987515",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d9119d6c-4952-4642-83e8-0497921a3318"
        },
        "item": {
          "id": "57b2e260-8267-420e-9b9b-da3016d087eb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bcb234d8-94a3-4ea7-b373-526e06fb02ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80b98d2-554b-4cea-a16d-d97efe1bee12",
        "cursor": {
          "ref": "175b380c-a05e-4bb5-a9f5-db27c268dd3a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "502a51a0-24f9-4b28-af98-62e742ca82f3"
        },
        "item": {
          "id": "d80b98d2-554b-4cea-a16d-d97efe1bee12",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ca3ae683-43b4-4863-a203-1ec628cef524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae2ddbf-bc31-4af4-b603-a7be2a186d29",
        "cursor": {
          "ref": "ddfaee90-d96b-4e5c-9744-fe3b3f6d5599",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "21bf5fa1-42f2-4daa-bb06-e6bac11acfd2"
        },
        "item": {
          "id": "5ae2ddbf-bc31-4af4-b603-a7be2a186d29",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ccf6cd97-fe07-434e-8208-0cadd17e5531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7356807b-793c-4c32-a335-e2e800f973d2",
        "cursor": {
          "ref": "642d0806-59aa-4861-a094-4ec6ee512244",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f9e18847-bf34-4c55-9cb5-6164159942e9"
        },
        "item": {
          "id": "7356807b-793c-4c32-a335-e2e800f973d2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "260b4e32-dc0a-4bb7-8893-617ed81440a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06722be-f987-4432-90b3-6061e6fed3e0",
        "cursor": {
          "ref": "3afeb9fd-8282-42de-92f3-91b3b26920cb",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a698548b-44bd-4549-951d-285f6587d369"
        },
        "item": {
          "id": "a06722be-f987-4432-90b3-6061e6fed3e0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "635d3e61-8687-4f14-bbb5-d96592488ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6eff476-ce2f-4cb8-b412-b8fb2d5387cb",
        "cursor": {
          "ref": "9a9604da-4040-4b04-98ec-46a08c0e64b2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e8a24990-7857-49d9-822e-42be8da80f14"
        },
        "item": {
          "id": "b6eff476-ce2f-4cb8-b412-b8fb2d5387cb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "476cce3e-0bc9-4f32-85e8-bcc1e8c6d5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db57344-0fe5-4505-8062-6488fc4d8d7f",
        "cursor": {
          "ref": "ee0bfc22-3ba8-4af5-aec8-7b0b15ca4d66",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8855dabc-05cb-4f5d-9783-79f7b9623433"
        },
        "item": {
          "id": "1db57344-0fe5-4505-8062-6488fc4d8d7f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "556ebe47-b5d7-4260-82f8-a1fd7ffa770d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085cea56-4ef1-4e23-b7e8-0098d7c01605",
        "cursor": {
          "ref": "adbde8c4-066e-48cf-83b6-e93d24455df9",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f0a84e71-3f55-4c2b-b933-bc86f42e691d"
        },
        "item": {
          "id": "085cea56-4ef1-4e23-b7e8-0098d7c01605",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3bb5d53b-426c-4d26-aa25-fc88f80425a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25314ed5-7381-42a8-8102-1a313fcc48f0",
        "cursor": {
          "ref": "b0d79a14-6b23-4818-aa8c-d52d2d192fc3",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ce364707-fe35-4748-917f-2c42cf6896cd"
        },
        "item": {
          "id": "25314ed5-7381-42a8-8102-1a313fcc48f0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dca49298-9a47-413c-9de0-e49f8afe0bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4e2756-4188-4900-a416-58c8ac2ba2e7",
        "cursor": {
          "ref": "61661360-b6bd-4941-9afb-e8661c0adb2c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "63cb25c0-6691-404f-b2dd-41b29fd2ebb7"
        },
        "item": {
          "id": "bb4e2756-4188-4900-a416-58c8ac2ba2e7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8e859ea0-c678-4b6f-a3e2-52eebbc3d6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e186c2dd-330b-4839-88bd-eb23a028b270",
        "cursor": {
          "ref": "00ea8a0b-e428-4c7f-b308-ca6c76ce8cdc",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ceef8e84-72d6-4a75-8915-475a3195cc17"
        },
        "item": {
          "id": "e186c2dd-330b-4839-88bd-eb23a028b270",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "00dd706a-2733-4beb-b429-ce85e676875e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5931c9b-a208-4cc7-9a16-77f494406d84",
        "cursor": {
          "ref": "16491f35-f7e3-4ec4-8472-114f77237ab4",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "47235cdf-0075-4d11-b405-99198bc2c61d"
        },
        "item": {
          "id": "f5931c9b-a208-4cc7-9a16-77f494406d84",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4f58a737-ed95-49a3-90aa-351d10aa27c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d15b2b-39a2-45b4-ae68-87b9c2ecd06f",
        "cursor": {
          "ref": "14d4215a-6e19-4519-8eee-7a72317b64c4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "88680bcc-050c-4ff0-ae21-e558a934dd9a"
        },
        "item": {
          "id": "98d15b2b-39a2-45b4-ae68-87b9c2ecd06f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bf4ea48f-967a-4d00-b4d4-779f0cec50ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efd0ffd-2279-459f-832e-0e7c9591e069",
        "cursor": {
          "ref": "08e07567-bef5-4b78-a265-55b35f4d3719",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "87419d97-a3d2-4369-8591-630a5141a648"
        },
        "item": {
          "id": "2efd0ffd-2279-459f-832e-0e7c9591e069",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "52fc0bcb-4f10-4e10-a9d4-1615175d84fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007880ab-35da-4f3b-8011-64de28b89726",
        "cursor": {
          "ref": "4c33b25a-342a-428d-8b7d-6ffeb5865283",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "512c4d37-fdc1-4287-8fda-5e61a718d663"
        },
        "item": {
          "id": "007880ab-35da-4f3b-8011-64de28b89726",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4c65661b-c438-42e8-8756-4c942c4e9d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc043ad2-d1da-419a-8eae-6354a855af8a",
        "cursor": {
          "ref": "ef0b83dd-0a60-4bba-914e-d1ffba4652de",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9d1e818d-611c-4129-9d2e-5db008a5ebed"
        },
        "item": {
          "id": "fc043ad2-d1da-419a-8eae-6354a855af8a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "866575a5-859e-4416-be51-2475a4e62edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3002a937-1ae9-4a01-85a4-9d64eb92f369",
        "cursor": {
          "ref": "faecee49-42b4-4c58-84f6-c44bf903b11e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2498ac1b-d97a-4d33-bb3c-9d16fb0d031d"
        },
        "item": {
          "id": "3002a937-1ae9-4a01-85a4-9d64eb92f369",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5569bea8-15d8-4f44-96f1-dc5ebd083734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a93a9a-c72f-44f5-b624-8a4c2e5b3cf4",
        "cursor": {
          "ref": "8c3c3339-95e3-4ae1-9634-fff787635a7b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "76e8ad37-e605-4a2b-82d7-7c595030018e"
        },
        "item": {
          "id": "65a93a9a-c72f-44f5-b624-8a4c2e5b3cf4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a71ad879-2bc9-4178-a74c-5bc6f8ae2147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7719d7-904b-4c39-8abb-0f17bc12be34",
        "cursor": {
          "ref": "772098b8-3a82-47f8-86c6-e8d0e7075baa",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bfa9b6e7-8f94-4dd2-b27a-01c4cbe5e915"
        },
        "item": {
          "id": "ee7719d7-904b-4c39-8abb-0f17bc12be34",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c6be8504-4c36-4cac-ad6e-96bf867e0521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dda3528-30b8-494f-ac73-c4b3fb505313",
        "cursor": {
          "ref": "b89c052a-a266-48b5-b2bb-9d4548c81925",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "70a335b6-ec5f-4fa3-be03-c3176d731f9d"
        },
        "item": {
          "id": "5dda3528-30b8-494f-ac73-c4b3fb505313",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be935d7f-7c1c-457d-9e60-2a6b3bca6bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af569dd-93c9-42bb-8db6-90c19348235e",
        "cursor": {
          "ref": "57201e2e-69e5-4f8a-9a93-e6416a476715",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "efb20e3a-a061-4942-a06c-ef01278d0993"
        },
        "item": {
          "id": "1af569dd-93c9-42bb-8db6-90c19348235e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3eaa8727-7e31-4736-b7ac-73a4e72cfb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2909fece-2ca0-4fbf-95fa-0e4e40df973d",
        "cursor": {
          "ref": "43377881-dbdb-47e4-96a3-a51eb5749c57",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f8ad3f60-d0e1-4c98-b3d1-4666ac1de4c0"
        },
        "item": {
          "id": "2909fece-2ca0-4fbf-95fa-0e4e40df973d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eae9efd2-728c-4fa6-b9b0-1de57396b4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2091ee76-6a08-4462-bf1c-b41a7fc570bf",
        "cursor": {
          "ref": "761aa808-29ce-4afc-8ff6-8d4031c27603",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5306404d-6a68-43a2-a762-ede2713ef0d7"
        },
        "item": {
          "id": "2091ee76-6a08-4462-bf1c-b41a7fc570bf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a1b24982-67a8-4e1a-af09-d84a8efbe1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e7ae38-c743-42d1-83ca-bd325bdd0f77",
        "cursor": {
          "ref": "49573fe3-f380-438a-aad4-b9909d0bbf63",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5637c15b-de83-40b3-9934-82ab75cc047a"
        },
        "item": {
          "id": "70e7ae38-c743-42d1-83ca-bd325bdd0f77",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d4cbde70-744f-479a-8359-e29ddd6d0763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0238c081-c48a-4b7c-b460-f820d04e9b70",
        "cursor": {
          "ref": "7c1575d5-f285-46ff-8e60-361406ea165d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b7e7dd96-1a15-4cd4-b22f-2ddad0851c20"
        },
        "item": {
          "id": "0238c081-c48a-4b7c-b460-f820d04e9b70",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "71d93b5d-e921-47a7-b302-7efd56fcba33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b392ca-3f74-45cc-9a49-d0111c890dbc",
        "cursor": {
          "ref": "9cd59d2c-f70c-477e-8b24-8dab3451338d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "70068d25-6c87-43d4-8760-69b36462eb63"
        },
        "item": {
          "id": "26b392ca-3f74-45cc-9a49-d0111c890dbc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "67233daa-f719-412b-a3b2-34c5f2278294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d5cee8-0c50-47fe-9c5c-a71c1d5a291b",
        "cursor": {
          "ref": "905dd96f-cc6b-42ec-a9ba-a13c84ea4479",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "91104c2e-c17e-451f-a04a-da9564e2f3a4"
        },
        "item": {
          "id": "67d5cee8-0c50-47fe-9c5c-a71c1d5a291b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "80d33136-5b55-42af-adc4-20185b4cb636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2970f1-f341-449f-838e-c3084835573e",
        "cursor": {
          "ref": "368a9973-25fb-4e39-b9a7-bf6501c543e4",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "20654527-08fb-41af-9ba7-14010e3dd4df"
        },
        "item": {
          "id": "bf2970f1-f341-449f-838e-c3084835573e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e4265b9a-2d00-4e89-9cd8-1ec24953ea6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc6814c-903d-4462-87cd-be09bb44261f",
        "cursor": {
          "ref": "8b4462c9-2fde-493a-b46d-f1c0e7cb6630",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d11059a4-fe0a-4dfa-bf6b-b19ee862de99"
        },
        "item": {
          "id": "cbc6814c-903d-4462-87cd-be09bb44261f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3d449d69-f9bf-4022-8e8b-024a973c816c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50de0071-fb51-4198-87c4-41f413973723",
        "cursor": {
          "ref": "d0ae09a6-08b3-48ce-a020-95d62848c5ee",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c4afe9c8-807e-4867-8d4f-3bf5e6bee5b7"
        },
        "item": {
          "id": "50de0071-fb51-4198-87c4-41f413973723",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d02d512b-9b52-45f2-b5d0-72bd9eb88c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a127ac7-cc65-46b1-b567-a0e7a8e65c89",
        "cursor": {
          "ref": "a00c286c-e587-4209-8fc7-e68d87ab5e61",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8bf88bcb-c2ea-4c68-8a47-97cb0c16e529"
        },
        "item": {
          "id": "6a127ac7-cc65-46b1-b567-a0e7a8e65c89",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "33b565fa-6b8a-4746-a9cb-9b9a0499811d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b9c2b9-d02f-4d8e-bcc7-bd029789495d",
        "cursor": {
          "ref": "dc28d756-81a6-4959-8030-50e1063c32eb",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5d3f580a-e37e-43ea-8c00-a99c49c42b33"
        },
        "item": {
          "id": "65b9c2b9-d02f-4d8e-bcc7-bd029789495d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "445c1823-b097-4042-a837-4e63171bd625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666b8fec-fdb0-4cdb-98e8-62f085c6e457",
        "cursor": {
          "ref": "4ad2fb4a-824c-4f7e-b50a-0e03b586f430",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "53ae884f-1c64-42cd-b7e4-e062e835974b"
        },
        "item": {
          "id": "666b8fec-fdb0-4cdb-98e8-62f085c6e457",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d2ab2fd1-52d6-4c54-9cb0-c1b951dd8467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1583d7-8183-4feb-9919-6cc5eda514c3",
        "cursor": {
          "ref": "ea29b4f2-ae74-46cc-8fc7-019a9f2649c9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "21adebfd-5d5f-4718-b7d1-702bb301a29a"
        },
        "item": {
          "id": "4f1583d7-8183-4feb-9919-6cc5eda514c3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "86411479-a136-41ff-affd-1e1b0ec3c842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77b6d08-669d-4ffc-a6f5-0a1b611af925",
        "cursor": {
          "ref": "e449c82b-d120-487d-8fcd-ac56edfa2d85",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "34890e67-e435-4d6b-8c8b-79c69f271387"
        },
        "item": {
          "id": "f77b6d08-669d-4ffc-a6f5-0a1b611af925",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "38aefe5f-63bd-482d-876a-e04f5f5695e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f594a186-8543-44c8-9a27-f69398a60435",
        "cursor": {
          "ref": "234f11f5-577e-4eb2-96ed-6a95bba2d277",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "30a8d3c7-aa8a-46ac-b4e2-738055a5c8cd"
        },
        "item": {
          "id": "f594a186-8543-44c8-9a27-f69398a60435",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "162a0e2e-b29c-4c5a-8142-d6a8b42cb662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dad3e46-1fff-4636-ad79-004c3fd88db6",
        "cursor": {
          "ref": "2c8f16f5-dda5-4f1b-b86d-66d3ba490e6b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f8408895-0070-49ca-8e9c-12f7f3dfcbbd"
        },
        "item": {
          "id": "2dad3e46-1fff-4636-ad79-004c3fd88db6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8c8247ec-c40c-4e74-bdd2-b4fc6783acde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df43292-5aff-4b4c-bd8a-32843d4ee2aa",
        "cursor": {
          "ref": "40362ec0-5961-4b82-b85c-adef190e534f",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ef38ac5c-5be0-4a81-8da2-6cfdbc8700a8"
        },
        "item": {
          "id": "2df43292-5aff-4b4c-bd8a-32843d4ee2aa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "91c8a666-b072-4238-b9e0-1468743ec2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdb30b7-bbfb-4a21-9726-86cef2cd1c39",
        "cursor": {
          "ref": "2a776086-54f1-4a44-9758-3b96a42c26a0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "108db814-0d71-41f1-acd2-f7d4d86d53ef"
        },
        "item": {
          "id": "3fdb30b7-bbfb-4a21-9726-86cef2cd1c39",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2efc3d5c-e0ee-446e-87c1-fdf722e36429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3133e263-74ea-4f35-9bc2-6f98ddabea43",
        "cursor": {
          "ref": "73595d98-6992-4a7f-8814-761bf90d38b9",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "295a71ae-14fa-4e2c-8e2a-48453679a3cf"
        },
        "item": {
          "id": "3133e263-74ea-4f35-9bc2-6f98ddabea43",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "99d81d00-425a-422b-8fda-da1134b07fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ea8502-abcc-4af2-9f49-50e437863e08",
        "cursor": {
          "ref": "4c4aecc5-a862-4a00-ab6f-9fee0d4df526",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "45b305ac-267e-45c0-a579-fdf6dda026a7"
        },
        "item": {
          "id": "a3ea8502-abcc-4af2-9f49-50e437863e08",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "10dff378-c24c-4f19-944c-4ac5e8c06f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a0ea9b-142d-4a63-9ace-ba9a57c9e63c",
        "cursor": {
          "ref": "25139400-e616-4ed5-b464-5d5f480909c2",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f54266d7-c418-48d3-8226-288a01d9f536"
        },
        "item": {
          "id": "f8a0ea9b-142d-4a63-9ace-ba9a57c9e63c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5c4f8ac7-65ad-4303-8d31-5426e77b9102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1c2155-d4cc-4756-befa-e1264b8a46a2",
        "cursor": {
          "ref": "e6ba65b0-7930-4a58-87b9-252df6218137",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "af43cbf7-6e29-4f2d-9335-12f0790bc451"
        },
        "item": {
          "id": "fd1c2155-d4cc-4756-befa-e1264b8a46a2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2fdfe89b-1b5c-471e-9395-73d5f0d92bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33208ae-269f-432f-aecd-b7bd70614e93",
        "cursor": {
          "ref": "de9bd456-efb6-43fd-bf7d-0e606bb5ce41",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3a6c9d16-b1d5-4885-b31b-1837604ca9bd"
        },
        "item": {
          "id": "c33208ae-269f-432f-aecd-b7bd70614e93",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e193c2a1-ae49-4856-93fd-d653b1176fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2ebbb8-a65f-4474-b39d-5aeb8ca06092",
        "cursor": {
          "ref": "723f347b-082a-4825-be68-cb63aa9b4059",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7a03770f-ef08-44bb-92f7-30aae4d91458"
        },
        "item": {
          "id": "fe2ebbb8-a65f-4474-b39d-5aeb8ca06092",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c3c3d795-759c-4d49-be09-0fadd6ab78c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433ed238-538c-44cb-8ba1-fbfae358be62",
        "cursor": {
          "ref": "7aa43798-be00-46eb-a6b3-3dd063434f30",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ecb68d83-2749-4e97-9b83-18118e35acbc"
        },
        "item": {
          "id": "433ed238-538c-44cb-8ba1-fbfae358be62",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d39a900d-6efd-4784-9eba-828e8fae0304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d89ae5-7532-4622-8447-9341c3050161",
        "cursor": {
          "ref": "c4f4f7a9-0a27-45ae-8e4a-40fb2cbdf17e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3697e486-bb38-435d-a6cc-c788c49fa748"
        },
        "item": {
          "id": "43d89ae5-7532-4622-8447-9341c3050161",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e568babf-87c9-49bc-a23b-77a258f399a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047b3f02-44d1-4ffa-99d7-6d35b8100b3a",
        "cursor": {
          "ref": "865a7c80-1a87-4e52-8e31-2a4ee2bf2e26",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c8dce366-4554-4a5e-a24e-7bed05f1d71e"
        },
        "item": {
          "id": "047b3f02-44d1-4ffa-99d7-6d35b8100b3a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eefb8c13-9d6b-4c8e-bfe0-9f9357b2aae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab5f427-7080-4309-948c-7eddd07551a3",
        "cursor": {
          "ref": "aae32946-1218-49f7-9258-b378c66f551b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "83a2b5cb-d2cd-46be-8c7b-c486c482563d"
        },
        "item": {
          "id": "6ab5f427-7080-4309-948c-7eddd07551a3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2a66db06-e4ec-45bc-9902-4fdd9f4873e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a144463-23d8-4176-aab5-8b2ad2bd2b88",
        "cursor": {
          "ref": "47e42727-09fb-4051-b6df-8ed4c2fbafba",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b8ba6456-0098-44f2-8841-de3f7c405c6f"
        },
        "item": {
          "id": "9a144463-23d8-4176-aab5-8b2ad2bd2b88",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1cb11ee7-c1ec-4381-a285-2d6a101d965e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8335ed-9525-4049-81e7-383bae2664d9",
        "cursor": {
          "ref": "589f9284-0953-4d7b-a2b5-d3758977b3a1",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e349eb7f-6714-4263-ad73-32e6728f519e"
        },
        "item": {
          "id": "bb8335ed-9525-4049-81e7-383bae2664d9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "78e8226a-cfd4-43f6-9d97-b4f343f946ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6d2758-fd4d-4bc8-bd6e-8b7b1aa49ef8",
        "cursor": {
          "ref": "613028fa-e241-48c6-b45e-e3427da2fa8b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3e8702bc-c940-4da5-8744-d5a9dc30e824"
        },
        "item": {
          "id": "ff6d2758-fd4d-4bc8-bd6e-8b7b1aa49ef8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "120eec1f-6c4a-4b36-a29b-ac8fef68e103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a688e4-3be8-4011-a531-92182942d81f",
        "cursor": {
          "ref": "5a17c47c-cedc-41f0-a373-e0fc70907aa1",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a8065142-df4b-4fe9-8175-398255c5d665"
        },
        "item": {
          "id": "82a688e4-3be8-4011-a531-92182942d81f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d313b892-5ced-4d92-bf0c-b8e9e133f81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2802c236-8cde-4bd0-a035-e7d7b76a7734",
        "cursor": {
          "ref": "8048b4d2-5258-4f34-a20f-78e21dc2d89a",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d180da30-71d1-4a06-aac9-145181fcd46f"
        },
        "item": {
          "id": "2802c236-8cde-4bd0-a035-e7d7b76a7734",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ceb0c827-ad5e-465b-b335-7f6bef64c531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984157c4-0b3a-49e8-ab92-08164cd10fba",
        "cursor": {
          "ref": "ed8b6a7d-7a5d-46d2-bcdd-65d50fdad124",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a64da984-5d42-4979-a32f-e971e9777534"
        },
        "item": {
          "id": "984157c4-0b3a-49e8-ab92-08164cd10fba",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2e2464dd-97b9-495c-aeaa-18e2d82bc5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b8efa7-6222-4dc3-9bc9-52fc3592e118",
        "cursor": {
          "ref": "f56f61a7-9d08-4a27-b594-3a3c226a9987",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7fa20feb-953e-4e93-a799-da33882c863d"
        },
        "item": {
          "id": "d2b8efa7-6222-4dc3-9bc9-52fc3592e118",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e1296ec0-7569-4c24-bdf9-88fbbe88e1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde8dd29-3645-4a22-bfa5-ea2d55fb92e4",
        "cursor": {
          "ref": "dd4596cf-b0d2-4765-acd6-8a560cdfccd0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8c9d4c22-8fec-4da0-abf2-ca7adeca528c"
        },
        "item": {
          "id": "bde8dd29-3645-4a22-bfa5-ea2d55fb92e4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d76411a5-7e1d-4ccf-a890-f463a066890f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae79eb75-3931-4fa8-abbb-0ba0ae1b0f07",
        "cursor": {
          "ref": "707aa400-cfe1-4d43-ada6-6f47aaaa0347",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "af2f70e2-1b9f-4f98-86bf-6274883ba270"
        },
        "item": {
          "id": "ae79eb75-3931-4fa8-abbb-0ba0ae1b0f07",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "10863dac-6401-4d40-b01f-07f43fea6b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d577d5dc-0aec-4409-91af-e897ea676d18",
        "cursor": {
          "ref": "100dac53-c241-40ba-9d60-364eafd922cc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d364f36c-8d68-486f-86a4-0696b16a9f83"
        },
        "item": {
          "id": "d577d5dc-0aec-4409-91af-e897ea676d18",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ceaaa8a0-c62d-496c-8446-baa423a5efb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d3b7f5-faf2-4f62-a3ac-2ae38c1b159d",
        "cursor": {
          "ref": "e8509157-f59f-4e0a-a163-3e5ab73d1b25",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4c21ffa9-286d-4aa1-89f2-2b1a3dbbac84"
        },
        "item": {
          "id": "07d3b7f5-faf2-4f62-a3ac-2ae38c1b159d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a1061c96-91f6-49f7-9141-7abc9f4a1aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2229f01-caa9-4388-860d-9e003639cb5c",
        "cursor": {
          "ref": "c8c56bdc-77c2-4d13-95d0-40310734628f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ccd70050-3506-439c-a677-6dd8eec7fab0"
        },
        "item": {
          "id": "b2229f01-caa9-4388-860d-9e003639cb5c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "88113ce9-2674-4e6c-a9c0-839b9f89d9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa38edd1-7354-4860-9ca3-836347953fb3",
        "cursor": {
          "ref": "bfee4300-f3d1-404d-b9c7-1c0f207a23ec",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9fa6e0b7-c61c-4e2d-888e-e73df79a0b38"
        },
        "item": {
          "id": "fa38edd1-7354-4860-9ca3-836347953fb3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0f1e618d-9979-416f-8a42-815beaf4d75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e321ab-33f6-4ef3-a9a6-89e5ee2c4344",
        "cursor": {
          "ref": "60cc2b7a-4ad1-41c7-acd0-c5464d3ea246",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "823ca6eb-426b-45cc-ac63-b7678dcc0144"
        },
        "item": {
          "id": "47e321ab-33f6-4ef3-a9a6-89e5ee2c4344",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "76937b61-7bc0-4f53-b6c6-0714c89cca2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a56112-e940-4a27-96cf-a6beea47b05f",
        "cursor": {
          "ref": "5a650613-a13a-4f6c-88b9-219cd97bb91c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f4ec2966-54c0-4872-8b11-7d1a975205fa"
        },
        "item": {
          "id": "c5a56112-e940-4a27-96cf-a6beea47b05f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d0924106-d13b-4832-99fa-bb4e0ccc1400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bb54c9-bab3-4ea8-8ec9-689168f78429",
        "cursor": {
          "ref": "edaf148d-ca80-4403-b6a6-42abc3ba3381",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c92aa1da-4535-4117-86b6-eea0534d4f60"
        },
        "item": {
          "id": "d7bb54c9-bab3-4ea8-8ec9-689168f78429",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e2f83fa7-2550-494a-8508-b69706c673fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2397,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc627521-5461-4958-8f47-a6520e205e76",
        "cursor": {
          "ref": "759a5ba2-8580-4378-8aa3-24048222063b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "20af9386-6c50-43d9-a064-78aced84a50e"
        },
        "item": {
          "id": "fc627521-5461-4958-8f47-a6520e205e76",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ea7c02b4-c2dc-4b9c-913d-c6b215d6da71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccf62e7-86dd-411c-9b0a-f168b8d5af98",
        "cursor": {
          "ref": "a0464943-13c5-47a0-9d36-c65ccba34d64",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "30d96254-f4fa-47ff-b604-a9f6a486e7f6"
        },
        "item": {
          "id": "9ccf62e7-86dd-411c-9b0a-f168b8d5af98",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "aed08c97-9a7f-4f6d-bc9d-f3d7043975e5",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "73840c64-ea46-4efc-bba3-c7d91dcccfd9",
        "cursor": {
          "ref": "74f44756-69a6-4d86-a6c1-69626be4abad",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b50f26bb-0980-492e-8164-08810ea2551d"
        },
        "item": {
          "id": "73840c64-ea46-4efc-bba3-c7d91dcccfd9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8ee171b2-da59-4ebc-8938-1b7e5fa0c67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bbea6d-711a-40d9-b321-4190574a20fe",
        "cursor": {
          "ref": "51caa5f9-8fa0-408f-aa5f-744ed657139e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3d5bd63b-7135-454a-acc3-26ab849cb67b"
        },
        "item": {
          "id": "51bbea6d-711a-40d9-b321-4190574a20fe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c8f10184-1215-4a2b-9e52-be01521edb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852309a8-1e94-4ac8-ba00-54e741763ae4",
        "cursor": {
          "ref": "8be57119-a9d8-479a-8da7-491f17aadd0d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ff2b24a1-2799-4f84-8580-c60fc1bba72e"
        },
        "item": {
          "id": "852309a8-1e94-4ac8-ba00-54e741763ae4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e1d7d1f4-161b-46fd-9236-72a8766ae5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d48bc0-6352-4d50-8dd4-bffd3e64778c",
        "cursor": {
          "ref": "595e8e99-f796-4982-a19d-e5942b91271f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3094f0f6-c820-458d-ba3e-f758ae55e50f"
        },
        "item": {
          "id": "78d48bc0-6352-4d50-8dd4-bffd3e64778c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6a17b0aa-2ae0-46f4-a666-d4eca6a1d468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918343fd-a814-4a73-8d38-484e9db294f3",
        "cursor": {
          "ref": "fac3c220-2bab-4eb3-a4d7-4891df5c0733",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "97ba6976-296b-41d2-9127-ae7dd00d04f6"
        },
        "item": {
          "id": "918343fd-a814-4a73-8d38-484e9db294f3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "aeeb1441-98e1-44cb-9f90-6a6be9f91d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c520402f-443c-4af8-a132-6d2c0f5b660d",
        "cursor": {
          "ref": "9a5e73be-6d05-47a2-b01f-75f94ec9c662",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1cec994d-402d-42cd-9771-2bbbf72ddc07"
        },
        "item": {
          "id": "c520402f-443c-4af8-a132-6d2c0f5b660d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a76ced24-6084-4fae-a762-73deb4cae9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbd495b-6542-497e-a92d-79c5d4bd8f82",
        "cursor": {
          "ref": "704f0df0-1a8b-494b-8d21-48c8adff48de",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fd22710d-40a7-4a11-af37-32f050bb454d"
        },
        "item": {
          "id": "0dbd495b-6542-497e-a92d-79c5d4bd8f82",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "632a36c8-7461-4113-914d-5ef397581c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ad086d-7550-4c01-b5ee-04920bcdd24a",
        "cursor": {
          "ref": "875da1ef-23f4-4c74-9761-d301fda07700",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e9cf63e3-8fb6-401f-bca4-07d7f7c2b653"
        },
        "item": {
          "id": "86ad086d-7550-4c01-b5ee-04920bcdd24a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4d4f04dc-8a23-4c60-90f9-b5c9e28fcff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9db0dd-2c44-4687-8622-3924ca35e3d3",
        "cursor": {
          "ref": "434d2907-04e8-4417-823b-de8e117e41f1",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "85d4aa26-bb4f-4290-9a2f-a68b0891ccdf"
        },
        "item": {
          "id": "af9db0dd-2c44-4687-8622-3924ca35e3d3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5e676e8a-e0d3-480e-b6d3-8b893988f618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d2e2be-b5f3-429a-965c-313bea3eb85c",
        "cursor": {
          "ref": "c2088f1c-0d6f-438b-ae41-d7aff4a0fdee",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d3c19f94-d3b0-446e-8b35-59e9ab85ac7f"
        },
        "item": {
          "id": "13d2e2be-b5f3-429a-965c-313bea3eb85c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "03b3326a-1b6d-4936-9f66-b1f6cdca9811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133c4894-dab5-44e9-9305-dc366c4cb55b",
        "cursor": {
          "ref": "bf06908b-6ec9-4a2d-b707-8e3f88542ead",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "adf87838-dd7f-4a7f-a143-732b6faf6441"
        },
        "item": {
          "id": "133c4894-dab5-44e9-9305-dc366c4cb55b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5ad39c25-c40c-4d89-8602-067229498486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8697172e-7367-4f41-a3d4-abc0ec4923ae",
        "cursor": {
          "ref": "e181aae1-96c9-4b92-acd5-1c47c303ddc9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2d5aec08-196b-4ab4-9019-7320ec8e879a"
        },
        "item": {
          "id": "8697172e-7367-4f41-a3d4-abc0ec4923ae",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e3291c40-382d-48a4-b3be-b71959c80c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c0c384-1ffd-47bc-8e84-e2a238324498",
        "cursor": {
          "ref": "7577b979-1931-4c21-8a79-98ee6a147395",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3074151b-7afc-47ec-85e0-c7c14266d089"
        },
        "item": {
          "id": "c5c0c384-1ffd-47bc-8e84-e2a238324498",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "40c98dd3-1926-4c2d-b488-bcbc0a34979e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215db220-d473-4f4e-9843-7c8d050b57fa",
        "cursor": {
          "ref": "3f5df354-1f36-4327-9053-9eb415ef0828",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9046c461-50a9-47ad-b83e-c4875767b32f"
        },
        "item": {
          "id": "215db220-d473-4f4e-9843-7c8d050b57fa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "98758031-7dbb-4206-979e-169d375c2891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9535f51d-6976-44fe-92b9-e76c9ec8e903",
        "cursor": {
          "ref": "a278a8a2-66bf-4d93-b550-f098ac436024",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bfcc645a-5b60-4d14-84ab-47e1e63db20c"
        },
        "item": {
          "id": "9535f51d-6976-44fe-92b9-e76c9ec8e903",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0198e4b3-0e55-458e-93b0-77e8e9568161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dd25ca-5d01-4b73-8587-d91c820c272c",
        "cursor": {
          "ref": "0223c4a0-efec-46ce-8e36-825f34567d85",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f7f8c7fa-23af-4323-b544-ba18a6f3eb3f"
        },
        "item": {
          "id": "34dd25ca-5d01-4b73-8587-d91c820c272c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "64e293c2-f30b-4ae9-9f73-33f3891e1e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f281b563-e330-4704-b922-913e57c7feb4",
        "cursor": {
          "ref": "41276979-378b-47ea-bea5-35cb686fc8f2",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "342b6a3e-70c2-4342-a39d-add3c1886049"
        },
        "item": {
          "id": "f281b563-e330-4704-b922-913e57c7feb4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f3fadb2a-72b6-4143-9ac8-04e94272ea4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a32584-64cb-45e2-bd87-e68f9e17950d",
        "cursor": {
          "ref": "2dd66ede-4a80-4755-ada1-794f4f72e19e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "21f00c94-610f-4296-96fc-cd3af51af44d"
        },
        "item": {
          "id": "18a32584-64cb-45e2-bd87-e68f9e17950d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "799c86e0-ef72-4521-b565-df5c4d69e4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d75c969-4e5a-4e58-b7ab-a17ff16b2673",
        "cursor": {
          "ref": "8f2e2e23-8c08-4d88-9bfa-7a11e0492e76",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6648279a-3c9a-4eba-9fa8-4aec0b9044fc"
        },
        "item": {
          "id": "8d75c969-4e5a-4e58-b7ab-a17ff16b2673",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a67570bb-4250-4a09-a1ce-179134948122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e58c965-225d-4043-9ffd-aa7817b6c9b1",
        "cursor": {
          "ref": "701e61a3-a47d-4058-bb8d-1d792e3419a6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5b303bf6-0827-42d0-8dbd-cb7a5572d0bf"
        },
        "item": {
          "id": "3e58c965-225d-4043-9ffd-aa7817b6c9b1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cb122cea-9da8-4466-a624-49e9d4398d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84833349-f19b-4f26-903c-27dabfc346ab",
        "cursor": {
          "ref": "a951d62e-ec2b-4365-b566-ef724b0f6875",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "21488956-4dcc-49dc-b026-f0f9c66f03da"
        },
        "item": {
          "id": "84833349-f19b-4f26-903c-27dabfc346ab",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e886747d-5400-4a09-9d09-3dcd608cdc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c8d55a-70de-42af-9f1d-486f7458bad4",
        "cursor": {
          "ref": "823e4cbc-a8ce-4891-b0e5-61cfce1cbe87",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4e239265-8dec-4977-832b-7206c55aa5b1"
        },
        "item": {
          "id": "d3c8d55a-70de-42af-9f1d-486f7458bad4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "31aef7b0-7b62-49f1-abaf-ac73a6b791f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16faad93-bc10-44c6-9794-5acee37ddbba",
        "cursor": {
          "ref": "58b2d1ad-4ad0-40f0-8acb-39d38b3d7294",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "de6438f4-828e-46f6-b270-78513fb38274"
        },
        "item": {
          "id": "16faad93-bc10-44c6-9794-5acee37ddbba",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f46b6d01-7829-4cef-aedf-ab85e273f4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a79ad2-c79a-4f84-a01f-2cbf9cdd0800",
        "cursor": {
          "ref": "65ef5e31-3dfd-45ab-aeaa-8e9f76c00f49",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "72c0db48-f5aa-4293-b561-7d40622a5270"
        },
        "item": {
          "id": "b2a79ad2-c79a-4f84-a01f-2cbf9cdd0800",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d4997196-5c8a-4127-b5e1-98a0ab0ea191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf3b68b-ca21-4cca-8765-c566b3cf6b2a",
        "cursor": {
          "ref": "df6b24d9-dda5-4d03-b579-36a44cd411ff",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "514fcfd6-d961-4796-9737-17dc5b6865cc"
        },
        "item": {
          "id": "4cf3b68b-ca21-4cca-8765-c566b3cf6b2a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7aa59023-2dd8-494c-aab1-a63595cd9065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f33bd4b-17ea-4de2-9d3a-ac9c35c498d7",
        "cursor": {
          "ref": "a99853cd-cdd7-4beb-bc08-c1ff9f4c2207",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0246bb24-e374-4191-b8ad-77e9c0c01a83"
        },
        "item": {
          "id": "1f33bd4b-17ea-4de2-9d3a-ac9c35c498d7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "af818110-4eda-4b7e-93fa-c7a1174385ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cea6699-3021-44ed-a3db-1ee7eafa08fd",
        "cursor": {
          "ref": "de251f1c-37c4-4650-9138-ffe93bb6d5d1",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5d8683f2-d905-4ba4-a9be-f9be1087fdc3"
        },
        "item": {
          "id": "4cea6699-3021-44ed-a3db-1ee7eafa08fd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2ac2f25f-fe1b-481a-a967-1e51dd71343e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cef218a-9e3a-4d43-ada3-a34cc6fb9cee",
        "cursor": {
          "ref": "ad27341f-3a58-4a83-aa15-c1ddd9d5c53a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d7c2e475-b011-424d-889a-3d5bd99bf44b"
        },
        "item": {
          "id": "1cef218a-9e3a-4d43-ada3-a34cc6fb9cee",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "617f57b7-76ef-4b0d-a82a-88efa8af82aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dbb575-3429-4d6a-94b8-efbcd071a630",
        "cursor": {
          "ref": "17b21ef8-fdf7-46f3-b0e0-b25ec778ada9",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7da11779-1426-475c-9863-058546d835a8"
        },
        "item": {
          "id": "a2dbb575-3429-4d6a-94b8-efbcd071a630",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "406ec33e-c334-476f-8e6f-4e1f03c5b95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3c49a2-649f-4c32-a035-f4e7ce4b3eca",
        "cursor": {
          "ref": "153bf982-37e1-428e-b67d-218de41a98ac",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4fdffc51-a51c-4e27-8d16-2cfc07349706"
        },
        "item": {
          "id": "5f3c49a2-649f-4c32-a035-f4e7ce4b3eca",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "53853414-2889-4e3a-8448-ef2b2835176d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73945e1-c5f3-4f9c-b484-6819fa328a37",
        "cursor": {
          "ref": "5abca8b2-454c-4543-8b44-47aa5ff8a355",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f69b2c90-8a0e-4dca-8dfe-779110d7579a"
        },
        "item": {
          "id": "f73945e1-c5f3-4f9c-b484-6819fa328a37",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "47a23fa5-76fa-42e8-8505-70e61d1b877c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d874365-5089-4c40-b448-148316991d6c",
        "cursor": {
          "ref": "418b11fd-c2f9-4070-a43d-0d64c10af1e0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8df8381b-1517-48c6-b685-0eef710a6c6e"
        },
        "item": {
          "id": "2d874365-5089-4c40-b448-148316991d6c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bc1be986-12fc-49c1-af80-170783fb3fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75ee4bc-966e-4551-835a-620e568296f3",
        "cursor": {
          "ref": "1cf59a3f-d16c-43be-859b-ed946b053db9",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ce9479bc-1d4e-427b-b3fe-daac6a33e832"
        },
        "item": {
          "id": "b75ee4bc-966e-4551-835a-620e568296f3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5d535e9e-9ce5-4adb-b9bf-f4e01ce7f4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68465352-b0b7-4176-9593-b031687c5235",
        "cursor": {
          "ref": "4fcf8e24-3a54-47de-b207-92a7a5dc8bec",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0bff95e9-5f35-4562-b838-752f1f8ca8b8"
        },
        "item": {
          "id": "68465352-b0b7-4176-9593-b031687c5235",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d349ca54-7120-4dde-b1c3-fee9008f6b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8584397e-8150-46da-a7e9-e17f9c358620",
        "cursor": {
          "ref": "9e473cc7-cef3-4172-b75e-aa1c9b04db26",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "386a0594-a820-45f3-9870-bceb3f7e57ff"
        },
        "item": {
          "id": "8584397e-8150-46da-a7e9-e17f9c358620",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6a5c481f-55c6-4468-89d5-428b045d6491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683975b4-5b05-4dae-a6dc-22b51de966c0",
        "cursor": {
          "ref": "354a971c-a4bd-490a-98fe-22f4d4a98d0a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "db4b2304-3597-4a73-8377-82731b9e6013"
        },
        "item": {
          "id": "683975b4-5b05-4dae-a6dc-22b51de966c0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "226313b0-a867-471e-88ee-246026b08068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18739cad-6f54-4cc3-bbb7-7c41d7f12394",
        "cursor": {
          "ref": "c66da676-eaf5-4f28-ac8d-b5da1d90bf8c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "583ca693-b684-4e05-af41-c989303f380c"
        },
        "item": {
          "id": "18739cad-6f54-4cc3-bbb7-7c41d7f12394",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3bced5f8-2d0e-47ed-8ab2-1465fdecf353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e0e6f3-a15c-4f61-a2bc-e35d61625c03",
        "cursor": {
          "ref": "f5710fb5-c7ae-484d-b4db-efd1c27f5fd7",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9b025a83-2f75-44a7-ae2c-bd90037772a1"
        },
        "item": {
          "id": "d8e0e6f3-a15c-4f61-a2bc-e35d61625c03",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4cb8e9d2-6bb5-49ec-98e3-8320fa67fd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb6e304-07f2-4b4f-ac94-dd1a077e481c",
        "cursor": {
          "ref": "59753f95-2bac-4aab-939e-294d0f44bd8a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a7f99b7a-224d-4056-a4dc-01efbad07074"
        },
        "item": {
          "id": "ebb6e304-07f2-4b4f-ac94-dd1a077e481c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e1e4f1e2-6dbe-408f-8d23-d4bade7e3889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aa2423-f6f9-4377-b9e2-2659457ea9d5",
        "cursor": {
          "ref": "c886ecfa-367f-4e9a-8130-20b2fad11fd5",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c0e00360-57e2-4d71-96fb-65722551614b"
        },
        "item": {
          "id": "44aa2423-f6f9-4377-b9e2-2659457ea9d5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f268ef10-2226-44a1-9eb9-55e6208add86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8e6c06-84f6-48ba-b36e-d8cdffb96c69",
        "cursor": {
          "ref": "ca34ddc4-e538-4719-917a-58ba7d84d7a8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "687649e3-4911-45f1-9ac0-28d0d793c04d"
        },
        "item": {
          "id": "1c8e6c06-84f6-48ba-b36e-d8cdffb96c69",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aa87d820-bc65-492f-9e77-86b968986b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879d4ea1-6cef-47ca-9529-1a0e362ea32d",
        "cursor": {
          "ref": "ccdac4e0-9b93-4ef3-b500-02bbc8d67f77",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d8dd89d3-787d-43d6-ab4f-7c2035ce20c3"
        },
        "item": {
          "id": "879d4ea1-6cef-47ca-9529-1a0e362ea32d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ce2d4bc1-60b3-4066-a6e9-5d60a0ee1059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96289baa-bad7-4258-bb42-66379b7d4b9b",
        "cursor": {
          "ref": "bd4846f9-3efd-425b-89bf-5f382097154d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d4e689b0-d07c-4b77-af83-461f1fad6e10"
        },
        "item": {
          "id": "96289baa-bad7-4258-bb42-66379b7d4b9b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d117d03a-2ab3-4e13-9f06-284d88c38117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e89328-4fba-49db-adc2-fc925f83c095",
        "cursor": {
          "ref": "d442a48d-4c7f-4414-a244-353ead668d8a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ae502a8b-1e67-4a48-bcd2-ec9a8be493af"
        },
        "item": {
          "id": "b7e89328-4fba-49db-adc2-fc925f83c095",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "56b3cfe9-dcc2-4d72-ab8e-16de2e057531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07476c99-ef42-4553-b1db-5b294d275e1b",
        "cursor": {
          "ref": "10d2838a-ffd5-4756-922b-0398fe1e712f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "959c2ee5-4ade-4730-9d1b-b5f33fc8cfa3"
        },
        "item": {
          "id": "07476c99-ef42-4553-b1db-5b294d275e1b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0da1c8f2-4065-4fcf-99cb-9360f2917479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d99d06-6bdf-46ee-b46a-36b52e331576",
        "cursor": {
          "ref": "5e032922-32b3-47e4-9461-a1596d5acfb8",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "25562e5e-aa39-41a7-a708-1c57d25b0b41"
        },
        "item": {
          "id": "48d99d06-6bdf-46ee-b46a-36b52e331576",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e7bb5055-25ac-4964-ba70-75804adfc1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5967e24c-090a-4006-9262-7eee049e09d6",
        "cursor": {
          "ref": "4fa1a3ec-de08-4756-9a08-b9e398938a90",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "329d0f71-317a-483c-9620-999e6eecb856"
        },
        "item": {
          "id": "5967e24c-090a-4006-9262-7eee049e09d6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5ccb8c56-1e17-45cd-b17e-2ea39877fa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7e8a18-73dd-48b4-885f-e91516dfccc0",
        "cursor": {
          "ref": "1ab45769-5c4a-4e09-b4fd-7b2c742f2122",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "22cd25b2-06b9-4eb6-9c2b-4ac07cb8ed3b"
        },
        "item": {
          "id": "3b7e8a18-73dd-48b4-885f-e91516dfccc0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7d4ee7e3-b151-45bf-8b4b-f82720b69b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669bded2-8ac8-404a-80d9-b38a5a4ff5f9",
        "cursor": {
          "ref": "ebc748fc-f22a-4d4c-99bc-995edd735bb3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0922d4cc-40ee-45aa-930a-79abf47f92a0"
        },
        "item": {
          "id": "669bded2-8ac8-404a-80d9-b38a5a4ff5f9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ea8f9077-0756-4496-bd08-5caec089cea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6d8acd-058a-4e0e-8a39-62bb4e4fa055",
        "cursor": {
          "ref": "1b60a8c8-8593-4379-8a46-6df88c70a675",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7d714f1f-b828-447f-a696-b82f9f82a706"
        },
        "item": {
          "id": "ca6d8acd-058a-4e0e-8a39-62bb4e4fa055",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f8eaf882-ca0f-4c4e-9053-0a7f5557a91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e96d9e4-5f95-4d2c-99c7-095567c5f8eb",
        "cursor": {
          "ref": "b76a7f29-c1a1-49f4-b622-647270684977",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "41c3dcc7-aa6e-4d0c-b893-afee9d285741"
        },
        "item": {
          "id": "6e96d9e4-5f95-4d2c-99c7-095567c5f8eb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7251b54f-9eab-4847-a1d7-f1543ec41e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5967079c-7c7d-4ddc-ad15-8b3fd19065f3",
        "cursor": {
          "ref": "79403f73-3d07-441c-ac44-ac726837c903",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2682027d-ad6f-4a95-8b85-01ccf28a7eac"
        },
        "item": {
          "id": "5967079c-7c7d-4ddc-ad15-8b3fd19065f3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2c964cd7-36e2-4bbc-91b6-dcab4f445396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ccd291-5b16-4b53-9b95-73c1c34177a3",
        "cursor": {
          "ref": "9b9907a7-692c-4bc7-ba43-87d4832e3246",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "95d7bc95-f667-4a01-bce8-b562c65e25e1"
        },
        "item": {
          "id": "e1ccd291-5b16-4b53-9b95-73c1c34177a3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8736657a-7872-4fdf-a5d6-68029351bbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc237f8-df7f-410c-a10c-f7ebf5049876",
        "cursor": {
          "ref": "74a6060d-ff99-4f54-ba87-fc5bc193f022",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5b06ca9a-f537-4f4f-a850-1da7d8f58818"
        },
        "item": {
          "id": "3fc237f8-df7f-410c-a10c-f7ebf5049876",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bc3c0567-c1a7-45f2-a0ce-3a17dc275478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6120bc7d-7f09-4af6-b98a-3b67ee035c52",
        "cursor": {
          "ref": "c4dc84e1-0c27-435d-9828-8ac164f81a0c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "aece80e7-2e7e-414e-bd58-51d383744e8a"
        },
        "item": {
          "id": "6120bc7d-7f09-4af6-b98a-3b67ee035c52",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f482134e-b8a3-4613-834b-36deb40585d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d6ea89-1481-4ff1-b69e-2f29b246a839",
        "cursor": {
          "ref": "1c99e48f-4af5-4337-86f7-7befd1ccafbb",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "acc03da2-d966-496f-9f09-e028117d086f"
        },
        "item": {
          "id": "b9d6ea89-1481-4ff1-b69e-2f29b246a839",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2117ae43-e5fe-4593-9939-b2a9cc364519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d508714-621a-4442-a94f-adb9e8c2bfd1",
        "cursor": {
          "ref": "0b23e896-baf0-4d0f-88fc-5b3049b8e712",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7378e8d0-0635-44ad-b7b3-9e019ae00550"
        },
        "item": {
          "id": "3d508714-621a-4442-a94f-adb9e8c2bfd1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "17ea93bd-836f-4464-897b-9028e284e9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e742da-398b-4609-b9a0-cb029b697f30",
        "cursor": {
          "ref": "debae9e3-291e-4d5b-94d8-3d119beb39bf",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "265f3eed-7b1c-4072-bb72-a3b0eca892be"
        },
        "item": {
          "id": "15e742da-398b-4609-b9a0-cb029b697f30",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c7d2071b-d586-46c0-bea3-f77638203580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f1153d-cbef-4e30-8355-d28bfe0da2ba",
        "cursor": {
          "ref": "d90743e0-554d-4fa7-a310-46e29e69f4da",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2536e205-c685-422f-9333-eccec7759a3c"
        },
        "item": {
          "id": "f1f1153d-cbef-4e30-8355-d28bfe0da2ba",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ddf1bb80-c1b4-4699-9439-295cff994b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5629bbdd-475b-4f0e-8438-8397a55d55f3",
        "cursor": {
          "ref": "67937c97-fb1a-4772-a54e-8102738e9652",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "49387e8e-ed91-43cd-a80e-d86f529ad385"
        },
        "item": {
          "id": "5629bbdd-475b-4f0e-8438-8397a55d55f3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "29ceb8b9-06ac-42f2-b1b9-b5c60cae8d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db94c1b9-e38d-4f1a-abd4-76ccff879295",
        "cursor": {
          "ref": "d0040f19-7bd3-44d4-9974-02e0639c59ea",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3af51a53-79d0-4752-8c5d-21607eb0c5f6"
        },
        "item": {
          "id": "db94c1b9-e38d-4f1a-abd4-76ccff879295",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d8b0d374-9485-416d-81ab-1ea8cb5216d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db79faf-5036-4520-9096-79fb86cde6c7",
        "cursor": {
          "ref": "1762c4b3-1113-473b-9dfc-7f615901d5ba",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f0ddffcc-0a1c-4d0c-94d8-0e79b1624f6c"
        },
        "item": {
          "id": "0db79faf-5036-4520-9096-79fb86cde6c7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6e878455-e608-448d-b527-5cfbc7c812d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe41f5c-c9ae-4da6-a671-76449057e53f",
        "cursor": {
          "ref": "6462e74a-f4a9-41d8-86e9-d2cc2fb2069b",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f2ef24da-cd24-43be-9ec4-acc44c67f392"
        },
        "item": {
          "id": "ffe41f5c-c9ae-4da6-a671-76449057e53f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1210aa5e-5017-4bef-bc88-7fd48f794a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba92e0bb-786e-42e4-902a-c421b959dcb9",
        "cursor": {
          "ref": "f965ec1e-3981-4a88-9a37-5751280ed173",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "896aad69-ee95-4083-80b9-03b658c368f6"
        },
        "item": {
          "id": "ba92e0bb-786e-42e4-902a-c421b959dcb9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1f4336d0-9569-4844-9999-eb66f4ba0e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54f2e75-2ead-4b79-82c8-60576ab15225",
        "cursor": {
          "ref": "5b5cfd63-71d9-4622-80ed-2a155aea6bb0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "67804ff9-f4fb-4bec-99cb-86630c0dff80"
        },
        "item": {
          "id": "b54f2e75-2ead-4b79-82c8-60576ab15225",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fd49c9f0-dac0-4f58-bd76-92d238ee3c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2b6f1f-31d5-4013-9645-0d42b49f23f6",
        "cursor": {
          "ref": "1d7bb64b-0f6f-478b-8cff-a4fcb349dd0b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e7bc4c2a-3284-4c03-8293-bd76e75f6eaf"
        },
        "item": {
          "id": "ef2b6f1f-31d5-4013-9645-0d42b49f23f6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ecf2bf21-4a38-4537-887b-37013b53b6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40fff5c-cc95-4394-91ed-f4136db16563",
        "cursor": {
          "ref": "5a3834c6-0013-4e73-9653-dbfad979f39c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "afd1dc55-1c09-45f9-af98-08f38e0d2719"
        },
        "item": {
          "id": "e40fff5c-cc95-4394-91ed-f4136db16563",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eed3a6ea-502d-47fb-81f6-468c49c27050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcb70b5-663f-45ff-8604-fc432ebacb66",
        "cursor": {
          "ref": "13d56acf-b8d2-466d-af63-04e5c5ba062d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e7c7c8f5-e577-4b76-8679-f1f1a828f225"
        },
        "item": {
          "id": "4dcb70b5-663f-45ff-8604-fc432ebacb66",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b6b93dc2-79d7-4a4f-b634-dce6e1b69e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4b67de-dfc8-4b4e-9f47-2815d7e9c312",
        "cursor": {
          "ref": "49e0f2cd-e3cb-428e-be5d-1ec449682079",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "749de4fd-1aa5-4fa1-9c58-9aebbb958cc1"
        },
        "item": {
          "id": "fc4b67de-dfc8-4b4e-9f47-2815d7e9c312",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f3848d0a-e625-44ae-b5ad-179d87686e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a808bd8-7217-4971-bf88-3659ef86169d",
        "cursor": {
          "ref": "530f2031-2ce6-4af4-ac3e-edf32ed84dbc",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "87a3a74a-c2e2-4787-9f07-d77734f6bbbe"
        },
        "item": {
          "id": "7a808bd8-7217-4971-bf88-3659ef86169d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d26face2-60c8-41d2-9c37-1d693be4e24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891f9a83-e697-4637-9a25-914d64defacd",
        "cursor": {
          "ref": "ed54fdd6-d436-4862-8a1d-75ebaf6e143b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "207daa4e-99dd-43fb-83bd-172b944efbd5"
        },
        "item": {
          "id": "891f9a83-e697-4637-9a25-914d64defacd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "323a7ffa-c6f2-439a-bece-cc487d11532a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caaba3f-cd79-430f-87d3-5bf837c914cd",
        "cursor": {
          "ref": "c0c3bb8d-0a36-4971-8e88-b0bc3eac21ea",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a61bfebd-fe1b-420a-a262-5ed8634f241f"
        },
        "item": {
          "id": "8caaba3f-cd79-430f-87d3-5bf837c914cd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "635e7be8-27e7-46c4-a432-49f6dd71a3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1891ec7-ddd3-4516-a6f5-a5657872b914",
        "cursor": {
          "ref": "13ad2dfc-c39c-4376-a62e-12f37913d0de",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b7f8c2c4-651d-4631-af77-1b48f9d1e232"
        },
        "item": {
          "id": "e1891ec7-ddd3-4516-a6f5-a5657872b914",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6b83c273-6ff2-4ee6-ac7c-b4865ff86421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cf5dc3-411c-429e-80a8-4962f2cfd37c",
        "cursor": {
          "ref": "c98870b9-973c-4376-a8f2-5d99f851d838",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "60d08df9-11bb-4c1b-b205-6e807dfbc00f"
        },
        "item": {
          "id": "54cf5dc3-411c-429e-80a8-4962f2cfd37c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "85a1b9bb-27ad-49fb-8644-81e1ddfaf36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83421a9-cd0c-439b-a88a-5778614c41df",
        "cursor": {
          "ref": "fa07ad67-3a6e-4f7c-b80b-b78f76d0a04e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "10776276-7e41-4588-96f9-44d0db23eedd"
        },
        "item": {
          "id": "c83421a9-cd0c-439b-a88a-5778614c41df",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f91bbae8-28e6-4487-b758-25c4a50f878d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823b75d5-866c-455b-91ae-d3e315e4f430",
        "cursor": {
          "ref": "b849f198-2672-4b3b-9286-00e72ff81bdd",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "15c7efeb-ee8f-4287-8ae5-078bb10dc3f9"
        },
        "item": {
          "id": "823b75d5-866c-455b-91ae-d3e315e4f430",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "85311ad8-ed85-4661-b79b-a5d1dfcbbd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bfbe15-a28a-4e5f-8cb0-8eaf031a7946",
        "cursor": {
          "ref": "53989475-3188-4917-8e80-200cb4c593df",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d6747eb9-ac6d-4811-8002-461456bf9678"
        },
        "item": {
          "id": "c2bfbe15-a28a-4e5f-8cb0-8eaf031a7946",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c56bf1cc-953e-4a51-a659-46743667e34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7b87a0-9a9f-448a-9ca9-34969b35e52f",
        "cursor": {
          "ref": "5f1bbcbf-3c25-4f7a-ab6f-73e37909bfed",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4a68c28c-4257-48d2-a3ee-0cb6028936bc"
        },
        "item": {
          "id": "4e7b87a0-9a9f-448a-9ca9-34969b35e52f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6902be49-53cd-4d43-9143-a1658d67f852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8841d9ca-b3b8-441c-abbc-9630b9d2cc3b",
        "cursor": {
          "ref": "7647ad30-d736-4b5d-aedd-8a27ec20ec7b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2db8c433-1851-41f7-b935-6bbbdde57cf6"
        },
        "item": {
          "id": "8841d9ca-b3b8-441c-abbc-9630b9d2cc3b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c2cc03e9-a32e-4cb0-916a-4f0d96b696b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80f86ab-6436-4987-8c84-947d4af9cd8a",
        "cursor": {
          "ref": "92a2d4ec-0aac-4c2e-87b3-7281205c9433",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b498634a-decf-4b85-b485-8da450d5aca8"
        },
        "item": {
          "id": "a80f86ab-6436-4987-8c84-947d4af9cd8a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3496bc39-fdc4-4ee6-a6c0-2c413cf3766e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58432a53-3d1d-4d60-a09c-6bfe6cccb626",
        "cursor": {
          "ref": "5315cd66-bfc6-4e61-8e9a-08d07efb4b86",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9ee429ce-e326-4af4-8368-4e32ec4c131e"
        },
        "item": {
          "id": "58432a53-3d1d-4d60-a09c-6bfe6cccb626",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "04f46fdb-1f75-4d9a-ac83-5fc4cbfff980",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d391ae7-db39-4742-ad85-55ded0f24393",
        "cursor": {
          "ref": "7bb2dc75-ca9e-48a0-bd80-94e517c8dfd6",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "494f6de1-8070-41a3-ba12-0e9795572a4e"
        },
        "item": {
          "id": "5d391ae7-db39-4742-ad85-55ded0f24393",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bccea8f4-1d5a-4ddc-832b-d2f051c5c112",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "37247f4d-ee05-4d4b-973e-53ef287a3330",
        "cursor": {
          "ref": "d34631ff-b342-46f3-8840-bbe6a1a506a9",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ab894e13-dcd1-4bb3-9a6c-6f55579534bf"
        },
        "item": {
          "id": "37247f4d-ee05-4d4b-973e-53ef287a3330",
          "name": "credentials_verify"
        },
        "response": {
          "id": "34bb1398-c198-4b44-8956-f7ba4c4ddd7d",
          "status": "OK",
          "code": 200,
          "responseTime": 8532,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9be22c0-3704-472c-9264-07ec7ccc7498",
        "cursor": {
          "ref": "99f56e4c-edbf-499c-bba2-18c29620b86e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ee082104-5074-4bbb-8dea-92c13d4e4b47"
        },
        "item": {
          "id": "d9be22c0-3704-472c-9264-07ec7ccc7498",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4b11644e-6d51-4c1c-9c65-5ee67f83fe1d",
          "status": "OK",
          "code": 200,
          "responseTime": 3629,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "774cc979-b07a-42c3-87b1-a7d019394ba9",
        "cursor": {
          "ref": "53a66e7a-4542-45be-851b-6f815f56ffcd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c0036aa4-bb02-4385-88ab-6107d7b81a75"
        },
        "item": {
          "id": "774cc979-b07a-42c3-87b1-a7d019394ba9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aefe3a69-2d82-4c15-82a7-fcf380e0350a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774cc979-b07a-42c3-87b1-a7d019394ba9",
        "cursor": {
          "ref": "53a66e7a-4542-45be-851b-6f815f56ffcd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c0036aa4-bb02-4385-88ab-6107d7b81a75"
        },
        "item": {
          "id": "774cc979-b07a-42c3-87b1-a7d019394ba9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aefe3a69-2d82-4c15-82a7-fcf380e0350a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f49108-1d4d-4521-b1ca-054f3bad90d3",
        "cursor": {
          "ref": "2be9eb38-5526-4b28-81e5-370e560714a3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "13ee14b3-cad0-4820-92a9-30a97ba75370"
        },
        "item": {
          "id": "b5f49108-1d4d-4521-b1ca-054f3bad90d3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4e4cf990-bc10-4e2d-897a-21ada904fed8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574f871c-c631-45de-b8d1-b9a1f1b2af9b",
        "cursor": {
          "ref": "a4bec506-fe5d-459d-8636-4d65a627eb68",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "36db7160-1def-42a5-b300-5c770177b0b1"
        },
        "item": {
          "id": "574f871c-c631-45de-b8d1-b9a1f1b2af9b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ffe86f62-aa36-49a3-91bc-756af792aef3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}