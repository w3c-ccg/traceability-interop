{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e2b74768-5dea-494d-85b8-74210d0488f3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6cf167ba-5952-45df-8d0e-a77769d27328",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d4fc2b0-2489-4244-9943-69701d214df9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1811611d-1ab2-4e04-a1a0-dc971f4e260c"
                }
              }
            ]
          },
          {
            "id": "1f5936b6-b13a-402d-b141-3dff3756652d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10f67460-9f2a-4ae7-bf91-4ef09fef8420",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1559bd5a-5bfc-4498-a5bc-026ddc6981e5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ce75e47a-c388-4197-bf40-15ca72aa2299",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9b08cdd3-60dd-4367-bc54-3863a8f9cce9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "105544f5-a6cb-4a02-8436-49694ec1caf4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b14275e-faf0-4753-803b-e200bd6c8a2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5f5f09a-8b64-46f1-b651-3d5244bf900c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e26403ae-482c-4bf6-b812-473850b273ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "212f3743-d068-411e-844b-f9a1856a7fd4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a570da5a-c680-491a-b87e-f22c38dc50f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc5ca56b-5cb0-4795-9818-8454909f90db"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93660782-9b0f-4fff-95a0-e32fd607b6ef",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8ec90ae3-8d03-4cf4-80f5-ae2379f011af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b85d1feb-0a86-4215-af8b-554afe137532",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8fb69ba-4e64-48eb-a05d-c7b74db3e5da"
            }
          }
        ]
      },
      {
        "id": "f4f46103-7763-459c-9b43-9a02e9fd7865",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "654e8ddf-a438-40fa-a3d3-b3b05167d2e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f2f86a4-636e-4e37-95b7-ea09af86a370",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d87eddfe-ee83-4bf9-a5fc-142289a025ba",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a1ab21-44f4-410b-997a-0b912d3744c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b6dacc1-474c-47fe-bd57-112b3757e339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af85e117-65d5-4041-9643-2fbbbfa77e46",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c042c358-0044-4826-b74c-8587db3d3213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffaec6eb-7555-456b-98c5-993708d8d3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881b15fe-eeff-4eb0-b69e-cd3174a3cdbd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515ee372-0b71-46b3-9d0d-bbcb84c09999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4543eb8-4aef-4f75-b661-3862df1608ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aca31454-3813-4407-a49b-3e919cf79864",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "072de715-546b-48c5-8d21-48eaa269709a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7686ddaf-4d8e-493c-9f7b-b8f7334b6fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6ac898a-a080-48b8-9277-1d3c1a6d5f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8759305f-3363-439c-bb41-61b10695004e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a01c2bd-ea80-4e26-9a3d-8abbe6da919c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4b432e87-c5e6-4064-a82d-38de2c434dc9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6583feca-e32a-4c5e-b51f-bebab713fa98",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cb06998-ecb4-4a01-8f0f-751a3ceee7e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cca253be-b00d-48e6-ab00-d5cb6db1058f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4cc6051-fa17-4183-a33e-d5129d0d600e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bd80fbea-0afa-4fb2-b6ac-63b6c64e97e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e329520-c9e6-419b-9c3b-85c1026d571c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b348e0b-0909-4f6c-8cdd-a63a367c1b14"
            }
          }
        ]
      },
      {
        "id": "0b17a57f-19d4-412f-b354-7d4be05928ae",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ac587e07-44ec-484d-af5f-01ad5f349b5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ade0a6a9-61e5-4bb0-8826-9aa1aef980e4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6c87aab7-8b77-4763-bc17-ddc32844a4af",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f34848-17c3-47f3-ac27-ab40f9fd2ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e80c0e-b357-4db3-8002-ccef19bf22b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f712f25-3b02-4a3d-9c4b-ed17de0c0760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "708785a6-9764-4bf1-8fb5-87412bf9602b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8e25c0-6015-4c2c-bac0-60fc4d8759ce",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ede43e-ecbe-4ad0-8ad8-6c2a5bc289be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19519b73-bf17-4368-8db5-659c56ad637f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd0fe38-e9cb-4902-9732-da65e698c25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e638c30-caf7-4ef1-bb0b-fe34d14c8121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f94f52-e804-4990-b9a6-18921a22de9d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23764f52-fc3b-445b-936f-6d7a9a5e894b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfe1f85-8599-4efb-aa1f-085e1776b242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075457c7-d29e-41d3-a0db-049caad9c326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "feb6456e-7639-4407-b6bd-99d146f9d0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedaa28a-19bb-42d6-a3fe-6fcaa3c77cff",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adec1562-1d36-4b7a-a76e-7f864d2a2036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05033220-6945-47b3-bc60-7779e1fc886e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9b6abf-56b8-4c9d-b6f5-4595117241a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86095cf9-78b9-4d94-bb41-dbcb76c78bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d71a86a-2f77-4dde-bdd8-71e4b22407cf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb975cd2-bad2-4248-87e5-533d6f12a8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320648d6-3d70-47e7-87bb-012be6331a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0eed0bf-8a28-4bb9-9694-4b42587a4174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4bee245-12e9-46ad-b350-dc99c5fe5267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e915b7-ee64-4cae-b622-e336ef91f3a7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d177dc8-70a7-4d9f-8398-ce87d4ca7a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52ef2dd-b89c-455b-bbdb-2146dd71ee07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cc1abb-5fb0-42c0-b574-e783ec97e42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69d664a3-9886-414f-8c39-bc83cecc4255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594ce344-7640-44a7-a470-f6679728aad1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f79068e-9b1e-4a18-aec9-613ead6bbf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f4e738-4681-4f7d-9773-0b0326653217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829aef5d-8978-4db0-9983-18d2f6e4f9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29ca9e05-c60f-4760-856c-1420c82f3fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3e73e6-b1e9-4c47-a2b5-267aa807afe9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e196b8dd-6ee6-44a5-b7fa-a03030b1c027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221a2fbd-64af-4e8b-98d8-f5e443380d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958ab491-b617-4c2f-aa25-1277b69adee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cad74207-8448-4ab5-b0d9-c98de9a304ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f061237a-8f8b-4548-823b-3656201e9788",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd44fd55-e370-4b45-ad8f-dd8e676fa683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfba0cd-b536-4d9e-ba5a-fea59caf7468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5fa221-6d8d-4f80-8a03-75a83fcfc10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7708bcf-6bcd-4694-b862-d7b756613a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee9c3e1-66e0-4682-a833-9cc4173cdba8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8326b0-a127-46e5-9e64-244d0e904a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0012f0-1141-4761-809c-64f38ce8c8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dfc31c-73da-46f3-9420-f74fdde26c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c8ba43e-e013-4a94-8c9a-aa461b5ccd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7414598d-a47f-42be-849a-0608d7a536da",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc6383a-df2f-4b2b-ac0f-ed45eb2636f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767c9ea7-11bf-44c3-94b2-b4483b0cb63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156d4fcd-fb85-4fbc-8ffb-acd7c1bfb78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f28e991-cce0-4779-9f5e-1533e04a1e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16daf2e-1d4a-4428-885e-f745c581a1df",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376761c1-cb28-4cee-a15d-00727d4ff311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4755eaa3-8b27-45f7-b99a-db58273b0df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153da881-6f00-4fa8-91ba-1002d72e8886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fe6056b-aec3-47f6-9976-9f38e2109575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0352eafe-fd52-4584-a99a-b969afde19f7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0aa9d8b-9eb3-45a5-9fac-95b46e6bf98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b838fc-a684-4a25-9c80-580d315f8ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e77793-7ed6-4928-a9d3-acc8d1930c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8cde5cd-9e49-46fb-90a4-7c43fb4f2ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a73714-e2a1-44b8-9359-37ebe49bc7d4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b1ed7a-6a0a-40eb-8a83-ebcd8fb0ebaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf5c4ab-e6c3-4deb-b32e-bcac0401254b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c51874d-7bf5-4edc-a2ae-8d02fba9baab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba566ca7-62ad-4d41-bf43-8790b057dfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c15fb08-e22b-4b5a-9e6e-d59c303132c3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af113d4-11fe-44a2-839f-88a6f4ac6df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6087e596-dac8-40f7-8523-155744125e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66496045-a41f-4caf-9cd2-1dab85b23ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c97e4c37-0910-4673-9df4-f6f2788bd3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d1eb62-8986-4558-bffa-02affb50b6f4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8274c9-5794-4ed1-b1fb-2c6131160b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c9c970-5dc8-4e35-bc94-4d1005946585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fc0359-e21d-4317-9ea3-d614c2183e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ec5754e-78e9-46f4-a20e-b2a3d25ae990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d8b48c-2f2b-4862-a232-4657cea0d8f5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d6bdbf-3617-40c7-afb4-d070b41663a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a19b74-679f-407a-99bf-821f35cf2926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aae7944-8204-4720-a6c3-7bd8a043ccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cd70877-143c-4ed0-9370-8b970beae3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8767940-2c5a-4719-b59f-999ce12562ef",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b5f959-e3c2-4180-b37a-da28f3a88e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14791147-2589-432e-99cc-f229f038243c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d133dde8-9057-468e-a383-dd82111aba69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "143b6aff-ac1d-492f-afaa-e22d82139539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e13fdf-499a-4292-86a6-17d594db76a8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0b88bf-65b9-450d-9885-92772ffe3d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ec5d00-7913-4158-9077-3475494863bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6db98f-c9e6-4132-b380-23f5a726b4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a628980-84c1-4496-bf5d-31dd26bd57b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3476f9e3-bd9a-4928-9847-a26693ae4743",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581e6f9e-edd3-4b09-9b22-eabe3f2abcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acc09c9-64eb-400e-b88c-721be09673e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d4703d-c6d7-4a57-bb72-112d45820ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06bb326f-be09-42f3-8f1b-34a44509477c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06bd5bc-a8a1-469e-9944-5078cf9246fa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c834d689-ef07-4278-8f4e-5f8473bdc369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d231498c-5188-498f-bcbf-0b95a75f5bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52e6f7f-f1c8-4f88-b5a5-25d53a132677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "844883b2-e06c-4b77-952d-170698e1de31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73461e4a-cbdf-4e52-adc8-db6d5d9de5bd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb7f891-82c3-4568-8cfc-17345e685dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa961d2-b8a2-4909-85f5-7b3554572ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ff25fa-f48b-47bb-8b20-1a3ff5c613f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac10c35-d699-4da9-8906-3a7af1022283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2317c57d-e015-4f15-87a2-08c96c72a987",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2334426a-a372-47c9-884d-06162aab9a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cab6e55-05dc-4901-a7f9-587891de5418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f0e32b-0a8b-4e7e-b0e4-7d4ed171cc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5979a7-bede-4e02-9e95-2572703fc5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fa7309-54f1-4c28-9098-cd5a91c2a1a6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f50209-0391-4e52-9660-ae66a4b487e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d422f69-457f-4b4b-a209-62cbd39cd411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391338a8-54bf-49fd-8774-f355ce07b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a9fa64-effd-48f6-936f-1a086ab207e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fddb8b2-199c-48a5-8d3d-3156c9b58beb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386cbe96-7703-4ab4-bb57-5db11c380875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a9956b-0850-46e6-ba89-1854f01a70a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44384a8-85d3-4338-9695-2fa59bce2ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cba48bc-dcb9-4a2d-a1c4-61be57cd9d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d41702-af8c-4d19-98fc-114c291b1ab9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b46ab2-089d-4d62-82aa-d5d86f5bf823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf87cb23-bc7d-4cfc-bf39-3965f913db74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c47c0c4-f0f0-4db4-9f9d-0be80239cf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b893f8a-33e4-4a0c-b03c-88c066f0b87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7b3abf-e3ff-48f7-8852-109141070bd3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310f8504-5288-42cc-92c9-437955373f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a8dd8c-1ae8-49e6-94a6-0a4c1132190c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffd51b4-7a81-4b57-acf1-74e7dcc54582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a76bff-dc37-4b65-ac20-8d914062f449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436c99e1-c19e-4647-afbc-a2ddda4bae0a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b27112-99a6-4c07-863b-dace9860d293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ba9c18-6596-4612-bf74-40927402a689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b0c381-019d-4be5-b7b9-d721fbbd9350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9770dc-e710-424f-b61b-60af58f91746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eddc16d-c039-405a-9588-98f146f5bdcc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da08c06f-2541-4033-9b98-522f62c54670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0655c06-8ec5-4772-a7b4-0fce00d92d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32273c24-2000-47ef-9ae1-0ff8e022309f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98c70901-8c74-4e3f-ba3c-cf6bae1a081c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87c9563-16bf-4406-aacd-10a34a546c3c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502c3305-b51b-4bf9-9cc6-28d5afeffef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26a51f7-052c-436d-86ae-b5bc74f018c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28a2df8-c3b8-4ae2-af49-17d0efad039a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c227a21-0ddd-4c09-908d-67323054cd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c6b8ac-df7b-4f96-bc54-9f4cb8fcf579",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e2f806-6cf1-4b26-9927-31f1f7a6a396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a964fcd2-56cd-4ec8-bdb2-724df7f5d3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ff881a-09d6-424f-9886-2367712ce3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32363bb-41c9-4537-97ba-f74f5dad01a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbf5373-0072-4138-aec1-b76e41a23df1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b244340-2d58-4ca5-ada3-7c544317f7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6a56c3-8e82-4784-822e-48526f075424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77f5307-29a4-4df8-9fb6-452fe1c8ff8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e10dc4d9-ce2a-4721-b52b-e27bf28cad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb928190-3f26-404a-b5b1-c3b5ea503351",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76cf841-230a-49b7-aef6-ded3e87cb022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7e79e9-1888-4f7c-97ad-c74640e777a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d451873-5cc9-4ae9-ac37-bdca77d0820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ee53d4-7cba-40c4-a06e-9ad1c7c18c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed79b236-cd20-49d1-bf69-c303b54ad1d6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb201de9-511e-41fa-b5e3-d9c0c8cfae62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69d721e-81bc-446e-9e32-6467f645d809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0fe7ed-0e01-4b70-8cdd-859fd9754ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8516e144-e0fb-464b-a4a8-4d6dd7cd6ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3575155-781b-4c7c-adc1-134bdd549f99",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a108bcbd-8918-4966-836f-409baadc2fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be726143-5cce-4d86-bfaf-cd621c8b59da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5055f7ca-eb7a-4ed4-b9be-4b67432e34d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb4aecf-7cfe-4398-9ea8-4556dd2939cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c56fcf-8ac1-42aa-9480-e5e604e67f2d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59736fb-acb5-4859-9ba0-5198d50f5226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32f7df8b-9ebe-4002-b6fd-63e5fde11551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955865d6-b851-4da1-8364-6f169eebe4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a76688d0-3ec8-440c-94b8-1ea73b379edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3d3851-1013-4dca-b0d4-6cb2ea5714c1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432b0bae-3a34-4588-82a8-ae7578d58c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7a1542-1092-4b31-b15e-957eaa36fbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe25e8ee-1d1a-491c-9816-de0c64ee5a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa437a3-345f-43a4-870b-57e5be51cad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0265e654-9ca3-4af9-97d7-3c877e4a00ee",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300ba067-e009-4dcf-ad36-7740bc35868e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0113ea2c-b52c-41d7-b92f-4b808b777ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50345060-691f-4685-a53c-f56c96c2f497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68e21514-067d-4552-a81d-3c3474f80fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee60b15-654e-40e8-a75c-5b1eab19e355",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2b4639-1175-48c2-8575-ad2ad5f278a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e55f52a-c3db-4261-a88b-9eafec5da7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dd3d30-3fb5-42cb-8e3c-881626e5aabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1db0c18d-9ea7-42d9-a852-096241e26e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878ef631-3973-4b03-b44d-6af6bb100780",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e1290a-735a-4c16-90cd-bcdd8ae33d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62357598-5a5e-4ba0-a946-fff5a973217a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8842a4f-8681-4a86-a4f3-5de01aa0dbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "761d2ab9-b263-4b5f-9363-adce63e3ce6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b159c1-d7d8-448e-bf86-9e9a3feaea63",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc77dcfa-ca62-4356-90e6-ab7b8c69e35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80eef08-02c7-44f1-9fa8-f745941f1328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088c5eba-4e2b-4248-bf6e-a1c0c702a06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2234c265-6b91-4d38-870a-404b72d6835a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c631c9cb-e5df-44cc-a93b-823ced125a42",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36cc4aa-a92c-48a2-b37a-88be969e020e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79edd84-7a59-4395-824e-032a0a11e0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2994d0c-ea92-42df-bcfa-80fec5d104dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf30e82-d1ce-4e45-b38f-d4ce23f2c7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df9fa05-6745-40a3-bacc-4c3d2e05d5c7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b9c7c1-2750-4aba-983f-ab168f14fac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1681e6f6-eb8f-4d20-a55c-fbb57af8b1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241a636a-dd94-4c20-89e8-51e2ea7e7065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec9905c-33c2-4960-9ffa-6b48e6a85ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4a7f2b-1b32-468c-a621-7bbbd37319f6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a8285e-f724-481d-9b21-16fbf4e69955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a8c1ae-2c6f-4c7f-9d00-53fb5d2127a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f144dc-f895-4311-82d0-a98c31f5bd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a82f6671-1729-4387-8556-0eb69f8a2bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12356c5b-53f6-47fb-b438-cb604fd5d95d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7443bd0c-cea3-4b81-8107-c601827ae923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b99a6f-0ac3-478f-bdc9-a69f5b494e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781354e6-ea46-42bd-94ad-271964ca9af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3b23f4-f66b-41f0-a5d5-bbcef60019b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a86ffb5-39ac-4c99-b280-179916533bc0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fab7aa-fab0-4691-ac57-30cf6d093aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13385159-6b2f-46ef-bb62-648b3bacd969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e42a28e-6d24-46a3-b768-2a50560da77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "266831ff-395c-463f-b1e8-75d1fe09e90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fc7302-c801-47fa-af80-241dc5d0697f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dc6948-9350-476c-b5eb-d63c15796375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5497426f-05d3-4099-8fdd-522c3216650d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f619b278-4572-4775-a6ee-cfaef63a6032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c988036c-64bc-4336-8164-f83d3b1a6704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bc80fe-f7ff-4ee3-b556-e817729e5c56",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ec4e22-1a9d-48c2-b505-cb84055a5740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1299ca-06d8-4ce7-b995-19db33618070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce175d3-7661-49ec-a708-87ba70c9645c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf8db6a-e7ac-4361-a4cf-bede5a91b3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270ad5e4-93e6-42d4-804d-ab4369b3eb66",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f1c5cc-7125-4a8a-a901-21a13c9990f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5603b751-e626-4f11-8819-6bc104deb521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511f6ebc-2d8c-4bb7-8bf9-c1183bab4307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20656590-c760-4ca5-a451-c98d771cd65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcfb781-f4f2-4ec4-afc0-ac0ce0a432d0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43359e76-0221-4947-a790-11e4eb0dacb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d883648-27b7-4daa-822a-944a3844949f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b163f5d4-61c1-4474-b8f4-bfb14edddd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8af2bfbb-e54c-4b03-974b-288c59661d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5280285a-7758-42c2-a834-3b6b0af68b7c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8e3ee7-59af-40a9-876f-0f163870bbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa2ea86-fc9a-423b-bed6-568136e73238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6387fa4d-456a-4cc6-9cf6-ebfcee433fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "858eb88a-c114-4a7c-89ef-183d777a1b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4072b077-cc74-46e4-8028-a13462011327",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78591c86-e4ed-4c19-934b-8a3148da7a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccc40bc-f5be-45dc-a01f-60216f7f7f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f3efd9-b5ad-4ca8-b2ad-e6220851aece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb542f24-b0e6-453a-a03c-7cacfb692d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293885b1-4a53-4387-990f-162fe775355f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87822feb-140a-4588-bf73-7dba4f7e56e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9b4abd-f92f-4086-8115-a230596e264e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7a74de-d004-4745-83be-f365a3138323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccbfdd1-b1f7-4a3c-b65a-5279065ccd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2461b656-6ae1-429a-8d62-81b6588a7869",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ef146f-485f-4395-bd36-f8341785d6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278ccad2-e8f6-4a34-bdf6-cb704ad4bf60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c662d9-1e42-4220-a835-59ef76411199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff808b91-0527-484b-af11-3c779bf26a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c9a3ad-ae88-424c-bae1-acfd49e37276",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18928dd7-bf9d-4b8d-80b3-faddadce7d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ba3c83-3d03-4fb1-be8d-2982a52ada9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d1f922-7650-4090-afb4-2233d798909c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "948996db-2aeb-47db-9ed2-52cac2efa673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1de9778-dae7-4c1b-a204-005bcda46ad1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9dc7f6-0de8-4853-847c-d42858a48a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f37d3e-3307-4fb3-a7fc-9e04a5d9dec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c6873b-e8b8-480b-a85b-3c2a922ea24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e538839f-7e30-418d-8cbf-2418c88dec74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1554361b-4661-4b27-b8b0-1211a87ad5f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f73922-9ffa-4811-a9b3-919719b9d037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad2d120-e5e1-4871-b2b5-b5267431bed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea1abd7-6c5f-4c68-a27f-d496a5ab571e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f9b8b8-c293-47a4-9c45-26a81f227281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ec4622-98a4-436a-ba05-19e8fd43bce8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ac6452-64ce-428e-84e7-e6747a240240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb4c8ab-b5e2-4649-8773-6309159a6561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2ff0d9-9aa9-4b54-9014-052e45c3c8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5d2ef7-4ea7-4136-8b85-752bbe997992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f9a1b7-e5b1-43cf-9151-500396242361",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d86425-31c7-4cb4-b335-5a433bd2bd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a8b15f-cb68-45ea-8d41-a6cd442906fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b3e4ef-19d9-43ae-9dc8-d95362239ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e17440b1-6d2e-4e14-a5ca-0005f70d7781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee79744-7e67-4fa3-9ccf-d762af6e41b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e3e6ed-4bda-40e8-af1f-7d925a7ddff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d4841b-7097-4411-9513-921b115b177b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f22cf0-53f8-48aa-a1bc-f6e29119360a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f68a90-e393-47d9-ac5d-faa66ec77e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e9332b-4ff1-48a7-b727-a512f1443cd3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3132920-6852-49bb-88f1-72838e107de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b03979d-0520-4023-ae5b-1e26e021aea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722bfec7-28c1-49d5-9c70-ce5d1d9499b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "75dc9385-dda8-4209-8be0-180f591fedb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19aac451-e20d-4327-9681-a7d17bfaa585",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d372e80-f277-479c-a18a-c73ad49c343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdd346a-8718-4c40-a47d-9f2f6d0f751e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e540b0-24ff-4081-a009-eda2dd4ebc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "97db7f1a-0bb8-4e86-a39b-717d23b3f108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d1c234-df7a-45b8-ad88-3d28d9554e88",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e1648d-fe4c-48f6-b98e-f6624625ec22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee219581-37cd-4c44-9c4b-cf423ae7db7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a763d57-1925-4cef-aadc-e0f4d4ae27e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa575d2-4621-4fe0-8087-ada37d74115f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a04506b-611d-4608-a731-17defece30ad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42166bae-75f5-40bf-be32-0e1001d70866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c281f6d-0376-4eb8-b750-3c4885ee01c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548d2094-4f1d-42b4-8f67-ac13b18b76c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "012950ce-9ef3-4446-b161-934da01c2b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b3bc90-65e2-4edb-9390-85e7df46eb7a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62f85f6-ab75-4318-93aa-fa65b093bf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84e52f6-5149-4cea-8554-dc2f57c1c795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfa29c0-601b-4be5-b111-8d7d2a25353e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5ad5d0-49f3-484d-963a-3730b985f4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d385cf-628d-48c8-a739-0fc5682fa86f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937bb311-9d74-4949-8ff0-be26e44c4546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6b111c-df6f-4e6b-8dc6-399bc54bec02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b50d854-9c12-4cb1-8e98-a2291c398d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c24e7173-24fa-4202-b4e2-e270911ebf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e06e748-ba91-4983-a50e-66a39196784e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5c2d42-b58d-4feb-aecf-a0cb6c9de992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0509c7-e5fa-417f-a7cd-e66418138a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f049d11e-dda0-459c-a241-d473faf8748b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a02babcb-2edc-4bd3-ba25-f66d583d0c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52de4440-8259-422d-ab80-5a9486b3eb65",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e514c82-5368-45c3-99ff-414a103eab83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253a3bfc-54c4-4d9e-af5b-a0a6f0893f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba13bb8b-fa72-4146-92bb-19de9ec1beb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c409b90d-e84a-49e8-881b-8cbbc83227f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71b92e9-b888-4b2b-bc5e-2df6256b82fa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e614bf-80e6-46d1-b576-66a28733678b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd25bc43-5de0-4734-b678-756d17f04965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e61765a-9d70-4853-8e15-e00008dc1498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1961c2b7-8e0e-4e36-a9cc-f52f7872d76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72115daa-987b-4de1-ada6-be5ef0e71b44",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca7b916-0f27-4df4-9e1f-52b8aa2308ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3f5ef0-0dea-4b50-a5bf-040d105abfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b29918-8232-4b6c-bb8b-3c66053811e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66929277-121d-469f-804d-8113a06dac81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88979641-9487-4895-a9ee-5c53ff60b539",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2410f0-d861-4f62-93dc-ce0d8e5dce5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5eb43aa-2c68-4dd1-8099-a9b9c9bc3edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccc4e48-02f6-41a1-b478-298efd4434c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e695dc0f-7117-4ba8-89b8-ece655cddbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c41f95e-c1d3-404e-8d81-651155af4bfb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1b090a-fdd6-4080-8824-b9e3982ea12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c29429e-55b1-43b6-be84-4ad44effbc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2b1370-ef65-4e6f-a1d3-2bfc0e419ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "929f4417-fad2-48af-b09e-d88dabf5cd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cca1e5-a797-4e46-b65c-22c972ecdd97",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f4cc8d-dd70-4ccf-91ac-897e7fb6c000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a9bcee-3797-43a2-b26f-e234eb0b7a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221a3874-f504-4cd7-a7f7-ff1411c07ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97eaea84-662b-43dc-88b4-6884af0d5b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7932e1-4cb2-4790-961c-365a49599c1b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3c7ddc-c95a-4bdb-b7ad-8d60fe95a3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f763f426-f186-404d-96b6-50864622d9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c154ffb-d1bc-417b-bf2d-3ceb6cddaa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aab2a4b4-0fdb-4502-9c8b-c8eacd770840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e389c77b-5d1e-461a-b350-0109f853b54b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22de2af-1ac6-4899-9042-9eab3e5777b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee34c4f7-340c-454c-bc7c-8405f0224793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38d7625-cbe6-4851-a470-65bb7d90664c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "790b8a92-240d-453a-95b1-9ce396d1afec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9e4d8b-3fb5-444e-acb8-74736371e7b9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69df7192-cbaf-493c-bf00-adef883066cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bb9488-68ef-4f73-b59a-9fe41d5b65ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aafaf82-bf25-4726-844a-c649913890a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34367fb3-640d-40ce-aa40-14a0a0d9596f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29b7b3c-f245-4f20-893a-1135eae1f18a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7826bc-d878-4c81-8d9d-a7752e5f494b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d08b054-c691-4781-86af-d8d694772284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d0bc62-636d-4087-ac04-797e57f58e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5427c0-1033-40bb-9ab7-909f2709b514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4005d64-d73b-4412-973d-8552b70af069",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9ca7a4-b1e3-450e-8d9b-265bf6fcb685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39c85bd-8003-4b3d-9248-43ed8e9effc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89313a10-9746-48d2-8fa1-5cf1bed232e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99184e00-d428-436b-a390-82902604e6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53888879-122e-411f-99fb-22b5851dfd23",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4a5387-407b-4256-8903-72c151843b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcca692e-363f-4408-971f-5f56e1ac64c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b1551b-e4d9-4c66-816b-27973e4b7585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f13df2e-8bf4-4ee6-9a82-a5b41ff3f33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b71bb2-e955-48b8-8411-798471407a4b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8511203-8546-4283-9c42-61af49390fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152232ab-7df4-4b84-83dd-3c06b9fe0d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb28b17-615b-4287-9911-5387a675f48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1633059-cd3b-4821-87dd-fdab5a9c1b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8092a4-d2d8-47a5-92a8-e702cdce3a8e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebab1a4-2cbb-4360-81ec-fb6c3530c9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a437bf36-f319-4550-8c92-b1d0d2bbbba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c872a1-06bd-495f-a1ab-6e700d349cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e5f6f0-67d6-4534-8776-825e317b7a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6e0b09-1d55-42c7-800d-cc556dd95eac",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe0891b-9ec7-41aa-b1ea-916e6c10fd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34ca5f6-ab58-41e2-9c34-85e59227fba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c894b00-4ca0-4e01-acb3-461b38d27263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f49e957f-9764-48cb-8564-c9e7b0dc6ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3e004c-b6f6-4b36-87c5-83ff59895686",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0f175c-f0f8-4c95-b0f7-8c657e10ebad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba66cfa7-4e93-4971-bc0c-c8253fc3fb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98b4180-e6b6-4ba5-8a2a-63595d24359b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef884b4-7bc1-4ba4-940f-55b6ec2f106e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecebab4d-0a46-4009-9247-2ba4961db573",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a070e34c-2b01-4da0-ab54-12499fb963f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec192841-68fc-4876-a6fe-dd2c763dcfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcd56fb-87e3-43d9-9149-3f61c9c3ce3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2db6f582-da28-41a4-b815-f4ce1faf9bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658b8641-c5aa-40b6-a019-2eba1789cd7c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dfabe9-7a1c-494d-a597-58fffbc8e8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5152dd92-0876-48ad-9981-34845e2b19dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06809af4-1e35-4bd3-a3d4-3d0fc2659116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b34497bb-63c0-4c11-9f4b-4cd6567c2e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d81e970-5f94-49d1-9bfa-b35775340e6c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27dd477-dbde-4c4a-86bc-3630dac260c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2041cf-2927-4a1d-ae36-dfbe3cc68cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c513f89-46fd-49ff-8bdb-e6cbae15b835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "01a2d666-b6b8-4e4e-84d3-e4f787f5b56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f7ddc2-f652-495b-b216-adc7a61d15d6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016efe74-01a5-4304-808f-588b8d53b51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce82edb-7302-4de4-b443-51f5c5d3e146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac6c3b7-6936-45b9-ba18-6dd92541934c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20275c8e-eb4f-4e02-be69-b8736ba7f3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2308bb-ff93-4b2a-90e4-18e72f7f2bc8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a467ebbc-d034-41a4-a99e-7b68ad7af218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da84287f-9220-42a0-9c7c-62ffdb4331d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cd9d3e-229e-4ad0-bca3-85d9072a9b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e95da6ac-d550-4faf-8a11-b8b9ce876847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7257d0a5-8be4-444f-a2b4-3847b7db9e69",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfa4ed1-8bb2-4b43-844a-f22fc3f73592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d4cd89-802c-478b-aea0-e1e78369c048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a33072-5ad7-4271-ae23-325ea35c3bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "480a31be-45cb-4709-8337-283731fbd4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c58832-78cb-4753-bbb5-71d34a8e0f8a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a48f1c-120e-4500-8037-ff6d4bc35d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3773b3ea-f9a7-4235-a453-cefcb83497b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ac448f-ff25-4a54-9805-72e523c5fbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ba7c7f-7fc4-454f-8645-fed24109aa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb445a5-b0cd-4218-9b42-2f6f44c9e8fa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4220dc-4f31-42fc-9355-ea58687298bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6973121a-e074-4c20-a02a-e3241f56f755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8336654d-5583-4b2f-8f35-b8eb60dda078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c865cdf-f20a-4515-a694-6e2262d00323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979bd505-8b73-44c8-a331-c8f02e929ba5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fe3c3c-53ec-4592-a61a-d45640081918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6011916c-435e-4f96-9ef1-7f05abd1ac97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cfa4c2-e20f-4a79-94bf-8c07d20f9e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "66007502-ea07-4fb5-8c5b-dfbdb123b7b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c77c03ec-01bc-4ad4-92af-bce32988f1e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "669d1a31-ba0c-4a73-abd1-a3f32642e528",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861d407f-37d8-46b4-9905-75c771f3cf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2baf7b4-9fb8-4b7d-a879-786aab5f7c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f38dc3b-dd0a-49ae-a61d-5a8025b2ed2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "803eb85d-178b-4ce4-aab4-deb08826a7fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf24652a-5db2-4a6e-8595-1b67986ab13f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7680078a-cbb7-4437-83eb-653a84dc6b71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4309277-1caf-49f5-8d57-807175eee585",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7678152-e91f-4276-a891-64f3e6c093ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7134178-87b6-4831-9cc7-6fef1ba0f6c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62640471-1942-49b2-ac07-260bc89d477e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1dc229e-1b98-43a1-93fb-65e865544c51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b2b5227-62ca-462e-adf7-3b274d83b93b"
                }
              }
            ]
          },
          {
            "id": "10d446dc-b003-4718-9a04-a662df190b79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33ecea44-d524-492f-9ecb-89c14c349e70",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "26271051-2f70-4cc2-8e75-609b869e08fd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b54adff-e5bc-464e-bec0-2e1006d964c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "caa3f320-95b6-4f7e-aa05-0cb893759796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f10670-4883-4776-b0bc-08e527bea8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81443a97-f5b4-4690-bf25-47f1e473bf0c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c027cfc7-7f05-409c-a283-6c821a5d1bf9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f19bf021-9860-489a-a502-aab959da85b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d971ede-fb40-48e7-8306-8c7ca5e20fa4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5080801b-e367-4c84-94bf-edcb34b63399",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43348e38-0aba-42bd-83da-3c1b60e2c061"
                    }
                  }
                ]
              },
              {
                "id": "0bd5ef12-195d-4aeb-be25-0eedd463585b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f078402-d85a-4505-989a-3fecd98cc09b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26b3b221-c7a5-4265-9e56-11c05d9d03e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f088edf9-43bf-47cf-bd19-21eddf47d483",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cda9a36a-b64d-43e7-b831-d93065c93ff1"
                    }
                  }
                ]
              },
              {
                "id": "53d83e65-a71c-46ff-9b9a-5081190e14ac",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ad3a420-e868-47dd-a979-bbbea0d252c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9328e74a-8f33-4f92-91d0-c48d73d901df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6be62ae0-28ec-4485-8ab5-2c487f29de00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "17eb77e8-2e61-41b3-a264-62bc10460aa9"
                    }
                  }
                ]
              },
              {
                "id": "576cd94b-19e4-41a0-93ad-2b77bb8edf12",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f75e5b5-8a7f-4929-a7a1-93058e712c46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d12945c-78b8-4143-a3e7-06d556c0d2e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ad969e2-f44a-43b1-8333-3926ac80b1f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4d047ec0-ce0c-4066-a3af-b9c37b87d230"
                    }
                  }
                ]
              },
              {
                "id": "e54d87f0-8ac4-4425-b0ba-9b0a6ec6b786",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c88f7ab-6989-4086-b873-3f993a39b4bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93622596-0334-4736-987d-fcf23a7e06fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e265a037-8f89-4b1f-859e-a90083345971",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3baca925-f2a3-417f-8156-e00dbc62b438"
                    }
                  }
                ]
              },
              {
                "id": "78b0eeee-5117-49e8-a7bc-0633af5fc5ef",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f3f8710-457c-414e-9236-ea70792867ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "256b247f-15a2-4601-8441-9dafd51e81c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "007a3145-a52d-4e98-a930-ec053813c81b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a87eee5f-4324-454a-a5d2-cc5955ec2c70"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29e5d1e4-d3a4-40fb-9d52-d669a1b5e8d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "663df074-6087-4dcf-b434-3960b0edcab7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0aa56e7-3d8f-474f-9194-11bb4639f254",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1cf52b1e-e120-41e2-900a-29478492844f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10ab7419-fa55-4054-86a6-b46e9680ef9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0488457d-6c2c-47ce-b2f4-ed371a9cf69c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26171fcd-f222-4850-8062-48d245b97906",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4e7c074-73db-4496-b869-87f0eb112ab4"
            }
          }
        ]
      },
      {
        "id": "041a32e4-9c31-4e2d-aba4-afcaf9b369b6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cb7a7855-c13b-40de-94a5-5b5cf17e594b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d1a59a6-b23f-4c5c-a7f6-8fd853233b42",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aeeab020-025f-4c43-ac18-fe827952e3b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f10e9f-52fa-4c25-a257-3446c02ea36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1c845f-1875-402b-9afe-0d4be02f09bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca5578a-1459-4f9e-acd8-92ef1adb9445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "765695d0-4e13-4262-a54a-74b11890b7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95cad6d-acc3-4a17-86dd-1923765b0b90",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec90fca-c055-4b4a-8f37-45c3d350cee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57a5a76-8b78-4dc4-85c6-06cf7f9e1346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b984cf5-bd36-4c03-b46f-a385a9add4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff8fad4-ace4-4a21-9345-eff9dda520ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53789940-e9f2-4bd3-9b9a-d9eeaffa4d55",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bcfc44-feaf-4f23-ab84-a543cfe4fe51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e41c7c1-901f-424b-832e-d861da4e0947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e070d8-dd99-4cbd-aa85-06eab586f1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b15e6e-4cb8-482a-be1e-3d4f73f9f9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6028b253-7297-41c9-835b-25114d36a44e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d175a0c3-6891-4db3-b7a1-ad563fe960f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289d4762-968f-4700-81ee-c9633c42dabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb799c5-6e4a-4778-b09f-83ce8cece840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da29741-79ba-4e48-8694-48aa6f1b6e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b6defc-8b77-4a94-a3ca-aefa319bc159",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0036cc-5b78-455d-886c-9f9e29610930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651feb90-a9e2-454b-9188-804f2fab90d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8624d718-4113-4c05-8c16-2c89fbfd5d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed0fda5-1e89-49fb-b145-4992f45a2557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb14eed7-a146-4afe-a484-bd4fbecd0cb8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71df6e1e-537d-40cd-ad76-c3c5f837b349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d01c6e1-fa9f-4c22-b450-551db643792b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483ba858-3690-4d71-985c-c7da0def8cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5138b4b6-14b2-47bb-990f-01a348c561c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd677170-34a0-4927-a53f-edb42d92869f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1acf13-c52b-414c-8325-eb80cfeeb974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93aecb0d-4e5a-4a72-bc3d-99dc5a63ae14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d988aa09-7bcf-4d63-b725-3c573f9c95be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a78a17d-8af2-4033-b65f-618a4c8a23ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bf1a9f-f7ba-464b-9692-c05da2ec02a7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5248e0e1-c0bf-4464-8a5f-9ad3b1194774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa428582-7ba0-418d-87d0-9e32c1e4fc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d604ebdb-3d9f-44d1-8118-793741f6817a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2de3ed0-a1dd-4f96-a03a-86d6e41ffd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2970f583-2578-42c7-b03b-df6e394109ee",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ef9a25-9db5-4f5a-9783-b8922762dc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb0ae19-79c6-424f-b268-504c7b92b39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11beae31-881d-4cef-bdeb-533098d6afe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c467806-effe-4043-904e-752479247b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042b87bb-a05d-4784-9792-1e2017bb6b60",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8759986-108b-43a5-bd85-9c42fe82601f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d37447a-81ab-48b5-a0aa-0642fb0eb05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756ca502-ea99-47b5-a074-a8118b75091b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1433bd74-2a0b-4a3c-a093-4bda7d43b973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e51df72-bb51-4173-9b2e-30d028582fe3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139905c5-95dc-4945-ae1e-db3005d7a122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b497a12-66f1-4156-a564-2b508c1f97c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17caa63c-8dde-4421-b58a-dbe4f670324b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1b546256-66c0-457d-9017-0be59e538ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36a1dd4-2510-4fb4-bd30-347c18268487",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79519fad-078b-4213-8101-ade628882ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0e09df-6ecc-4615-8964-306eaa321ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39321897-b059-4fef-8f84-b9d2a09ed13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aaef0c46-6977-49c9-9882-f79be28ee8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7aa4a5e-7490-4e46-97b0-07b7ae64f0d9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81c8600-d83c-4add-b54a-28b8cb0108cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff997ec-9136-4fc3-97bc-ceba5a92085d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d257990b-abc4-4aa6-80d0-5a0baf6c6bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd4b49a-815a-4617-9181-9c2b317c6b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b391659-45e7-4b17-8795-ad5cd10220ac",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f714d5f2-b54b-403b-91c0-3492ef909cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e8f634-9baf-41d8-a951-7bed069f8cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cbaa91-dbb5-42cf-a4b6-b2b2fa09b9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f925ad5c-7aa6-46ae-9518-c31dfa884c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e98092c-4142-4b5a-a94a-1f13b52de950",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e7e7e4-6801-41c9-af7e-dc8ab940e25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c54489-cb1f-4573-abcd-a84649b0300e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86915920-db28-45ec-a893-8be6f7893837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f616b66-28ee-4b05-ac6e-b5a9338e4683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e60899-3aa1-4bfc-b9c6-2ec6059cf9dd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72844493-c8a0-4daa-be65-790488366916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc46ffb-d7a3-47bd-98ec-08f3e08cb33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed260c9-60f9-4b76-b87e-170f276e106d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "638a58f8-cecb-4362-9e76-b7cad4281ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d06d1c-c3f8-4662-8767-1420641454d5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb7dd03-ece9-44fe-895e-c1d4eafdc383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfe1af0-bdcb-4f4b-8e4b-880f013b6aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443c119e-87b2-4846-9e33-26dc0d75bcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a658106e-e43a-4fd1-b717-3010bb8875df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c861862e-befd-4a5b-899b-8200cdfc9370",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48990488-e29b-463d-8db0-e61ed14e4f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e820d1cc-914c-42d8-ae65-10c048666a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a129284-1740-42d5-b45a-e7ad5bca2277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5762e722-219e-44e2-ac19-9edbf36c97d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752a6e61-e6f4-45a6-bea9-ed0801be3914",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c54096a-4745-46ec-b18d-47d736628c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6df507-13c1-439d-980e-3a34a3dacd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60346de9-2c68-42d3-b6b6-55f54a7f50b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69d279fb-0395-40cf-844b-8efe84795563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f040013c-fb09-486c-ac2d-097bf39d7e23",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e533963b-00cf-4c99-a543-719b484a2bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbe4d4d-31b9-4ab9-857f-ee04e3ec5442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f216b46-c531-4359-b670-d511a1b39e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3639ab6-e197-4ff6-9dd5-b45f9b5bc634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe2ce0f-1728-4fe1-b925-4955944b7940",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd99636-775b-4955-bcf4-97b55ec7366f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcdc782-f7bf-47ab-9c13-98a959aa2d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39ee94c-088e-48e6-b0b3-032d2e7923ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "044b0e41-ee55-4a25-ab09-72c868d20ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f543d32-bd98-4eb1-944d-fb71d2c1e370",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0034bdfd-1ad4-4f9b-8733-a71fccb8ba47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8bf755-9f3b-4a2c-a927-04621f3fb679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bd56fa-c71a-48f0-882f-10b47356025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "168375b7-d13e-4395-b847-a9e9516f1a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb19624-6d54-422d-80c1-61b904acc595",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d07d34-46d9-429f-9da0-c5e1c3419476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33085f88-77da-45b1-aed6-1e30bda3c7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a3f672-b7b4-45ff-86bd-0eecd2bf0eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d721cc66-710d-438a-87ea-800879ebae38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722c6e45-ed20-4b22-b1df-773b0fbaee97",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc54027-ec9d-4757-a557-1e457a854d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df425ec8-bc05-4413-a3d4-a825dd02e878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46df915a-8063-4a64-9de3-b432ef4db544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd032e4f-d5b6-44d9-833c-2ea95481ad2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfe5267-029b-490f-b055-10f6b7bf4deb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832c93d7-1385-46a9-9fc4-9ef042605628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6823c3-19ea-417c-baee-02f8afd479d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5b317a-4244-4361-b4aa-ba431993ff41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb315e18-8541-4523-a0ef-d318a37858d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70f0e44-b24f-4e4a-8310-3790dfa0b4ee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c073b822-ce55-4883-a53d-9cca157de613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93c2b05-31cf-4338-bf62-e42f6b5cb82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50974e7-d092-4a01-898b-b613ef884f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f381ab-0a1f-4cc6-be84-a8e8794a2937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a565b3a-bf98-479d-bef4-f9719987b39e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d44ff0-fdf5-479e-9a2d-d4dd540e3e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41359587-e360-4520-b123-39c635e2412a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63423731-a9b0-4bd6-84b7-1f1be43009eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "820daf43-756c-41f0-8eeb-f0a74d258315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46428bc-6bc7-4d27-875d-d705bc22b9d1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2621bfc7-8cc6-40db-bb95-94f16a6b0601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b98b99-575c-4c41-8ca8-114368bee045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13467a2-35d8-49c1-9a9c-5f0c2972a41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad8003e-5a7d-4ff8-9471-78bc2de705e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e607526-c2ed-4f1b-8840-6dea516521ac",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b0ea93-0b3c-4135-ad25-9110dea00e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6b983f-7861-46a5-a23c-2b11a2d14e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f9c0dd-fd2c-4713-8e42-0c801b993917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2657324c-e77d-4919-b773-a4c6aeda1567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da1208c-0328-4559-925b-d3e0fc45d524",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d887c2a-822a-48b4-a8d2-d3b82d78a2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94167fc-c462-4a09-9b55-cb4bdd2c713b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5eb3f50-8e85-44af-b1c2-35d84ebae236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef0189d-7d65-41fc-8934-702975aadb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7e500b-38b1-4e9f-b61c-448bafd14f17",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2383c7e8-4f95-4f30-b943-5a5703b46b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5feef39e-bb81-4f5c-911b-0eb264ea7216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7337ae5-7d2a-4528-91b8-022377cc22a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a426cfb-adf3-40df-85f1-86533fd9d49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cc92fe-1bbc-486e-9beb-46881b43045c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b783625b-fcd5-4c3f-9fcc-d71f47f908be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0080d20-fca6-4bee-8318-277504ec15c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cbad5c-8d7c-47e6-ab99-871cc3a8a86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85e2846c-8621-4ff6-bd99-29b834d5e70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616a6932-8143-4f63-9473-89a07ee114d8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932e68e2-e90c-4c0d-8215-ab43e9468f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92afd3d3-d7c9-4b92-ab18-08cee1d15e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705c04f0-f609-4b92-a7a8-62699108857b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e66565af-dfad-4d2e-b702-f8af01166659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a59986-80c0-41d9-9f93-cbcc82a311d5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530fb28e-6bd5-4782-8190-eb7aaecc2414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3595b9a-1322-4713-a71f-e4cc5298d47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286bf6cd-f05e-475c-9b52-c33b7b066731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a71020-06d8-4900-a828-e612685d3fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcde47a-e06c-4893-8c98-ce5a0afe6259",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bf83db-9c0c-4646-b15b-cc7dcfb67dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10325beb-367e-4b16-a7bf-75bd33c921c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbb8e1b-c7ad-49af-b6a5-52a6143a1fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda50c18-7270-4248-a11e-889df298dcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0cdff0-fe5a-4024-99f3-80685a342cb8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bc3351-0177-4f03-8198-e2ddc13761ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba4b252-90c9-4b8c-90b9-c324faf9098c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b297b5c1-ee97-48d6-ab8a-603e462ad021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afb4792-79b3-442a-9f99-2193ab6c8288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c09c2df-973e-441d-9c0b-45bdec7e7976",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4144faf3-0d3c-4313-a63e-3a7f373d9d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a733af-ff55-4ef4-9c0f-d689fb64be5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98f228d-05e8-46bc-98ee-b9c47425f480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9610abf-3b37-47ac-a00e-304f9c337d68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6aa06bb-7b0a-4d9e-b655-b16e567b2240",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e75bdae0-4967-4067-8f4c-d56d63610cd9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41664e49-a9d4-42e4-bcea-36ba114a18f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "40271a03-423c-470e-b727-944e41078120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40dbdcb-16b2-4636-b2ce-e4a036bdc9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b78311f4-4201-47f5-8640-b3b6fce8e3dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1bcea08-c5f4-4011-b9b9-773baac1bf38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "972a9ee2-7563-467e-b6a1-1e59ba6c681d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2c77ce4-28e2-4e07-9f4d-fc13c6a06190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1ecb2ee-be4b-4c22-b672-09d165eb4e1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "786d1404-c846-403b-aa76-58d17994f974",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d676a559-6d44-45dc-a5b3-1d518fd976be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "455f478b-34fe-4014-9448-3d09b8289530",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "455510a2-9d46-478d-b71a-4d77f9395c2f"
            }
          }
        ]
      },
      {
        "id": "6b4f5992-4254-4700-8e19-739642dd7301",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e6116976-97e9-43b6-b8b8-254c039e691b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a937da42-e611-4213-a598-313eea51da21",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ca39b67-df34-4d7c-9c2b-1dabf0f3c0ff",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88857ff-e276-4feb-9346-6f12e4899bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70e8e22-50b4-4dc4-808e-a44919748dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd5decf-3712-428a-9d8b-3df3f0795e12",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fe0664-0a81-4763-a16d-b4f52e317fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737e5d0e-530e-4c4e-85a1-49529462cdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c477d752-fb34-4457-a028-34cc9ba80d0e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3a9364-9405-465c-9d2b-12b17b1235aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d8239c-e266-424c-9619-048054fd7041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3921c6e-7545-4a9d-ac61-2d082642bd5d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab890c2c-f6eb-41f1-b64f-06f5bef76671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20047d16-c393-4812-bca6-8ddecc066a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed15e31-85dc-4c84-849a-381d9968cc9b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71286c60-a13e-4af7-a1ff-0148b5f5e87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6e8b49-a9e5-42b9-8784-df4e1f8d7962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2a63f7-1872-4afc-ab36-c5816c2d1c7b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba9b19c-96d8-4656-ba2e-e24d41d61b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76af8cad-bf57-4646-ba13-432988eb0a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908eecda-384f-4f36-a3d0-be55333e51ed",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e61767-912c-4664-9a43-8b19b16a6f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a44f16-8974-45d6-b1a9-3b8d138251ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8408eb1-23a3-4ed6-85cb-8fc49824845d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97618a57-1e59-41fc-bf5d-9c264167216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e25e151-a2df-4e15-a241-3895dcb59cbb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08326ca-703a-4aa3-b058-4c14a897cef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bedbf422-1394-40fa-976b-796bebf9a0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f265592b-9040-4661-ac28-c4e75301e306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ffada9-788e-437c-8498-c17a9b538c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afd5d43-9343-4081-b72a-5743d2c24fa9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3daf12c-3f02-4f2f-9b74-2d1e5e9f9673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16d81f9-6fda-4a1e-9a8c-7d0721eefe55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0930ec70-8162-4672-a9b1-33441d563581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd41bcb6-8929-4f7f-8577-bc8be4816f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389ac318-6464-4a10-b337-9728e474fa1a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3b48ce-8e7b-4a7a-a4fb-a05408894550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60caf486-2571-4eae-918a-c123d42be1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9905cb6-d8d3-42eb-8d1e-1f49b45b122e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e91d279-ca17-47a4-98b8-33ddcc42865a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa5a8bb-b04f-4abc-bff5-6a67f8f8c2ba",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103b120d-2837-4217-be2f-3a94e1f3f400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b35da1-fa6a-4ea4-8207-9e226f05bff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f95530-cc2f-45d5-a105-d3834c444a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38cd656-80e3-4e50-a6b6-51a37ba17e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c118500-4dae-4933-938a-dfd55acc85d1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3698d3-a863-4b99-885c-eacea05bb2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed990ef-2cd7-41ee-a62d-71da2c66003e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a373b2b-4fb0-4c1f-b1b4-4eb6223f9972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d20cd04-0ce7-4d80-9211-9758ba9acaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ade6832-d006-49b2-ad5b-2eec7f0404a5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76942f7-1901-441e-a394-05b20ef72269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb15993-ab31-4de0-b9cd-d53a7bf78913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df603d9e-52a7-4481-ac01-9e26fa058b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04db5fe-24ee-404f-8c81-28d71ba71f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58d71d9-09cd-497b-a61b-4c7808ab8715",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a540e0-98f5-4a35-8e81-a7df846160cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52431609-9599-40c3-9993-206c43011cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441e2476-ccf3-4af9-8321-e3eacc5c9e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f41fd25-870e-42ff-9392-14d67d4e9d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18aa2ef5-2052-4da2-b323-b6f973e7e98c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44852530-e68a-4aab-8a06-ebb4f803cafc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "394d6e07-bfd7-4cff-9758-0444d796207d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5066bec7-1eb9-4526-973d-e8b3b27ae99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20ab53d-c370-4c2f-9ec0-021e58efac8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24b9d3a-08ed-4f45-b3f1-85f62650bfc5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e927cffe-90eb-4e1b-87c5-6cfd0da0ca02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9ebe1dc-f818-4cf8-84b7-65c070b9abfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975b138f-cbb8-4b9f-8851-84478bc8dda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01979e14-189d-4e9d-9eca-76ccef30aa24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795bcba9-6eb1-488d-9a40-51eab4cf75c1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94b27e0-6928-4f5b-bf8b-308379bca74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d328c5-3c93-4ebb-bc0f-b78cd7cea0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f5392f-be06-42f6-88ff-885042e5d34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f0afa7-aa98-432a-af27-a5f79c7bd657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fec279-22c0-403b-9f57-1bfd8bbca059",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fa738d-2a17-4702-8b5f-81bc2a7d8eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7891922e-ad00-41fc-9d9a-b3385ce180f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eeeae21-cd06-42dc-b607-26a835d793dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33916d8-153e-4078-8cfe-510817a90a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7a0d84-fe32-4922-a2ae-fefd212a1599",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf19aa2-0880-4648-b5b2-e9402d46e6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a7f7cd-54b2-4a64-bfad-e3236d518104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8865e69a-bfe7-4fc1-b5a7-2c58cdac9257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df07b9ed-21f6-4add-af51-5965dea8ef04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eff13d-df50-4d77-9ca7-7ba75c3299df",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5112533d-deb4-4391-b22c-6949fc78f184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb38ef0-7ee2-4693-9323-be7c46a8ab07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6708f5eb-cfa6-4291-92e0-5d889c7dbd42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0f6ca8-05e5-40c1-9b4d-2adc4e01ce35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3afaa5b-988d-4656-a187-aa5aea5e35a6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b156f982-833e-4291-81c7-3e9426b1f083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039c02be-881d-45e1-ac47-65cab69560e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3244359b-4178-48fc-8609-da455f240fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac2b798-18a0-4f21-8b67-89e2ec06fbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1a72db-2a19-4742-a2ea-454e91819ce2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346fe9c0-9121-4e68-9cdf-45a87c1615fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd55ea3e-fec2-4267-8cb4-c32e7dedd4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e780e3cb-bf66-4811-b064-a18c6d089320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f074748-a0b3-44c8-b105-d8155d6ab02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b88719-f599-402a-bc9a-b821028fe1de",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4778e42a-5629-4f7f-8269-e431e0f794f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851c6e70-668e-494d-b5a1-d96fbef0bc59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef871da-7696-4c34-b176-5bbfcba2d743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65959fa7-5d37-453d-ba7d-d5abb501ba01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541e7b32-bd22-4891-b135-02aca6958db1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3c4ed9-aea4-4a58-a054-aff2ee65de23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e4cf1e6-0fde-4838-90f7-dd5e7f1e5766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd60db7-946b-4e2c-9bdd-0cc158ef5d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b51fdc-07a5-42f5-8cd3-8939ea6827e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26a0a75-1501-494d-9665-e54ee011f661",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feba7038-9ce5-4370-8f36-f3584541cbfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601b169a-927f-4048-81a1-d8d118de1260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48541783-f598-4322-8dea-27b1755aafc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fc51a6-90f0-4ff0-867d-edc56d844218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f950ed8-b947-4939-ac0c-49332a08729e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999a945b-8512-4d65-9dc5-8f39b9e66716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f54693f7-3be5-4e0c-be92-b5eb78e37247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9624e61-bf0b-4aa3-9399-ec1d7ab2e10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ddad1b-2be4-4c03-8b4a-ff519f0cc6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e69ae8-5f9b-4116-8d72-2c04cf33cacc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9cc836-c2e4-4b29-80f4-3cc050de9846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15b27952-c892-464f-8537-93288d9aac17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6d4022-b97b-4e09-a764-d5cbd633b283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79e845b-af27-4656-9e53-b5e9eaee975c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0cae26-7cb8-47be-bf13-6af7b11a5f9a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b08b002-a991-47b2-84bb-a9556fee1497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c694323-cc5e-414d-86fc-2606a2e38fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6539361-fb38-4d33-b1f6-4a33b4f70e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8788c5-99b7-4207-bf1c-e31b8de35862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4129ea2c-5938-40b5-afa8-5d304f5dccb6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6296af63-2c39-485e-819f-f46f1338f687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d7a32f2-13d6-4c96-a4be-faefbf9b463c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613a1c66-d830-4733-9113-b10c7a958788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c7a9d3-2465-4c45-8863-be384b3056e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9622de14-da52-4a46-a1d1-b321e8233a30",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ffee04-a988-48b5-8fc6-88a3dd3b0ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55213f6-3585-4043-83a9-a5ad0a52811c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe2d393-9ad6-46f1-9f04-95bec20d13c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e44a27-3be9-4493-8a4a-aa6ca9d314df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c904fb-ff1e-418a-ab85-64d79fd94ac1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52beabbe-310d-460d-8b43-a120ff4a3c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92843c2f-d60d-4b45-bd0c-cb6244904dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75a6c6e-a33b-4488-99c4-4212540f3c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5b8a03-fd80-49b1-b47e-c842a83e4b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c958bf76-8aeb-470a-a570-e52f6e8716bc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bc7249-81e9-4413-9e4a-826d972f2be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "084e74b7-0ffb-4733-bdb6-0359bcf41cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea98ac8-54ff-4ea8-995f-6d8c1541feaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6548bc7c-751e-42f2-8d07-7b5b2e51d80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b3d845-e557-4c1a-abf3-7f207fea768f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0f7722-2fbd-4eeb-aed0-59f604a09771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37fa0734-fdc2-4493-8849-1c8900537b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c44f22-75f0-44da-85c1-1fbd7a33c753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405d2671-0251-45b5-82ab-0d7242c1f3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a8d3cf-03ec-44ce-b204-645cd989c5ce",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c0d719-f8eb-4b11-8c77-8921420461ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daaeb3c4-5587-46d4-9856-97a859acb670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1489e388-8be4-42d5-a37c-83c8580bf931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57253e86-749f-4522-9222-c20e73ca504c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922a8863-c641-4ddf-89c2-a9735e167391",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598be182-6d99-455e-b0da-7ad0fc6470cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c01b949-b314-477a-a9bf-edc2057b8900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06696cc1-ca21-44d8-b5a6-d5f08054e9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e520d2-647a-4cc8-a4e1-d7a0fa370ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638ca666-d7fb-407e-85a5-7bd1c325224f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da58173d-05e2-4fcf-adb2-024708285876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4266a1ae-0d32-49dd-a99d-91a869cc8d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da91a845-191c-4f58-9372-6d8b46f2b750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e608483-9b09-4c20-9125-4ea5ce33142b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f0fb37-48b2-4bdc-963e-410a2072de1a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1599bb-462f-480b-b8f8-1fbd3d0ff195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e59f6ac-640b-49d2-8eac-f6583ccfba51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1643756-2fde-4260-b3a6-422adfbd0f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbd6238-63a5-4554-b786-30d7480d84c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8883f3ec-b514-457e-919c-7633e1d65cf9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbb0950-be8c-4590-8347-b7ae4150713b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d85cc3c-97a9-409e-8d9c-9fb412fcb856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a92fd2-181d-40c3-bde9-067a48047b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513e52a0-6797-45d2-9f7e-066b04c12c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2955c4fd-3b5e-4b94-b7da-811b454b765d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fabeeb1-95ac-4dc9-b5f8-efb612991af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1974daad-4f0b-421b-a2d9-b88275c790e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a59335-023a-450a-85b5-3237964210f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a07f555-2473-4783-a674-37709901540a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0f0a7f-77a5-484d-81e2-2cddf3060b3e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ab56ef-8c70-4488-9c73-29e9f5423034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb2b100-ea44-4537-a3d6-f3162a37b378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc38805-7a18-49ab-bfba-b4b511476a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bc23f9-2677-4b4b-a949-a6584d2bb652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e485ee9a-3a67-458d-8848-7118cc5043fb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84082fcc-d78c-4032-8b3c-12695af84e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae24e4a-37ec-4f73-98cd-d840b29a417b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c70e1c-621b-409e-94a6-c896b49c32d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9761b2b2-fd96-4c76-ab5d-6e9a9a2a803d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979536f0-9b1c-4c18-9448-dabe082412fd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d36453-a463-4c7d-855f-e809ced51a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b8dafb-1c90-4ae9-8c61-579c420cca4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadff66e-497b-4804-8548-29e1c9af9c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dfbd10-1b83-42b2-85ba-d241e0c5f11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72d2d75-7f26-454d-b783-b6edac23c12d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c541e32-a9db-448b-a830-ec185413f7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8915400-010c-482b-9d14-7b95ef10a07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd84744c-4086-4638-9f57-5907bbf4d169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5439c3d-413f-40bd-92d1-c03e168140bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec067a3-fb1a-4b64-a6f1-7ff911a70270",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065be6a8-8649-46e7-9a60-09622ab99096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e80116-466d-4de0-ab5d-478055a715b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a1786f-8caa-4695-9438-62ac75f2347c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e72c9b-285b-4ad2-b383-367b49f17cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533478d0-2bf2-4dc1-a211-0028555501a3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e50025-aa8f-4fdd-b70a-a70685818945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffa034b-8c05-4486-a30a-07c0eac16f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e1a43c-1065-439d-8343-e73a80bbae63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ff76b7-edb0-4659-9522-aa4fd7440a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013b985d-a6d3-42a7-aac5-2d68a810b6ee",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a776891c-9201-4493-8872-10395ca09ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96de903b-74f7-4847-b5f2-564aad2e36ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192ae15f-d717-4217-ac09-9eaa40081d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc6f10e-a9f4-44e6-909d-5af7a09dd359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5837f321-a763-4982-9967-d255f7b53a75",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5e60b5-1fae-4bbd-85df-107f09a11593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e67a57-fe57-431d-b8e2-43b733f90023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9298a9d1-4853-425d-9270-16ca6ec6c786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b1c29d-214d-4e12-9d0d-b3d8c0fea9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4171bc8-6db2-4a1b-b5d9-34355baaab8e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad294cd5-2215-45d1-aeaf-40bcb3937536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3717103-2f7c-4a1c-a6b9-b1f6385883b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd272d9-2674-4d0c-b0a5-167baecf4ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddb9470-5d8f-438f-b7e6-33cbda1335f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ccbb6e-1676-4e6c-9676-14154bc3ccce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee93f451-f6dd-4da6-b9e3-f2b6fffc2bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffe72dc-95c2-49a8-8635-f2466944fe92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a061c0a-46ec-454e-ad21-630c68c82b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6957e7d4-c7f9-4d85-9d34-cb77fc0dfe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c337ee9-4f2d-45be-86e2-ae884876fc98",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c84d37d-bb38-4a54-8f42-e4274e60c8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf6fc52-dcf8-463c-8c01-9eef3fff3472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c81cdc-fe07-434a-a54c-3388a4e9a48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4913df-7b1d-4b34-94e0-80e63a9c17b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec806a3-1620-4507-a07e-c576abe23d3a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16724383-6ae4-434b-abd8-81cb848ae31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee896643-5cce-47e5-a158-72e9eda04a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64388d8-5c21-4393-ad92-4e0b4513c174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b29813-bdc7-45b6-9836-230fc9d9acb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355cb7c0-16c4-4279-80c5-de6b45d44360",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381f3bec-eae7-47f2-9b46-cd2182357ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a875cc-4e41-4a3f-98a1-da7ce265cf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996d9313-ecd4-4e9a-b294-e4d7d16aa38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f0fa13-bf71-4e23-a574-a2a3da1e2e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0af29a-cc3d-4a3c-a30c-710c4b2c46e8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41a4c54-fbbf-4993-aa03-c75745f2b8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46586fba-017d-445b-ba3a-fded46bb2e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b079f8-fc90-485a-958d-a8a726090218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf60b35-4fab-4f54-bd28-e3b431d4038b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e27f982-5256-4b51-88ec-87c82c6b8c23",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d80a3c7-e3fe-40ad-8ae2-8fd161b5fdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1329bde9-c2f4-4ddf-81bd-604104c565d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7d6c79-0172-4abd-8d85-1cdf5a6cfbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4f5541-57dc-4b0d-9217-eedcf4335f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99b0388-7fcc-4dd1-a309-7ebeb67d437b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3c9658-3634-40cf-8c23-5d437c3b4190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580009d7-02dc-408b-93c7-a611ddaf1e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f9ecb8-c7ac-4e99-86d7-bd7e4a6da15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e0bd5d-dd56-4a1c-a4e7-c9cce9ddd220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fbdc3e-1617-42ac-8aeb-8afb45e64af9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9987e6-0338-44e9-ba4c-f1a165eba9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2729dd5-e805-4527-930c-f012dbad1f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdf912a-c78a-44b3-8a9b-f3acb48d30e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e543813d-c179-40a5-a249-c8a120afdd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9e78ae-d62b-4cb5-bf7b-76d93c495342",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd1a817-459f-4622-bd34-6c0eeb943a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa50adc-0260-4a12-a38c-5d7914c09d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b58857-6cac-41c3-b989-64a3913a2f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0362d3-cae5-456b-b236-b0a6a58133e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b5192e-6924-4def-839a-d5d5ea036eb7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3cc8bf-02c1-4bcc-bee5-9515a908454f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b30cec-2515-4aa0-9fe6-10b50cdb0f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc08217-b986-4358-9ac0-6c1e4a43ca61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02dc175-74d6-4af6-9cd4-2407705704cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a586480d-167e-41d2-85cf-43f0f8a85e13",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6139a7cb-30b2-4923-ba5d-57aee8e3ac32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d197d2-1731-46dc-99d6-c98ee7bf37ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef47569-bd4e-4949-8968-fb1f08654666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963c9fed-e9b7-4136-a315-fee063bb729f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d59642-c0a2-4dd2-aa4c-85b8695d81ba",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52114e4d-9352-4753-b1c5-7f5d42174717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c709f00-9bcc-40ad-8235-de5545342dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d6b3d9-38d9-47e5-9f79-27527a192c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad6894e-c1ac-4ee4-a788-fd1c81170bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35790b1a-2e6f-4c3e-a475-01896eb18084",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f30a91-0c0a-4f48-b94d-4c12378b7a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe697e63-8fb9-4366-9821-b2b03d25fd87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b656650-52ba-4184-b9d9-8aafb0927d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f8fbd7-8147-459c-bc13-1ecc2992e094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cd50fc-add6-4c41-8173-43c0eb2eb024",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa9bf87-e47a-4a1e-8c45-94f850946d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9757d840-d62d-4cfa-85cc-c7266f849586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7604f7aa-679f-42b0-ac90-1f1bb9fa3fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0356142-589e-4338-b09b-05b32c5fca7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b7d7d4-c1e8-4b95-aab9-ffd2e291abe4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685165a8-993c-4489-8fe2-1494140360f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648d2e92-3e63-42ff-b569-0ec5fef60504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c6084a-377a-41ba-80a0-144280e8dc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ca871e-17b8-4de6-bd51-81c5b0af4f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cb7eaf-2d75-4a5c-abab-9bfa2fa6a6e7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d68c1c-3a56-43c7-a0d2-d3754068519e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e957a2c9-b034-4a09-a147-e901cdcb61ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b61acca-f49d-47a9-b28b-ceffd04b0fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930036e3-3c74-4cf3-bb94-1b76a6e670d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c9d931-41ff-4c55-8374-f99fc33b3124",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1dc7ef-30e9-4ce6-afed-3110c07b5d04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab96492-4863-4a96-a3c4-ff4b5e2aaf7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1c4237-cf0e-43fc-a083-6e679c630f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f141bf-9e4b-45ae-a1b3-743437e2744c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b7c703-1d54-46f4-ad7d-7925af4fd66d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4803fcf1-1e0a-4b37-9db7-cdd9c0956191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f5e9f34-2d02-428a-bd49-2b2be936c5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b98b03e-7d87-4c99-b619-7b91dd477837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a552d3-3a92-480f-88db-0c878bb88e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecaeb26-c215-4380-ab34-a4d18a8da1f5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3fe62e-3c81-438c-8ca9-7792fdff05fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9784bc13-f30f-466a-bea4-fc7dfa476486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc04354-ccaa-4ffa-bc02-fd47219fff19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c52c32a-2d68-47cd-abd4-b80b3edf935b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259d011e-4582-490e-8351-3a084626344a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5072615b-e501-4d25-8b85-05777a813f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eceadc47-f6f2-477d-aadf-8957abf39634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4bf7f5-9f34-403e-97bb-aa7c0cf1f106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb4aad4-713f-42ba-979b-010e207aaca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9847203b-62a8-4493-b75d-e77249fca946",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52a9265-db18-4195-a035-70f9ba1efb77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "619567c1-85af-4d2c-a1af-5573147c654a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe39cc1-b041-44b6-bf0d-8f75903482c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac77689f-9d09-45e4-810a-5aa123c9eff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b74db5-1b49-4f7c-9924-c8edcefc4e83",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f527635f-4f31-47dd-af17-c8a75a12a3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bd18f8d-2c4a-488d-9e84-2defd0485c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7accb246-bd78-475d-97cb-7cd7f545ce0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416a0898-62fa-4dd0-b6d2-9a5d3506b5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ca706c-5da2-42c3-ad8a-8dd9395191f1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f915e311-2f5f-4fc6-b319-8667cecba4f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b78e5794-1a68-4a96-b8a5-eff504b09572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc8e5e2-bfec-48ab-b908-b9da16bc7db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08992965-b4b2-4bbb-84e5-206f48abf0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6438d129-4e61-4c0c-b6dc-00e96fba4ac5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe08858-edaf-4ba7-b144-21e8ec72d0c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed916136-4910-4e3d-8f76-0fee0dda513f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3dffb4b-2572-4026-9a41-bfe71776d616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d9af52-0bce-419e-9f81-28be62ca9042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f29154-ecd8-4bba-a771-df121d99c238",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d57567-bae7-4af1-a50d-1abfbbbcb8f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf85ab11-7caa-4aa3-b1e4-0a9010638954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a010e89-ce17-42f0-b4b8-11ca6dacacbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927239bb-3e61-4575-b502-902883e5f431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64831ab-78a5-47a8-ae1c-ec470c410f34",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26247813-f63f-4058-a749-e0dddd5146fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20311d3b-4090-471b-b8b4-c3fd97ebb329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a1e84a-87c5-48ae-b02b-b78e6ce2bcc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6311689-8350-4ad7-aa9d-79d3508b722a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6a7fb9-b5e4-47d2-a9a5-f07887874cb1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7dd60b1-b948-4640-bd25-81769c23ef67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbfb45c-2a94-4302-9434-84ba1b888e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d0b74e-81bd-49e0-a609-c3a93e98307c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6113a934-b194-469d-a646-18ad6f193124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2946a00-bee5-481d-8162-2a901ede1b9c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fef9eb0-3fab-4185-9009-0c6943a8b840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd3524da-0eb1-46e2-a26e-0273a90e197f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dae2ffe-defd-4240-bdfb-41890dabdcbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa31bd96-379e-4c0b-9ab7-b2dc39050aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548f2eb9-7f9d-492c-8390-81e0f1e3cc86",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c149e8-586c-4399-a1ab-984e21b941ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d69a6d9b-6611-480a-8dc6-22de9d614e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d0a884-f0f1-4234-92d3-0f29f58f89ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c5573d-ce65-4b8e-9ac3-171d726c3309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5e7da8-ea5a-4bd9-9e3d-6029ad50d22f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e10440-7798-4fc3-abad-017d80a23fb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759f0ff5-ad77-4715-9526-3177bebb723d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c11cbe4-ea60-424f-972a-31d5b651cff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ba9ee3-326c-4279-9881-e6d0ac6b334d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914cb86a-36c4-4ddb-a7f1-fc12838a9569",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0248ce-d101-4579-97dc-cf758fba45ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82f4ed70-0b8e-436c-8589-cda3e534160d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7e1903-dc57-4232-af70-dd05b8469d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f87486-3f66-4298-95a8-5adc226262ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55de77ea-3fa2-4b30-8333-450eb9858020",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d799bafa-cd0f-4007-8e23-6e8add530039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc5418f-e342-4aae-958b-646ce4fe87de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522f49d7-b0ce-4b5d-b414-49de479da4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c2c394-8852-41e6-bca1-0422e9ba21c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a252d0-2581-401e-ade2-9935255b4ab1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2b1c52-1a8b-49ea-bc1a-ff0650c7ff74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a59317-3dd8-47d3-a066-94fa4020235f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a114f62c-4f54-42fc-be4a-6504864d3245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1162888c-499c-4de6-85c7-26fdd119613b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a883bed0-b363-4f01-9ef2-e19fb2eebe45",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c549406-2742-4e73-b810-bd51f2ddc44d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbbb74a7-e0d7-4c8b-bf57-2bb5acca940a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4675ca-ef53-4591-8e37-b5c66a144282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762d9485-43b7-46fa-8525-6fcbe559b14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608cde4b-9a36-4276-ae66-480c349a0b9e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235f961f-5b84-480c-98f0-04db5d3bc87a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161e5cef-d827-4fc2-a8b2-85efd04f4f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c0bdb3-dc5e-491e-929c-196019d57a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5068354-8ab4-4a80-a9d9-d26b1ce39a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea85f3b-9bff-4100-9d45-208be727dcc2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8105db-f143-43b0-a986-2bbab6aacfc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27bd28db-bdb3-4fda-97c1-439de5b72c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5369fa-523c-4a5b-9da0-773d3b420041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e38d17-a8f3-4d14-b415-7be85a6e4289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c43b98-d246-4db0-a48b-8bbb85775b43",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a337e6-a706-4dcb-a13b-048f2cea8eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6661325c-f0f3-4d7b-9ee4-77178b5518fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb528161-702f-4471-8c75-31caef83e96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091e8c51-14c0-4a22-a0f2-ecababecd806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718f61a5-ef56-410f-a7b1-8750e3ef9751",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b29c7ac-533c-479c-9cbc-da3b29cc3461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f8b3468-6323-4ad4-a47c-181660b5b23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6094766-af24-491c-a48a-986228f010a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daf9804-f3e7-4d13-aceb-26340ea2916f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa988d5-ab61-44d1-8281-70c021ebe0d5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd9e12a-5f10-4240-8a65-7dd4dd5eb87d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6902e2ab-c780-4681-a7cf-57fc171ca123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be222111-11e7-43b8-81c8-82e0cd05c650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14286adf-f05c-4bd4-83d0-882d4b5c32a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47b4465-aa68-4dd5-91ea-6a524f68182e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f2e310-6e76-4a1c-83ae-9f2a745134b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0a7c1c8-c57b-4636-a7e3-9109d13f58f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e28b75-842d-400d-9a7d-a2a479ca6699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1887e62b-638d-42ad-a04b-bb614dd07264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99abc7f3-c7bc-4793-bf82-2d290873c259",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293f9f90-2036-4534-8901-a88a2a881dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7aca99f-84fb-4ed0-b51e-89bbeb75746d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255a0a91-5ef9-41dd-95da-7903c93f4cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f66edc-06e0-4ec1-8608-ab51c8d67744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510fe1a6-b9fe-4fee-a9c1-5f9c9c844d19",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad19c4b4-32c0-46a0-a798-860a99924595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75b8d62f-d9c0-45a3-be55-e944a337110a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a30c36-d2b7-40fc-8b8f-00f7528df74a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614129bc-d333-4ce1-9d71-18e1ef1efb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279bd2bb-7f5c-42d6-b377-e8279ec05f2a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9d73b7-4907-4fd8-b99e-1876a9f6c580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c87ee4f-d32a-44d7-961c-fbafaa25be0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c6c404-04be-4cdc-9347-3f6aee344487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e4a476-a06a-4aa2-ac27-508c18b0a428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a504c20-adc3-452a-b9b4-bb4ce48ddb76",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8741a04d-037d-460f-aca8-741e23c087c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f5670d2-cacd-4531-9311-ac6a3c8a622a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2421bb6d-fc92-45b9-af38-fc88b446334a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000fd2d9-0e82-433f-b78d-c99e30867e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc1c185-ae69-4787-8f91-8b744cfcf3e2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f195de24-c54c-41fb-b9f2-a9af2f486e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa3eedb-3dfd-47db-8023-040c07eaa912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ebdba6-c574-475e-8359-e99a8b31a64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17572ddb-b88c-4818-9272-e8130d9c1cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb56f298-45a9-43ae-af04-aa155ec6cb45",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d92cf3-656f-4460-9636-e3b94f7d8668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca71e2d-dd1a-4469-91d3-cbba6dd1f971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f22593-2706-4dcc-a2c9-045b882173a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae496a8-8120-47dc-bb49-6a8a1d4b2e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0383d4-2116-4881-a2f3-954542f16e42",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aea5dd4-1483-4dcd-963f-9bfb4e64d033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635c9edd-37be-4021-af19-fe0fbee065e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df63a3fd-5040-4174-8b79-62bbb1f43669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddff5b55-dab5-4031-ae2c-d5c464b8067a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a3615c-1d27-4ea6-924c-f41c5ffedcf1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4595116b-6f1a-41e6-a788-c67f893fb202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d90bbec1-0198-43b6-b456-105963229643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e0b6a9-56cc-47fc-b367-f005f7beb936",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ec0e4d-bea2-4335-a68f-d435fdf0e576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d25d863-9794-4148-866f-b0d6e94eb242",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41917f1-4632-4296-b392-d562a7add2e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d321ccb-e3e7-4cca-9ca2-e5f42e22640c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ccc9a4-2c9e-4355-b605-935d8569d002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d452f94a-6cc2-4027-a474-2429f76ff068"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b67d013a-b494-49a3-a91f-6eab34937fab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1d43278-0dc5-4188-af84-e3bf853730da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "398ec425-ecf2-4ade-9bfd-769d5398bd71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e9b0824-bfc3-40d4-8c29-f384e5c2ebf4"
                    }
                  }
                ]
              },
              {
                "id": "0230d516-fd0a-41f2-8604-96007079f70e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a37dc397-9e09-46cd-9fbf-02a258f853ac",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07510ab5-5e7a-492a-bd3f-452bd2a26556",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fb71535c-1bad-4afa-9351-3ccad65f263d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc67720-5a0a-48d8-a525-5e76b6e60300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05e554d3-6354-4b5b-94ac-44d0fca71e9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ca904d8-943e-4e51-bb8e-28b8a970d815",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df705b91-2ea4-4be8-97ea-a97c870bdc71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "100796f5-e9c7-42ff-994c-0a8310df2a28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ab9d9e5-80a4-4f0e-8a04-e93db22b5aa8"
                    }
                  }
                ]
              },
              {
                "id": "377f8fa1-a7f4-4794-9daa-3ec5ecedeb31",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "09ca263d-f32c-46cf-be57-0edafcbeaf43",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a62abe-4070-4658-8614-8351c5371490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1ddb9e20-3598-45a3-8ab2-6e430197bb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9303e5-7457-4647-83c0-df8fee4b85cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93eedbd7-3ee2-44cd-96f6-662b559f1250"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3983a21b-eb36-46d3-8ce7-f4a36defe0f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f4488da4-6f59-4f08-a3fa-6a668aa22beb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90ca6035-0b51-4aa9-a98f-3627fa14ee2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3f4dbe5f-633d-4346-82dc-014040624eb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "546f08d0-5a4c-4dca-a8c0-ca9ab9d40dfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c1c0910-67cb-4217-b676-0f8f8a6c1bbf"
                    }
                  }
                ]
              },
              {
                "id": "d8d2226f-012b-497c-ae2b-f5c9f892b2bc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c8b437a-12db-4c11-b339-7aea67351dff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f5697168-664f-49e5-a741-19024f97cd46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9143f93-5e03-4630-960a-070f9067d76b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9813c58d-72e6-4ec7-9387-7bb3afd252f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7beb5d81-1e29-4be4-b243-a21d12e9ddd0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "47a1f5b4-fd62-4095-bba9-3c6b5e537a78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3572fe1a-55b1-48a8-84dd-befc1745b09e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1322dfc1-5038-456a-bf1c-921c0311c1dd"
            }
          }
        ]
      },
      {
        "id": "70e8a2ec-2375-4ffd-b62d-ec544c51d250",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eb7260a8-d6ce-491e-bee9-e98ac9edf23a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea2567e9-b8d4-408a-80e4-c9996ecb0972",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "238f8ab5-c84b-459a-b192-57affca46783",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4056b772-0400-48f2-b03a-0c8f35b9ac06",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1064ff56-0c31-4151-8154-dca7d9fc8155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb326286-ae88-4eda-9edb-0fbab63f7602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b030f45-9e83-4d47-b920-a092e97d566f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bb351e7-d8de-4e71-a146-8255a72fca37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52b78a93-15d9-405a-be7c-2124d6ce16f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a32fe38a-4903-433f-aef9-40e21d8de3b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d9eb648-6910-43b7-bdbd-875d5beb8350"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb3ca173-ead8-4c0b-8c31-596a58d9086b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4d6d2433-b334-405c-aa76-e464f036c420"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a45ec2b-79b3-41cb-a14a-d95050152a86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb3a0892-4c91-49c0-b326-f6ba394ced50"
            }
          }
        ]
      },
      {
        "id": "fed1b925-413d-4203-968c-e3df9b988d72",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "56a48107-fee9-4036-a251-88fd7e084277",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b139870-2388-4b65-a99a-8e173ee72dd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df52a188-7568-4ef2-a50f-7387774898af",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f769445-09d8-47d0-808a-67777e56adbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a35fedb5-a805-4542-9191-2913c7936b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0746df-8363-41ef-ba94-daf75b819102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f91bc9ca-b381-41f1-836d-fc0cb9293348"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6586d5b8-fe55-4ef9-85db-2f47ee0fc76d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bb4ec78-17d0-48d5-a422-8b5504c0d129"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5eb0efe-cfee-4919-9da9-eb924fc8a7c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "988f8736-2c8e-4efe-8409-a097303377a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cb5d646-f898-434d-bb8f-26ded98977e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "576303dd-4dfd-48d2-b9f6-cd4294223126"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3455fc1-88f5-4d32-9842-29531af9a19b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b08c89c-290e-443d-8b92-4f2263543d86"
            }
          }
        ]
      },
      {
        "id": "f8f5773f-c242-4f37-bbe7-d19444fdb898",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e7be417d-b954-4746-9ff6-c7991903e6d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fad84b22-60c4-44e7-9ffa-17ccf20399a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "758a26f3-0155-4984-8379-d9c93feedeaf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929a9fcb-e0a4-4325-a753-1c95e73a24bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b33dba29-760b-4f24-95dc-fd4f53b25e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ad0b97-9325-4538-938c-cea9e15baf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c8d6e6b-c0a1-4147-9fd9-ecb7087e9952"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a61f4e90-6278-4d08-8012-19bf90f22537",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb9df4e5-1ea6-4b1e-9b29-88c003b0e99f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e199cde-b823-4409-b5a8-85505c73c9e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b39acd99-2f86-49e0-b9b9-c1b721041095"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79962cbe-f078-4b43-900e-83b02eefbe6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "518e8648-55c9-4324-9e85-2bfbdcaf23a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "795f3f5f-4bab-4783-afc8-931b1f4a440a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49d73507-1c06-4e5d-98a2-8d7b22b932cc"
            }
          }
        ]
      },
      {
        "id": "99963a35-d9cf-4f63-8b50-c937e275ee7e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "726e6076-628d-4f54-b1eb-2da9b9bc5a39",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c1830e7-90bd-49ec-87f2-e7c7c3da0bc6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9caa7278-55e8-4141-9d7c-bfd5bc2aa3d2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f609b89e-8b36-4ab8-8f15-ec3e358cc26c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48801e4c-5cc1-4df4-8e57-3a2cb524817c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 72.14682539682545,
      "responseMin": 6,
      "responseMax": 412,
      "responseSd": 29.22908745434858,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724459984258,
      "completed": 1724460010484
    },
    "executions": [
      {
        "id": "6cf167ba-5952-45df-8d0e-a77769d27328",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f3da7495-2f98-42c8-8342-68497e888395",
          "httpRequestId": "6e390ae8-5572-46cd-b162-ffe1bcc41089"
        },
        "item": {
          "id": "6cf167ba-5952-45df-8d0e-a77769d27328",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d1112d39-60f9-41d9-8b72-ae2a06c35a44",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "1f5936b6-b13a-402d-b141-3dff3756652d",
        "cursor": {
          "ref": "12068cf5-4ec5-4c63-9083-b3e30d52c204",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "622e388f-966a-4529-8e10-4bf5f4ece8a4"
        },
        "item": {
          "id": "1f5936b6-b13a-402d-b141-3dff3756652d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d821ba8a-67ef-4edd-a580-527bf1e1ddb0",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "105544f5-a6cb-4a02-8436-49694ec1caf4",
        "cursor": {
          "ref": "150d4e25-d69f-4901-8fb3-ecc638a04b53",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6e00bbd1-7e07-4a42-b689-5b9ce8f8ab99"
        },
        "item": {
          "id": "105544f5-a6cb-4a02-8436-49694ec1caf4",
          "name": "did_json"
        },
        "response": {
          "id": "a8f7e71a-cb08-4b6d-89d5-8fc7490e7dae",
          "status": "OK",
          "code": 200,
          "responseTime": 221,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87eddfe-ee83-4bf9-a5fc-142289a025ba",
        "cursor": {
          "ref": "a2e7c95f-8a09-47cc-9667-163faad9a49a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b76ea347-74ed-48a3-a772-e36e2bf226ee"
        },
        "item": {
          "id": "d87eddfe-ee83-4bf9-a5fc-142289a025ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "2d1273ba-88df-43c9-8b50-0233bf3f27b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87eddfe-ee83-4bf9-a5fc-142289a025ba",
        "cursor": {
          "ref": "a2e7c95f-8a09-47cc-9667-163faad9a49a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b76ea347-74ed-48a3-a772-e36e2bf226ee"
        },
        "item": {
          "id": "d87eddfe-ee83-4bf9-a5fc-142289a025ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "2d1273ba-88df-43c9-8b50-0233bf3f27b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af85e117-65d5-4041-9643-2fbbbfa77e46",
        "cursor": {
          "ref": "36ee4a70-5bf4-4bc1-af3a-48bc43ee4edc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2041622d-2464-4897-a34a-475da35de1b3"
        },
        "item": {
          "id": "af85e117-65d5-4041-9643-2fbbbfa77e46",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6e8e467c-c191-464a-a8be-bd11b14c4e53",
          "status": "Not Found",
          "code": 404,
          "responseTime": 114,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881b15fe-eeff-4eb0-b69e-cd3174a3cdbd",
        "cursor": {
          "ref": "59d53e36-46f8-49bf-9b6b-548166cc22f4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5fdf8636-9b6d-46de-a45c-06166d639b5d"
        },
        "item": {
          "id": "881b15fe-eeff-4eb0-b69e-cd3174a3cdbd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1cd3fa29-af0c-497a-8aa5-03bbf5d57446",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072de715-546b-48c5-8d21-48eaa269709a",
        "cursor": {
          "ref": "baa7ca8e-7790-401c-b5ab-9dd762b69952",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6f34a013-8c57-4365-9e54-fae7ccce44cf"
        },
        "item": {
          "id": "072de715-546b-48c5-8d21-48eaa269709a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "33a20633-3d62-40d3-8bbe-aafcf3a1916f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6583feca-e32a-4c5e-b51f-bebab713fa98",
        "cursor": {
          "ref": "43a4524d-a050-4fa7-b622-6bba1ce0b016",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d2810d26-1aec-4150-9cfd-cc4fcc1ac781"
        },
        "item": {
          "id": "6583feca-e32a-4c5e-b51f-bebab713fa98",
          "name": "identifiers"
        },
        "response": {
          "id": "87fad877-464d-4436-a9a1-2e99d6fdabed",
          "status": "OK",
          "code": 200,
          "responseTime": 270,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c87aab7-8b77-4763-bc17-ddc32844a4af",
        "cursor": {
          "ref": "e8280cc3-a7fe-493a-aab8-fca1a6d66bff",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7845a591-5877-4573-b0de-49d535bc56be"
        },
        "item": {
          "id": "6c87aab7-8b77-4763-bc17-ddc32844a4af",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "300dc662-b0f6-4b82-b527-09b7a7c89e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8e25c0-6015-4c2c-bac0-60fc4d8759ce",
        "cursor": {
          "ref": "85a65076-d3cd-4fc4-97b8-8f04b57d4e4a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0a6dc3c8-1975-4b0d-973a-6b04860fbfd6"
        },
        "item": {
          "id": "8e8e25c0-6015-4c2c-bac0-60fc4d8759ce",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "20e85307-c551-46f1-b660-46169519c594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f94f52-e804-4990-b9a6-18921a22de9d",
        "cursor": {
          "ref": "74fe3f90-4e14-4a48-9a88-51b3a76b0381",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b5780703-70dc-4bd1-add3-00516410d4ce"
        },
        "item": {
          "id": "28f94f52-e804-4990-b9a6-18921a22de9d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a064ed4f-62b5-4bd5-9a79-6b942a831430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedaa28a-19bb-42d6-a3fe-6fcaa3c77cff",
        "cursor": {
          "ref": "a4411775-630b-41a3-9963-e2b686604bc9",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3b4ee962-c7f8-4e09-8817-a5f81fc05214"
        },
        "item": {
          "id": "eedaa28a-19bb-42d6-a3fe-6fcaa3c77cff",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "be745923-53f2-4daa-a094-48512ad11608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d71a86a-2f77-4dde-bdd8-71e4b22407cf",
        "cursor": {
          "ref": "5a18ce1c-a849-49fb-b518-30db95861d36",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b16ba966-c062-43ad-abcc-105e10a259a5"
        },
        "item": {
          "id": "8d71a86a-2f77-4dde-bdd8-71e4b22407cf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ea249f02-4d1c-4c83-b3fe-4cdbc604025e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e915b7-ee64-4cae-b622-e336ef91f3a7",
        "cursor": {
          "ref": "3af9262d-f5a3-415b-b8d2-3038f5d0ce7e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "55d6b774-bd57-4a4e-b1a2-207ec68b96e3"
        },
        "item": {
          "id": "c7e915b7-ee64-4cae-b622-e336ef91f3a7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b162a7db-6fed-472d-ad9b-d4da2af875cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594ce344-7640-44a7-a470-f6679728aad1",
        "cursor": {
          "ref": "8afa848e-434a-4f41-8fea-a6abae9a2b0f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9e4ab430-1d13-434b-9844-f5193b4d4122"
        },
        "item": {
          "id": "594ce344-7640-44a7-a470-f6679728aad1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "afa1fa9b-23aa-4e1f-b0f4-cad20e4a4334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3e73e6-b1e9-4c47-a2b5-267aa807afe9",
        "cursor": {
          "ref": "7ff0f9ab-257b-4e7d-9bee-50982cf4263e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5c71788c-f21a-433c-8073-9c873c3f8d83"
        },
        "item": {
          "id": "9a3e73e6-b1e9-4c47-a2b5-267aa807afe9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4f568d08-0497-4ca3-b8d0-bd7d4e0ab363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f061237a-8f8b-4548-823b-3656201e9788",
        "cursor": {
          "ref": "e98a6e48-660b-4df1-8748-82f9d0f90838",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9be1b377-0aab-4c79-95b4-3e24f2a0de26"
        },
        "item": {
          "id": "f061237a-8f8b-4548-823b-3656201e9788",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "11de8a0d-6a7e-4519-8dfd-728a1ed374d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee9c3e1-66e0-4682-a833-9cc4173cdba8",
        "cursor": {
          "ref": "f11c6e87-e6e6-41bc-895c-b59f203639aa",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d213767c-9de9-4e62-b0e0-62b03c5eccc7"
        },
        "item": {
          "id": "7ee9c3e1-66e0-4682-a833-9cc4173cdba8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a8e74d4f-ebd7-4c56-9a9c-1151004196d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7414598d-a47f-42be-849a-0608d7a536da",
        "cursor": {
          "ref": "1e47a462-0944-4a68-8494-1c82ae510390",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c449b409-d730-4555-b0d2-cc647f5d81b8"
        },
        "item": {
          "id": "7414598d-a47f-42be-849a-0608d7a536da",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fa5a54f5-0888-475f-bff1-e185ab6da3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16daf2e-1d4a-4428-885e-f745c581a1df",
        "cursor": {
          "ref": "98ae1e15-b90d-44c0-a312-2690f52cfe88",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "43d32a04-10f0-4f1f-9a64-54089184dfc4"
        },
        "item": {
          "id": "f16daf2e-1d4a-4428-885e-f745c581a1df",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4dc26efb-3d9a-47b8-b4cd-b36d9f7d08d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0352eafe-fd52-4584-a99a-b969afde19f7",
        "cursor": {
          "ref": "c7cc5bdc-a284-4452-bd2a-297a8285162e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4de92ff7-9f07-4749-bb59-8e2e75ca8b7b"
        },
        "item": {
          "id": "0352eafe-fd52-4584-a99a-b969afde19f7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7eff98d8-a3ca-4b5e-a08e-518437f17cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a73714-e2a1-44b8-9359-37ebe49bc7d4",
        "cursor": {
          "ref": "7422963b-7467-4767-ad83-462b19968728",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d7c23d3f-94dc-48d6-865a-96c24accbdd3"
        },
        "item": {
          "id": "75a73714-e2a1-44b8-9359-37ebe49bc7d4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7dfc272f-5032-4821-b6f0-8bf0c5805168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c15fb08-e22b-4b5a-9e6e-d59c303132c3",
        "cursor": {
          "ref": "5356a5ae-26ce-489b-b579-68e4aea80bb9",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "de9ff779-b1f6-4f96-8506-030b6259c7eb"
        },
        "item": {
          "id": "9c15fb08-e22b-4b5a-9e6e-d59c303132c3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b7157010-1339-4b08-b8f7-0bec7218c1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d1eb62-8986-4558-bffa-02affb50b6f4",
        "cursor": {
          "ref": "a673d86d-11fa-44e3-ab0d-d31eade2ab12",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7ed3249e-c192-4f01-ad4c-a3bd8b1ec38f"
        },
        "item": {
          "id": "83d1eb62-8986-4558-bffa-02affb50b6f4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "399fb7b0-27f7-4489-bbc0-7d59b5fecc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d8b48c-2f2b-4862-a232-4657cea0d8f5",
        "cursor": {
          "ref": "e55f1e2f-2f75-4d1b-b597-218bb70c7e5e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a249b846-6ce5-4f76-94f2-07e143dc55ce"
        },
        "item": {
          "id": "29d8b48c-2f2b-4862-a232-4657cea0d8f5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1e01402a-bdff-4075-b501-bb11b6958665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8767940-2c5a-4719-b59f-999ce12562ef",
        "cursor": {
          "ref": "397231c1-0219-4c49-9d20-866298d3ef75",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c250c84f-2e8f-4b4d-ada4-24ce3339cef4"
        },
        "item": {
          "id": "f8767940-2c5a-4719-b59f-999ce12562ef",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "52fcca4c-fbe8-4041-ab8d-1fc1a4fe0085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e13fdf-499a-4292-86a6-17d594db76a8",
        "cursor": {
          "ref": "faa02070-d8cc-4516-b81d-d8611818598a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a22b5cd6-8235-46d2-a20f-09305b372516"
        },
        "item": {
          "id": "f6e13fdf-499a-4292-86a6-17d594db76a8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d83d3960-ada9-4ffb-bdb1-6b6be3e5fb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3476f9e3-bd9a-4928-9847-a26693ae4743",
        "cursor": {
          "ref": "cff5cc32-0e82-4838-bc46-8b2b40f162c2",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "994254e8-1742-4792-a474-a074ddafb550"
        },
        "item": {
          "id": "3476f9e3-bd9a-4928-9847-a26693ae4743",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0128171d-866a-4094-b227-5f7c45689f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06bd5bc-a8a1-469e-9944-5078cf9246fa",
        "cursor": {
          "ref": "5d32a20b-0cc2-4879-bea4-bda078da97ef",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "601abba3-0ab4-4dde-abdd-f16c2c7e14d1"
        },
        "item": {
          "id": "a06bd5bc-a8a1-469e-9944-5078cf9246fa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b554288f-f243-4f9a-a868-1b0819e30cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73461e4a-cbdf-4e52-adc8-db6d5d9de5bd",
        "cursor": {
          "ref": "91fb56ed-b7f6-4708-831f-677df298c214",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2d455c93-51c0-465b-9614-668891d8ed99"
        },
        "item": {
          "id": "73461e4a-cbdf-4e52-adc8-db6d5d9de5bd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "069747bd-e70e-4572-9afa-58aa9f8b60bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2317c57d-e015-4f15-87a2-08c96c72a987",
        "cursor": {
          "ref": "89fcee3b-c66e-4218-b59e-2ae0d993a669",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3f622f97-3a21-4197-aa09-f2fd2f4a98bf"
        },
        "item": {
          "id": "2317c57d-e015-4f15-87a2-08c96c72a987",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9071a25f-ce47-41c4-a31c-991b74e8caeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fa7309-54f1-4c28-9098-cd5a91c2a1a6",
        "cursor": {
          "ref": "1e0b53af-fdf4-4bea-8931-de4f35584885",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c36c0bd9-6dc5-431d-a23d-ae48e240a64c"
        },
        "item": {
          "id": "a3fa7309-54f1-4c28-9098-cd5a91c2a1a6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "87908960-8abe-4f8a-b0fa-f60b7441d9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fddb8b2-199c-48a5-8d3d-3156c9b58beb",
        "cursor": {
          "ref": "0b9584cf-b9f9-4b28-973c-71c504a6e11b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c7257272-8035-4857-a7c0-7a0566992794"
        },
        "item": {
          "id": "7fddb8b2-199c-48a5-8d3d-3156c9b58beb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "78914bcd-6c4e-4ec9-b7f2-4765dd0c328a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d41702-af8c-4d19-98fc-114c291b1ab9",
        "cursor": {
          "ref": "a6c1f87c-cba0-4fa1-832c-cbab98aced2b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2893e45d-c49f-4c0a-b450-ce1043953346"
        },
        "item": {
          "id": "21d41702-af8c-4d19-98fc-114c291b1ab9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "43c45eb6-a67a-4823-9d9f-149e18768d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7b3abf-e3ff-48f7-8852-109141070bd3",
        "cursor": {
          "ref": "79ab99cc-7823-403b-a8cc-1e1821f2d8a3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9c551055-8910-4523-ab6f-d6ad8f1ac6c8"
        },
        "item": {
          "id": "4f7b3abf-e3ff-48f7-8852-109141070bd3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e5990a53-9f72-48a7-ae12-e28d63f0f38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436c99e1-c19e-4647-afbc-a2ddda4bae0a",
        "cursor": {
          "ref": "828b9a42-1e7a-467c-af84-5f660d402656",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "801a94b6-0f5f-40a4-a429-f14eabb716f4"
        },
        "item": {
          "id": "436c99e1-c19e-4647-afbc-a2ddda4bae0a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9dfb37e9-a1a3-40d0-a0b4-fb8855198b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eddc16d-c039-405a-9588-98f146f5bdcc",
        "cursor": {
          "ref": "3dc40acc-0ed4-4654-92b2-135ae99291bd",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ac900ae9-6139-4234-912c-ba730b192717"
        },
        "item": {
          "id": "3eddc16d-c039-405a-9588-98f146f5bdcc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b1653aa5-b3e8-4691-8bb0-06502f337fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87c9563-16bf-4406-aacd-10a34a546c3c",
        "cursor": {
          "ref": "0f398445-559d-44cb-8ce5-392665f9ae24",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2aab191e-45af-4747-bb22-f7917fe299f6"
        },
        "item": {
          "id": "c87c9563-16bf-4406-aacd-10a34a546c3c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "68b3fe11-392e-4d14-a12b-4b67c9a73705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c6b8ac-df7b-4f96-bc54-9f4cb8fcf579",
        "cursor": {
          "ref": "0706fea9-e946-455b-a8ab-0c6435d77590",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f8c901b7-38ab-4ece-a87e-5c18cab24230"
        },
        "item": {
          "id": "a0c6b8ac-df7b-4f96-bc54-9f4cb8fcf579",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f1512ea5-f553-41b7-a08c-b4f351a9fc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbf5373-0072-4138-aec1-b76e41a23df1",
        "cursor": {
          "ref": "75b6bd4e-be37-452f-a4f0-e8e700bd879f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "53eaedda-5786-40b3-8b3e-6840dcd6cedc"
        },
        "item": {
          "id": "4bbf5373-0072-4138-aec1-b76e41a23df1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e6838f85-1a14-47fb-9f58-2914a4ce4acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb928190-3f26-404a-b5b1-c3b5ea503351",
        "cursor": {
          "ref": "dd8325cc-c57c-4c72-b59f-e334d96861cd",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7335a7b1-66d9-4adb-8783-555a395835e5"
        },
        "item": {
          "id": "eb928190-3f26-404a-b5b1-c3b5ea503351",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0339b203-68bf-4655-b016-aad7e2c4ddfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed79b236-cd20-49d1-bf69-c303b54ad1d6",
        "cursor": {
          "ref": "de6eb24a-770d-4752-bda0-e5226c74180f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5605658c-0d40-4ccf-af2e-4d6d76e11ba2"
        },
        "item": {
          "id": "ed79b236-cd20-49d1-bf69-c303b54ad1d6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9058e95c-937b-4d45-b5cf-dbd2a4a73d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3575155-781b-4c7c-adc1-134bdd549f99",
        "cursor": {
          "ref": "558ba1ea-eb4d-4c2e-b86c-a1d0957351ba",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e1e2865c-7de9-4cdf-8230-42ed5380300d"
        },
        "item": {
          "id": "f3575155-781b-4c7c-adc1-134bdd549f99",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a1456ef8-0be0-497c-8c71-0b403caaf8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c56fcf-8ac1-42aa-9480-e5e604e67f2d",
        "cursor": {
          "ref": "091e38df-3db2-46df-b56f-919174e759fd",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fe2245c8-5542-4113-b572-0ad5d89a5039"
        },
        "item": {
          "id": "f6c56fcf-8ac1-42aa-9480-e5e604e67f2d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b97a168a-e6ea-41f4-b1dd-6b78d2fcb362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3d3851-1013-4dca-b0d4-6cb2ea5714c1",
        "cursor": {
          "ref": "f25d6a9e-ddb6-4a7e-82ae-e1e43a14c5bd",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d59608fb-742f-4614-9eb7-2cadd4d184a7"
        },
        "item": {
          "id": "8d3d3851-1013-4dca-b0d4-6cb2ea5714c1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b5615567-62d2-43f1-b42a-3eaae29d89ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0265e654-9ca3-4af9-97d7-3c877e4a00ee",
        "cursor": {
          "ref": "79997cda-c766-4c88-9067-9e03408b83d5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "22d861d6-29c3-44c7-bec8-890d998f9994"
        },
        "item": {
          "id": "0265e654-9ca3-4af9-97d7-3c877e4a00ee",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "296938be-962d-47a1-bd82-a76ace20ea45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee60b15-654e-40e8-a75c-5b1eab19e355",
        "cursor": {
          "ref": "9b3ab50e-3d26-4d05-a1ba-a6b062a29aba",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "313707fb-8f74-4cef-bda6-023385981709"
        },
        "item": {
          "id": "fee60b15-654e-40e8-a75c-5b1eab19e355",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7d16b721-64ff-4c06-97ff-aca61c6fff26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878ef631-3973-4b03-b44d-6af6bb100780",
        "cursor": {
          "ref": "42804323-b27e-4476-9c90-1976d699f3ce",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0529fa9a-6345-4252-a70e-77ace513a8bb"
        },
        "item": {
          "id": "878ef631-3973-4b03-b44d-6af6bb100780",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e4543392-798b-497b-9e38-daca70f63320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b159c1-d7d8-448e-bf86-9e9a3feaea63",
        "cursor": {
          "ref": "c75674b6-7000-41f2-8a78-d6441556c11d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e8b993bd-0e5d-4b69-b234-de4f06910c80"
        },
        "item": {
          "id": "28b159c1-d7d8-448e-bf86-9e9a3feaea63",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "201d6e9d-99e9-4452-979a-4691a788ce02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c631c9cb-e5df-44cc-a93b-823ced125a42",
        "cursor": {
          "ref": "254adba5-0f6a-4cc3-9747-251962ef8646",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "62c4482a-f7d0-4501-81ac-4c8b1c37863f"
        },
        "item": {
          "id": "c631c9cb-e5df-44cc-a93b-823ced125a42",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e8f702ae-705c-40be-b927-ca4acad8d82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df9fa05-6745-40a3-bacc-4c3d2e05d5c7",
        "cursor": {
          "ref": "f25d4779-d88b-4d4f-b0d2-d35ba17aa299",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2fa0e8d4-2668-4890-b8e6-5a569500dfcf"
        },
        "item": {
          "id": "8df9fa05-6745-40a3-bacc-4c3d2e05d5c7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "00530b52-4cfe-4433-a3c0-7f7e334113a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4a7f2b-1b32-468c-a621-7bbbd37319f6",
        "cursor": {
          "ref": "97cfefd1-319f-4c6c-9428-be50158ebff2",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "59a3a4f4-da27-4f22-b2f6-1803ced1370a"
        },
        "item": {
          "id": "1d4a7f2b-1b32-468c-a621-7bbbd37319f6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "329ccd72-9552-4b77-802d-cbaaa1c9a951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12356c5b-53f6-47fb-b438-cb604fd5d95d",
        "cursor": {
          "ref": "0ce49541-3c9d-47df-82b8-c6f6ddbd2b97",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a1867a8f-97e0-42ca-97fb-95db9b8134bb"
        },
        "item": {
          "id": "12356c5b-53f6-47fb-b438-cb604fd5d95d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "78d96f6e-43d5-4441-85c9-0ef69e3f42f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a86ffb5-39ac-4c99-b280-179916533bc0",
        "cursor": {
          "ref": "a2f381ab-b87f-4d0d-b8da-a1482d57eeb7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "67cdb330-a7b4-422b-b7c4-b94451b56d0f"
        },
        "item": {
          "id": "6a86ffb5-39ac-4c99-b280-179916533bc0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eb18c566-87ca-49fb-884c-1ea38d6b363b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fc7302-c801-47fa-af80-241dc5d0697f",
        "cursor": {
          "ref": "b9409cd4-f58e-4ad8-8f41-db1afc11933d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2529a61d-40f9-4629-9f43-f8a21a28b3ba"
        },
        "item": {
          "id": "c8fc7302-c801-47fa-af80-241dc5d0697f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "31d07e0c-a9ec-47c2-b7f3-48b50abbe20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bc80fe-f7ff-4ee3-b556-e817729e5c56",
        "cursor": {
          "ref": "ca8be179-140b-4c6d-9cbc-75ed0237bf19",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d443f631-7775-4d0f-9483-e3888214edf7"
        },
        "item": {
          "id": "60bc80fe-f7ff-4ee3-b556-e817729e5c56",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a709bed3-db01-43eb-af14-d92895ad919a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270ad5e4-93e6-42d4-804d-ab4369b3eb66",
        "cursor": {
          "ref": "80d8d81f-6baf-4386-a998-9ba24a05e042",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0cad8800-3019-4f97-b151-dc9485460030"
        },
        "item": {
          "id": "270ad5e4-93e6-42d4-804d-ab4369b3eb66",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9c323dad-06cc-4ab4-a54b-31993e9ff35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcfb781-f4f2-4ec4-afc0-ac0ce0a432d0",
        "cursor": {
          "ref": "c4651bec-ba22-4c14-9e34-fc830764dae4",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c6448b54-6a77-454e-8eb1-d1e3bd939526"
        },
        "item": {
          "id": "cfcfb781-f4f2-4ec4-afc0-ac0ce0a432d0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "589ed9dd-20ed-406d-821b-f4bf61a7678d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5280285a-7758-42c2-a834-3b6b0af68b7c",
        "cursor": {
          "ref": "0f3b904d-5ef0-4202-b896-d4fffd14ec26",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cda0b1d0-5ba2-4d86-95c1-0349e813292e"
        },
        "item": {
          "id": "5280285a-7758-42c2-a834-3b6b0af68b7c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "504817d3-ab70-4a56-b680-71361d87c76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4072b077-cc74-46e4-8028-a13462011327",
        "cursor": {
          "ref": "2b78d1bc-dba6-4f35-9b96-39fcbdc7e0ac",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bcfb59ea-f595-43c0-8dea-209bf0a09577"
        },
        "item": {
          "id": "4072b077-cc74-46e4-8028-a13462011327",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c07f87e5-71ec-4627-966e-446b2d5c1b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293885b1-4a53-4387-990f-162fe775355f",
        "cursor": {
          "ref": "2bdedefd-0e16-44aa-b036-e3336193de71",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "94719660-c461-4239-9b93-7e1773ac1216"
        },
        "item": {
          "id": "293885b1-4a53-4387-990f-162fe775355f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "00ac20c3-3ddd-465a-8e7e-086e4ea0e2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2461b656-6ae1-429a-8d62-81b6588a7869",
        "cursor": {
          "ref": "1d0bf56a-d6cc-4499-9434-8f47e1b1e970",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "10c5659d-bb23-46c7-bbca-cf77a7576008"
        },
        "item": {
          "id": "2461b656-6ae1-429a-8d62-81b6588a7869",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3723e42f-12fb-47d1-8628-59cc83122c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c9a3ad-ae88-424c-bae1-acfd49e37276",
        "cursor": {
          "ref": "8a557d64-1fdd-422c-abad-5aaffbc08295",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6413d313-c318-48af-9bfc-ff7221499d2d"
        },
        "item": {
          "id": "06c9a3ad-ae88-424c-bae1-acfd49e37276",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0070587e-c996-4a2c-8d5b-be080121ce87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1de9778-dae7-4c1b-a204-005bcda46ad1",
        "cursor": {
          "ref": "76673908-fc68-456d-a229-4cc2d8e8f01a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ce4c182d-f965-4928-8880-8bba006076c3"
        },
        "item": {
          "id": "c1de9778-dae7-4c1b-a204-005bcda46ad1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "506376a0-dbf6-44fe-a832-47aa0066be1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1554361b-4661-4b27-b8b0-1211a87ad5f3",
        "cursor": {
          "ref": "cce45f8f-113e-46c4-a35a-1512a7771096",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "009c92c7-62b2-4203-9b2b-e8b398c0836a"
        },
        "item": {
          "id": "1554361b-4661-4b27-b8b0-1211a87ad5f3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "44026391-784f-4f02-806a-104dba1a89a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ec4622-98a4-436a-ba05-19e8fd43bce8",
        "cursor": {
          "ref": "7ba7a48a-bdf2-4ff6-ac24-c4b00a91c60d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "456e135a-243c-42d7-9aab-7a9ff126f608"
        },
        "item": {
          "id": "65ec4622-98a4-436a-ba05-19e8fd43bce8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d8ce3b39-8e76-4719-bf54-746959be4a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f9a1b7-e5b1-43cf-9151-500396242361",
        "cursor": {
          "ref": "93681ec7-ee78-4d17-a5da-d3378b790179",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bded6ce3-785b-4ef7-ac1e-574bfdfd2467"
        },
        "item": {
          "id": "f4f9a1b7-e5b1-43cf-9151-500396242361",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "477df52a-9564-4209-bfe1-c97c82b939f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee79744-7e67-4fa3-9ccf-d762af6e41b4",
        "cursor": {
          "ref": "0c638e81-badb-4234-a4e5-c8f381be156c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e8bbb77b-6f5a-41b3-9f17-88b12bae2d35"
        },
        "item": {
          "id": "cee79744-7e67-4fa3-9ccf-d762af6e41b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "917d224b-b294-4e00-b342-4250c22edfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e9332b-4ff1-48a7-b727-a512f1443cd3",
        "cursor": {
          "ref": "89303e8e-cf8f-49e7-b137-5d17b13507a1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "645559c0-2a71-48dd-beb6-79205901df3c"
        },
        "item": {
          "id": "41e9332b-4ff1-48a7-b727-a512f1443cd3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e5347ea9-4a1b-4479-8f9c-f4e2ae0ffd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19aac451-e20d-4327-9681-a7d17bfaa585",
        "cursor": {
          "ref": "e4df25a1-121f-4ad6-92ae-007d3a3c0557",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8177c7c4-1bab-41e4-8a1b-be4d702c4714"
        },
        "item": {
          "id": "19aac451-e20d-4327-9681-a7d17bfaa585",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2fbddb24-763e-4f4c-97f4-b6fe13359aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d1c234-df7a-45b8-ad88-3d28d9554e88",
        "cursor": {
          "ref": "caf77433-c282-4947-bb8c-19520df4ad2c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fd2f99d5-353b-4f2c-87f2-9bb4d816ab44"
        },
        "item": {
          "id": "93d1c234-df7a-45b8-ad88-3d28d9554e88",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8bfb37e4-4f0d-4f0c-be78-a6fac3c1050d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a04506b-611d-4608-a731-17defece30ad",
        "cursor": {
          "ref": "a2610e72-5865-48ae-9ea8-8514ffa7c6f1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f5978f9a-7c11-457a-b5af-2c03df7fb895"
        },
        "item": {
          "id": "8a04506b-611d-4608-a731-17defece30ad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6d76576a-b3e7-4a18-ad22-95c2e03fec0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b3bc90-65e2-4edb-9390-85e7df46eb7a",
        "cursor": {
          "ref": "846e491f-cfaa-4838-860c-1328b50ab3fc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "419648a9-69e5-467f-a50e-6eb3ee079c59"
        },
        "item": {
          "id": "e2b3bc90-65e2-4edb-9390-85e7df46eb7a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a76dd784-a3ca-47f0-841c-fa64fae5ae67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d385cf-628d-48c8-a739-0fc5682fa86f",
        "cursor": {
          "ref": "04c632ae-fbcc-41bd-a439-72f239be1818",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "89ab90c6-20a8-4ff5-bf17-2d84bf1754c7"
        },
        "item": {
          "id": "10d385cf-628d-48c8-a739-0fc5682fa86f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4bfa6d09-1d74-40c1-aa41-a231a4dfe455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e06e748-ba91-4983-a50e-66a39196784e",
        "cursor": {
          "ref": "54b9578f-b9cd-480e-9422-a6b92ad2672b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ae108eac-74ed-4106-865a-0aea67b6bb27"
        },
        "item": {
          "id": "9e06e748-ba91-4983-a50e-66a39196784e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cba39603-10f1-405f-adbd-e69dc7fac60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52de4440-8259-422d-ab80-5a9486b3eb65",
        "cursor": {
          "ref": "d3b59857-ff34-4df1-b485-d4e3e009fe2c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0b9b8e66-a29a-4623-955e-8ab035b0b523"
        },
        "item": {
          "id": "52de4440-8259-422d-ab80-5a9486b3eb65",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "95f8409e-7d63-43c0-b439-ecb6429f5b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71b92e9-b888-4b2b-bc5e-2df6256b82fa",
        "cursor": {
          "ref": "701c01fd-397f-4342-94e0-ff33a2d12fdc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e2578cb5-f03f-4d8b-bf74-9357aec832c9"
        },
        "item": {
          "id": "b71b92e9-b888-4b2b-bc5e-2df6256b82fa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "32136b05-c01e-4061-bde3-7b7207f4c5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72115daa-987b-4de1-ada6-be5ef0e71b44",
        "cursor": {
          "ref": "cc24a557-da40-4699-ab1e-823f39716894",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0c7a877b-b776-4cfb-9fd6-358564749846"
        },
        "item": {
          "id": "72115daa-987b-4de1-ada6-be5ef0e71b44",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "defc9b99-2a0f-4daf-8fef-5f43c741feb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88979641-9487-4895-a9ee-5c53ff60b539",
        "cursor": {
          "ref": "9ee86d3e-6d85-45b8-87a8-1286900bc683",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9c4b1c49-c031-4268-a382-014d2d990248"
        },
        "item": {
          "id": "88979641-9487-4895-a9ee-5c53ff60b539",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2e0ae8fa-a134-4955-8fea-953eed3fedbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c41f95e-c1d3-404e-8d81-651155af4bfb",
        "cursor": {
          "ref": "43d84cfe-e823-42f2-8131-720aaca2986b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "eeabe706-91f0-4f90-8fee-e3cd2f6b1c54"
        },
        "item": {
          "id": "2c41f95e-c1d3-404e-8d81-651155af4bfb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e6f2cf2c-967f-477a-b37e-93de39f2e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cca1e5-a797-4e46-b65c-22c972ecdd97",
        "cursor": {
          "ref": "91cd6d16-8fa1-4f5b-b83e-e75403274a52",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "604556f1-251a-4b2e-b6e2-470638f7d86d"
        },
        "item": {
          "id": "12cca1e5-a797-4e46-b65c-22c972ecdd97",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fe22b863-4825-4138-8c6a-58c36cbe1d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7932e1-4cb2-4790-961c-365a49599c1b",
        "cursor": {
          "ref": "8e7d0389-b166-4eb4-b79a-cd34a717658f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cbd9bbfa-7035-44f8-b914-fe62fe3422c0"
        },
        "item": {
          "id": "3e7932e1-4cb2-4790-961c-365a49599c1b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1e77f73d-54a8-421b-b974-acc72c4ef8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e389c77b-5d1e-461a-b350-0109f853b54b",
        "cursor": {
          "ref": "18813d79-8b85-437b-a2ce-c56a128fe241",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0a87da7b-f85f-45a1-9464-d5580fd3ba71"
        },
        "item": {
          "id": "e389c77b-5d1e-461a-b350-0109f853b54b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0a9f26ec-533d-4b08-b613-ee3af17f8b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9e4d8b-3fb5-444e-acb8-74736371e7b9",
        "cursor": {
          "ref": "e4495e9c-c298-46e9-84e5-6793f178799f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0c67fe59-4a3d-46b0-b6ae-72d29bb1a80f"
        },
        "item": {
          "id": "db9e4d8b-3fb5-444e-acb8-74736371e7b9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b828c70a-8500-4c72-acc6-b6ff464e2dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29b7b3c-f245-4f20-893a-1135eae1f18a",
        "cursor": {
          "ref": "612e2e4e-e6d4-45a9-a16e-936f1527a2f4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6d80b05e-a61b-4cf6-bd4c-524f93cbfe5e"
        },
        "item": {
          "id": "d29b7b3c-f245-4f20-893a-1135eae1f18a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "19c05b66-2850-42df-a660-cb0099b847a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4005d64-d73b-4412-973d-8552b70af069",
        "cursor": {
          "ref": "46c348f6-ae57-4d69-971d-0b826d212cfd",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "aa636467-18c2-4358-84ee-bb0ba9a955b6"
        },
        "item": {
          "id": "d4005d64-d73b-4412-973d-8552b70af069",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "22e981d5-f6a8-4428-bf42-c4307ddfc167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53888879-122e-411f-99fb-22b5851dfd23",
        "cursor": {
          "ref": "28e1d7a2-b172-495a-85e3-84202de74653",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0eca6b66-5215-40b2-8e2e-c72c6d7e2ff8"
        },
        "item": {
          "id": "53888879-122e-411f-99fb-22b5851dfd23",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b06c5b8f-818d-463b-8e1c-90c36494f8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b71bb2-e955-48b8-8411-798471407a4b",
        "cursor": {
          "ref": "2bcb8984-bcf9-4418-b839-1e45469d4af3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "850ebb91-67e5-4c0e-9fc9-dc7b31294179"
        },
        "item": {
          "id": "19b71bb2-e955-48b8-8411-798471407a4b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0c60f90b-2e7e-49b2-853c-5b32304d4253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8092a4-d2d8-47a5-92a8-e702cdce3a8e",
        "cursor": {
          "ref": "860440e5-3260-4868-9aa6-8efb28e80fa9",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f0849ea3-8f07-4f1d-a658-fc089ed822f9"
        },
        "item": {
          "id": "af8092a4-d2d8-47a5-92a8-e702cdce3a8e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "433c0406-7882-4803-a556-7d71eaba923b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6e0b09-1d55-42c7-800d-cc556dd95eac",
        "cursor": {
          "ref": "34429cce-9384-47a7-9738-0ecdb2ed344e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b68ed559-73a4-4df0-880d-45320b5d4806"
        },
        "item": {
          "id": "ef6e0b09-1d55-42c7-800d-cc556dd95eac",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5883a32d-c05d-4c09-a524-9af46a24b7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3e004c-b6f6-4b36-87c5-83ff59895686",
        "cursor": {
          "ref": "41e4079c-99dd-490a-b0a0-25e8e96e2b0b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "33a8edd6-f361-42eb-b484-0a861762ecc9"
        },
        "item": {
          "id": "5d3e004c-b6f6-4b36-87c5-83ff59895686",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "77dfc005-04b1-46aa-8797-af109a0317f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecebab4d-0a46-4009-9247-2ba4961db573",
        "cursor": {
          "ref": "3139a428-03c7-4c14-8f49-a6fb950e5dd5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1a6620bd-b7fd-4ea9-b226-ffcbc28bb233"
        },
        "item": {
          "id": "ecebab4d-0a46-4009-9247-2ba4961db573",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c4d00ed2-1699-4a9a-807b-ec5403923633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658b8641-c5aa-40b6-a019-2eba1789cd7c",
        "cursor": {
          "ref": "e1270ef1-c558-440e-a0f4-a276f77657b6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c5d2c904-f9c6-4058-99d4-fd920ae472cd"
        },
        "item": {
          "id": "658b8641-c5aa-40b6-a019-2eba1789cd7c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4f7a4bd6-1938-4e6c-97d2-76958815b93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d81e970-5f94-49d1-9bfa-b35775340e6c",
        "cursor": {
          "ref": "550b33bc-97ef-4f4b-a059-7df904364a05",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8c337954-71c0-4bdd-a0c4-b9401a0b7a74"
        },
        "item": {
          "id": "4d81e970-5f94-49d1-9bfa-b35775340e6c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5e3d7ba7-44dd-4fb4-8472-b61de95ae0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f7ddc2-f652-495b-b216-adc7a61d15d6",
        "cursor": {
          "ref": "a28b1cc2-b110-414e-8846-662f83f892d7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "64fb2291-fe7c-4f86-a63f-fc4ecd56d269"
        },
        "item": {
          "id": "99f7ddc2-f652-495b-b216-adc7a61d15d6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "49b2de0d-f08a-45ff-b714-7d99c93ba8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2308bb-ff93-4b2a-90e4-18e72f7f2bc8",
        "cursor": {
          "ref": "0e22b307-4e2a-4fda-ac05-051f802c6971",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "51bcbbd8-cbdf-4432-91d8-1f177831054c"
        },
        "item": {
          "id": "7e2308bb-ff93-4b2a-90e4-18e72f7f2bc8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7c54f816-8909-441b-927e-156dfd829c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7257d0a5-8be4-444f-a2b4-3847b7db9e69",
        "cursor": {
          "ref": "c5e03060-e3f0-4d34-af1e-ff004fd9c047",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fa05d571-a1b6-4329-99e2-2aefd822fe50"
        },
        "item": {
          "id": "7257d0a5-8be4-444f-a2b4-3847b7db9e69",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9a2d90db-8250-45bf-8437-52c1e1409a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c58832-78cb-4753-bbb5-71d34a8e0f8a",
        "cursor": {
          "ref": "ee42a3f3-5e59-464d-8f93-75488593033e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e81e0db5-1063-40f9-b7fd-43f7cf6ab929"
        },
        "item": {
          "id": "03c58832-78cb-4753-bbb5-71d34a8e0f8a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "27b7202b-30c6-406b-b161-f1d12cff3287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb445a5-b0cd-4218-9b42-2f6f44c9e8fa",
        "cursor": {
          "ref": "c0f31da2-1b01-4cda-98e0-49f533c1d182",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8e421d9c-3fcd-4339-9c0f-7ff35f8e6be4"
        },
        "item": {
          "id": "4fb445a5-b0cd-4218-9b42-2f6f44c9e8fa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4ecff719-e952-409e-9089-360ab6221077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979bd505-8b73-44c8-a331-c8f02e929ba5",
        "cursor": {
          "ref": "3fe6a4e2-c968-4ebe-a1b7-97cc7453a781",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7bb1c81d-4d1d-4a43-ab07-79db7ef58219"
        },
        "item": {
          "id": "979bd505-8b73-44c8-a331-c8f02e929ba5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6e48627e-e3a0-407b-ba04-e0b6401c3e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669d1a31-ba0c-4a73-abd1-a3f32642e528",
        "cursor": {
          "ref": "192510eb-7705-4dc7-bf66-01fa1ecc2b38",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1bc80d8e-aa38-480f-ab7b-af7f5457ba69"
        },
        "item": {
          "id": "669d1a31-ba0c-4a73-abd1-a3f32642e528",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "daa95aaf-3fd3-4430-9ac4-f5507c228e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26271051-2f70-4cc2-8e75-609b869e08fd",
        "cursor": {
          "ref": "d7a1ad35-4aa9-408c-b467-4efcbdac8e8a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "07afd0d3-b417-42ae-b855-f1ff0f32fc22"
        },
        "item": {
          "id": "26271051-2f70-4cc2-8e75-609b869e08fd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "377881b4-1052-4e25-99f1-d648c848e2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c027cfc7-7f05-409c-a283-6c821a5d1bf9",
        "cursor": {
          "ref": "3553f199-7e1d-4776-88d3-4410450dde20",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "77549fcc-88ca-421f-862d-af5d2dc8b2d2"
        },
        "item": {
          "id": "c027cfc7-7f05-409c-a283-6c821a5d1bf9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bf059b9c-691b-455c-b7a5-0d6c781a9ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0bd5ef12-195d-4aeb-be25-0eedd463585b",
        "cursor": {
          "ref": "d32f073c-b891-4f1f-8086-cb758a9e07d3",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "84feb9ec-c056-4cba-bb1e-bc4c712394ab"
        },
        "item": {
          "id": "0bd5ef12-195d-4aeb-be25-0eedd463585b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5471d5d6-2cd7-44b5-bf2f-cce54946f612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "53d83e65-a71c-46ff-9b9a-5081190e14ac",
        "cursor": {
          "ref": "9df72707-2010-4b3c-87aa-931bcec3134f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bbbf720d-5e03-4ba5-8483-4ea2823d936c"
        },
        "item": {
          "id": "53d83e65-a71c-46ff-9b9a-5081190e14ac",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0c2bf41f-ea9e-4597-bf39-79c844e9dc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "576cd94b-19e4-41a0-93ad-2b77bb8edf12",
        "cursor": {
          "ref": "71530089-ff8c-42de-a40e-7bad070be0e2",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b4577cd6-cdfb-4d34-9820-93458d0dbec6"
        },
        "item": {
          "id": "576cd94b-19e4-41a0-93ad-2b77bb8edf12",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9a58247b-4c2b-4f6f-ac58-25a23235d9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e54d87f0-8ac4-4425-b0ba-9b0a6ec6b786",
        "cursor": {
          "ref": "ddb9a157-9c8d-486c-bf5a-41bc0e5910cf",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "de65721b-5788-4d97-aec2-89bf91f0c06c"
        },
        "item": {
          "id": "e54d87f0-8ac4-4425-b0ba-9b0a6ec6b786",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "31cd629e-7085-4a33-b6e1-41ef2569fb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "78b0eeee-5117-49e8-a7bc-0633af5fc5ef",
        "cursor": {
          "ref": "68bd3f8e-b6db-44bc-aa92-f38be088f7d0",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c02f7687-cdb6-4c1d-8733-f3c65bb1ae57"
        },
        "item": {
          "id": "78b0eeee-5117-49e8-a7bc-0633af5fc5ef",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b8937de1-2375-4f30-8c81-8c7b2ad35619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "aeeab020-025f-4c43-ac18-fe827952e3b3",
        "cursor": {
          "ref": "d14a6f7c-9f5c-4dcb-b3f2-c784143e9041",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0cb39a1f-b7f3-448d-91ec-ac9979080d78"
        },
        "item": {
          "id": "aeeab020-025f-4c43-ac18-fe827952e3b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "63ca7209-ac0d-4e93-bfd9-28d341c961f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95cad6d-acc3-4a17-86dd-1923765b0b90",
        "cursor": {
          "ref": "52f9e28b-9eeb-483d-9345-b20a6a69c506",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0e4a22df-94d6-4a4b-a602-52bdf8004139"
        },
        "item": {
          "id": "f95cad6d-acc3-4a17-86dd-1923765b0b90",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "47da422e-c8a7-42e1-b5c2-b60880510537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53789940-e9f2-4bd3-9b9a-d9eeaffa4d55",
        "cursor": {
          "ref": "abf89a81-760d-4f1b-9ff0-9ae531d62b44",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "22643b63-f026-4f07-b77b-7103fde2d72b"
        },
        "item": {
          "id": "53789940-e9f2-4bd3-9b9a-d9eeaffa4d55",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b7f2a900-a436-4a33-bf88-bb65f3675f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6028b253-7297-41c9-835b-25114d36a44e",
        "cursor": {
          "ref": "b15b59b5-2848-46e7-8e5c-2bdf1c9da71c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1ff8cd13-a50a-424a-92a6-874f553c8421"
        },
        "item": {
          "id": "6028b253-7297-41c9-835b-25114d36a44e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6553c848-7ab0-4891-a9c5-3196bdf7e48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b6defc-8b77-4a94-a3ca-aefa319bc159",
        "cursor": {
          "ref": "fd679408-e564-487e-b699-4b5fee9513b4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a5fd2c63-a7e1-4831-9a9e-0fa02febb203"
        },
        "item": {
          "id": "47b6defc-8b77-4a94-a3ca-aefa319bc159",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "43d51835-8f4c-4774-bd4a-de8988fa2ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb14eed7-a146-4afe-a484-bd4fbecd0cb8",
        "cursor": {
          "ref": "0a4c22b1-70a4-4506-99a7-d62509132358",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "935aa112-ba48-4d16-a3b2-2392b4c7415f"
        },
        "item": {
          "id": "bb14eed7-a146-4afe-a484-bd4fbecd0cb8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ceb426dc-54ed-46da-bdb1-3ee019cc9942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd677170-34a0-4927-a53f-edb42d92869f",
        "cursor": {
          "ref": "29dbde06-039f-4f75-a9e5-83c9f3b318bc",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ea8204a4-fac3-41f7-8d73-abd58f9d6324"
        },
        "item": {
          "id": "bd677170-34a0-4927-a53f-edb42d92869f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "37a8da3a-5c97-451c-b3fd-a17c6e0e20b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bf1a9f-f7ba-464b-9692-c05da2ec02a7",
        "cursor": {
          "ref": "cfabf187-ed2f-41df-8644-af0970b95bd0",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6ae0b61b-c495-498f-94c1-e916681144d5"
        },
        "item": {
          "id": "d0bf1a9f-f7ba-464b-9692-c05da2ec02a7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c34bb070-718d-42d2-828f-1fd65b610692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2970f583-2578-42c7-b03b-df6e394109ee",
        "cursor": {
          "ref": "a3d26098-a3a3-4181-9960-680b36ea6620",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "af6a65ee-48f6-4d80-9758-b638461d042e"
        },
        "item": {
          "id": "2970f583-2578-42c7-b03b-df6e394109ee",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c4ae08f8-7050-46bf-b346-efdfcac3f93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042b87bb-a05d-4784-9792-1e2017bb6b60",
        "cursor": {
          "ref": "f50d9acf-63da-4caa-9234-0a040d5902f1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4f728180-9269-4c69-85b5-0be9bb50769f"
        },
        "item": {
          "id": "042b87bb-a05d-4784-9792-1e2017bb6b60",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a690ca53-c215-4478-9bae-690a4b2449bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e51df72-bb51-4173-9b2e-30d028582fe3",
        "cursor": {
          "ref": "fb21c747-0c10-4634-9c39-6dd4fd1b614f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "aac83a44-179b-45cc-8a37-d7f5260fcd4d"
        },
        "item": {
          "id": "8e51df72-bb51-4173-9b2e-30d028582fe3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "94a364fe-b9a6-47e4-a461-38f0569af649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36a1dd4-2510-4fb4-bd30-347c18268487",
        "cursor": {
          "ref": "4d022ebf-90f3-466b-bc8d-8a68c1b65952",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8988288a-4d50-45f8-afc3-9fc9eef76334"
        },
        "item": {
          "id": "b36a1dd4-2510-4fb4-bd30-347c18268487",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "956796d0-78a7-4942-86fb-82e65ef1f284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7aa4a5e-7490-4e46-97b0-07b7ae64f0d9",
        "cursor": {
          "ref": "4b82f458-352e-49c7-8bae-99aae1585152",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ff1b64f1-cf18-4e8a-b165-8a4ba7e1f99b"
        },
        "item": {
          "id": "d7aa4a5e-7490-4e46-97b0-07b7ae64f0d9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1df0d86b-722f-4032-9296-7b89d0ce1672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b391659-45e7-4b17-8795-ad5cd10220ac",
        "cursor": {
          "ref": "af39f072-03b0-4970-b570-8f47db432b27",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "757cb867-13b8-40a5-af25-76db3dc20113"
        },
        "item": {
          "id": "6b391659-45e7-4b17-8795-ad5cd10220ac",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "abe8f35c-a945-4fbb-99ba-3d91076f7f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e98092c-4142-4b5a-a94a-1f13b52de950",
        "cursor": {
          "ref": "3c3d4359-63cc-4d93-8217-fe31eb2a1ffa",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "165aa917-a544-4974-b5d4-256f037c4995"
        },
        "item": {
          "id": "6e98092c-4142-4b5a-a94a-1f13b52de950",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1499dafa-8dcd-4f77-ad24-6312f6cc229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e60899-3aa1-4bfc-b9c6-2ec6059cf9dd",
        "cursor": {
          "ref": "ed638fc4-37f4-49af-b4c2-a05a3da41a34",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fbf66f95-dffd-44e3-ba64-0c9a84ca506d"
        },
        "item": {
          "id": "73e60899-3aa1-4bfc-b9c6-2ec6059cf9dd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a3076ac7-7cab-4d2b-a5c6-ffed35fcabc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d06d1c-c3f8-4662-8767-1420641454d5",
        "cursor": {
          "ref": "76f30ba9-b10b-472b-9fa8-a524a304ee29",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "13d9ac8e-3489-4a2c-b59f-a6f6d078d6c4"
        },
        "item": {
          "id": "88d06d1c-c3f8-4662-8767-1420641454d5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ae781f9b-4ba1-4480-b42d-d5f0f5ef3123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c861862e-befd-4a5b-899b-8200cdfc9370",
        "cursor": {
          "ref": "e4bb5429-ef87-4873-a92b-8b2c667214a5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1b113e48-9bba-48ce-81ad-8cb81cfc7f3e"
        },
        "item": {
          "id": "c861862e-befd-4a5b-899b-8200cdfc9370",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8bde4167-3367-4104-98f2-f5cb2c1045d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752a6e61-e6f4-45a6-bea9-ed0801be3914",
        "cursor": {
          "ref": "ced7ec84-7955-4a08-a239-a90928662477",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9dbbba71-73ff-4c66-960e-2d1fe25fb680"
        },
        "item": {
          "id": "752a6e61-e6f4-45a6-bea9-ed0801be3914",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "434dec16-80af-4c3f-a36a-78141ecea534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f040013c-fb09-486c-ac2d-097bf39d7e23",
        "cursor": {
          "ref": "746e9359-d77f-45e4-aef5-7f7eea855aed",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "60dae7db-2e32-487e-b484-0fb8930ae12c"
        },
        "item": {
          "id": "f040013c-fb09-486c-ac2d-097bf39d7e23",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fa2bff2f-25d4-4aaa-89ab-321a8f75c5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe2ce0f-1728-4fe1-b925-4955944b7940",
        "cursor": {
          "ref": "926d1a91-6b34-4ce8-a06f-57e2ac3bd1f4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5e56115c-d817-43a2-b241-7fde99cd7d29"
        },
        "item": {
          "id": "abe2ce0f-1728-4fe1-b925-4955944b7940",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1527e533-23ee-4d04-bd34-c883288b2621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f543d32-bd98-4eb1-944d-fb71d2c1e370",
        "cursor": {
          "ref": "6de9f92b-af4e-4551-86ff-fb542ba68fc6",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "149c66fd-d33e-4b4e-9a3b-835e907777a8"
        },
        "item": {
          "id": "9f543d32-bd98-4eb1-944d-fb71d2c1e370",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "888fc57f-3e90-4853-8185-c7b1b6f3103b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb19624-6d54-422d-80c1-61b904acc595",
        "cursor": {
          "ref": "ff8b29b7-88da-4687-8923-4a02fca203f0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a495eeb8-b067-41cf-a1f6-37eeb49441cd"
        },
        "item": {
          "id": "ebb19624-6d54-422d-80c1-61b904acc595",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ae2aba4e-22ae-4de0-a32a-424e2aa9a763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722c6e45-ed20-4b22-b1df-773b0fbaee97",
        "cursor": {
          "ref": "ef948d95-2518-42e3-b40e-85cd3a34e76b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "43ea4966-5c94-4ed0-867a-c3e201f5364b"
        },
        "item": {
          "id": "722c6e45-ed20-4b22-b1df-773b0fbaee97",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c3be4159-7b5d-4692-bfd6-02d97785229e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfe5267-029b-490f-b055-10f6b7bf4deb",
        "cursor": {
          "ref": "8383286c-8ca4-4cd8-8a20-cf8e1b359c43",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e2b13782-a143-44bc-ae9e-bf9288417321"
        },
        "item": {
          "id": "7bfe5267-029b-490f-b055-10f6b7bf4deb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d4b1a7ab-2e52-4317-9aa9-7559f37e63f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70f0e44-b24f-4e4a-8310-3790dfa0b4ee",
        "cursor": {
          "ref": "072afbbc-85a2-4ca0-86d0-72f471aaf8a7",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ba10e583-ba5d-40dd-be61-1c3f9238964c"
        },
        "item": {
          "id": "d70f0e44-b24f-4e4a-8310-3790dfa0b4ee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "57d7d8bf-2e88-40a0-a3fe-6d303dd92e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a565b3a-bf98-479d-bef4-f9719987b39e",
        "cursor": {
          "ref": "b6753e1b-92b3-4cd0-9479-420b19b68fec",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "00cc3ba6-604e-45d1-a1fc-d5579fc17c05"
        },
        "item": {
          "id": "7a565b3a-bf98-479d-bef4-f9719987b39e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6391d8fb-a3c0-4262-a972-dbd32df31df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46428bc-6bc7-4d27-875d-d705bc22b9d1",
        "cursor": {
          "ref": "4c4185bf-a176-48f8-a33b-f3975e41c8d6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "73e29487-7af4-422d-a368-e746a7c285a3"
        },
        "item": {
          "id": "e46428bc-6bc7-4d27-875d-d705bc22b9d1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "54c3ed61-988d-427f-b021-6b6068a3b79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e607526-c2ed-4f1b-8840-6dea516521ac",
        "cursor": {
          "ref": "9490d35b-7640-4c9e-9453-d4c4a030822f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6e26c1f6-a824-4690-878d-d6f1de623630"
        },
        "item": {
          "id": "5e607526-c2ed-4f1b-8840-6dea516521ac",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e5f2f71e-0699-4fb3-ad9c-b3a84a75158e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da1208c-0328-4559-925b-d3e0fc45d524",
        "cursor": {
          "ref": "161ab59c-9e91-4082-93c9-51caf6d43095",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2f3e41d3-c876-4298-bd3b-6c07174b2fd6"
        },
        "item": {
          "id": "8da1208c-0328-4559-925b-d3e0fc45d524",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0460fc95-16e1-470f-b8c2-1e816632c84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7e500b-38b1-4e9f-b61c-448bafd14f17",
        "cursor": {
          "ref": "81755c18-8d61-4db3-8a94-26f91b5a915b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ebaef4cd-8602-4b48-b491-5e7539ef1c0c"
        },
        "item": {
          "id": "1c7e500b-38b1-4e9f-b61c-448bafd14f17",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4899e26a-c01e-4e31-8489-c297afb0d047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cc92fe-1bbc-486e-9beb-46881b43045c",
        "cursor": {
          "ref": "55352561-3620-47e8-9231-96047780fbab",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dd866cc7-05c6-4e89-a2f0-c4f4dffdbccf"
        },
        "item": {
          "id": "c0cc92fe-1bbc-486e-9beb-46881b43045c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e94012b9-2e9b-4c98-8906-38ba1d41d04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616a6932-8143-4f63-9473-89a07ee114d8",
        "cursor": {
          "ref": "5912bd7f-b5ff-42ed-9787-cb8c980b9c44",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "17cab983-0db3-44e7-a35f-c8e9c3b77669"
        },
        "item": {
          "id": "616a6932-8143-4f63-9473-89a07ee114d8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8caa5085-4268-4007-a6c5-2f88a3681f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a59986-80c0-41d9-9f93-cbcc82a311d5",
        "cursor": {
          "ref": "f9d8874b-f178-4884-baae-5b36eda7cccd",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4ae37c89-90de-417c-955b-26dbcb5b90d3"
        },
        "item": {
          "id": "b8a59986-80c0-41d9-9f93-cbcc82a311d5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "70617e50-2877-49af-8fe1-91af499d1f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcde47a-e06c-4893-8c98-ce5a0afe6259",
        "cursor": {
          "ref": "ac88aa99-97d9-4150-b497-f0228b9dda6b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "69eeefc0-f63e-41dd-a5d3-d1fb29cd60f6"
        },
        "item": {
          "id": "5dcde47a-e06c-4893-8c98-ce5a0afe6259",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "92999b62-262c-4e25-8358-f2365e7b7605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0cdff0-fe5a-4024-99f3-80685a342cb8",
        "cursor": {
          "ref": "76c15ded-9d4a-48d9-aaa5-ed7e2e3517aa",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e781dfa4-5aaa-4810-bcee-2e9c752c310a"
        },
        "item": {
          "id": "4a0cdff0-fe5a-4024-99f3-80685a342cb8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f9e3ead5-cde4-4834-8ff9-ad215d87ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c09c2df-973e-441d-9c0b-45bdec7e7976",
        "cursor": {
          "ref": "5df3e937-4b1c-4228-9309-a3fa8e166b43",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "228d77fd-10b3-48da-bbd7-212019b553d2"
        },
        "item": {
          "id": "6c09c2df-973e-441d-9c0b-45bdec7e7976",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "84d806a4-e2c6-4ce1-8a3a-65421d8ebe0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75bdae0-4967-4067-8f4c-d56d63610cd9",
        "cursor": {
          "ref": "5fe4eaec-8ddb-45fc-a24e-7accf38b5051",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "90808237-d9b1-449a-bd48-b29f47635feb"
        },
        "item": {
          "id": "e75bdae0-4967-4067-8f4c-d56d63610cd9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fcf2e1fc-594f-4084-ba31-6a842982ca80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca39b67-df34-4d7c-9c2b-1dabf0f3c0ff",
        "cursor": {
          "ref": "d496e3fc-2c13-4a7b-bf52-97570218c9e3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "17cf8aa8-3231-40b4-9db1-7605c64317d5"
        },
        "item": {
          "id": "4ca39b67-df34-4d7c-9c2b-1dabf0f3c0ff",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dfc9c44c-fdfa-4b79-96f8-8c7bc9896aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd5decf-3712-428a-9d8b-3df3f0795e12",
        "cursor": {
          "ref": "d6747052-65c3-4579-a7c9-f1a261f880aa",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8f4a25ad-9f21-44d1-ae1e-4b0cefd1ba24"
        },
        "item": {
          "id": "1dd5decf-3712-428a-9d8b-3df3f0795e12",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a106e43c-8b97-494c-8c0e-9b324169ba11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c477d752-fb34-4457-a028-34cc9ba80d0e",
        "cursor": {
          "ref": "018287c1-4105-4bea-a10c-ba1ba7f3a1ee",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a38cca87-5057-4280-899e-df4fcaa6af97"
        },
        "item": {
          "id": "c477d752-fb34-4457-a028-34cc9ba80d0e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9bc7c42e-6c93-43e9-8d13-1b9ce7a7877c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3921c6e-7545-4a9d-ac61-2d082642bd5d",
        "cursor": {
          "ref": "052b8bd8-b37c-4e10-b9d3-33269f59fa6f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5e163e97-1329-4297-921e-dc9e7c8eb1c2"
        },
        "item": {
          "id": "d3921c6e-7545-4a9d-ac61-2d082642bd5d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "26755761-31b3-4fa1-be42-83cf214d289e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed15e31-85dc-4c84-849a-381d9968cc9b",
        "cursor": {
          "ref": "8183bd11-08ae-45d9-8325-62b7b17c1c28",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8d1bdf9b-2d65-4f9d-a2b5-10edd108257a"
        },
        "item": {
          "id": "eed15e31-85dc-4c84-849a-381d9968cc9b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "55a51c75-a76d-4e9f-bc36-26d4efce5c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2a63f7-1872-4afc-ab36-c5816c2d1c7b",
        "cursor": {
          "ref": "00b215ff-02b4-4d2a-9f4b-77231c2600b5",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d3bccd02-1fb1-467a-a283-8ebbfe58d316"
        },
        "item": {
          "id": "4c2a63f7-1872-4afc-ab36-c5816c2d1c7b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "62fa051f-e8ef-4ad4-b459-2fc8bf47718e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908eecda-384f-4f36-a3d0-be55333e51ed",
        "cursor": {
          "ref": "26213aa9-1c8a-45ab-8859-5820c2f47a1f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5761acc7-4f00-4684-a5d2-7d321396c089"
        },
        "item": {
          "id": "908eecda-384f-4f36-a3d0-be55333e51ed",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "29812f44-b7bf-4614-b6f2-433aa13f885a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e25e151-a2df-4e15-a241-3895dcb59cbb",
        "cursor": {
          "ref": "92a7491c-cf81-4894-a549-50e36cc398f4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0b1d24e8-4f32-4e5b-a67c-438a0114e6cf"
        },
        "item": {
          "id": "4e25e151-a2df-4e15-a241-3895dcb59cbb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "787434e6-ee05-46cb-a7af-a4e9b1d9ac46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afd5d43-9343-4081-b72a-5743d2c24fa9",
        "cursor": {
          "ref": "85e34bf2-f157-4d93-b08b-a795682347ea",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e25f037f-6dd8-46d9-82e3-0c7bf82e918b"
        },
        "item": {
          "id": "5afd5d43-9343-4081-b72a-5743d2c24fa9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "856dc780-db3a-4414-bed7-cd9395352b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389ac318-6464-4a10-b337-9728e474fa1a",
        "cursor": {
          "ref": "7311b889-c92f-4ab4-a391-bb7fe95bf095",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4a19798f-5254-49d3-bf9b-a7caada5d328"
        },
        "item": {
          "id": "389ac318-6464-4a10-b337-9728e474fa1a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "656563f2-5480-41f6-96e8-1f03a2cbc020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa5a8bb-b04f-4abc-bff5-6a67f8f8c2ba",
        "cursor": {
          "ref": "e11be38c-cd0d-41f5-833a-cd7123da2fa0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "867ade5b-95a0-4239-b156-298b940df296"
        },
        "item": {
          "id": "1fa5a8bb-b04f-4abc-bff5-6a67f8f8c2ba",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7720ea27-74f2-4e14-85f3-d8a3bb76b673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c118500-4dae-4933-938a-dfd55acc85d1",
        "cursor": {
          "ref": "a00ede04-0421-4ef8-979a-34438f9d624c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7a556623-fbce-4abf-b8ad-711ed97064cc"
        },
        "item": {
          "id": "4c118500-4dae-4933-938a-dfd55acc85d1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ffb0d8f3-368b-4527-b843-84432ebc8bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ade6832-d006-49b2-ad5b-2eec7f0404a5",
        "cursor": {
          "ref": "d16bc974-9c84-4eb7-b872-1f998b831cfc",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6131c3fe-2a20-4512-aded-b2a74331a439"
        },
        "item": {
          "id": "9ade6832-d006-49b2-ad5b-2eec7f0404a5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "583bba78-9950-4345-aa95-4e0ccac3f4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58d71d9-09cd-497b-a61b-4c7808ab8715",
        "cursor": {
          "ref": "06348134-dddb-48e1-9fb9-5e282bd909bf",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a68b3f00-1181-4f6d-9245-7ee916af1280"
        },
        "item": {
          "id": "d58d71d9-09cd-497b-a61b-4c7808ab8715",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "673d739d-c9d5-4891-89ab-2a9765d4bee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18aa2ef5-2052-4da2-b323-b6f973e7e98c",
        "cursor": {
          "ref": "887e8588-2d32-4c0a-8666-a8341ca6183d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0cfc5aca-2f75-4b42-b30c-193ab369291c"
        },
        "item": {
          "id": "18aa2ef5-2052-4da2-b323-b6f973e7e98c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8796f307-2faf-4439-9ccd-a011943bad7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24b9d3a-08ed-4f45-b3f1-85f62650bfc5",
        "cursor": {
          "ref": "ab392d3e-1073-4144-8d19-6aba68ebdcf0",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "180041e6-b5d6-419d-b709-eb85ee0416a0"
        },
        "item": {
          "id": "e24b9d3a-08ed-4f45-b3f1-85f62650bfc5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "730a6f0f-ace4-4377-8a11-5afe26bc8f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795bcba9-6eb1-488d-9a40-51eab4cf75c1",
        "cursor": {
          "ref": "14d09d44-10a8-4d9f-a3f3-20d636014bec",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e299b610-d04f-4e91-bf0a-12d9050b2792"
        },
        "item": {
          "id": "795bcba9-6eb1-488d-9a40-51eab4cf75c1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cf3b2506-0734-43a5-bdc8-9053d7e67b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fec279-22c0-403b-9f57-1bfd8bbca059",
        "cursor": {
          "ref": "11219638-6b6e-468d-a1b6-afdd86a3ff50",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1300a729-5a9c-462d-9cca-c68d9eb2e380"
        },
        "item": {
          "id": "23fec279-22c0-403b-9f57-1bfd8bbca059",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "79e95f4f-cdff-486c-9ce6-b926f234820a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7a0d84-fe32-4922-a2ae-fefd212a1599",
        "cursor": {
          "ref": "8b4683fd-6fd4-4b7f-b8d6-85201dc8c0d5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "70fd408c-832f-42b3-9a4e-129d75efed9e"
        },
        "item": {
          "id": "0a7a0d84-fe32-4922-a2ae-fefd212a1599",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "434db469-5be3-4115-85eb-eedac8ec067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eff13d-df50-4d77-9ca7-7ba75c3299df",
        "cursor": {
          "ref": "b3a52ad4-9d58-49e6-a6c2-cd51d9639997",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "52533b54-64b3-4911-8ad7-afefdaf8b568"
        },
        "item": {
          "id": "c2eff13d-df50-4d77-9ca7-7ba75c3299df",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "36556ea6-186d-4d77-8801-fd3251c37235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3afaa5b-988d-4656-a187-aa5aea5e35a6",
        "cursor": {
          "ref": "28f5b7c8-b629-4f59-9e75-c43b3b5f2ebb",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "98b6725c-e6e9-4646-831e-16174310afa7"
        },
        "item": {
          "id": "b3afaa5b-988d-4656-a187-aa5aea5e35a6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7f855772-bb0a-4121-b5ce-cc5602e1af35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1a72db-2a19-4742-a2ea-454e91819ce2",
        "cursor": {
          "ref": "fc25276e-5633-4173-9e6a-3cd3bccd2c81",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3aec8817-c399-4fc1-9ba3-25d1904dfdf7"
        },
        "item": {
          "id": "ff1a72db-2a19-4742-a2ea-454e91819ce2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f0481f86-514d-4814-846d-a69abfbeef27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b88719-f599-402a-bc9a-b821028fe1de",
        "cursor": {
          "ref": "1ce36a0c-a285-4a7f-a6de-a095e9412591",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "477b9b8e-27b3-4bd2-9280-1c819d0f6dd4"
        },
        "item": {
          "id": "42b88719-f599-402a-bc9a-b821028fe1de",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "805dd389-cda3-4ecb-8040-82e76971f66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541e7b32-bd22-4891-b135-02aca6958db1",
        "cursor": {
          "ref": "984a547a-aeed-4c60-a9bb-8a3da2c3e524",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e064901c-e60d-4586-be2f-3d5971b0197d"
        },
        "item": {
          "id": "541e7b32-bd22-4891-b135-02aca6958db1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7cac1c6e-218d-4fcd-b49e-620ef9a68582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26a0a75-1501-494d-9665-e54ee011f661",
        "cursor": {
          "ref": "1335d023-5883-4316-8731-5ab2b0e2281f",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0e024cf2-53aa-49d4-96f4-70943988a7eb"
        },
        "item": {
          "id": "d26a0a75-1501-494d-9665-e54ee011f661",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2eb6082e-17b3-4a7b-8b26-a972420c9aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f950ed8-b947-4939-ac0c-49332a08729e",
        "cursor": {
          "ref": "f18102e7-aada-4f96-b2ec-29f5f8f828a7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d72ef72c-cfdf-442e-b0fb-32257a4d69d4"
        },
        "item": {
          "id": "9f950ed8-b947-4939-ac0c-49332a08729e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "38f81ee1-1c79-4ab2-a911-6d4ee00d7fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e69ae8-5f9b-4116-8d72-2c04cf33cacc",
        "cursor": {
          "ref": "359a426f-67ea-4632-ada5-74cf38321985",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ee787a71-9a79-44f7-b41f-6cef885f023f"
        },
        "item": {
          "id": "54e69ae8-5f9b-4116-8d72-2c04cf33cacc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "96b5c1dc-a733-471d-822d-1eba75eed402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0cae26-7cb8-47be-bf13-6af7b11a5f9a",
        "cursor": {
          "ref": "1861b440-5ffb-4062-9cf0-ddfd7f142001",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "884b8ce7-2971-4561-b42f-d166e187dc70"
        },
        "item": {
          "id": "ef0cae26-7cb8-47be-bf13-6af7b11a5f9a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "09b4d938-dbad-4c60-aa18-7975fd491300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4129ea2c-5938-40b5-afa8-5d304f5dccb6",
        "cursor": {
          "ref": "cb7af5c2-b571-4a84-add5-6630c6de14ac",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "29f3cfa8-05ee-4a7e-a14c-79d1a8203b9a"
        },
        "item": {
          "id": "4129ea2c-5938-40b5-afa8-5d304f5dccb6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4924d820-866d-4797-a79f-74e82b28ad15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9622de14-da52-4a46-a1d1-b321e8233a30",
        "cursor": {
          "ref": "e453e861-1c7b-4b3c-a452-3815082b3c17",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "12920b17-e70a-476c-afaa-5b527e5a3bb5"
        },
        "item": {
          "id": "9622de14-da52-4a46-a1d1-b321e8233a30",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4d7a7fbd-b355-4f75-8b13-6cfbdfb49a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c904fb-ff1e-418a-ab85-64d79fd94ac1",
        "cursor": {
          "ref": "c9f7eeb0-2093-42dc-a686-08f06505528c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b0a04a82-8d3e-4d74-940b-99789ed528c6"
        },
        "item": {
          "id": "b7c904fb-ff1e-418a-ab85-64d79fd94ac1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2950843b-5ccb-487f-b376-0af2711d7270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c958bf76-8aeb-470a-a570-e52f6e8716bc",
        "cursor": {
          "ref": "a7b74a5c-abd5-4eeb-985f-c74a7b6cfd84",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2fc7b73f-fbf3-43a0-b689-21caa40ff452"
        },
        "item": {
          "id": "c958bf76-8aeb-470a-a570-e52f6e8716bc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4d79db83-5f31-46f6-be48-2f3c472ed0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b3d845-e557-4c1a-abf3-7f207fea768f",
        "cursor": {
          "ref": "5382159c-78e0-41bc-b960-31fcfac49de0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0e1045be-6563-43db-b889-3deb5146ffa7"
        },
        "item": {
          "id": "86b3d845-e557-4c1a-abf3-7f207fea768f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9c2a438b-8b86-439d-ac18-6df804d700ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a8d3cf-03ec-44ce-b204-645cd989c5ce",
        "cursor": {
          "ref": "a61a6af2-879d-489f-9e7d-23801141b48b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6402a5dd-197b-4ecb-9eee-fe3afc4c478d"
        },
        "item": {
          "id": "f0a8d3cf-03ec-44ce-b204-645cd989c5ce",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6ba46137-22d3-4971-a79b-5dcaa702e722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922a8863-c641-4ddf-89c2-a9735e167391",
        "cursor": {
          "ref": "53369fa5-7176-4f4f-be32-489f9671198d",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d8fef919-57f0-4232-8dff-d1130f8c9e8c"
        },
        "item": {
          "id": "922a8863-c641-4ddf-89c2-a9735e167391",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7b44d9c0-eacc-4b2a-9fda-a974bf4c054e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638ca666-d7fb-407e-85a5-7bd1c325224f",
        "cursor": {
          "ref": "7a54e654-b2d1-49f2-ad8b-46fff105ee78",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fa092b1b-66db-4c8f-b452-1ac3779de5be"
        },
        "item": {
          "id": "638ca666-d7fb-407e-85a5-7bd1c325224f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7118ea8f-881a-44e2-b492-1c5b54f18c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f0fb37-48b2-4bdc-963e-410a2072de1a",
        "cursor": {
          "ref": "570ad731-5792-4e8c-9f3f-4c6bfeb8b414",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "baadca8a-2ab4-48e1-93a9-c6b89a7913e0"
        },
        "item": {
          "id": "f1f0fb37-48b2-4bdc-963e-410a2072de1a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2daa5ad1-65e7-47a9-ba8b-8ee8765ce9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8883f3ec-b514-457e-919c-7633e1d65cf9",
        "cursor": {
          "ref": "ddc8c6a5-59c9-4a38-9d82-4b640aa1e20c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bf53e3be-10a1-4baa-9b37-592033f0b366"
        },
        "item": {
          "id": "8883f3ec-b514-457e-919c-7633e1d65cf9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4a35b7dc-cc2f-4ae2-9fa2-5daae9cb7643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2955c4fd-3b5e-4b94-b7da-811b454b765d",
        "cursor": {
          "ref": "e3bae121-76c9-454c-a49f-a8bb822fba9c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "58b5a324-e8c7-486b-8a16-200464f7c705"
        },
        "item": {
          "id": "2955c4fd-3b5e-4b94-b7da-811b454b765d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8ec407af-35d8-4e20-8886-6269cabf1723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0f0a7f-77a5-484d-81e2-2cddf3060b3e",
        "cursor": {
          "ref": "2f22f04f-1259-41d2-a3e8-d0fcf1ffeafe",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9c22588d-bac4-4f8f-8e90-b8461af1bb05"
        },
        "item": {
          "id": "aa0f0a7f-77a5-484d-81e2-2cddf3060b3e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7726e739-69c2-4ac1-a4ff-b1918a8de9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e485ee9a-3a67-458d-8848-7118cc5043fb",
        "cursor": {
          "ref": "5b44cf30-6c55-4f94-98b2-89e4cb868c60",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a33d0e6e-ab0b-4beb-b4bf-afd2c7ab2043"
        },
        "item": {
          "id": "e485ee9a-3a67-458d-8848-7118cc5043fb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d1d29bbc-bf18-4c2a-87a7-5a2b06bd50ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979536f0-9b1c-4c18-9448-dabe082412fd",
        "cursor": {
          "ref": "b563f863-02c6-4861-af6b-f5864a10e545",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a3c4f5e2-4118-4c1f-9ae4-a340a74a05f7"
        },
        "item": {
          "id": "979536f0-9b1c-4c18-9448-dabe082412fd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5a8fefc6-f166-4448-af14-787d03340611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72d2d75-7f26-454d-b783-b6edac23c12d",
        "cursor": {
          "ref": "c09114fa-a942-4a74-950e-735f571bf655",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8f8bc18d-1452-40c1-bc0c-a28c421864e2"
        },
        "item": {
          "id": "c72d2d75-7f26-454d-b783-b6edac23c12d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0636b65a-a6fa-4cec-84c2-96418f826ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec067a3-fb1a-4b64-a6f1-7ff911a70270",
        "cursor": {
          "ref": "918518b0-9918-4921-9ee9-7d0aff68ef33",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d14cfd70-8d8e-4f70-8823-65f130ebb71b"
        },
        "item": {
          "id": "aec067a3-fb1a-4b64-a6f1-7ff911a70270",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "581158a5-8b77-4a5f-a90d-0fd26e49cf56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533478d0-2bf2-4dc1-a211-0028555501a3",
        "cursor": {
          "ref": "4ca05edc-f882-4ddd-8b0b-e35663505bbc",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "10e00f26-bbf8-4fab-9641-d80a40179e73"
        },
        "item": {
          "id": "533478d0-2bf2-4dc1-a211-0028555501a3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0c2215c5-a232-4935-b558-04273d56ce7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013b985d-a6d3-42a7-aac5-2d68a810b6ee",
        "cursor": {
          "ref": "ff0fdad6-b917-470c-87b4-15462ceb3978",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ba5a4bcc-4be6-4e5a-aaa1-8c8eb6fd3a70"
        },
        "item": {
          "id": "013b985d-a6d3-42a7-aac5-2d68a810b6ee",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b5f37e8a-950f-46c8-a218-44feea895c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5837f321-a763-4982-9967-d255f7b53a75",
        "cursor": {
          "ref": "562caeb5-76db-4ecb-b963-709b9aaf80e9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5286223a-dc15-4e65-8de6-e1953622f324"
        },
        "item": {
          "id": "5837f321-a763-4982-9967-d255f7b53a75",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "72646217-573c-4631-ac37-593cfcc3dd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4171bc8-6db2-4a1b-b5d9-34355baaab8e",
        "cursor": {
          "ref": "dbb7df47-15e7-4a4e-ac13-88d82d4bf639",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a2c71bca-d0c2-48c0-ba33-a6b461bec9a8"
        },
        "item": {
          "id": "e4171bc8-6db2-4a1b-b5d9-34355baaab8e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "545ce3d9-4076-4214-804d-0465903680fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ccbb6e-1676-4e6c-9676-14154bc3ccce",
        "cursor": {
          "ref": "3033b434-2ddd-4ff8-82b0-368130305b14",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fdf4d387-c06f-4bf4-9b8e-c06d83973eaa"
        },
        "item": {
          "id": "58ccbb6e-1676-4e6c-9676-14154bc3ccce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "002622c3-87a0-42e4-9dd3-36ce07be38c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c337ee9-4f2d-45be-86e2-ae884876fc98",
        "cursor": {
          "ref": "f5677ec9-40d2-4f05-bb31-bc377caf680b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a8a1d4bf-958e-42a5-ae2d-ef8011fb30ee"
        },
        "item": {
          "id": "7c337ee9-4f2d-45be-86e2-ae884876fc98",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b0fdc12f-5011-4712-9d89-cf5443de91a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec806a3-1620-4507-a07e-c576abe23d3a",
        "cursor": {
          "ref": "bc009187-1f17-4806-9c39-e308ca60681b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bf121db9-5b9e-47a7-a5ea-9a204f902b53"
        },
        "item": {
          "id": "0ec806a3-1620-4507-a07e-c576abe23d3a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b856b624-d9c2-495b-93e4-4c301b5e0d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355cb7c0-16c4-4279-80c5-de6b45d44360",
        "cursor": {
          "ref": "2f6b130a-3750-4b56-bb2b-d2618dc7b947",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fb532040-0865-4cf5-85c0-06e10c17916b"
        },
        "item": {
          "id": "355cb7c0-16c4-4279-80c5-de6b45d44360",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e175acd4-3f34-4d58-bab0-130b465b3e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0af29a-cc3d-4a3c-a30c-710c4b2c46e8",
        "cursor": {
          "ref": "262f0ce5-1712-40e2-8b79-10b7c8fe5a24",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "111a5242-ec6a-4942-8294-f18c2c2f721c"
        },
        "item": {
          "id": "4f0af29a-cc3d-4a3c-a30c-710c4b2c46e8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b8e61887-6602-4543-b456-1519f2515f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e27f982-5256-4b51-88ec-87c82c6b8c23",
        "cursor": {
          "ref": "b73a2da6-87e5-4e53-a30a-56bca41135f8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e13ab2cc-0886-4455-9038-924d3a56c719"
        },
        "item": {
          "id": "1e27f982-5256-4b51-88ec-87c82c6b8c23",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8e3e5297-a71e-4497-82bb-1ec40517af60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99b0388-7fcc-4dd1-a309-7ebeb67d437b",
        "cursor": {
          "ref": "f723b846-cd14-4af7-ab12-5bc62e40fb6a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a3b32c93-f070-4827-b5fd-a2b42fe447fb"
        },
        "item": {
          "id": "e99b0388-7fcc-4dd1-a309-7ebeb67d437b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6b90ea4d-9aff-41a7-8b6d-f407fed564d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fbdc3e-1617-42ac-8aeb-8afb45e64af9",
        "cursor": {
          "ref": "4345701e-5d96-4356-a7e0-0b45b53e2474",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5c934433-f8e9-4b3d-8a94-05116eb8d5e3"
        },
        "item": {
          "id": "06fbdc3e-1617-42ac-8aeb-8afb45e64af9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9cf18736-f0fb-43a1-bd58-ad14bf1c9cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9e78ae-d62b-4cb5-bf7b-76d93c495342",
        "cursor": {
          "ref": "b5cdddbf-41f2-4e41-b847-44df7d07b0ee",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e41af899-7633-4fd1-8bea-b59f4def4f62"
        },
        "item": {
          "id": "da9e78ae-d62b-4cb5-bf7b-76d93c495342",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cad46f2a-73a5-4304-9eff-19283b241090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b5192e-6924-4def-839a-d5d5ea036eb7",
        "cursor": {
          "ref": "fc2003e9-ec47-4c57-9098-9b4440635240",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0924b987-035e-44c1-90ae-05df268b74d3"
        },
        "item": {
          "id": "10b5192e-6924-4def-839a-d5d5ea036eb7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fb670874-156a-4d0c-90b5-0e85b50d2377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a586480d-167e-41d2-85cf-43f0f8a85e13",
        "cursor": {
          "ref": "df85ff5a-7903-4703-9e62-fff135d0b987",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "879d71d8-de88-4966-a5ee-2ea9a962021e"
        },
        "item": {
          "id": "a586480d-167e-41d2-85cf-43f0f8a85e13",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c5ccceff-3d32-44a3-9057-9ae60112603d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d59642-c0a2-4dd2-aa4c-85b8695d81ba",
        "cursor": {
          "ref": "a091fe30-691c-4b50-8ac1-f3ba210e0bf5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "86b11a85-e6e9-4c3e-a8bf-f8306f244ce9"
        },
        "item": {
          "id": "96d59642-c0a2-4dd2-aa4c-85b8695d81ba",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "81f992bb-48c6-4ee1-9092-993735a63f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35790b1a-2e6f-4c3e-a475-01896eb18084",
        "cursor": {
          "ref": "9c4df56a-a159-45e8-8076-9daa422a2fdc",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0ebcfe35-042d-4726-964e-0a06b7c5e5fb"
        },
        "item": {
          "id": "35790b1a-2e6f-4c3e-a475-01896eb18084",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0cd26b71-3884-4199-812f-4a067560b1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cd50fc-add6-4c41-8173-43c0eb2eb024",
        "cursor": {
          "ref": "e6a2591b-cd29-4541-8bac-eeca4dab86df",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4c03dff6-7f97-4fb4-b899-845b8e843427"
        },
        "item": {
          "id": "02cd50fc-add6-4c41-8173-43c0eb2eb024",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a0644cf2-bc1d-4d9d-adde-442d654317f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b7d7d4-c1e8-4b95-aab9-ffd2e291abe4",
        "cursor": {
          "ref": "50567234-c8ed-4d59-8d0a-4fc4194c903b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "313b8f72-c14d-4c07-b9b4-d20feb649ba4"
        },
        "item": {
          "id": "78b7d7d4-c1e8-4b95-aab9-ffd2e291abe4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "41ce9db2-aecf-4302-8890-4067c0f46b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cb7eaf-2d75-4a5c-abab-9bfa2fa6a6e7",
        "cursor": {
          "ref": "beaab259-fd5d-400d-b535-a0cd31a3c2f3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5f59b717-e1f8-41cd-b384-b0f0a5a02288"
        },
        "item": {
          "id": "98cb7eaf-2d75-4a5c-abab-9bfa2fa6a6e7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3c9452ca-88dd-40c4-a82a-7305cc81f10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c9d931-41ff-4c55-8374-f99fc33b3124",
        "cursor": {
          "ref": "5d5333ab-0329-4d09-ba84-88f77e69475e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bd8ab366-1f83-4da6-a6bd-7c7440fd9d48"
        },
        "item": {
          "id": "b5c9d931-41ff-4c55-8374-f99fc33b3124",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d87988d6-fab0-4962-b887-98f28065a2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b7c703-1d54-46f4-ad7d-7925af4fd66d",
        "cursor": {
          "ref": "e40cb67f-3256-4217-8cca-ce97356d5f2d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a5ff84b9-84ab-4abf-b83e-bdd434adbab5"
        },
        "item": {
          "id": "94b7c703-1d54-46f4-ad7d-7925af4fd66d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "40425af1-0e7d-4bc8-8bcb-690d968c1eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecaeb26-c215-4380-ab34-a4d18a8da1f5",
        "cursor": {
          "ref": "081d9fbb-c603-497a-a5de-d38183fa910e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "255b4c18-ecd9-440c-af00-94a041d918cd"
        },
        "item": {
          "id": "cecaeb26-c215-4380-ab34-a4d18a8da1f5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8f292bb5-0b85-4d61-bded-aea1df3a65f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259d011e-4582-490e-8351-3a084626344a",
        "cursor": {
          "ref": "294d91f9-561a-4cbe-8138-a0123781841a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "00333beb-7565-4e3e-93f0-28f2f45a25e8"
        },
        "item": {
          "id": "259d011e-4582-490e-8351-3a084626344a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2f0e8815-58d8-45d2-aa23-9ef077053811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9847203b-62a8-4493-b75d-e77249fca946",
        "cursor": {
          "ref": "815331a9-e0d1-439f-b360-b3e4e36edbf9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d0fb8e07-0a6a-4f57-8d7b-bf8f4c96c1d9"
        },
        "item": {
          "id": "9847203b-62a8-4493-b75d-e77249fca946",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "919a4eb6-3a47-43e1-bcb6-34e2f21eee7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b74db5-1b49-4f7c-9924-c8edcefc4e83",
        "cursor": {
          "ref": "ea1fe6bc-d12c-40ec-a136-759b7f3d083d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9e1fd890-cfa1-4dcd-8447-73754a2a8261"
        },
        "item": {
          "id": "d3b74db5-1b49-4f7c-9924-c8edcefc4e83",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1623e114-ca8f-47fa-b144-c6cbd6ce3ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ca706c-5da2-42c3-ad8a-8dd9395191f1",
        "cursor": {
          "ref": "899773b2-8dd0-4436-871b-56815e4660a2",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7041c269-1685-45f9-919e-c799cf1a6613"
        },
        "item": {
          "id": "91ca706c-5da2-42c3-ad8a-8dd9395191f1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c6f9678f-f553-4ca4-98d5-e50f7157679a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6438d129-4e61-4c0c-b6dc-00e96fba4ac5",
        "cursor": {
          "ref": "8324f652-3702-4994-9f5f-f52fbb8e838f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0a776e26-83de-4dd0-8937-0314c0ed106b"
        },
        "item": {
          "id": "6438d129-4e61-4c0c-b6dc-00e96fba4ac5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "550c6456-2c8d-41e4-99f0-f5475c35c306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f29154-ecd8-4bba-a771-df121d99c238",
        "cursor": {
          "ref": "ed74659b-f6ce-475d-b5e9-f20c2df51cf0",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ebcc6ae9-3a75-4fec-b5fb-8f59aa83438f"
        },
        "item": {
          "id": "51f29154-ecd8-4bba-a771-df121d99c238",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b60043f7-e3c2-4d75-853d-ef78b7ab8077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64831ab-78a5-47a8-ae1c-ec470c410f34",
        "cursor": {
          "ref": "4f3a5b14-cd49-4d51-8f58-3f00460a4c08",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ac66a577-96ef-48cd-97e2-ca73547ecd71"
        },
        "item": {
          "id": "a64831ab-78a5-47a8-ae1c-ec470c410f34",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6b8540c4-bff1-4b4b-9f35-9bc6c5acd288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6a7fb9-b5e4-47d2-a9a5-f07887874cb1",
        "cursor": {
          "ref": "627ab294-df8b-4f78-8f5a-231988b2299d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "efe3e1c1-aab7-4b53-90cd-c37b454b6a18"
        },
        "item": {
          "id": "9f6a7fb9-b5e4-47d2-a9a5-f07887874cb1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d75c8da6-8357-425b-aad9-e2359d393113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2946a00-bee5-481d-8162-2a901ede1b9c",
        "cursor": {
          "ref": "45485a51-ca88-477f-aff8-b17addcfcbfd",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a65d008c-dd74-44f4-880a-2f7551e8ca91"
        },
        "item": {
          "id": "c2946a00-bee5-481d-8162-2a901ede1b9c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "65f90f65-b17a-4f8e-b929-f820ac9f3851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548f2eb9-7f9d-492c-8390-81e0f1e3cc86",
        "cursor": {
          "ref": "6b28201a-0641-4e49-8382-f3df42e82b90",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "11cd36a5-014b-408c-9c3d-3271827762db"
        },
        "item": {
          "id": "548f2eb9-7f9d-492c-8390-81e0f1e3cc86",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4b8a1d51-b8bc-4c10-ac03-276c7b63a986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5e7da8-ea5a-4bd9-9e3d-6029ad50d22f",
        "cursor": {
          "ref": "f8f70270-8956-4a25-b099-2d75971df2e3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "80a93a08-ce57-4ea5-b5b4-779868907163"
        },
        "item": {
          "id": "ad5e7da8-ea5a-4bd9-9e3d-6029ad50d22f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "63b4e6af-ed7c-49aa-99b8-8906e80eb972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914cb86a-36c4-4ddb-a7f1-fc12838a9569",
        "cursor": {
          "ref": "04fad7eb-f7ea-43ab-8476-eda56d22cb9f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "266e9097-70b0-4ea5-823d-4e0a9b888346"
        },
        "item": {
          "id": "914cb86a-36c4-4ddb-a7f1-fc12838a9569",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "84bc19e7-9e79-4e01-ae3e-112dd2cd071a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55de77ea-3fa2-4b30-8333-450eb9858020",
        "cursor": {
          "ref": "0a98bfbd-d371-4e80-b8c3-ef6338812722",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9ed7b659-e216-4b18-9cea-e1f1fc8f7c5c"
        },
        "item": {
          "id": "55de77ea-3fa2-4b30-8333-450eb9858020",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "90aad319-568d-4786-a16c-7af7fa606743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a252d0-2581-401e-ade2-9935255b4ab1",
        "cursor": {
          "ref": "942159c2-1f49-4751-91b0-1e2554841c3d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c05ee511-460f-4858-ab50-244e9b3e7752"
        },
        "item": {
          "id": "a7a252d0-2581-401e-ade2-9935255b4ab1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "92e1786c-b7ae-43ac-a63d-7bf6bf69c4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a883bed0-b363-4f01-9ef2-e19fb2eebe45",
        "cursor": {
          "ref": "40d7f2fc-3caf-467d-8c05-5e94b2bb8aa6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6dafba4f-c4e9-4e0c-ae0b-09fd9fa38985"
        },
        "item": {
          "id": "a883bed0-b363-4f01-9ef2-e19fb2eebe45",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7dfa8262-8606-4768-b744-28b17db4d5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608cde4b-9a36-4276-ae66-480c349a0b9e",
        "cursor": {
          "ref": "2ebf40e2-0aee-4400-a714-a8d4a80ab393",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3bb1c2ee-4f03-4bdd-8af9-93aea72e47e8"
        },
        "item": {
          "id": "608cde4b-9a36-4276-ae66-480c349a0b9e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e94bdcf2-1b82-4c79-838f-05dedf06c8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea85f3b-9bff-4100-9d45-208be727dcc2",
        "cursor": {
          "ref": "574141c2-04c6-4e4d-aa14-11813e4a7d8e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "29425a8f-7064-4daf-8ac1-67b13645c8e3"
        },
        "item": {
          "id": "3ea85f3b-9bff-4100-9d45-208be727dcc2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "001b4c40-4d0d-42e2-9cc6-49ef82c8acb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c43b98-d246-4db0-a48b-8bbb85775b43",
        "cursor": {
          "ref": "22d4f4c8-bba3-4383-9c89-f21b7027b1fd",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7132ec19-29ae-49d5-885c-dababafef385"
        },
        "item": {
          "id": "74c43b98-d246-4db0-a48b-8bbb85775b43",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "49448ce6-b5f9-42af-ab98-5699f14303b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718f61a5-ef56-410f-a7b1-8750e3ef9751",
        "cursor": {
          "ref": "9c9499af-b32c-40da-af7e-4de55f8dcc42",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e0c0848e-541a-4e12-b9b1-21bd0c92d5d5"
        },
        "item": {
          "id": "718f61a5-ef56-410f-a7b1-8750e3ef9751",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "30708caf-2f9c-4b60-984a-7659052e3bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa988d5-ab61-44d1-8281-70c021ebe0d5",
        "cursor": {
          "ref": "bbfd22ff-7831-45d1-b4aa-e0c54eb1aae8",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3b94c64d-5756-43fd-afe4-7d0de55b9d56"
        },
        "item": {
          "id": "dfa988d5-ab61-44d1-8281-70c021ebe0d5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "28608e20-eccf-4101-87d1-dcc5659aaf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47b4465-aa68-4dd5-91ea-6a524f68182e",
        "cursor": {
          "ref": "6737b962-c779-4eb4-ab28-811b6fd3929c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "00d5a78d-9100-41cb-8949-1617e5ca68b9"
        },
        "item": {
          "id": "c47b4465-aa68-4dd5-91ea-6a524f68182e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "55c20836-c9ed-4d81-9697-b1ef0cbd1e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99abc7f3-c7bc-4793-bf82-2d290873c259",
        "cursor": {
          "ref": "0bb98a02-07aa-4be6-aa23-7249830a8b7f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "224894f8-663b-46f0-a7ca-e3240e95f8f4"
        },
        "item": {
          "id": "99abc7f3-c7bc-4793-bf82-2d290873c259",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "937e78fa-29e3-43b3-98ee-8450645c383b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510fe1a6-b9fe-4fee-a9c1-5f9c9c844d19",
        "cursor": {
          "ref": "8bbfe60e-6a70-4f4a-8fea-d0d08350156c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "609d4309-ab64-4899-b778-482f9ea5a444"
        },
        "item": {
          "id": "510fe1a6-b9fe-4fee-a9c1-5f9c9c844d19",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "103d4344-ca72-4a5d-b95a-d878fe4cb948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279bd2bb-7f5c-42d6-b377-e8279ec05f2a",
        "cursor": {
          "ref": "6b2783a6-2337-4007-960f-f21c207388db",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a4034567-15af-49ab-82dc-d4ed04b93653"
        },
        "item": {
          "id": "279bd2bb-7f5c-42d6-b377-e8279ec05f2a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c77cc6de-d499-4e3f-882c-a8b57e571fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a504c20-adc3-452a-b9b4-bb4ce48ddb76",
        "cursor": {
          "ref": "bad18448-3e89-4950-af46-afe342bb51b2",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "28a44b6f-79b3-4515-84dd-85fc4ab20efa"
        },
        "item": {
          "id": "6a504c20-adc3-452a-b9b4-bb4ce48ddb76",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "25535224-68d2-4f43-b743-9fc92783b1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc1c185-ae69-4787-8f91-8b744cfcf3e2",
        "cursor": {
          "ref": "5cdfb516-4d30-46bd-a7dd-d5387821e49d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5be0ec6f-556f-426c-9482-caa6c9115142"
        },
        "item": {
          "id": "8cc1c185-ae69-4787-8f91-8b744cfcf3e2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "962a1a3e-0817-4321-be04-d4030a054879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb56f298-45a9-43ae-af04-aa155ec6cb45",
        "cursor": {
          "ref": "3c7e3cc1-a1d7-43af-8843-f0f4b26425ea",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "eb26d0c8-e443-4ccf-bb0a-c1b9c0aeede3"
        },
        "item": {
          "id": "bb56f298-45a9-43ae-af04-aa155ec6cb45",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "de02014f-4f36-4599-aa8a-b425750c16e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0383d4-2116-4881-a2f3-954542f16e42",
        "cursor": {
          "ref": "7d1fe333-8f52-4f30-91a3-bef09a827d7a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a2607fd5-89bc-4509-bd1b-2aa9c68f3062"
        },
        "item": {
          "id": "bd0383d4-2116-4881-a2f3-954542f16e42",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8d617547-5517-49e6-9efb-d817801cf291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a3615c-1d27-4ea6-924c-f41c5ffedcf1",
        "cursor": {
          "ref": "bce67fde-d3df-4f2c-8093-659ccbe8120d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bf6497eb-010f-418c-abef-109e93cd44f6"
        },
        "item": {
          "id": "31a3615c-1d27-4ea6-924c-f41c5ffedcf1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ff002ab0-95fd-4283-b45c-a85a1258f165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d25d863-9794-4148-866f-b0d6e94eb242",
        "cursor": {
          "ref": "d768882b-acfa-4d56-921a-19f30fd590ad",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f507d198-7a79-4ada-a41e-47ab9b626671"
        },
        "item": {
          "id": "5d25d863-9794-4148-866f-b0d6e94eb242",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e502bc36-c7b5-42af-bad4-b413adad53d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37dc397-9e09-46cd-9fbf-02a258f853ac",
        "cursor": {
          "ref": "cd928e8d-94ad-425f-9ead-f76443ac6dd3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eb150260-2f32-4163-905e-e177996e2f18"
        },
        "item": {
          "id": "a37dc397-9e09-46cd-9fbf-02a258f853ac",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9f5cbed8-f663-4bae-b89c-40ed10e97578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ca263d-f32c-46cf-be57-0edafcbeaf43",
        "cursor": {
          "ref": "d6e4fdea-bfd9-4999-b30a-8a7b7650fd41",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a30c4944-a2dd-4b7c-b3b4-d6b1bac91f0d"
        },
        "item": {
          "id": "09ca263d-f32c-46cf-be57-0edafcbeaf43",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d0eb6181-3cc6-4a1a-bb67-d225b5564735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "f4488da4-6f59-4f08-a3fa-6a668aa22beb",
        "cursor": {
          "ref": "243f7238-dcc0-4f1b-a551-962c68dc5110",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b006ecd1-2789-43ad-8a20-4a593d73f27b"
        },
        "item": {
          "id": "f4488da4-6f59-4f08-a3fa-6a668aa22beb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a468205e-1b2b-4992-aa23-f6cdcb0ac9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "d8d2226f-012b-497c-ae2b-f5c9f892b2bc",
        "cursor": {
          "ref": "588505b1-b432-445d-a37c-8fb29e0c5665",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d77223bb-72a7-44c3-9f21-d92d155ad64e"
        },
        "item": {
          "id": "d8d2226f-012b-497c-ae2b-f5c9f892b2bc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ee9e535a-2958-4283-aa04-bbea6309dada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "238f8ab5-c84b-459a-b192-57affca46783",
        "cursor": {
          "ref": "40687fad-afc9-4c5f-b155-1ff73570dbc3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7691ccd4-af19-4924-84ce-48f440d17b2b"
        },
        "item": {
          "id": "238f8ab5-c84b-459a-b192-57affca46783",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a853d9ce-b5e8-4ca2-9a50-d840a67599ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238f8ab5-c84b-459a-b192-57affca46783",
        "cursor": {
          "ref": "40687fad-afc9-4c5f-b155-1ff73570dbc3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7691ccd4-af19-4924-84ce-48f440d17b2b"
        },
        "item": {
          "id": "238f8ab5-c84b-459a-b192-57affca46783",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a853d9ce-b5e8-4ca2-9a50-d840a67599ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df52a188-7568-4ef2-a50f-7387774898af",
        "cursor": {
          "ref": "cc06901c-3a6c-482a-9448-60190487d14d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "48260415-6dc9-465a-896a-c1ff82b70ea3"
        },
        "item": {
          "id": "df52a188-7568-4ef2-a50f-7387774898af",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "11b93c06-fdfb-4f02-8e3a-7e3048735327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758a26f3-0155-4984-8379-d9c93feedeaf",
        "cursor": {
          "ref": "a04f36fe-11c0-46a5-98cc-0be7abe83044",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d5d7ae23-4838-4609-99d7-7070b2bbd899"
        },
        "item": {
          "id": "758a26f3-0155-4984-8379-d9c93feedeaf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b715d23e-fb51-40b4-bc53-778320789832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}