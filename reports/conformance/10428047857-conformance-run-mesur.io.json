{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e4fdf1ea-5609-4942-bf89-a1c1241f7c2f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b12dcbd8-0c03-4d56-b04f-cf581564b99c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "797ab8c5-2105-4be3-b561-378ad9d54639",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5c4dfca8-8562-44f6-b45f-48cd3ba96ac1"
                }
              }
            ]
          },
          {
            "id": "af3c0a52-318f-4050-ad69-33eb05099885",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bfc905cc-d56a-4d8e-9a11-f6a1562962c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "deb53122-c3fd-4869-a3c2-bfa0c77d6b10"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e2090d75-8b43-4305-902e-02cc363e5831",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0d51d487-336f-4421-9f53-7e8af60b1612",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45105179-a407-4cdb-8ef3-b400627423a4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4170abb8-cc37-4b89-b3b1-ce0735648740",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "920aa043-1fd5-4be1-9a82-7d213aba3218"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a31aa2d-4a91-40bc-9161-4fdc4dfd67d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f53b4c9-59d4-4154-a8c7-7a8caeadc370"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fa7f1235-d2f2-45f6-9d71-6f6ae2252092",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "654d9c0b-2481-4a85-8e64-4945e767ebbb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46a42906-2bc4-4dfc-8de4-587c808e4e76",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "27339f1b-4419-4e83-be53-d1cfcf725394"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b097798-46ee-481a-9881-51f059ee1d1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b338c441-3f2e-48a0-a263-3196e14edb48"
            }
          }
        ]
      },
      {
        "id": "5653f998-5ad5-4a7f-ad50-509735af99fc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7f88d42e-3296-4974-b967-6e51d1266a4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "579bb4f6-b4a0-4ab9-b799-f84fa727bd69",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a13b031-14b1-45f0-afc8-20bcac5885d7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1bdff8-537d-440a-9bd9-02a1ba7c796a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "072d416b-2f0b-4a69-90e9-a16a12a92ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bae6b36-b430-4098-9287-2d10ca279f7d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b65497c-855f-4491-ae53-b17319a34bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e15e138d-8544-44f0-af45-56f1e39c6032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261f359f-fdcd-42cd-b246-a0f3be67ef58",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b9459d-4280-491a-80b4-fccad6b5a653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "928b9898-cf01-4cfe-8de8-4df9be6f991b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87093b58-486c-4127-87c1-29e0b383f1db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "560f1099-602a-46de-a6a3-d6230a3b919f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f841f8-99c7-45e3-8068-2abff35909c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2594f177-2ff3-4fbe-8d9b-13b1ccbb4118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff03669f-d47a-42db-ba28-6e9efaece4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9110c669-d9db-4397-81c7-dd319307dd0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d3cc76eb-2ba3-4850-a1c0-11fa30715d27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "013e7e41-1d33-48f7-ac1d-0d08847e06d9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57290fba-52c2-45aa-b26f-02f0460de82d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ddb77617-ef6d-442d-83a4-53ce4dfb1d9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "422c5a13-171b-4029-ae5e-854eb9c32bf7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7cd7eb6f-15ba-414c-bde9-ab535124289d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4a15b54-ca4b-44f8-92cb-59cb71514273",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7267e912-11b9-4ec2-b41b-87059bfab16b"
            }
          }
        ]
      },
      {
        "id": "e23b2883-a361-4cec-adf9-61e3bb804449",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1a7d4eca-4267-4270-a34c-cfaee6909698",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa67b7e6-6376-427c-b463-57262be3daa8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fa9656d4-bbcb-4ec0-b308-a03ea36953a7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18285c34-bb79-46d2-9028-098ec1d33e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9897bb-c88d-4661-9aa3-14e728d6b2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84e2d55-e125-4866-8927-6c145802230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68716cfa-c645-4983-9a52-3be95d56c197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e47071-1d88-45c3-8cf2-533ed9062d60",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9492d84f-bb7b-446f-b317-c4f63c98e54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9103d56f-49e0-4eef-bb97-ffb3d0e1efc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87bf0b5-7d94-408f-850a-d7f20a5e8ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "275bc571-84fa-468b-b1fb-c501aa63aa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da7458e-8109-4059-a5eb-1955bba65140",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876ec723-4644-4cfc-82d7-429a39db54eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b18e7d-c065-4229-93f4-4b8771c75dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a726db5d-e40a-4e01-9675-8517c9d98f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12899aa1-2005-4c53-9036-5da93c740d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcdb2fd-d31b-4556-ba9e-26045e880e94",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b816d26f-76d7-4d71-bacb-b0d50d214366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21914c41-d66f-49b7-bd38-7c1c75d485c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0356d19-1fda-4f1d-bdf3-0d0a8e1e9d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "591ca08a-bdfd-467d-9c07-cdf95409b1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fddcbcf-f199-4e16-9355-4eab03c89f15",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d17f6b-2067-45d9-ab9f-da7c0c1e72ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a44a578-a6aa-4875-b6f8-25f8dd75d3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff53687-8c2f-41a0-94a7-ca3e77ec223d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1f5f2b5-8f4f-41e9-b630-c877a83ffbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f03a2c5-ba4d-4df3-ae9e-ed4df8fc346e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae170ee2-46ad-447d-b30e-3be342a76d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7542335b-9d35-4a81-b6dc-26212129537a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b7c20e-b6e3-4dcf-a4dd-69159744ec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a40bede8-6215-4e6f-8300-8238f4d4004a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58d024b-7f02-4ae7-992d-6fde3f24324c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d685d3e8-621e-4d42-a890-0dfec29aee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ab7434-d3bb-4b45-a558-a60826e9cfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221b518e-7ba6-4f0c-a76f-aeb6f2e7339d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c6aeab3-8a64-4b56-8b36-69b574cc352a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7940afa3-82e7-4905-b430-d20ec1f73a6b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6168ea4c-6306-475d-8a58-61a17477d947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31d14b7-f3d0-4300-a89e-c25525b91aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421ebf19-852f-403e-8029-8cd671a8235f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "520f4660-c58e-41e2-bca1-03aa230b3361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4703d88-603c-41d3-9e21-38e9bc50ba4a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3636b283-e917-41bd-9d96-812bd30c8be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f185a7-9b44-4024-85b1-d4c98398fc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ba51c2-622f-4e4b-9403-e865014846ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "067ff8e6-b85e-45a1-bd54-34ba30413c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0337eb-1cd9-45ed-a8f3-ceb816c2aff0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea8f5b9-64b0-4681-a39e-872632b5237a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e19caf0-1052-4889-b5f3-4f36464ad35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4aa8bf9-e723-4995-962c-403cb884e760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d58742cc-af17-4518-920b-68c46bb8607e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238c6f69-d03d-4f1e-8e10-72d215a0213a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaecab3-47cc-4c67-bf90-3cc725eaa6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c650181a-3b65-4e2a-a12c-53df965dc76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b609db-f7d7-4dd5-9758-2ae5fe6e4df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97eb25c9-03a2-4bd7-a6e2-d8d50cb267da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0206cb49-6a06-49e1-aceb-44833e6eed1d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec48976-62dc-478e-b1f3-4e5c079164ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf07761-6301-4a46-b85e-457ecc5f81d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb17ef7-a5a4-496c-954c-2484809dcc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d76ec32-23f4-469b-964e-bc60234d4834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d55a501-3ac6-410e-9e6b-36727aa31c06",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf97ec5-dca5-4b6a-8c6a-93de6c7fa94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715c1047-7ac3-434e-aebe-13b46acc576e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62347df7-ba6f-4e0c-9a50-bd485b47d6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da11717d-4a40-47ea-b8ec-a50ba8a0c397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369035ba-e622-43f5-b5eb-d3d875a51d30",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5637a2-2428-4dc5-aec9-46d5672ba59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc90c3ee-3386-4a5a-a89e-6bdac52d8889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ce0df2-5c92-4426-b8af-ac8ea7f19e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dce80ab-8a85-4bce-83d2-c42d4d912b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd30f217-c38a-4363-9b4a-e1db70778b20",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5433fcd-f4bc-4095-8dd4-11d3881b8102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd68b14-062b-4a3d-854c-de5387b19846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff80744-492a-4194-875e-0870d162c73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c595ea7-ed8f-4b48-8727-57be04af4339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519ed23c-3c1c-4a39-814d-d991b3f4633a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855712e5-02bc-41d7-af3f-d305d25e1904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca64d41-2012-4d1c-a544-a3409331a0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6021432c-ed55-4b7d-90b4-9a6dad463959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6fb39b3-a9f9-4f2f-ad09-9fe878374ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbf168d-cf95-4120-9833-d29df17f42a5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393f4b1e-5329-4339-92d9-a9c43915f932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c3745a-65df-4c69-80d8-15d28c1c40ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12b0755-c254-46bf-8af4-00ba1891a7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef8bb088-8e0c-477c-a2a4-68b8379ddb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce5581e-d1e4-47db-b0a3-4b717551371d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9b3fd9-8188-4a8e-9dc1-6d26dfe3ae43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3cc06e-26c4-43f6-9644-e665de6e5c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af075826-5978-41fe-83ec-f5cfb7716a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1b1e3e-31f0-46ec-9654-b5bd05b455fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b22dadf-428c-418e-a413-70aca5299963",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befdb345-693c-4e1f-aaaa-97219372990b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123442cd-5a31-493a-957e-2382c225980c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfdb530-c59d-4191-8996-e1ea525c3e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d63140a-c2c9-40dd-a6b6-d763d2daa536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9eea8d-bbf4-4465-8ebf-0dc108651c67",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1179dbdf-4586-458f-adb9-a1129f4dd89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c747484-bad9-41b4-b63b-43882dbc7d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63293d1-7ba0-43a1-bc71-80c3e4094d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2bdded-0ede-402c-b5b3-602acbee79b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346eb4f2-2c5a-4e77-8ec2-fa90c351fb38",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fd8d2e-10bc-46bc-8a0c-189e06ccaba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0582468-a2f6-4d96-a393-84044558ecf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f450d25c-fb99-4ac2-ac7d-5da4ee053850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "555a81ee-7d7f-4a1b-8e78-75ebc52746b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a874f7c0-5734-455d-ba83-8fc342f09d2c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be80c22-c032-4cbb-b433-64d95e87b90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23749c0-4ba9-4fb3-9b42-c26449bb7da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5abef5d-74c7-46a6-b9c3-1f204864f64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df262131-4621-4545-95f6-5748f28ac450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfe45cd-4ffe-4d72-ac1a-fc1dba1f2377",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1159354-c249-401f-a09b-de53dae6287e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163ab80e-354d-4ac2-bc0a-ddb7be3b3849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc759aea-3db3-4599-91c6-93a7fea5074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f5b922-9013-45d0-8001-f56e5096329a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ec32d1-3730-4c01-9775-4a5feccba31f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42021074-519b-4d52-8820-0364a032344f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abaac168-ff56-4ef5-85f0-04ba556f7c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec35ae5-0ea0-4c98-b0f1-6a740d14706a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "60096bd5-a5de-405c-b872-28180bd9c005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488c21f3-4f90-4f37-bc10-bf2327d57fde",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a8ff43-81cc-41ad-b44f-b76043e6df25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f953c189-5184-46e5-bc32-7ae624ab10d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc7080e-c8d2-477b-9b02-aca5466a450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3b818d-b5a5-4e37-a221-93652181a980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2513a8-9d84-4094-b34a-642067a073f9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db2c846-4e9e-45da-a6fe-f24efa228df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e411f4-a597-4513-9c22-c440c58d93c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b09ec06-a527-43ee-80c0-3d4134ab873b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aade9877-0425-4caa-aea0-d91c6d0b75b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8036dd-947a-4d00-bfcb-1af493ab50ce",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bafbec-fe03-4b4b-8e99-8c62f6d52777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331a8f67-63a9-4d91-a41e-5d98c9a90223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ba3336-3324-4840-98c2-5e27a6a39e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c663b0b-d4ea-4342-8d04-b8390d8971b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58883457-0eee-4386-adeb-b14743601a45",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d79b43e-2156-4907-bf87-d4d3f7a1d538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b46f9b-3c0a-4fca-a66f-89fae499d184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acadc99f-6667-4682-b4b3-cce3fd4f5796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0f863c-0546-43f0-942a-5de3c8f782f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0247249-c0a7-46b8-ba91-302f7772da43",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbde903-4d6c-4f8c-bca4-cd269a2ef04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa5c4a8-7202-4883-af26-88df03ff38d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16af1b4d-7cf6-4600-8c9e-003ae32e3ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aed226a8-aa69-4c0d-a3f7-f69e7af0e45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c8f95d-66bc-457d-a489-1cb191272c3f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d3862d-65bf-4a2a-a08b-a4bbf2c6489a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856da2fb-9408-4833-8c7b-8b0dcefd3967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113fd515-2d73-4700-8ae5-11fe7c9e7d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78a75f6-7faf-4ca4-a9aa-e1c6b658a9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c529c8-5dc2-4d21-9845-8973d9b41b70",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1195832c-982d-43cf-b694-cee935f98b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ec094a-0abb-43d9-a7dc-edbc0f1f378d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee327cc-b97f-4492-a554-6465705f8e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf43acd-0cf4-4572-8c96-a0bb55dc98a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda9cc52-8fb4-441e-9723-9881b3aaafbd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77b3139-0b78-4b51-ad49-e291951999e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b02c935-ed8b-432f-adac-87e4e4475fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb6af98-6aaa-4c7e-875e-7fc32815139e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce88ba9e-a5fb-43f5-9d81-fc3f22232589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ce2f2f-e709-4634-88f3-0d86ff7e9519",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aa7f02-68e5-454f-b201-da3a64b9ae61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf02840b-1b78-4ea1-9b14-df1ca57f88d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bc41f2-5994-41a2-a1a2-977d0a674d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d964f4-1970-4465-8a99-1bab98e184af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041d943b-8fb6-4adf-b0a2-6352f4938307",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a017480-34f2-47df-b197-c8dacf2ddd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a513214-5762-4568-94b2-7f9f9ad82504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9deee3c-966f-4d82-94ce-3a831f3e72d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "436dc8fc-3031-41c7-b0ea-a55576b6e7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4fe261-b805-410f-bf82-8031ab1128ee",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeede1b2-7259-412c-adf3-7e6501e84a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf27e119-2842-4c7c-b09b-92dcea7dc9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370fc36a-edb7-454e-9216-7fff3c022e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4a6370-5629-4471-a896-09a70290a497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947af2bd-3bfd-4a16-8dbe-38532cdcdbe1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c534d706-51c9-4b17-bf87-88bb5bf03e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76b9102d-d748-425d-b040-18b8f689416c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e976676-3e2c-437b-9541-04790393fa07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "151c6097-4cf3-4164-aa28-bd28abbcd7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba7615e-6447-4f6b-8d21-f32ca175388b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca4e1e6-e717-4632-8582-a1913dafe543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c2767d-9cb8-402a-b4d3-f703c78c489f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a832f10-a643-4785-b24e-4c62b01b135b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa68b268-710a-46be-bf83-72bf13f45bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e9eba8-1356-459e-b216-3451af80ab5c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3b706c-6125-4295-86ec-a568de7f9fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774763d7-47c4-487c-bc0a-1c119a9a540a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa0f7a5-714c-4f80-927c-4e2c928d20b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68aadd9d-a9e7-4c89-b297-f003d8f82372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120d76cf-1d2b-4165-9289-40ebe750c3c1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6030c5-63aa-4a4e-b554-11ea51c927c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b5d704-d151-4db7-8209-253496816009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152fbf6d-fb2b-48b7-8772-547eee1a143e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f73cb2-7a56-432c-9a13-9d2cc4e52396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbac6702-5b98-4391-b858-2581c177651c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb60fe9f-0802-40df-b227-62c59629ea71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301ba727-a294-4220-8950-2ec4e042d953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dd8019-a25d-44f8-acdb-b08a176fd4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "76a17150-8a49-442d-a346-2b8386df1462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912fb0fb-8d53-4735-bb59-334f00f610d9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b1bc18-3467-4e39-bfc8-37743ff95eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e0fb09-4174-491b-92e4-0f64eb0f538d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3535ee2-86b1-4d34-b4af-0277b27e732e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e01652a-e66b-4e23-b87b-3c362440d788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba31e1eb-0a27-4e9a-9380-b27f92a5c979",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e391e78-e496-4e46-a63a-98bceaf15e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27198051-92ed-41a4-a28b-dafea19d8421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e272b28f-fa12-4438-8ff5-c6153ee94ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "28244fb4-3fc4-4e52-af42-3ce0a7642ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de09fda5-aa07-46d3-80eb-e8b4819aa748",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9846ae-3a46-42cc-af95-16c2ad2d286e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7fca3d-0bda-476a-a13e-a7d923c932fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62258e94-9a00-4d84-b7b7-e4ad35aec6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1797f99-d3f5-4a70-9244-538c66b07a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22408ac-955f-4ab3-b6a7-6aa934df2be3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f5c4af-2823-48c0-a936-4db436f9cd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccba2ef-60a8-4bc9-9f24-1d2f5afd8415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf2045f-8d64-440e-9fe7-13ac2bec0bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "48072246-35db-4e21-bf22-4b258283f9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fd05ef-9cd6-44c3-9857-3bc942dd5433",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59678457-8b36-4a9a-a8b4-e022ef7bb23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fe4777-dfd3-4821-b99c-ece79397c753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27bf2c4-aa12-466b-8283-47d2b71baf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bd9cb7-2557-4648-b6ee-efd5db094fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e54bc3d-0f70-4831-a27f-614080b529cc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0a8d99-e375-4458-82ee-134df0339e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c46a5a-8faf-4bb4-9ae4-d8cf019d464f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6dd070-256f-4f4a-9c18-f1252e53e4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf503bde-5090-476f-8431-550b8625a368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9454f591-0511-45e8-aeab-1b86d48137f4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8483ec3b-057d-4b53-9036-b595ff6b12ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce71e15-28b1-4770-814b-3260f6bbd550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6131bfe7-c3c0-4ca6-8792-da6474309892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d2a80c-c080-4995-98a4-0020ef8f5d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4095207d-811a-428a-9319-378f76ecfa28",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c43004e-d455-4ddf-aa7b-f9c7cba38b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65247f7-cc5c-41be-9eca-ddfce80be5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e307b9-9381-4af1-82b0-5db4c6f4a854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee858ee7-7042-4b9c-9b35-fe0fa24d0c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d5ba83-18a6-4c90-8398-cbf7a47244e5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9664264-5fc1-4cb5-9596-b068278b7ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db211df8-61f5-44cd-9030-931607138a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c80f3e-2902-46dd-9d5a-78ed7db88352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba7eea5-93fc-406b-938f-1b8ad705aa49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52f5154-ef2e-4ad4-b89a-1f995d13fb03",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5248c42a-8a63-4af7-b800-65f210c5cee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a60bf64-fe82-42df-9cb7-2568c243f1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6561cc-4305-44d4-9596-fc57cc0ae2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70af839c-7869-48e1-9934-d02471b2bb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2447cf66-4d4d-46a0-9f50-d4a24f0190b5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c60962-decb-48cb-b65b-f1d1a167f1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c250f5a-22cd-4db6-8166-e4439fd86d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e5e11a-c09b-416d-98ce-88093cac33e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "76ec7c9c-b37c-4ea4-845d-2e99089746b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253f9451-a691-4a7f-84df-4fd606fb4f3b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b25211-45e0-429c-8ff4-1de9b53d6f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a42406-34b3-4e5f-b18b-6a05df357529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5259101-0ea6-4740-b7b4-61b460aa9e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3db849-614e-4eb2-8551-8ef89a30115d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65229b92-28c8-4cd0-8b90-9277ff4b524a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603bee90-fe95-450b-bb7d-a8993365454b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49094c33-88f5-4a75-a618-693a0a8263df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec9827c-ca08-40a1-b2f7-415e64b6d736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9314ad52-7f8d-4b0a-a875-bd113e3b6250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03096e8f-5f19-4b2b-ba5b-32662a73cf24",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64997714-9ed2-4f5d-a91d-dfe0b7fd888f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374ef5b7-fb62-4f2d-9a27-75be42098fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2c0289-ff77-40e7-bdf9-0865ee6d64fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68624191-1bff-40c6-b33a-59c0bd354201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f90788-11d0-4159-901a-9c42c0528656",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44693380-401f-4cd0-9ccd-1657d47a99eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b707852-611f-4d84-8e67-3c996112f844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384c9d1f-927a-4951-b03b-5c3b432637e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba38ebbb-e577-489a-a56e-cc89e59a8a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8af242b-8be9-4091-be60-1cc169374e0d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b451c22f-5ca0-4b5b-b366-b49ab4a7be30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf7ef76-607f-471c-affc-43bbf3099211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132c3d22-65ec-48d0-a02c-0aaaaf5cc90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fb253286-6283-4790-b917-550c2fdd2fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9124f9-62f8-4b11-bf58-ca127869ad17",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210cf9d3-306d-4edd-93fb-2f65b86fe045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97df24d-904c-4ebb-a11f-127bf6b4e333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb29186a-ee35-4e8a-973a-716bc790af5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "afc81d25-66a9-448d-bbb1-bf587408c22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4765702d-8392-4e23-9e01-f2cf731a8e2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b739878-465e-40b9-abec-26be7d8e21f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d246ca-817f-417e-85c4-ec96c9522aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7bc545-9eef-43b1-a4e9-106e84478481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4da15cb1-7d7c-4cf7-a77a-f134029ddca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1987c27c-976c-4e63-bd53-f5ea808e9fba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1195ee2-3267-4ce0-a567-e148e1c526b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b02f760-3350-4883-bee4-cc79704dd266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5075ea02-856e-4333-ab57-2e2d0e02612d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "09889a6a-6454-439d-b84d-9a9163a59387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f400da81-1502-4fef-8f70-b19503e4612d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57492b2-7d86-408d-8803-ac26550842c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913f437c-d12f-4210-b152-01a7c5ca7c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be1dd57-c320-4d58-8d50-5d298ff773ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e10a4b-3e1a-462a-b950-a078721443f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ba3374-72ec-487b-acb1-583b70bc78d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6367c831-ccff-4c72-952e-7bc36b43f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da70ced4-b1e9-4924-92d7-743a4db4bacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f0434b-2109-4852-9b10-4ac88cf6de9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebffaf6b-54f6-4a3a-bf0a-ef5c7b02687c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26413d5a-6f36-494d-a8fe-fa983025288f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a25838-a160-4aa2-bda9-8b91d9a6ba86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0261ee2b-2178-4da8-9728-e2d0dda61e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ea06b-e1c3-45df-afc2-2bfbda7b4911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "21787ac1-a449-4e83-9cb5-870c55040528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c3d0b4-c8d5-43d1-8b2f-8a119d49c0b0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d84bb25-2bee-4656-b5b8-6534e20c09af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7cf831-288a-48d2-899b-7d758f544f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037c882c-9d59-431a-abd9-3678bb9417f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "05d84d14-ce6f-4a2a-a3d8-08ef7efd53e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac94f27-606f-4600-bb22-f292fa5f8912",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5689faa-fd6a-44aa-aa6e-ec9aeb686b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fba32db-0e57-453b-b336-151c45b25893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53786339-8dca-4c9d-8871-6867de96c788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4695906-d18d-480e-912a-3e3ef23f9597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a46977-4fa0-493d-8124-e07ce3a8ae9d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f396d84-6d1d-4475-aa53-7a9327299794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10d7266-377e-436c-a6b6-4f3bcfb5c8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46466f4a-0e0b-454c-9dc3-1ad3a415a71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77debeeb-c1c9-4cf2-bf09-1c87be03d2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aff70a-0063-4e46-b075-c435e70f9a9e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeec303a-9f73-43b2-9892-518bfab38278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9228348-bf52-4524-91b5-c316e67e6e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16429b56-9cc0-4820-a0a2-799c5c9d2145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fca8a9-ea25-4fe3-9bc9-a7a404be82c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b3cb80-1047-4dd7-b355-1141dc6d1d69",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9b17eb-2752-4aed-93c7-30c2cf5156c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac6c8a6-59fd-4813-ae9d-3dad671787fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94533122-563b-4b12-9e2c-08a79d4b93c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1805301a-099e-4516-8c0c-03f745780ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8572f9dc-61a7-4d8b-8014-21a1aea8eac1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2e1be9-4149-4176-bb56-b8a1ec8dde4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09cc2f6-639a-47d2-baf9-6fc551c950dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defcb608-90ae-4b89-9c0c-4842ac93b90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "16ab30b9-ce6b-4014-93bf-8202bfb02629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78151b5f-e0c2-486d-b356-e549d7e18384",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef7461a-2952-455c-9450-c62e57eda9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950ca4c7-3000-4b62-b894-1b2a3584dc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccebebe8-9113-447a-b6ed-f218d4f95164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c96bb336-aff6-49ba-8532-7cb9dcbd9424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1ad91f-5742-43d4-978f-eec38287ec05",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778421fb-02ce-4aaf-8a88-87594bf82c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b606c81e-2e50-4d6c-a633-3a8f665c9d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703b4153-c582-41cf-a509-28e315ae920a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9fe800-2e61-4037-b30c-999ef79e071f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45c1664-787b-4124-ba47-0c1506636f90",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f023c499-ae51-4000-95e8-98707f7c9e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9348d6b-b413-4637-8031-3908592d3678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4a7611-facd-4581-8943-bd7ca972f2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb5218f-f196-4290-bb3c-303db7f1ae2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3f5129-76c7-416f-a525-2b70b5e29ce2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cd120d-085f-4a51-b176-597169e47006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b0f267-ccee-4318-bf4b-48c0e40761ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339ae201-0d62-41de-b367-48239263a78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b987fb-e63b-47df-b03a-14ce03075dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad54c69-993e-42ae-a4ef-ad01eb09e88c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5466b9-f0b1-4e98-a322-1cdb7f1b2ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5ab40b-8003-40fe-a155-46b9394e854a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13749328-878f-4bd2-8f8a-79822ff5c74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd381c18-8a80-47c7-ac62-7b672fb3294c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7393fe07-ff64-4cbd-8bd1-8a90cc15ff8c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47d5a86-fc9c-4358-be34-c01ff86f96b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abffc1e9-457a-47f8-b4bc-cca210ab99fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7d3ced-7919-46ae-bd91-e74cb0297c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49aa479a-f704-4566-9e56-13c123b3e2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37d5d9f-a410-4aee-a694-8e4e992cd290",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9158b067-e17d-4cc0-9d96-cdaece1ee9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c9b0b7-39b4-4e2e-b819-cc1cef1001a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c31fa7-3321-45f1-9ae7-8c8e2ae63185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc24746-c030-4cc2-98f6-b5dd5b7dd4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7394a090-d9df-4b5f-9172-a4670c3270d5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc910d4-98a1-4c95-8eb6-e24a2742154a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5037d8-566e-4396-b4b4-951c1741a5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9674194e-a5d9-4de1-b228-2951fc3bd2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc6d32d-38b5-4f0a-839b-7b59b84bf731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c411d6db-07eb-4bf4-96cf-8cf9747a4447",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da04b48-0c61-4ee5-b247-76402c683c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae822e1d-69a5-4357-99fc-ecba1c028ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58953a6-ca37-4350-b6b9-b1b9eb09f1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e37403bd-a7d7-42dd-bed8-f762fddd7ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00405319-feeb-4312-b253-a29e7a859bd7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da24f4cc-ef65-4ad7-baa6-95bcdb3f9fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f69ca4-d21f-4952-9c93-5a5f97f88a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdda2f9-1cca-493b-97de-cd47f2b5e1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "001ba6cf-37f6-480a-a49b-6ae78dc4e41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f60e255-1867-43e6-9244-9fd8870fed80",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a794e1f-1fca-4a82-abde-8578eb7844d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e02226-60d1-4641-8171-8866faf51955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621b6702-ea68-4ea4-a702-b25849c8afaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "232d69e3-552b-4808-9876-a001405f09d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2444b1-7cfd-44f0-810a-1c7e23c3775d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4866c3-e0db-4bf2-a700-ab58b712ce64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aacdfea-5f0a-4bfb-8261-b30b2b58da83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093d0472-9f2b-460c-8824-e314affad878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f6aac5-7c3d-4d8b-a643-44f128164738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5403ad86-325f-498f-ba44-fc68cf255f49",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c160c9-c762-4e82-86af-8e903a111fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8594c1c5-fe91-41e2-a42b-e0791c129977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957f55ed-d7e9-4aca-97d1-b83cba73eb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd32427-ecfd-43aa-8ce9-0cf448352941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea95a29-9e9d-4256-ac30-9852d455ef76",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de64d08d-8035-4320-9c1f-74644e747427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f10dca-cdbc-48f2-a4e2-a68af7261bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b9d379-f68f-4330-a7f4-3d248141df42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b004816-ccfa-422d-9aae-25a6ddf20f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3e6559-8798-476d-9b54-c4301dcf1a38",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91463971-de42-4c8e-bad9-ac9884a202d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c51307-81ca-4764-a36c-ae06e14b410c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349ce761-0b58-4ec3-b9d0-787b517767e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd589a8-4f35-4b07-b8b9-db4334734479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068fd1d0-30d4-4cd9-9e03-7a60c0cac7c2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f7e997-fb86-4fa3-8629-13d379add80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98586b5-8cda-48ae-b4c5-f70bacdad6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cca717-724b-483c-948c-36b389d36783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f60e2fac-551c-456e-a6f4-4804ff9188c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e381e0fa-9137-48f9-9d2c-1b5ed7f2b14e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4142f926-0f4f-47ae-8318-8a985a69f694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bf8acb-17e6-47be-a268-1d72e707d4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b25a644-fbc7-49af-b8c9-59940c8740ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b736168-5841-4eb5-866e-d796c46a15a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5836a282-f739-471c-92d4-60b28e9513e6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ba6a6e-2ae1-44eb-9726-19066a96dfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff83f63e-813c-4041-a9c6-7d7ded66028a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dca8642-67f0-40cb-a4b3-524dd4f5ce37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfc5a51-82e8-4fe6-a2f9-fb33ea15f92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8aec9e6-2c39-4856-8b6c-5bf802ee2ac0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478b378d-7237-4eb0-b7bb-921226983026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72be3a9d-5942-4102-a88c-6cce5ae7d98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0208d2e3-2406-449d-973b-df456245a2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "281d562c-8399-4e17-8dc2-35838c97cc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacf1e31-5aaa-4e11-b862-37a4b108d032",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9493e2b-4d55-44e5-b793-9f01a845c203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dbc4e7-f0a7-4438-aaba-946b1eb9bb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61faa21a-9541-491c-a85d-92d8bd3d5f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3a0c34-e166-44a1-8f0c-50b1fe94c35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aefe770-714f-4cc5-857c-197ad9230cb2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5140e6fd-3476-4711-933d-0b87c2e6b516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb40b4a9-67d9-4246-a4c7-bea13ce952ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855bcadf-21e3-47cb-aa38-05f6dff695f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e825adf-7b18-42cd-91af-a8cf26b10eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20c49b3-a58c-4198-b40f-5606d302c4e4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67596b16-6de3-4559-b178-df9b96b72519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4ce0b2-0f1a-494a-838b-a1a67dc2c450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc4aef8-82fc-4d50-a00b-d8385f22ad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba7a4eb-83eb-4785-911d-ac38184dadf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5b2d55-ded5-4bca-aae4-bdc853ad1ed8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655919c8-2369-4078-800b-b61e68109eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bc6902-3c81-40bd-b44f-63ec41573c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f80e578-9253-4989-ac2a-ea5a933b1918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0bc764-89fe-41df-8f6a-d7c7879f53e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8b0d90-a95c-41c9-b2e8-18b8f7f48f96",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ed0ca6-3b34-4c12-8ffa-5f0869086a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cba79ffd-0803-4251-a724-16083f626ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04dc1ef-4f44-441c-9743-87fa5ebea9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8db1fd4d-1a05-4694-b528-d6354cd02488"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "38c41fb5-72da-4e87-ac90-ad02ec8d5216",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c14b1939-9d7d-45e0-8527-a025ea207392",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b9b3f0-2acc-4754-bbd8-41c0f8fe709d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96cc238f-22b3-47f7-bf0f-067ab2baa092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce460cff-d064-45e1-8f54-14b8a9032160",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a86705c-bb23-492b-9263-18ac26cb7ce4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab2e3442-af7f-4af4-a88f-249d49fa006c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aed80c9-056f-4b36-aa1e-25ea5a7ebb40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebfa899a-b428-4904-aac4-ac9ea4f49d83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc007917-3dfd-4a85-858e-6b970f9bcff4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64cf6ff2-3183-4b8f-92a1-8504708a9507",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd9a322a-bb46-4067-8d2f-ed64316b21f6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36c8ac3a-cdcb-40c0-ad83-d4cb6479facb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86868a60-cf35-4c94-be28-cdb2118ca64f"
                }
              }
            ]
          },
          {
            "id": "ee555f48-c944-4059-9240-378cdab6c35b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0cd5d729-5ce6-4197-aca9-5f093cf655c8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6758f311-a6c0-4c03-ab7e-4a82ddc47576",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09559aa8-e3da-48e7-9750-7cd756da9211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "30daaee1-9e54-47fe-8b72-5e2ef588cad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e4e22d-41e5-4521-a313-657ad6e9532d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05ad882-8a7b-41b8-a0fb-f43e4c3608d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e4e90b7-c85b-4265-ac2a-87580ab6db12",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8eaaf39-f8e3-4b14-ac15-cf226111355b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43646f0f-798b-4d49-ae08-f509affc6c38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bff71bda-505f-46fd-988a-7587d13036b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d467d27-547c-4b6d-ae2c-ae882bb32b62"
                    }
                  }
                ]
              },
              {
                "id": "ff8057c7-76a0-4ba1-b33c-9a4e591e6755",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7dda152-a735-4049-acea-352a573f9ed9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "361946ca-5c49-408f-b2e6-98285753b3a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "973455e9-49d9-44ac-b615-6f61db97cc42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88b52086-9352-40a9-bdc9-5c83eb8a76f7"
                    }
                  }
                ]
              },
              {
                "id": "653af28a-b0ab-4947-b712-a1527a9e272f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9a57ff5-6ab2-40e1-9b78-360175006782",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d21a185-e1e2-4349-9c46-6cc8e4a19dce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fa42fcc-ff40-46d0-8b01-7cb17192dd89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "682d4347-835f-453d-989b-81f04db2d4b8"
                    }
                  }
                ]
              },
              {
                "id": "69504c40-caa3-4378-8380-e280d8e3cef7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d34a839-3ef7-4462-a309-0c86403f57ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0185a5b8-cf3f-49f8-902e-379a55665ad9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1d86af4-0f26-4605-953b-562c7dfb0ea0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8f3e83ee-547e-4f43-9ae3-d5bbc2471d60"
                    }
                  }
                ]
              },
              {
                "id": "432e6aaf-5c7e-4af8-b4ae-9063d2692015",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "faefb7ba-c6fb-43c3-9929-942fd4f063a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b45dfb2-ccbc-42dc-8f1d-d6ed4ce1ba2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e24e5db6-ecec-4584-81fa-9f181ba0e718",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "27e26397-3081-4aa8-a2b9-4789ae4a5f9c"
                    }
                  }
                ]
              },
              {
                "id": "4ec5908f-ca6d-4ec0-b591-bb3a9fd67864",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9746f937-3139-40e5-ba7d-27548e105b12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb4997a3-3cff-438e-9b61-501ada892031"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83360f81-c8f1-4da7-b9e4-5552bc4df9db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f6dd372b-de81-4fff-b36f-15bf167564a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8318155c-7edd-42db-9326-d941791b0df3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd75f4b7-45ac-4f40-84df-3084ba9e5aee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "14c1fa06-76f5-40bf-a5bf-fdf62d8f715e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc828b35-e09c-405c-9c0e-4cbcbfd1354a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "741e20ff-3945-443c-92cc-1d6c030b2ad8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ae30748d-0ebf-47a1-9b2f-32b3fc112698"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0af0fff-2476-40a9-8575-c26c37703be1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36ed87de-2f1d-4668-9b97-2f1eef68c18a"
            }
          }
        ]
      },
      {
        "id": "59fb0f5c-a526-49dc-8ffd-e4d7c5a8565e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c70b9841-70a5-40a0-b139-8b469f9435f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d677c508-68ba-43e2-b98a-dd2b3deb9b6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38250388-5e8d-4fe4-aaa1-568f33178c8b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c545b652-77ab-4335-8695-78b5fcb7a787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167f0576-04ea-4c6c-be9f-51065e75ef7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424e98ba-4372-442c-988c-b46ce6aaa3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc741a48-fd73-4973-8323-349d9199db11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2210502-3262-4bad-93e8-832afbe4a38a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f8f32d-206e-4614-92bc-c0a3e227da3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e4dccd-000c-4750-87b0-12213be400b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05144ab0-790f-47e5-9c24-bfabfcc4591c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b920cbd7-36a3-48e0-bb6d-2de0760c3b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3911bac-aee3-44d8-822a-b2f9f50bed25",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cabb44-9f83-44c6-a025-43948093dad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a65260e-77f1-44c7-87fe-9519a828f024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632397af-2eff-42d5-b4b1-0be7fce8c4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "160e3c17-0ec5-4b99-bf48-8fe95b8251b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e58c70f-37be-40ce-8423-94dd840157ff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1907b370-7e67-4411-bc5d-7085b950d399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a0b112-7cce-44bb-8d6b-8be5ef8f3e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5743ef7d-7660-4d13-86d8-419d794e14ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb37de5-f6ad-47b2-87de-51690024264c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be827fc-d223-4ae5-938b-6726e3ca990c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd351ca-8ea9-4f2e-8bbd-ba33d6aea09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1867311c-3048-4ce6-be25-76eccc2621cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a23e171-fa7c-4fb0-b23e-a26ac53aceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9416dc-ed4e-4020-b0c8-aa0acfe83a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45507a10-1c64-4d79-bae7-b414da1ef081",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd81013a-241c-4b3d-92a1-f9cdefa4ad42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992f6470-a4c7-420e-9b95-fa9417045070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959bcbb8-ef95-495f-bfe3-d9ad59dc35c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "609199f4-c325-4e2a-8b27-95c1cf9038fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10f0755-6244-42d7-a731-8e522bd399d9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d06653b-f625-4fed-91b1-218461c2e810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc49c891-f617-4a9f-b83a-95e4c1c1ab5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6179d6c9-5344-4e66-a06a-2899cfcee40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea03f5a-5854-493f-ad7b-e1e5361d74c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e41ef9f-e2ce-4a5d-89b0-0173f5910edf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456d2e1c-2f47-454d-8f50-d137b18e8bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1cf3b5-ce38-47cf-a033-357b76157c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f65259-3f8f-40bf-89c1-65b590de6d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d49494c-6fff-405e-9225-e19484247f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3b5bb6-9967-4fe9-aaa5-4e31257db9e7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a25a29-6e0c-476f-8687-5fbc6c2d3cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c7a947-d54b-4691-b59b-5f7bbd67a6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3d6801-f813-4810-85bc-390cacccec5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de7ed81-8a03-4407-a0a0-413122b5ed04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24aee8e3-9259-4551-af7d-f2ba792c893c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841b17da-d47e-4ccb-8699-2db1c18d0321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e1646b-2c92-4986-be15-eb407b901828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3b7622-b1de-4e17-9c70-c957ba3496ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d747cb7-f839-4597-90e5-6cf52deebf6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c12d9b-c116-494d-a8d0-05c04fb16699",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4359fb-306f-4702-a2ad-64a176e38b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee205c9-f9cb-42e8-adb9-d5f988921e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90551287-d2e5-42e6-a0f6-92572c0c5b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c24af3c5-62ef-4dd3-9f0d-c20cd4dede4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdf03c5-cf45-4272-82d4-1ff35fb48786",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c800c478-5eb2-47af-b9e9-55b70d04f598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0717e12a-51c3-41b9-bf48-1c6dbef55636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3823f56e-7da3-44f0-966c-f3c573081918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d688cb-cdfe-404a-b480-e95a5603066f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf15d4d7-b4fa-482c-bb84-54408a09f319",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c40af4-0c65-434c-bdda-c9fa074b74cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209ead31-b66c-4452-b038-9353f378c26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4895d7d-084c-4826-a0bf-fda37dd93b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "159ad695-93f8-4880-b5d9-9a2e8a2f39d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaf10f1-6cfd-48a7-9cf6-c91dd364476f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cb7f4c-31f4-4e9c-9f59-d2ae7727d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707effd0-65c1-4929-a14d-09a2cfb744a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1841719d-94eb-45f1-bee9-4fed1417ea08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "339c99a1-305c-445d-ad82-64667310f682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dea455f-1af8-4847-88cf-c6fc6b3944cb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e722b330-f77b-4ee6-8495-bac889fc3984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1ec8b0-f9ec-4383-87c2-4892eda57b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c48a15-ce64-442e-89e8-b0ecd30c8566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac23fb3-ddfa-4820-9ba8-3c0bcab87414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9eaa666-cf2c-4506-bb08-28b8fe0e3120",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81def222-76c3-4883-9c22-a448c0ac7b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4eabbbd-abd7-48af-9427-1c0074a3f7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed26417-dd52-49f3-9a0a-21745f452aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "be970b9a-c102-48a9-aa16-442342c37b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadf18f6-9911-466a-8818-e028167ffcaa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c44bb4e-aa35-4493-acdd-ee21f8337f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef727d2e-649d-41e7-9467-3a1869e0ff5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927a28d1-47cb-4261-900c-72ad51d99d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "42e1fcb7-ae7d-4c97-9eb5-362fcb505f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f0fcf0-74cd-406c-ae01-71d5e9ed4819",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ed6d47-675b-40ed-a233-ed673573ee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bedadce-d6ec-4910-8139-b3220eafd079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bbb11b-b58d-4626-b049-35e5657e4364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10cee019-a27f-4d59-b1a6-a8ea026fec12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f11f77-7fef-49b6-8744-f3f7a4c0c8ad",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c43bf08-a877-40af-9497-c9241026fb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673cdcb6-474d-4787-9220-0f39b542af32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143cf525-f901-412f-a071-120fdb526f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3705aab2-6c7e-411a-9ad9-975d49354d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474ce76c-da9c-4c14-8cee-c7e17c7bed03",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef25ea25-2ef9-4ebf-baa1-2a76c9f30d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a69999-9e9c-4a00-a61c-1a6206127d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d60cd12-7240-4714-b6cd-a1aab4f66d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5681f480-5a69-4227-9039-b87917844f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bc1526-0afc-4c8a-a3e5-120beae659aa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6544d5-f367-4b45-9750-158090d5ff8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8c42ae-714e-4a70-89f7-990aac4fc492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ecc5e2-f6aa-4e3d-9a67-1fba339cf149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cde48c4-7f7d-4817-a2e8-d685919258f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba21fb9e-deb6-4711-8a59-ddfbf437c2b7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1d7053-ef11-482a-9125-7ee5cd6d79e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b750ae-660f-4fc9-ada3-19a82079cc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59514f1-9adf-4b52-ab47-128db5244f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1673562-2ff8-43ba-bd97-2d7840f95463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e955ff53-e3f1-4ef0-a921-fa576ccadbba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e43f17f-9dcc-406b-a501-9a10ae979d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb8de9e-0a8b-4939-9936-836efd17135e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9649129-259e-44fc-bdd8-55124a17e7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46df5d6f-b32c-4418-978c-953e75d8c11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d878a5-4eac-4a1d-9182-5a8afc0d8087",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413c2509-e296-4ef7-b796-788330cdc4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d15815d-54b3-4dcb-bdf5-7135ea530ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06c8f97-854a-433b-aa49-72e81adecfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4b5d97-b9f4-4815-af94-ddf506f7447a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad99292a-93c3-4ab8-939b-377f25f56064",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c420019-1c57-41ed-9ec6-56e5b9567089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc51330-9abc-426d-9b55-31f3ae95a4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2e2018-3be2-46aa-88c0-f98b55b49744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9553ac42-4c58-464d-aded-6081c3bcb9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9a044c-bb85-4f81-a370-885778086560",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bea607-9591-4b08-8bad-c5a0f7ca93ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d786b1e-2226-4afc-aa2b-63b8b208a4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eb792d-ff27-4463-9d74-e65cb76dc69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c997ee23-2b40-4930-b444-3db96f8fe4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503df737-04c4-4ff1-b43b-8584cd75a905",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48f117a-a7fe-4757-9491-8968cf162481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d70126-c170-470c-9e07-07d3f0cdbe44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bee4209-cb18-4b1b-89ee-68e95548cf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b83303f9-4ddd-47d7-a710-b354f8aec5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c5a770-5670-428b-b5fc-d28f32b689d1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe137683-4c4a-41be-b55b-58a00d2b5d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fc3539-702f-4d9d-9aa0-342b58fc3157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cd5175-29f1-4692-a92a-23cce7ed0293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa77058-4ba4-4101-9141-b83a4002bde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42136e8-bdaa-4d40-b214-80753a32952a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e33b7b-1c66-41e6-b6c9-155fcae55dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8dc3647-ccef-4015-a8ac-d12455bab47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c5c9a4-f7dd-4056-9946-16307eb21c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6796e8fb-99bd-40f7-bfcf-2d3ee49ad940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f96dfe-f33a-464d-8ac5-f19f35d185d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cda8203-6dfc-45f6-b121-b676fee1514c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4bbeba-3715-461d-aa30-95de428309eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6c17b2-f9ad-4e7e-94e1-4b2f96a69653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "851f3b1b-f89d-4058-bf69-b1b3ca4ad23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70986cb6-f3c8-4e58-8c1d-87f58ef798bd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd050ee-0f33-44fa-912d-1688299ba522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d07eca6-9640-4d69-9fb9-9c20e435d7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e40b6d-4023-4209-bf3e-10154059e3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eec0219-f125-4f9d-81ba-fe4984f72f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c34b79-7a1c-4690-acf6-6087f85e7205",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633b8f60-baf4-4210-b703-cef2d7fe6780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2052280a-9dad-457c-a416-9d3e8487bc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42bd7e7-1958-445a-aba3-4e9d2950448a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "027e4748-5d8d-4fe9-bd69-a8e65d5b6811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7883268-2f66-4a07-b8f9-a1d03368375d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f7c1db-9504-4f19-af14-24b6899b68bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042010cc-ed53-4fe3-9d07-6d274e5ce092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3849068-7aa7-4e7d-9f37-b8077f8cbe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9042b49-0d43-43bc-bc7b-07354a7acb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93474c7d-2dc9-4863-9f85-b7e41cde9fc8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8369266-b480-4f8d-bcd2-59da75aebe86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c51e9f-a79a-4036-ba34-eb19feac47bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaab657-8895-47cf-b16d-d5849a3242d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b9d3e7-f8a1-4f72-aa15-1dfe4df666d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a891a7f-475a-443e-a6e6-3fdb2202fa15",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb921ac-ab91-4310-a7e9-9a49bd720c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36593f75-fcc3-476d-a2f4-1b1c17c260e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43af1b05-4571-4ae2-b21b-541848a512c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae8ee23-243f-40b0-9171-3f2098c4f506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363ec3af-3573-4504-9aad-644f260c49f9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5365225c-72ea-4f1a-91c3-13cecff7323b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b92711-d2eb-4bcc-8f81-99b3e6d0e4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dc0172-b6ac-4cea-9cbb-05333d3eaf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac472725-87a5-4b30-9cee-9ec66ea38e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccf9b94-a32d-4837-976d-3fbd4936b104",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed3e0a0-d065-4e36-bcc2-dbf0431500ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9e0146-1099-43c4-894e-ad4364d9b470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f486b718-098c-4907-a57a-40136135b872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b577f9-1a22-464f-a1bf-3b401bae00e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "866bab98-afe0-4652-9f2d-c398fb19dd1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38b4604a-b7ed-48d2-a525-32c35988e265",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114292be-d931-4676-8ce2-b2561a5fe28d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3cfbde-28f3-4fa5-ae2d-24ba3cb4134e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abaf9b4-4db8-447b-8bf2-c8fe7e566e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46f9b66c-39b1-41de-825c-b16049f74c68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d10327e-1015-4add-a01b-3db69da838c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7de4f671-ea2b-453f-b238-3db67e75c780"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8bfda24-1044-40f1-86de-6e2acb9dd409",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15098c52-4574-4d36-84e9-fa79a16cb97b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "282b3c55-c295-44f6-b8f4-008cd4ad99f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9f5be731-ce8a-491e-86b5-8457974740fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92b5c7ed-a90d-4159-a558-fa51035edfbf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7af8bb5a-0fe4-49c8-a6b8-d9b95ded8cc0"
            }
          }
        ]
      },
      {
        "id": "34ecddf6-e4f1-4c03-b890-4f3284c57e2f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6cef616d-42ea-4d6d-822a-09b5aac7e96e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf55fa9a-2294-454a-9661-93f6d475d4ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9b4c54f-44fd-4e52-ae99-6dea1f37bc5e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c17d128-f288-4789-8ec6-e41837c119b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b85052a-a2fa-40e6-8ee6-588a28da4e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a34ccee-296a-4877-9026-c4de711856a8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313de201-7a95-4490-87c8-f28f85d18aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ba7cce-ed12-4c6a-adb8-4f8621a89589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c5cece-4ba5-448c-933d-3c6d2991ab0f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93472d86-43a2-48df-9829-23228e4f967c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cd47cb-b906-4ef9-93a7-04a9158f8f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05fe84c-8d30-4f49-94d6-6751f5decdbd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32625aef-c880-4321-befe-9daced350f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3d33e2-2467-4aa4-a077-104b0e067825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ab7afe-9622-4b5e-8699-c594e1ac2f28",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1575ea6a-1f43-43c1-abb9-90b7dfdfcb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5881ca4c-a140-4e07-b053-b3baceb85e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b33037-293a-4d0d-bc2f-26748b4a8172",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671a8c2d-6972-401f-8c47-67574201ac89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1118c99-5fc0-49d5-8068-3e3dd1ffd557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ff22ff-4333-4d66-866a-cf73e67cd8d7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4032b6-4651-4cae-b878-950e67c07b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0590f33-11c4-452d-9b33-153a7b9f9e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d195b708-bd84-481a-9096-22c0e1c79efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe864d54-9e02-42d2-9b4f-c56d995a7d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1ce8b3-8131-4986-b855-fc34fab83557",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2e0c06-20b7-4a24-887c-1e0bb03bb3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c208ce0-f1de-40c3-9fac-0e7f955963df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2927a459-0f76-4911-99b6-1afe8853d31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c72cab-d026-4056-95b7-429e0b426ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b78d58-da82-4190-9158-c940d5d2dc1a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a2bdbb-7208-4ac9-9f10-ffaef915bbdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0595fdc9-c2a4-41ea-8258-89ec9c5a2f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c8cb1b-9a7e-4538-8880-f11ddf7372b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7d9925-e280-41b4-ada0-a1417003fa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34941daf-5730-4af3-8066-158ed7dd758f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f017f2b-add7-4740-873f-1e2d67dec2da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbdf1518-6e31-4eb9-9810-0b37036be617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2edde7-f108-45e7-8268-46d35eb0c498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee5afa0-3498-418d-9cf1-29984cdedff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe8be76-d88e-4065-9035-b253c1d0341c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c24453-4e3a-416a-982d-d7b3b4a0b900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8abd9a-aaf6-4aed-83ce-df2e362f5d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19a3e8e-5f69-4d24-8a4a-9a53cf6a0f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d962c4a-4d70-4f19-992b-be656602819f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f8171b-0f57-4626-ae6d-792b69a20982",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb543823-14bb-43fe-a9bd-5cec8697f5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328084a4-687c-41c6-88b3-57e4b05ae940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b142e623-fc7b-411b-9fc6-87bd64f0a8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174f4b03-8bd7-4470-858e-6eeac956edd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0c8038-56fd-468f-b774-4b2304844684",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8fc75f-4c1b-4a78-aa01-88e6469cb389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3052bb5c-7beb-4e98-8b9c-501d3b272e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0930b4a5-9000-4176-9681-dd744d1c73bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6466484e-327b-4cf5-9299-6bf2042f475f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475dffcb-a5f9-4549-b84f-1f9442ae09dd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4b5370-154b-4c6f-b5de-700d1347f8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dad7b6ac-c687-436c-bfe2-6c7451d70c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff1352a-8a0c-46b6-a03c-1daedb692f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb9f08b-0096-4d5b-a18e-e4b3fed75103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe0d125-9410-4cae-9771-597184d50bb8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcd9707-2fa5-4ec7-9ffb-e963f4b6555d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56190aa4-d69c-4a22-8a0f-e1c3f798a02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838639b2-9ffa-4587-b2d9-a2235eb5bfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c15467-9c45-43d3-b489-27d7d040cfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3495a339-ba56-4087-a1bf-0305a10cf88e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d47396b-3b99-44d0-9512-8fc2664ce198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae66658-b1f7-4aed-9715-46ae5829ad45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8b1521-17ed-4594-beab-bfbd67bfd4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bfb927-e1bf-47ec-81bd-13f7095a8406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c60391-69f1-4d34-a2e1-399c7e756d5b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62843df1-6c07-4e44-8e5f-7d92a0d151a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6c5a01-5d04-47a6-9c87-4ae00b83b5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b05414-066c-460d-88b9-0b07d43d0493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da514e88-c7a4-4b88-9dd1-3de0f5616557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad9abe6-2e01-4f0e-99ef-2421c7ac1e5e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fb9bfa-bb52-4bc4-9971-b2bfdb9040b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a0062d-09b6-4da2-b49d-d13f853b1a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08111425-d176-4445-b3b6-09e4702e2601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c42bff-1972-42e4-b90b-7178422d8bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fedc4d-4fd3-4d66-9235-3e3e49efe1b7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2043cd6f-c2a7-4445-b489-77a4d1c3e23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f11280d-67e6-4b12-8278-7b8e8d7c1e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da1c088-7562-4f07-a180-7e81893706f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4a2eb7-1ca8-4b50-aec1-7d138192be3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855874ec-0b93-4401-8b17-c985d164f4cc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e731fee8-2c51-4d03-9e65-227a33e09cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eabdb2e-6336-45f2-9b2a-87386d5a40db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6e185e-eb45-44e5-baaa-c7638de68fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d924e72-8f2b-41a4-b1a7-4a961b7c0953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114663c6-082c-4914-a305-7a4c77c08ffb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35afc9b8-681a-4b28-92c7-5b28ee6a53f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8ecfe7-06d6-4082-998a-12284957bbaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd457999-00ac-423f-822c-3fb0d876f3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5be8c7-8321-48dc-a1b4-b252b16eccc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf02239-74c1-4980-a722-7c9d409129d6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d7a3fb-9330-465c-ba8e-1840cd557e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df747ccf-8de2-4b47-a59f-5cb9ad769fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7e3a32-d950-4f9a-bc40-a7d86495a0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eba8219-f84e-4d9d-abea-ed25c36c27c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5453dbec-590d-4a12-89c2-26d6c18edd53",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ddee34-06b9-4773-8e00-432aad0e4eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10517d7-d3be-4ab8-ac98-4d116108e521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071a47c8-2a68-4c98-81c6-54b1d9597aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7484e7-f227-4666-b8f8-86c607a46509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec470cd-2693-407c-845a-4ef0168e0bb2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651a0009-c396-45fe-ba75-67166eb465d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55d2df7-15ca-4aaf-bd80-eaf539978608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83066c15-e977-4a63-8931-e69d6e8cc32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42455b43-e6fb-4edb-84f6-a6d9ca672535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a38804-b3ca-4f36-a6a9-e8553e6bb1db",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1314ae-40ac-44c3-9e3c-e69e9aeb2e00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b539940b-4d33-409b-ad8c-cae28c07e26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f53500-fbc4-40d9-8fea-0d51f4fdb40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e42c68-72d8-4bdf-8218-52c9fd594e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee22bd82-0059-4b91-84e5-afb16c0136a5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffc9214-9395-4dc8-bbbd-f02f86cbadfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e13050-6751-438f-8497-083cbf955515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6ca89f-e959-4c53-b982-7270dbba1de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87d97d0-cefb-4d4b-9d24-a6bb17985c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0b25d0-ed6d-4ca8-b41f-d1289a3e78ed",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07678dc-b200-49a2-8feb-4920b5e58575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3061ff4c-5527-4896-8b07-957bcf1e0dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf58e70-7cbc-4e3a-af7c-1e14874ef957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08953fb8-c933-403c-a16e-e9e1e00c7a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454f35bd-6e06-41f6-aacc-e56d9c678966",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8842be20-96c9-4231-84da-2f6036dd59d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6586aba-5c01-4799-8891-901aa0e73376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad40dd5-4521-4351-a9fc-28f22cd90adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd776fa-3c23-4f7b-aacf-f7cdfdfd7442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2bed0d-6ad7-4225-a120-d228099e53d4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f436f18c-7409-415a-9e60-6dc48e634387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76139ecf-1978-4c6f-b961-31f842594f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b046ff4-c23d-43ce-9433-4925d7c554b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51e8932-c3a4-4467-b104-f10736388c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd9c0f4-dfc7-48ec-9c9f-162344c0308e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ffb40e-34ed-4496-a36a-ed65370f3dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f9888a-7e78-4fd3-b19c-3d601390d63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f86c919-88ad-4193-899a-b94c1a94146e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2655d30-832a-4799-bf62-7487b15d601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5193e4c-7f94-4670-a660-bcd16a246150",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a178ca-07df-40ee-b8ff-8b6a72024098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daadbbc2-5123-4d6a-a7c9-28f7a89c9944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98f7fcd-a252-4cb0-81bf-838b196522d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e624979-8835-43e2-bf87-6aea51bcc266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bcd1ae-4eef-46a7-a928-68d1c26f1256",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d0ac22-60ec-4279-bb6b-e448c225ec38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a50ca5c6-0ab1-45c9-bdaf-bf15a0e4c033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01af0092-1c9f-40bf-a6c7-552d10486f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3893adf9-7068-443f-a0c7-3630b355ddeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecd4037-e7a4-43ea-91ef-2e9e6a55e3f6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cbd594-57b4-4d57-88c4-10e2c08e85c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff33c7aa-fcdb-41bc-a463-146471b83329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a742a71-d4fc-466a-974e-b28bb0d62046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74887ec-edb7-4359-973f-dee01d7975ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25926c70-1d3f-485f-a378-6638920aebe8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbef6a76-6522-4ce6-858a-cf97539ea7f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f9d2644-ff1b-432f-ba12-0f66db94c2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdce12e-292f-46a4-b513-f8f323445b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2487585-0e62-4812-abd5-6d4837af8af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed16af7f-bec6-4e31-950a-28d301b7f8ed",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471628bb-98c5-4b41-a1ef-87752e02dedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5e6786-66df-4581-9491-5cafe88af096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572daf48-45da-4005-8ff2-8cabd00f786a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc557cf5-1aba-4928-a468-3093ce3d767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f6a32e-4b55-4456-9929-a9ba83e8d2c8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8071a2f9-6e2a-491c-a0d4-ac1796752d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf63273-b680-4d17-b71d-0b7737c70a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc24616b-989d-4bfb-bf51-eb1ff366e724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b4f735-4e15-48d5-b4ba-6514c3a7032a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b79b85e-311c-495e-87af-cffd0a76605d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a64209-3c42-4ba5-a09b-876fabbb687a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b7367b-ced8-424e-9f3f-f8f049e0b603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179cf605-dbac-4d54-8d5a-a42f19b26267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c57bb6-3ca2-475b-9c6d-61d8567427e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be2ad53-b8ff-43ab-ac4a-c21dd8c77520",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6701351-dad8-4b01-a95b-8ef9d7a3ce30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d138a5ed-b87b-4793-a10f-80aef8cbe91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfa9714-c9d4-4620-a533-fc88653fca48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66fe04b-e85d-4c29-8bc4-69e9214e27c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461f8c83-f0f5-4dac-93d4-e1c28c7f68d4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0bb8aa-7632-4df9-a9e9-8d24a946963b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d065f9-1587-43d8-8a1b-bd8b9f091f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da0af90-db8b-4f49-9145-9a55e7c27824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb21240b-797f-46c6-a9e3-004ab8969356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7de102-7d6e-4bb8-968f-234d3ea554e8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e535b84-ead9-4145-8d49-3465395ee036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2a6b1c-3cc8-4d74-a40f-fe9204252a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48250790-2d56-4afe-9bb6-f6d1305087d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9b4549-b69b-4bdd-a048-7a65eb5d0aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e2b297-7c98-40b7-9138-a0993a0e5555",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b97c469-efb7-4fd4-bdf1-425ef3f19bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a334d2-5972-46a1-a4e8-1d5a2cd6fcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9914e4e2-0b81-407e-b731-2529d4977047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfd2b74-0f39-4c6c-8451-f1dcd1d490bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da8399a-8775-4824-91b2-ddfeede7e278",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609a75e3-c309-4a36-a59b-1b9854ff49e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a293394-b022-4ea5-9031-55a6df03374c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74dff61-fd4e-4aa6-9f95-36cddf9a5ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40774f4d-e1ec-4c3b-900c-780d05e51b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8200e78e-7989-4e05-b87b-abeb09884dfd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaa7f82-b0d9-4d0b-a721-60cf117edc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca93f98-6f62-4319-abe4-eb741e12e6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b32dfd-9df4-4e3b-b384-eb84cb294cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e34545-e1cb-4c96-8348-74a8d033a313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c8544c-b24d-4720-b1e7-9a87cfb4af3d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b9c0d4-ddbf-4b8d-a860-a2a3414d1702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125b7cf1-03d6-4727-b005-4f84e77b70bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8d83b8-ce2e-4408-9999-8fbd5ecab4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81996cb-1578-401b-afdd-b4eca09c335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5687a9ab-21a0-44b4-a217-0cf4d9b7bcfa",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2bea42-23b1-4cb2-95be-c6998f3d1b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bec97c-f328-40d1-9222-c2d954e6f258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038171ad-b62f-44cb-8aab-757ae93c0bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4daddaad-22dc-4a8c-841c-809946ab4089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26c7c22-38e0-42f5-adb1-8f4ce93ea23e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c4d297-74ec-4931-90b0-91f27444be35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba60e496-f90d-4ea1-8a23-d44f6f1f1eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba664031-bbcf-4eaf-9c8f-a6fc52db48c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b51c886-0038-4998-80c8-3fae7369b40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdda2fa-4430-4e7d-968e-1c6b04ec5447",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6eeab9-70ef-4bf7-a648-0ecdccec11b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53da038d-eabd-4247-b9b2-7bb9bb8bdbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5339ede1-b3fe-4028-a02c-30f5e3c053d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223c94a5-11a7-4855-a2c3-0d583d2d61da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a8677e-f459-4f51-922b-8b9f1e1a13c4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fd969d-7268-4c63-8dbe-d768752246d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92868dfc-31bc-4028-9b2c-b96433a1b88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4675ccd3-2b2d-4f0d-97ba-d56b23a95c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149dd334-f585-4546-a07b-29f985671f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252eff18-a49a-4e8a-858b-b82b3f03111b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaa090b-4973-4580-8d45-23d2c5dad82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba4e6bb-72b8-4e27-bca4-2baded726343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7775f1-6459-4945-aad9-477754b13d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2e5442-272b-41aa-af71-b42bf8364a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f282158-5664-47bf-82cf-9cc600f11a4d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b882b6b1-d35e-425b-8543-852f46bf75c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8858817-4ba2-48da-9059-a6ebc1f91b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f86f617-9ba0-4cc6-9129-31efd1153935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32333325-0334-4bec-8254-8c5301f248c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29d38e3-59c6-493c-bdbf-531c35b43790",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b70d546-8773-4a03-b6b4-0a17d4a9bf3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445c0ea2-e0ea-4c93-b9e6-a30c0b60e198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433ebd59-977d-4f8e-a68d-bc06f8727698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1a3094-da3b-4e28-a3c3-d67188a753ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e9a9d7-8eab-45f9-8c61-07471e83a34e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c868934e-821d-433d-9496-8a557fb321bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f754e61e-a707-4cf2-a41e-089e7c9b4c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e72f595-ee3b-45d6-9b1e-27901e39e023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed1a76b-2ff7-4a20-9048-bb6c3e2509b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd1a4d8-cd05-40ce-b218-d5beb897fe38",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed4bd19-f974-464a-b40b-2df589bacab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588c0f66-aa67-4e3f-a3ed-c40cdce074a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f66af06-7313-4e4d-a7c5-3d61723725be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bfa985-6302-4258-9844-80d86376f7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec62c947-89a0-47bd-a783-9cf4c207f975",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f6ff2f-839c-4623-acf8-bd5ac901a2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33473dd9-52dd-4a26-ae4e-6a1e696d51a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4531d04a-acd0-46d3-8f33-584b6b75e8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81185d0-0d8f-42b5-aff3-b6d6cd854da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67eb6242-4fb4-4a12-b11f-b839bc940a92",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6e1e5c-f7ee-465e-a6a5-07b0c21e45da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13bd9a7-f387-4e6f-9f11-66ae664180e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff15ed27-984b-4d8a-a810-c7715e057519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f880328e-3a1c-4179-9595-61c6010bc9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67eea1cc-a7c3-42c9-80be-bb118a3e55d3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb90e4a-90ad-4371-8c7f-13af9ef03f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baaa8020-4c60-4a20-ab32-57990dafdffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486af3e9-9a34-47b1-8df4-0c059f7325d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebe0e84-5cb1-46ac-9270-cedd2f982976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec57e8c1-635a-4e3c-9597-ab2436184e98",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89494251-fd64-4f1c-86f4-c5fb49105cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f50c8cc-46aa-44bc-b28c-df0f383d333f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4b2063-c129-4659-9230-4fde03ab3cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71219f10-1c45-4434-9097-1835c0c4a798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502ce1d2-8371-414f-9be6-43f69939a85e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8613af59-24e9-4709-ae62-60df6d96fddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df4ee12-aee2-4274-a4dd-2cd75d71ed86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3b5c5a-7571-4932-a64f-a53ca4198922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb89436-8671-42e5-b93a-a46837404c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ac86e8-5e9a-4f12-ab4e-be3e58a294e6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70073beb-9b1e-4dde-ba2c-f252a965b8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a19ec0-ee8b-45eb-b5cc-a913fece4c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86e9522-d5a7-4f7f-ab68-0daacd5f8467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4261c2-d7c3-4a23-87a3-69f59cdb6518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f9154c-de97-4d50-934e-7c2e44a320cf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84d623d-a44b-4744-8852-c8f71fe04466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7277a71-2bed-4b01-9e21-091d978caf27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11b1a43-c5fb-4b86-963a-de716edf1111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a878fc-105a-4d83-8bbc-549a55de1b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3134ebfe-fbc2-4d71-89e3-9f83cc90ca18",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbd7a6e-5781-4463-98c7-9e8533403d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba081a0-fa7b-460f-84f4-7600db3a57f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95076f67-76b6-4d77-807d-aecdf9023411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d968391a-1b42-4a06-a5c6-522b02396b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229820db-50eb-4bcc-9a68-ed5c702cd9b3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ef4238-3094-4a78-9104-f9d57bb231ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf91ac2-9445-4459-ae64-2077a4e2b685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd08413-f49e-4f5d-9eab-888a0ea0e201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592ff0b3-f3fc-4235-a168-120faf993df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36dd673-fee0-444c-9ed7-52ac4486f822",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5f6a33-ce83-4712-b960-357f33b1e180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72d3408-7029-4179-86a3-3a38aee500bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88552676-b0fc-43e8-82cf-f6ea3ef41313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1008f62b-070b-4412-b46c-dfe5ea579838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a79e47-3338-4510-8f94-02b7477ba4fb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c911e1-4c6f-40ad-b9cb-1df254946ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c02c16fc-9789-495c-a6be-24436604cdfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6238f21d-cbbf-407c-9438-6e8e68048931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40dfa1e-4282-4ea7-ba62-62dd9e6492a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d4e0d5-38d0-445e-b3a7-2587075ce8b8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48daa00e-91b9-4578-9fe0-4a9a9c9e87f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87811ca2-04a9-4502-bda3-fcc85e5d1b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61c714c-d410-436f-a8f2-6add0509f45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f50eadd-ed88-4dde-97f8-50be352f86f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6117cf9f-d45a-496d-b15b-9e378f3c173d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c12ba2b-1ba6-49cf-87cf-94aa8ff53231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a256dca-f689-44ed-938f-947321e9646d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240f5401-b04c-47a9-bc52-552b57066f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c850684b-d799-4009-9c8b-b6b31783f1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195e136a-12a8-4be3-9a56-194a8a5772de",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246a05b3-d0f6-489a-a744-1a37d2206318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13593e77-16f4-4736-a893-b65842ffe88c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23871556-d59e-4dce-9d62-bfe79d3c0a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1becad-fdff-461e-87e8-2e8be7ff6b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63143035-bf02-473d-a3c7-c56cd1239eb6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8138d79e-ec17-4fee-9507-f94e8b866cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20b59b57-3de5-4e5a-852b-5c5188511e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5232cb28-4bfa-4948-9120-272d8406ce1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d662d4f-8a3c-4524-80ed-ba91f199a09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0930e5a0-7d5c-4bec-a1e4-a0c9942d58ce",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fb2536-0698-41eb-beb3-a595e6101c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5063766-f104-403c-b020-92374390585a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c915404-55f2-475d-8750-f48af5075941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260d41f8-b935-4601-9210-41cda145dd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c355768-22aa-42d3-afe0-ca5257b08284",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53974f56-6873-4ff5-b229-b8c993e10206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b52a0de-b18f-4f13-b777-d22e08555ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd2f01f-38d2-451b-ac28-f3d91bcf24ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae17939-23b1-421c-a5fa-d3363a079b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcaa006-07eb-4321-9cb7-65ef6ba91d6f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d97b57-474a-4ece-a0e5-b91722e6db3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d19b48f-24ab-4c00-9d83-c483e09a12d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036a9ed5-034b-4614-a047-ee0c7aca3787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c29a797-3ef7-4eaa-a106-ce330c29f923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21403fd-b8aa-4d56-b2d9-315a8a057358",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea6aa5f-2e9f-4c60-bcfc-306039201e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80f06c84-d039-4d95-8170-91810099f42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb591b50-c856-4329-95d5-8521f42a91c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2980257f-bc95-4f61-ac4f-cfe7d2d684c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4964ce-8562-47fe-8d0e-853690185c0d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d28f2d3-394e-406e-8dae-3d3dd7e66bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc6e32a7-1e26-406c-90da-dfca3d0d64b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dbfa7a-6827-420a-8d65-d833d56e615d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd0fec7-8c93-47bd-9236-15446a90bfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e61377-0087-431e-aa6f-76d7aa3ee0b3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6afc0e-5625-4109-9177-9a0ae24b7e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af0c374a-f158-4059-a59e-37dfffc16a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432f284d-3264-4bf3-93ae-55fb7ae0caa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05295c9-a623-46cc-9771-23b928205a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0ab0c7-8994-4824-8b93-79b2bf83b4ae",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcc2095-24a4-4cbb-9a3c-9309e489c560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6170d392-bd4a-4143-b8a0-d7ae715286bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf5d4e1-03a5-4790-a41b-d969642f5687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fad56f-76ff-4e33-82f3-a8a14a2c66a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150f6b0a-375d-428f-b2ca-c0ffb4cc0098",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f2fe93-6fe2-44a1-8ebf-aece7607450f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1844bde4-0741-4526-9e2a-3774b5ecf782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a2081c-1ee8-48e8-b106-d1369249ed35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3784b2e-fa7e-463e-82cb-4e2823ea5038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cfc579-512b-4987-8bfc-0c09ee8d3c89",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011e5f30-b5a7-4b11-b087-f87e5565b950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9792b18-b5dd-4f24-8658-a719c5a60090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce631d67-7881-42a1-bccf-e49d1870e62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9db1333-ef1a-4877-bebe-854ff35b86a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26147cb5-a2d4-4459-8ab6-a505a953975f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4bdf0a-38ba-46cd-8810-cbf9b0747c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a416594e-3181-4fe6-8ab0-610aa81a809f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d809505-5df3-4ed2-8ad7-2a2946c71911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d124036-386a-4a34-bb36-7954858cc650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03366f2-7977-41e4-a32d-853426c84d56",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154c9f54-c253-4a23-bbc7-9524f3f806bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d4802c3-f6fa-45a9-b6ba-dea2611f24ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbdea27-ee7a-40d0-8e98-0528bc5e358b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2453c0-978f-4ce1-aa50-7bdbd72a8897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54691820-070c-4611-8d6c-35ddc14cc93b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccde8c0-f1ed-4f88-bf0d-e760e07e6a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e25ddd1-d17e-4408-b909-6ef07ea2a36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcb34c6-73fe-40da-9015-06106015d576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55693ec-e049-4232-ad11-08e4362482d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e30d1b8-3bfe-4b9b-8a9d-5919ce9e3731",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae4e46e-48b6-47fb-98c6-1668b39378d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc92077a-04ea-4474-9ef4-d49ec694498a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3405eb5b-bb15-4c69-8422-69eb12fbe62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a54c1c-59d6-4557-9848-91d423d1f105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac94a19-b148-4293-86e8-313c2efaeee6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b910977c-364b-4e84-9f96-da2da6aee920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b0e07f7-40c9-423a-b89b-5007cc6d6304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5e7342-dabb-41f4-b15b-774896c6d898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15e30c1-d0e4-47e1-8012-6ccd02881c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dd9818-9aa7-4267-a334-67cf8a51b148",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b682af19-ab0d-4d45-8c4d-e1834ec75818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d698a736-16fa-4915-9ad8-dd1d3bc3b3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebd93a5-ed72-4ba8-bcc5-6b4aa8d90394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31ea59a-ed6d-4680-8d0c-b1295e9dca38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07e431e-1551-46bd-989e-f27ad6557f33",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7546fe62-95cb-41ce-9a7b-954d0b2b9d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84da18cf-44d3-4a1b-a48a-7047445a0616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c79661b-8f4d-412a-a75a-930720c02b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31602dca-16a2-41f1-842c-60d48c5a1c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f837d2f1-0e23-4aa4-8277-093df1312b9e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7766e45-254d-4a2a-81a6-d88e67471a6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5968b35e-821f-4b4a-86db-67e3314fbf7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ad7f0a-fefb-4af7-a1aa-61423e6f76dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c86543-d948-45b5-887d-b17e50a0b649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e9bb2f-ad83-47d8-984c-21e0bbda1bfc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4a54d0-1b21-4d6d-ae45-05280950a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "612bf519-0455-4931-ae58-4bf3831f48b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1b3c8f-4885-4747-b53d-847203867e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f547db8-c27d-45b0-b65c-898089198e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc76a16-0d98-4cce-9abd-0c6935fa0def",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5243075e-830f-45e4-b368-fc56754c3896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66b095a-fc2d-4232-b37b-e1bdf0c8aa02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5441ecbd-ad61-4c46-8656-9f6dcef7f206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa687e5-bbf3-4bad-be7a-da64ca25ec38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e1be42-1692-4e64-8650-b62eb5f8b9d2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16753f4-0bb6-42c5-970b-8089e9ac5184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71673c89-876d-4b57-a75d-10aac58f198f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dee8580-e6c8-434e-b41c-46dc16465b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eba899c-88d3-46e7-b0e0-d03969779045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6435509-5654-4be8-9905-5601faa73751",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d424d7bd-a5b6-4c6e-b3d7-3208a41f1d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2a8e75-414b-4600-b92d-9fb647215b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f0ca80-643e-4bd2-bf0b-9ec82d8623e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfcddcb-df6d-4403-87a0-9d00b80efd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76743502-9f56-452c-86e5-c687eccf11d6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bf2eb2-e0e6-4a70-9766-840c47e5d993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e04d28c-a575-41d4-a50e-90be22785053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde7e32f-f139-4574-b1ec-8fc602cc00d0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc147ef-5d1a-4b7a-9e69-efe76ecc8b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8a95b3-f262-4254-85fd-cfd626137274",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f83ae49-ad5c-48f0-9729-6986b45d1a77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "681c0b64-258f-4f5d-86aa-1b5804e1817c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43f950e-277e-49b5-a23a-1ea160aced4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50842188-b446-4246-b6d4-0f49f7850208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e98dab-3dc1-4733-b56e-ee8a5ecef859",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d48450-9f3a-4e0a-947d-9e0e5061c33c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a554486-1020-4e12-8faf-6513636f9272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cc3669-f980-4942-b993-ef9f837a1b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707f2edf-668b-4e50-919c-a8e4d73d1464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f44edfb-acc4-4331-92ec-43964676aecc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4629e661-593a-4aa6-a91d-f0be4b6687bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f293be5-32de-4a11-a1cf-078933b2de13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebb24a2-6f58-42f5-a0d6-d8553a4eaaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61236393-6ce1-4e30-9ce3-55d788651eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55e899c-8cef-4b70-98d3-1ce12832b6cc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9a8976-9c22-4732-8a0d-7c0dc05066d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24cd025f-c305-46f0-bd56-0e3d8cca4d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2c7943-660f-4d95-a2e7-13aeb8239e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd47ba26-dbca-4934-a476-453976869248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956476f9-14be-4c3e-b003-409348e6b011",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ae938f-5601-4f79-89a9-68827738d867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0992fea-5247-4ded-a92d-ea7886c18ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da16d02-1488-48d7-bf68-6e0c97a8be56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8251b7cf-e1bc-44f6-8ffb-2614240906c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1273f18-11d6-47b1-90f3-ca543d5b6170",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794f9adb-838e-4f1b-a82b-9faf26bea358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99fe2a1a-95ca-4287-a301-533ed056eba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce7de82-f540-41ee-b0e6-16f8bf5b9c53",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddac0db9-645e-45a6-8818-76c27deed701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa33208b-0cbd-4794-82ad-21518e9f3a62",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbae7596-e58c-4164-a6a8-4111d84d3b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e72e6c-32f5-43d0-b75e-408693451765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651025e1-c210-475d-9590-67fcc2e9df18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3073c7e0-b040-4378-b811-c7654eb1a1c6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90808a31-484f-4e22-8cd7-8305d16cc882",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc360209-2a34-4091-9b81-463ba59b7426"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0858adf6-545a-4753-a70d-ffb118b43f23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74426e01-a2c3-43f7-a242-abbd2c78c974"
                    }
                  }
                ]
              },
              {
                "id": "f31764eb-3cca-4261-93df-9c34521fe032",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f50250ef-f728-496f-afbb-258a66e2ab3a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc0ecda-613a-409b-b298-3beed3a28bee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d3bb5609-7c42-4caa-934c-a20599964500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87841efa-bf3d-4d53-aecc-b357909ab73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ebc77ce-bba7-4ab2-98c3-7f3fce90f46d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69fb4319-d42b-47d8-b057-648379bfc938",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5309bee8-3f08-4600-ac58-2bb6673728eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6120c6c4-1a05-4848-ad23-94268d173bde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78257d0d-de80-474c-b723-41dafbaff35a"
                    }
                  }
                ]
              },
              {
                "id": "6426b8de-a514-4003-a396-caf32be50194",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b4f3d4da-d1f9-430e-8966-ee91400e090e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f2b468-0398-4c16-bd77-f9c6f63c86a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a819e130-26b3-41a2-b2ef-728205a03080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e9dafb-7d3b-4a0d-9343-65077ed71d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ccdc34-bc31-4a62-ad59-bda9e4733909"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "094ff5d0-733e-4d24-89fc-2916df120c61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "abcd2a3e-9f60-4aa3-894f-225e97cc232b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6b80bf9-a456-42c2-ae80-f3658c57dfe5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4bf3b9a-4a0e-40a8-9212-4adcbe1d0009"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79a9d2e2-496f-4880-b6e0-fb99cc26a473",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25cfc035-f91a-49f3-9b34-7915972b8eff"
                    }
                  }
                ]
              },
              {
                "id": "0dce8136-ca11-4e95-b7a2-50014428c195",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86fe5bad-c3b2-4f00-b8c4-d4368f3a92c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46ba3ed5-3faf-4a7b-8e5b-ec903625a1c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75983e16-d013-4238-9b5c-df87ec8eff7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f5d78f8-ba32-46c7-a893-be1227b4f866"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac332a81-1b5e-4a49-8c97-8b099ba5a32d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9b10087d-fe30-4c7b-b627-655f2e403027"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64790596-2ad8-4248-83ca-091a0f57814a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a491df92-7531-4d87-be3e-eaa90f22d683"
            }
          }
        ]
      },
      {
        "id": "daa873eb-a000-484f-bfc4-c1c38ccb081c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ce72ed15-2fb3-4541-9928-8874503bb512",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb9075cc-6b6e-474c-8a50-4f6d21d0ad9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb47320e-a76d-4a4b-a6a5-0752a36cdb2a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5093bdd-e504-4754-bdb4-47b848824d18",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "13bb9818-91a7-41e6-ab1a-c27b764766f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a5acdd-8f9c-47c3-830b-ec57c3d12a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a91b003f-0c94-4992-97c8-659493c05844"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08526cd1-441c-4007-aa6e-ab18a4cca054",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d20cd96c-0719-4a82-b92f-a0799deeac05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fda9e40f-09cf-4142-9a0c-4618e8f0caeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "095d42af-ccd6-4958-b4f0-ad36ee6c5691"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79582426-b94b-449d-949a-5717e2a918db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e7132dca-b917-4010-a615-95d51edcdde7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be459886-3a47-4d17-bc2f-5bf8d0257ebf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e5df942-c39c-44ac-ac51-764348a73030"
            }
          }
        ]
      },
      {
        "id": "9ded6503-3cb5-4ded-86dc-725b34e2571e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2575eafa-2eaf-462c-b15d-8111a8617920",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90c3952e-fb2d-4117-b18c-31dd299353fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f296bfd8-eb51-4927-b7bd-eeecd73243f0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc25d4b6-331a-40bf-bcef-5ab76d96c38d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36322fdc-03f8-4d13-8cc9-117b0003b13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b107a68c-0163-4ab8-8ed8-4455dcc1fc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38e1dedf-e449-4dad-a6f1-74ed066e7a34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76afc8c0-9d4f-4850-a116-fe9a611ac422",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "048e3b87-416e-4c5b-a53c-84a9d594ebb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36aba016-be88-437d-aa38-ba16ecd53ce8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55719f6d-885e-4d4a-9bb8-0fc20a76d7bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed808472-af20-4c24-91ae-403dd12fe832",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d79978bf-f8c9-479d-9f08-ac4241b05fd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ea1c8b7-19e4-4ad8-a2a8-059771e072e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b76605fa-fa1f-40d8-875f-60cdac9aa937"
            }
          }
        ]
      },
      {
        "id": "7fe4e519-c83f-46bd-96ca-fd5c985be8b0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c9f3d449-1a92-4cbe-aa37-d1159e3168b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "096de167-c83f-4b3f-be64-799d61d3ccc0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b60511f0-2340-4f69-8b07-2665b66d6b88",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a36e38-7975-4251-a33e-00ff96e74dae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bf077de-6b4e-4bd5-a70e-69e7b261939a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d225b9f-e73d-44c8-96fd-432389a013c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7c03d31-66e2-4b95-a38f-c32a387697d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a31b5db-0ac9-4cd0-8c9b-6c7647822152",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aea9697a-72f0-4b27-a6e1-e80fab92ee93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1f8829c-abe6-4249-99da-b505c5b700ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d23b81aa-c2bb-49a3-aef1-9426ae8bc5d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96e88516-e2c7-43e9-81d1-0dbdfbdb4d8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9aaaf64c-4fed-423c-8a16-25221f2ae49b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65788f26-1231-4182-8ae5-e1f50cffc734",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "410e92ab-f060-4bcc-b4b0-dc4c923a8a5b"
            }
          }
        ]
      },
      {
        "id": "7407b82e-d93c-438c-9971-50830ac2453f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92167c2a-ef5a-4c31-8348-2f459c48b05b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9223a1e-fb78-428d-88a4-58cd593fa955",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "83c76333-57af-43a6-93c8-7e75d964ce61",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "534bc81d-a107-4e57-b639-8f5e483ebb71",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "871bb6d8-bcf1-4311-9240-b6c83f652dbd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.19047619047619,
      "responseMin": 6,
      "responseMax": 292,
      "responseSd": 30.600916649231987,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723855148890,
      "completed": 1723855160010
    },
    "executions": [
      {
        "id": "b12dcbd8-0c03-4d56-b04f-cf581564b99c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d560f7fb-f453-4f95-bfe4-2b4209626bc8",
          "httpRequestId": "2d6b6ea2-0b6c-4b87-97eb-520cb2533fc3"
        },
        "item": {
          "id": "b12dcbd8-0c03-4d56-b04f-cf581564b99c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6777ac66-dec0-40f9-a1cf-1314906868d9",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "af3c0a52-318f-4050-ad69-33eb05099885",
        "cursor": {
          "ref": "8ef43f1e-6547-4422-9c7c-0736b7e48260",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cf28ea11-d39e-4a60-8b79-423eb5bde7df"
        },
        "item": {
          "id": "af3c0a52-318f-4050-ad69-33eb05099885",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6efbdce7-30f0-46cc-8e57-f02cf850e82d",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "45105179-a407-4cdb-8ef3-b400627423a4",
        "cursor": {
          "ref": "a599a83a-64b5-4579-949d-276f65c4fb6f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a43e7154-d74d-4e64-94cc-bb44213d07da"
        },
        "item": {
          "id": "45105179-a407-4cdb-8ef3-b400627423a4",
          "name": "did_json"
        },
        "response": {
          "id": "bd943d8c-c30c-4e67-919e-d11e5b0cf95f",
          "status": "OK",
          "code": 200,
          "responseTime": 292,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a13b031-14b1-45f0-afc8-20bcac5885d7",
        "cursor": {
          "ref": "a7862c00-ce0c-4ae5-84d2-97524200a903",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "109a7b66-245d-49cb-94be-d6aa2d53fb2a"
        },
        "item": {
          "id": "6a13b031-14b1-45f0-afc8-20bcac5885d7",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e28b924-4a70-4a7c-b2f0-caaa5cb048cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a13b031-14b1-45f0-afc8-20bcac5885d7",
        "cursor": {
          "ref": "a7862c00-ce0c-4ae5-84d2-97524200a903",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "109a7b66-245d-49cb-94be-d6aa2d53fb2a"
        },
        "item": {
          "id": "6a13b031-14b1-45f0-afc8-20bcac5885d7",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e28b924-4a70-4a7c-b2f0-caaa5cb048cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bae6b36-b430-4098-9287-2d10ca279f7d",
        "cursor": {
          "ref": "3fc91f84-a9f0-41b3-9bfc-ce1346632a9a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "55e5b9bc-27e6-4de5-b7f9-f69560bef87d"
        },
        "item": {
          "id": "9bae6b36-b430-4098-9287-2d10ca279f7d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4ebe2bdf-9840-4825-b5bd-ceba566396d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261f359f-fdcd-42cd-b246-a0f3be67ef58",
        "cursor": {
          "ref": "00c35483-d0f1-4537-b833-a55db1061fca",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a048a057-0bb9-444d-a776-f147fd491ffe"
        },
        "item": {
          "id": "261f359f-fdcd-42cd-b246-a0f3be67ef58",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bd95d4a5-93da-419d-9bb5-a25e251b37ce",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560f1099-602a-46de-a6a3-d6230a3b919f",
        "cursor": {
          "ref": "98b9b77e-5979-488d-96a6-a06b95df1d2d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fed5f59f-b7a4-4dea-9355-374037f72fad"
        },
        "item": {
          "id": "560f1099-602a-46de-a6a3-d6230a3b919f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ffe68765-ccf5-4214-9f93-5435d6021e4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013e7e41-1d33-48f7-ac1d-0d08847e06d9",
        "cursor": {
          "ref": "ea912af8-efa4-41fe-926a-c9758acdc143",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f0adfe9-490a-4b2d-92f8-b6984749e167"
        },
        "item": {
          "id": "013e7e41-1d33-48f7-ac1d-0d08847e06d9",
          "name": "identifiers"
        },
        "response": {
          "id": "880c5920-5139-4550-8152-3cd25d3b4ae1",
          "status": "OK",
          "code": 200,
          "responseTime": 161,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9656d4-bbcb-4ec0-b308-a03ea36953a7",
        "cursor": {
          "ref": "bd7606ac-9a11-4c10-a890-13ff41e6c57e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ef160044-ef2a-4139-a6b9-bd2be59066df"
        },
        "item": {
          "id": "fa9656d4-bbcb-4ec0-b308-a03ea36953a7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1ca27354-1c40-4a8a-8a1f-43b972f23e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e47071-1d88-45c3-8cf2-533ed9062d60",
        "cursor": {
          "ref": "d6144700-b909-4638-b2bc-ae0b48867574",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c0f7b4ca-9506-490e-8200-bc11d082af4f"
        },
        "item": {
          "id": "a1e47071-1d88-45c3-8cf2-533ed9062d60",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a0995bf0-88ee-40fe-b428-bed95933482b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da7458e-8109-4059-a5eb-1955bba65140",
        "cursor": {
          "ref": "538747e6-d48d-4aa3-ab38-687699daf3c9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b1f481ca-a083-4880-8186-bf5dda79a912"
        },
        "item": {
          "id": "5da7458e-8109-4059-a5eb-1955bba65140",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "182b75f5-3aab-4e09-9a5b-c38bab66b682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcdb2fd-d31b-4556-ba9e-26045e880e94",
        "cursor": {
          "ref": "b2f11360-ba5a-498c-a12b-5b42c8518a5e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "014b83d9-b39d-4fd3-9ab0-b7914e18377a"
        },
        "item": {
          "id": "ddcdb2fd-d31b-4556-ba9e-26045e880e94",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3e77131f-ef18-4c0f-bee9-442bc2958eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fddcbcf-f199-4e16-9355-4eab03c89f15",
        "cursor": {
          "ref": "8d109da6-e5c7-4e49-ad5c-c406e0bd9044",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2bb40ecf-107d-40cd-a689-ed40ec0b7bd9"
        },
        "item": {
          "id": "4fddcbcf-f199-4e16-9355-4eab03c89f15",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c405ca3b-0d1b-42cf-aa77-ea8aacc16b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f03a2c5-ba4d-4df3-ae9e-ed4df8fc346e",
        "cursor": {
          "ref": "a4431c09-4f5b-4561-8319-2e92449b9af5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "926aa0a0-6470-4d81-b825-2a34ee075196"
        },
        "item": {
          "id": "8f03a2c5-ba4d-4df3-ae9e-ed4df8fc346e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6f9ba33f-4aaf-49d6-bbaa-b0bfec163981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58d024b-7f02-4ae7-992d-6fde3f24324c",
        "cursor": {
          "ref": "b511599e-0ac0-4234-bf88-e15176358cc0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bc76d408-519e-4c3d-9835-597f99385806"
        },
        "item": {
          "id": "d58d024b-7f02-4ae7-992d-6fde3f24324c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e2563662-1126-4ba6-89d0-46947b4ad818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7940afa3-82e7-4905-b430-d20ec1f73a6b",
        "cursor": {
          "ref": "6f853e01-9dbe-441a-820b-b334c07aeadd",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1d02269b-61b1-45b6-a00a-3e7fd55a0d68"
        },
        "item": {
          "id": "7940afa3-82e7-4905-b430-d20ec1f73a6b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "861ef614-c7ad-42ba-b893-d4b3fa5d1b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4703d88-603c-41d3-9e21-38e9bc50ba4a",
        "cursor": {
          "ref": "34188811-705f-4dcf-8e94-5548b3547ff1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "19ef258e-fc6f-4c5c-90a6-6775486eebc6"
        },
        "item": {
          "id": "f4703d88-603c-41d3-9e21-38e9bc50ba4a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4f301290-4da5-41b7-aeb7-1439f0abc097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0337eb-1cd9-45ed-a8f3-ceb816c2aff0",
        "cursor": {
          "ref": "f5b51b73-f838-42cf-afa5-b969b621d1eb",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3a02a092-c4e8-4954-9818-eb0a82cf744f"
        },
        "item": {
          "id": "8e0337eb-1cd9-45ed-a8f3-ceb816c2aff0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "30e758e2-32a8-4e48-a41d-1139a0360478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238c6f69-d03d-4f1e-8e10-72d215a0213a",
        "cursor": {
          "ref": "2d563363-0404-4fb0-a883-61fb27f000b4",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ea204bdd-4481-4c43-831e-d0c3136d3f1d"
        },
        "item": {
          "id": "238c6f69-d03d-4f1e-8e10-72d215a0213a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4dd6fcc4-721c-4a7b-9f6a-53687c291115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0206cb49-6a06-49e1-aceb-44833e6eed1d",
        "cursor": {
          "ref": "648fdbe6-699b-42e9-a79e-8efc6e331cd2",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "538102c9-4235-4c2b-83a2-fed1dcaeb97a"
        },
        "item": {
          "id": "0206cb49-6a06-49e1-aceb-44833e6eed1d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "41bf108c-9931-4be4-ae78-7e6c8df9d61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d55a501-3ac6-410e-9e6b-36727aa31c06",
        "cursor": {
          "ref": "e7045d19-e6ee-4e89-9f8c-0c2965fc0f58",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5f5766aa-7dbb-4ffb-b83a-8575cd762c1d"
        },
        "item": {
          "id": "5d55a501-3ac6-410e-9e6b-36727aa31c06",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e8ad224d-3089-42d3-bd2d-4b2e466a4b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369035ba-e622-43f5-b5eb-d3d875a51d30",
        "cursor": {
          "ref": "8474a645-fbfb-413a-a127-98756e528036",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0baa338a-1fa4-4224-9ad8-0057142720f3"
        },
        "item": {
          "id": "369035ba-e622-43f5-b5eb-d3d875a51d30",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1908a157-2b73-4577-bc39-a31791e5a209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd30f217-c38a-4363-9b4a-e1db70778b20",
        "cursor": {
          "ref": "31ea2686-8ffc-434c-9015-721c1e142151",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "481e9379-1448-44fd-853b-573af202f469"
        },
        "item": {
          "id": "fd30f217-c38a-4363-9b4a-e1db70778b20",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d3f55d26-59a4-4001-b105-9850b0e33a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519ed23c-3c1c-4a39-814d-d991b3f4633a",
        "cursor": {
          "ref": "7c94aa4f-709e-45b4-a178-07df23ad35e0",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d82a909f-2a6c-425e-ac6f-0b951742b65c"
        },
        "item": {
          "id": "519ed23c-3c1c-4a39-814d-d991b3f4633a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d42b097e-95af-4f29-a755-85cd7aef7ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbf168d-cf95-4120-9833-d29df17f42a5",
        "cursor": {
          "ref": "a692e8a0-4278-4c69-9596-bf032df1f883",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f4d70d08-1a25-4b36-844d-e3d015e608a8"
        },
        "item": {
          "id": "7bbf168d-cf95-4120-9833-d29df17f42a5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "be47fbd5-e1eb-493f-bac7-87eac0baad7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce5581e-d1e4-47db-b0a3-4b717551371d",
        "cursor": {
          "ref": "bb6dfa67-430f-44de-a18d-f9ba27a5cfd6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "36fe37e1-7655-47df-84ab-f0ca5b2a4cc8"
        },
        "item": {
          "id": "5ce5581e-d1e4-47db-b0a3-4b717551371d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3010fe80-3db1-44ca-8c57-6e8cf7582540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b22dadf-428c-418e-a413-70aca5299963",
        "cursor": {
          "ref": "f9b65269-843c-4ccb-99a5-d5cc1bb5550d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "11c5196b-8f11-4f05-863d-a342809bd906"
        },
        "item": {
          "id": "1b22dadf-428c-418e-a413-70aca5299963",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5b550244-4df6-4e23-86fd-d3a8edf6cbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9eea8d-bbf4-4465-8ebf-0dc108651c67",
        "cursor": {
          "ref": "75c9bcd0-e4f2-4bde-b482-611a80b5f281",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6916482c-54d5-4a8a-8a68-8975350521e5"
        },
        "item": {
          "id": "db9eea8d-bbf4-4465-8ebf-0dc108651c67",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c0e06a3d-c851-4125-8dee-fa06592694d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346eb4f2-2c5a-4e77-8ec2-fa90c351fb38",
        "cursor": {
          "ref": "82590e12-80ae-4515-bad9-7915a1bc1099",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8bc7c100-1992-443b-9328-e392362ed144"
        },
        "item": {
          "id": "346eb4f2-2c5a-4e77-8ec2-fa90c351fb38",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d3b07132-809b-43d7-8b75-f921a32018ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a874f7c0-5734-455d-ba83-8fc342f09d2c",
        "cursor": {
          "ref": "848a8eb7-69e2-4da1-8121-8520edaf2b81",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1611bf88-70b7-419d-ad64-0c7045033763"
        },
        "item": {
          "id": "a874f7c0-5734-455d-ba83-8fc342f09d2c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "56aa947d-d5e7-4d83-9c2e-92875a50e6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfe45cd-4ffe-4d72-ac1a-fc1dba1f2377",
        "cursor": {
          "ref": "32f33ffd-ddfe-4286-ae1d-7c481e466047",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a40ff7e2-f2b5-49bd-8bcc-cf65cb267f5c"
        },
        "item": {
          "id": "edfe45cd-4ffe-4d72-ac1a-fc1dba1f2377",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2129f633-9ad0-439a-a420-e12f929317d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ec32d1-3730-4c01-9775-4a5feccba31f",
        "cursor": {
          "ref": "fa2e4625-d8f7-434d-b0f0-19d690aff49f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9ebf50fa-65fb-4a3f-9644-85bf93434cbf"
        },
        "item": {
          "id": "20ec32d1-3730-4c01-9775-4a5feccba31f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c2353815-cf9c-4112-819b-c965e7c4c3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488c21f3-4f90-4f37-bc10-bf2327d57fde",
        "cursor": {
          "ref": "1f394da3-a19a-4a5e-b322-d85e63373678",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d39c7dc0-3ae4-4589-bc76-9757b444789b"
        },
        "item": {
          "id": "488c21f3-4f90-4f37-bc10-bf2327d57fde",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c01f5ff2-2173-4032-9fc0-0e7ec757f54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2513a8-9d84-4094-b34a-642067a073f9",
        "cursor": {
          "ref": "0ac852ce-8fec-4185-8986-0246b97ca94e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a6ad3b4b-ca23-4330-a901-22b8dde343b6"
        },
        "item": {
          "id": "bd2513a8-9d84-4094-b34a-642067a073f9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2388f1e3-b298-4a08-8032-28ebebd8722c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8036dd-947a-4d00-bfcb-1af493ab50ce",
        "cursor": {
          "ref": "d79d7053-abec-4506-9d9f-37204df6b506",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a2c014ce-3ca1-4370-b2fb-3cf8ccee2857"
        },
        "item": {
          "id": "9e8036dd-947a-4d00-bfcb-1af493ab50ce",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8a8ab307-5a5a-4799-936f-e6e0c553521d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58883457-0eee-4386-adeb-b14743601a45",
        "cursor": {
          "ref": "41a40073-2e4c-4aff-bbc2-03957b8cb209",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8aa28e83-6902-48cd-b237-3e7a13d32cfa"
        },
        "item": {
          "id": "58883457-0eee-4386-adeb-b14743601a45",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f52f8a39-f65d-4a02-9fce-b30d98cc1f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0247249-c0a7-46b8-ba91-302f7772da43",
        "cursor": {
          "ref": "76b22681-18e9-4cae-be9b-fc4d13ec4057",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c9619961-1681-48f3-9161-d9dc490c934d"
        },
        "item": {
          "id": "c0247249-c0a7-46b8-ba91-302f7772da43",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "214f6996-a55d-4d81-a157-6a1d26b6404b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c8f95d-66bc-457d-a489-1cb191272c3f",
        "cursor": {
          "ref": "198a9855-7b05-4c98-9efa-f82a4430e393",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c1e5db39-95b2-4d59-9f02-1ccdc98d15af"
        },
        "item": {
          "id": "45c8f95d-66bc-457d-a489-1cb191272c3f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "18308afc-25fa-407e-bb48-5a3375778483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c529c8-5dc2-4d21-9845-8973d9b41b70",
        "cursor": {
          "ref": "b5de0741-fbda-439f-b847-7ab6256ce72b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "82ac4004-0933-4f9f-84e8-50bcdb612a22"
        },
        "item": {
          "id": "18c529c8-5dc2-4d21-9845-8973d9b41b70",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7764be11-a88d-4bd8-a2c8-2d14bfc55b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda9cc52-8fb4-441e-9723-9881b3aaafbd",
        "cursor": {
          "ref": "8df547ce-3be6-4a92-ae0e-d27a69623834",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e0582078-4647-47e0-8769-517c430d0890"
        },
        "item": {
          "id": "bda9cc52-8fb4-441e-9723-9881b3aaafbd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "386d764a-ed67-4212-ab74-782a601f4f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ce2f2f-e709-4634-88f3-0d86ff7e9519",
        "cursor": {
          "ref": "e729fcd8-9861-49a4-ad12-3f4e662b6c41",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d0edfaf6-b49a-4c72-9440-93e7dcf836fc"
        },
        "item": {
          "id": "74ce2f2f-e709-4634-88f3-0d86ff7e9519",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9ec602d4-b1e5-421c-a50c-12b94910df99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041d943b-8fb6-4adf-b0a2-6352f4938307",
        "cursor": {
          "ref": "db07e26a-1eb5-4280-9379-bdca5adac36d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "01334863-9ead-4387-9217-e3655c76dcf5"
        },
        "item": {
          "id": "041d943b-8fb6-4adf-b0a2-6352f4938307",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "97aa067d-00c5-4897-93f8-ab00949048af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4fe261-b805-410f-bf82-8031ab1128ee",
        "cursor": {
          "ref": "c073514d-8a6c-4dbf-8dec-756f3d038f79",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7905e4b3-5fe9-43f8-98ea-9832e49473b2"
        },
        "item": {
          "id": "9c4fe261-b805-410f-bf82-8031ab1128ee",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0c737d8b-2d72-4843-9a64-a4c06a5e7201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947af2bd-3bfd-4a16-8dbe-38532cdcdbe1",
        "cursor": {
          "ref": "6cb29f84-f2db-4262-9148-5992fff7eb53",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1171da19-a497-4dde-a1d3-6002e88fbc69"
        },
        "item": {
          "id": "947af2bd-3bfd-4a16-8dbe-38532cdcdbe1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9909cb42-f415-4724-a25d-e46d032277c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba7615e-6447-4f6b-8d21-f32ca175388b",
        "cursor": {
          "ref": "4875a161-b318-424d-b5c6-742e87b67665",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "786b52be-4dbc-4193-b1c7-dedec5780186"
        },
        "item": {
          "id": "8ba7615e-6447-4f6b-8d21-f32ca175388b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4221eac6-37b7-4a4c-b6f6-211e46feda5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e9eba8-1356-459e-b216-3451af80ab5c",
        "cursor": {
          "ref": "2fbe94ee-7c14-4767-b5c7-361f1eb0caa4",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1e44af1a-f95d-47a9-bab3-14dd428aa449"
        },
        "item": {
          "id": "b2e9eba8-1356-459e-b216-3451af80ab5c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7dd5e470-a22c-4d92-bc23-889377175a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120d76cf-1d2b-4165-9289-40ebe750c3c1",
        "cursor": {
          "ref": "cbc93960-c1b7-48f9-811f-d46548b83100",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a67316fd-76bd-4d47-8e16-78edda109ae1"
        },
        "item": {
          "id": "120d76cf-1d2b-4165-9289-40ebe750c3c1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "602b90d1-49b5-4ffb-a5c0-003c33cb0626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbac6702-5b98-4391-b858-2581c177651c",
        "cursor": {
          "ref": "62a7f5d0-77ab-4d5a-aa6a-a7c26f4be682",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9c215eb5-a6c8-44de-ace8-afbbc4011104"
        },
        "item": {
          "id": "cbac6702-5b98-4391-b858-2581c177651c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b05280ed-ec82-4f1c-a8a1-904f10ab1c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912fb0fb-8d53-4735-bb59-334f00f610d9",
        "cursor": {
          "ref": "7a686038-812c-4ec8-a583-d34b269605ae",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "13c60ae7-2ca0-4fe9-aca3-da32b1cdf1d0"
        },
        "item": {
          "id": "912fb0fb-8d53-4735-bb59-334f00f610d9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ba0d5d71-2f02-4392-be31-8c9717c42c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba31e1eb-0a27-4e9a-9380-b27f92a5c979",
        "cursor": {
          "ref": "e7ecacbe-b1e4-44b3-96f5-525d4f9d249d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "58da4fb9-ebc7-42a3-94d6-fae8ea832930"
        },
        "item": {
          "id": "ba31e1eb-0a27-4e9a-9380-b27f92a5c979",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "58f82703-64b7-4903-8657-b2193076dad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de09fda5-aa07-46d3-80eb-e8b4819aa748",
        "cursor": {
          "ref": "5f202819-8435-4afd-a5f9-bba989bde5ed",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "734d3259-ed27-4b4b-b094-966d6f6c03c0"
        },
        "item": {
          "id": "de09fda5-aa07-46d3-80eb-e8b4819aa748",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8d8eb543-3992-4aef-8b4e-35761cefeb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22408ac-955f-4ab3-b6a7-6aa934df2be3",
        "cursor": {
          "ref": "b65a0b89-3c10-452c-b083-709fb92aa546",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c07fd2c9-fe03-40ff-95bf-fafb0f9bc143"
        },
        "item": {
          "id": "b22408ac-955f-4ab3-b6a7-6aa934df2be3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3d8dc1c4-e4d4-40e4-b482-2f8c20416157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fd05ef-9cd6-44c3-9857-3bc942dd5433",
        "cursor": {
          "ref": "add7d310-7eae-4382-bc79-6338d7a769a5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "67572662-84a8-41b0-a6de-948460cd6e76"
        },
        "item": {
          "id": "29fd05ef-9cd6-44c3-9857-3bc942dd5433",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e4a56901-280a-49f6-968a-83197eb16340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e54bc3d-0f70-4831-a27f-614080b529cc",
        "cursor": {
          "ref": "b6a33fc7-760e-4be6-8f07-0c5615c4dc39",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8ae2fbdf-9009-45e7-9bba-e5af22e3a958"
        },
        "item": {
          "id": "8e54bc3d-0f70-4831-a27f-614080b529cc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "327e5c08-2e39-4bcb-9f88-2a795764cf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9454f591-0511-45e8-aeab-1b86d48137f4",
        "cursor": {
          "ref": "81f019df-08bd-4e22-a90f-7adcfd472133",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "64413aa3-57ed-499d-9e15-496d68826719"
        },
        "item": {
          "id": "9454f591-0511-45e8-aeab-1b86d48137f4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b8ad9a97-06b8-4963-9b12-f1ddc5e6296d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4095207d-811a-428a-9319-378f76ecfa28",
        "cursor": {
          "ref": "e29dacfa-7cba-47d9-8863-318d9ed04d4f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bcbdde41-69f4-4eec-a5d7-4b71ee8fb635"
        },
        "item": {
          "id": "4095207d-811a-428a-9319-378f76ecfa28",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d2e75c53-94d4-4f0f-afb5-58353a580d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d5ba83-18a6-4c90-8398-cbf7a47244e5",
        "cursor": {
          "ref": "3fc83b1f-ed22-4091-ab20-c27b58435afa",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "910de855-c29b-4224-818b-3df4c37b63e9"
        },
        "item": {
          "id": "18d5ba83-18a6-4c90-8398-cbf7a47244e5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "de629809-ea5e-40ba-8928-6860089162fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52f5154-ef2e-4ad4-b89a-1f995d13fb03",
        "cursor": {
          "ref": "a004d745-3852-4c46-97c4-ebd1049c64a6",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8b460137-1637-463b-8fac-ecd7d27c4ac4"
        },
        "item": {
          "id": "f52f5154-ef2e-4ad4-b89a-1f995d13fb03",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d3a63737-5037-499e-8f8c-ec3816cc8dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2447cf66-4d4d-46a0-9f50-d4a24f0190b5",
        "cursor": {
          "ref": "888c5658-377f-4ec5-acb4-967a5f430c26",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "992e7791-a84a-45f6-92a4-9b68714879d8"
        },
        "item": {
          "id": "2447cf66-4d4d-46a0-9f50-d4a24f0190b5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4c76f0ac-030c-4407-979b-6c3ad2861de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253f9451-a691-4a7f-84df-4fd606fb4f3b",
        "cursor": {
          "ref": "ac5b9aac-a421-498f-9804-617ad013044f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6246731d-d666-4ea1-a26f-68124a8dc4eb"
        },
        "item": {
          "id": "253f9451-a691-4a7f-84df-4fd606fb4f3b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6faee769-859f-4de1-a8ad-40378bd4aa17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65229b92-28c8-4cd0-8b90-9277ff4b524a",
        "cursor": {
          "ref": "dfa36e5e-c20a-4a59-afa8-efb642482622",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a500877a-e91c-423c-ac13-b05cd889c33d"
        },
        "item": {
          "id": "65229b92-28c8-4cd0-8b90-9277ff4b524a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bcd9cb47-5253-4d7a-8890-2d392c484676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03096e8f-5f19-4b2b-ba5b-32662a73cf24",
        "cursor": {
          "ref": "23dd3eda-9c69-4546-9a4f-526b9c46a70e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5d75d95e-cb55-4833-83ab-7ea3af99a056"
        },
        "item": {
          "id": "03096e8f-5f19-4b2b-ba5b-32662a73cf24",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2e519ec5-f962-46f0-bac2-610af16e4cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f90788-11d0-4159-901a-9c42c0528656",
        "cursor": {
          "ref": "cb96fb73-fdf3-46ec-891e-50981dd04628",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "27a09f99-a6e8-4eb8-8705-368b1aea791f"
        },
        "item": {
          "id": "59f90788-11d0-4159-901a-9c42c0528656",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c6924b78-8532-44f7-9312-c9258b3b3285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8af242b-8be9-4091-be60-1cc169374e0d",
        "cursor": {
          "ref": "c3e09e11-437d-40fc-b0c8-94732049fb9f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "52974f80-1a92-453d-9372-ed5e26ccf1bd"
        },
        "item": {
          "id": "d8af242b-8be9-4091-be60-1cc169374e0d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5c7b8194-6519-4ae7-babc-2d821161d89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9124f9-62f8-4b11-bf58-ca127869ad17",
        "cursor": {
          "ref": "5d8973eb-0b27-4273-bf1e-e8704e5f750a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "371e3151-3c5c-4be9-a8f3-0f351a699b06"
        },
        "item": {
          "id": "1c9124f9-62f8-4b11-bf58-ca127869ad17",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "79b910ff-5ec2-46e8-8558-2e8a5966f581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4765702d-8392-4e23-9e01-f2cf731a8e2d",
        "cursor": {
          "ref": "891cb4f4-01ff-4674-b349-5bf8464d8eee",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2b9d331d-2bf6-4abb-aa43-63cda9b80c46"
        },
        "item": {
          "id": "4765702d-8392-4e23-9e01-f2cf731a8e2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "531158bb-2ceb-40fc-8bd6-3b09b46d0467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1987c27c-976c-4e63-bd53-f5ea808e9fba",
        "cursor": {
          "ref": "488295df-b50b-4975-884d-9ab45172f597",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "707de63e-a890-4f5b-b712-a9ec8b86f2be"
        },
        "item": {
          "id": "1987c27c-976c-4e63-bd53-f5ea808e9fba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "96ba47f0-7d7e-4346-a460-1dc00eb48fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f400da81-1502-4fef-8f70-b19503e4612d",
        "cursor": {
          "ref": "e7d64939-0b3f-4a96-8618-6d7826626844",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fd3594df-e617-49f5-b841-af6e23cf5e16"
        },
        "item": {
          "id": "f400da81-1502-4fef-8f70-b19503e4612d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7aa43d39-126f-4a79-b952-9f94a4194ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ba3374-72ec-487b-acb1-583b70bc78d0",
        "cursor": {
          "ref": "ab36a09c-1943-4cd3-bdca-da95a38fde13",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c92c5b4c-7fda-48a3-9197-7ad7ef2c1166"
        },
        "item": {
          "id": "95ba3374-72ec-487b-acb1-583b70bc78d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2b2cf323-2cd7-411f-9003-8a6fba49f995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26413d5a-6f36-494d-a8fe-fa983025288f",
        "cursor": {
          "ref": "1e856a21-396f-4291-b279-876c7a81dd19",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a4d5d3c3-006b-4ac5-8046-794df06a89a9"
        },
        "item": {
          "id": "26413d5a-6f36-494d-a8fe-fa983025288f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "088de79e-8734-46b8-a7bc-96c7ec9068a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c3d0b4-c8d5-43d1-8b2f-8a119d49c0b0",
        "cursor": {
          "ref": "2774bf8b-519d-4d45-a4ae-b849e490da2a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a02caf2b-e2bf-4b50-a26c-faa913907413"
        },
        "item": {
          "id": "38c3d0b4-c8d5-43d1-8b2f-8a119d49c0b0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e1b25b12-553a-44c0-9e56-b12313dfc46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac94f27-606f-4600-bb22-f292fa5f8912",
        "cursor": {
          "ref": "db28a4ce-e987-421a-8134-8e74b7df56ea",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6103078b-63b2-4d9b-9183-6d27616774ab"
        },
        "item": {
          "id": "9ac94f27-606f-4600-bb22-f292fa5f8912",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c0613a5f-c67d-4fdd-b7e7-83de98114994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a46977-4fa0-493d-8124-e07ce3a8ae9d",
        "cursor": {
          "ref": "0ad99540-d056-4d45-9457-305a1f8de53b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a0824550-2e79-4ede-ba31-c662ae46de6c"
        },
        "item": {
          "id": "35a46977-4fa0-493d-8124-e07ce3a8ae9d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "16c02782-7817-4b77-af11-5fe8df1e300d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aff70a-0063-4e46-b075-c435e70f9a9e",
        "cursor": {
          "ref": "5ca0f227-7513-4a30-b0f4-afdca8fe4243",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b0f6dd69-1163-464c-969a-2ea17c966422"
        },
        "item": {
          "id": "d0aff70a-0063-4e46-b075-c435e70f9a9e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8852b2a5-fa28-4a92-befa-6b6d95089ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b3cb80-1047-4dd7-b355-1141dc6d1d69",
        "cursor": {
          "ref": "388e2912-10e0-448a-8166-c1eb2c42d50a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "044bff7b-d033-47cc-aed2-fbb9f8b2fb13"
        },
        "item": {
          "id": "13b3cb80-1047-4dd7-b355-1141dc6d1d69",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b07405a7-529e-4da0-8035-95a4e8406e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8572f9dc-61a7-4d8b-8014-21a1aea8eac1",
        "cursor": {
          "ref": "121dcd17-4fc9-4c24-ae3b-2d73884c1bf1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2b01804b-a240-46e2-8bcd-5b8ad3928460"
        },
        "item": {
          "id": "8572f9dc-61a7-4d8b-8014-21a1aea8eac1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "880b82b6-bd88-4acb-9689-edc98e9a0f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78151b5f-e0c2-486d-b356-e549d7e18384",
        "cursor": {
          "ref": "ef08dd47-e8b4-44b7-ac71-b79da1173c23",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "55d1fccb-02e3-4b7c-920b-3195aa3fffc5"
        },
        "item": {
          "id": "78151b5f-e0c2-486d-b356-e549d7e18384",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f804904b-0088-4705-a3d5-71c3cb14d22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1ad91f-5742-43d4-978f-eec38287ec05",
        "cursor": {
          "ref": "b85708c9-1a7a-4c51-95ba-dc33f85d8b68",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d1eb77b6-2201-4f2c-adae-95de6ea0a74e"
        },
        "item": {
          "id": "1c1ad91f-5742-43d4-978f-eec38287ec05",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c0b61ae0-967e-4954-b817-23ad65a24c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45c1664-787b-4124-ba47-0c1506636f90",
        "cursor": {
          "ref": "1d02343a-fb86-4411-b3fb-6c43e0653eee",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "42e4f9c6-e275-4ae3-8b06-c0cdce5a6348"
        },
        "item": {
          "id": "b45c1664-787b-4124-ba47-0c1506636f90",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5da2e0c4-4ff4-4728-ae0e-7d94866e41e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3f5129-76c7-416f-a525-2b70b5e29ce2",
        "cursor": {
          "ref": "c2e14b27-9d5c-4538-9301-7c2d1d0b8ced",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "efddb2ae-b88c-4b22-88ff-ae13cf09d61f"
        },
        "item": {
          "id": "2a3f5129-76c7-416f-a525-2b70b5e29ce2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "edd5fccd-69c7-4ac8-b50a-825860ffeaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad54c69-993e-42ae-a4ef-ad01eb09e88c",
        "cursor": {
          "ref": "0386c3fa-1ed9-4390-b289-9b6d52b7ade2",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8720ca87-27b7-4860-9cdb-82191cd5824e"
        },
        "item": {
          "id": "dad54c69-993e-42ae-a4ef-ad01eb09e88c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a33d3852-d3ee-432d-837d-367554893634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7393fe07-ff64-4cbd-8bd1-8a90cc15ff8c",
        "cursor": {
          "ref": "41249e97-9909-4f2d-a6f0-1b26d3bf91cf",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "39dc29c1-4f36-40ce-a801-41fb628b7754"
        },
        "item": {
          "id": "7393fe07-ff64-4cbd-8bd1-8a90cc15ff8c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1d9ebd6b-9471-4e4f-8fad-8b287f90de03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37d5d9f-a410-4aee-a694-8e4e992cd290",
        "cursor": {
          "ref": "6e1210d7-b2ca-41a0-9cf6-de9c45dc0f9b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bd0c19c2-867f-4ed2-945f-a46abef431a5"
        },
        "item": {
          "id": "a37d5d9f-a410-4aee-a694-8e4e992cd290",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c3c0c6bd-8726-46bd-a8ca-3d86cb308bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7394a090-d9df-4b5f-9172-a4670c3270d5",
        "cursor": {
          "ref": "4f8c1faf-1c2a-4f45-852c-a24236521596",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2891664c-86b3-4c8c-b5b5-48f52a02779b"
        },
        "item": {
          "id": "7394a090-d9df-4b5f-9172-a4670c3270d5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c97a91d7-3340-4aff-b81e-157e78cf1dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c411d6db-07eb-4bf4-96cf-8cf9747a4447",
        "cursor": {
          "ref": "566d36a9-1585-4ac4-b143-eb0879f0dfc1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2e7f12d9-7496-46b8-b230-8fbe8c8a3cb4"
        },
        "item": {
          "id": "c411d6db-07eb-4bf4-96cf-8cf9747a4447",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "baea4850-c41e-495d-8a8c-45a9ae1e7025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00405319-feeb-4312-b253-a29e7a859bd7",
        "cursor": {
          "ref": "e6d3c2d7-25ca-4b2d-80a1-e31a13ba93ac",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b5c633ac-df17-4b80-9667-05c8af961e05"
        },
        "item": {
          "id": "00405319-feeb-4312-b253-a29e7a859bd7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2beb9b02-ee66-4546-b950-0858116bd63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f60e255-1867-43e6-9244-9fd8870fed80",
        "cursor": {
          "ref": "fbb04c11-6946-4fd4-8b32-6ff5a0ef5e81",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a43431c8-2a11-4c80-b9ac-2364372eeba3"
        },
        "item": {
          "id": "2f60e255-1867-43e6-9244-9fd8870fed80",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8ef5e3e6-1f29-414d-b003-e55cad5f0632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2444b1-7cfd-44f0-810a-1c7e23c3775d",
        "cursor": {
          "ref": "7ba81faf-ee59-4bd5-8909-8620f454ddb2",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e2cd4b6c-89b7-4b01-a0b1-0061316327ae"
        },
        "item": {
          "id": "0c2444b1-7cfd-44f0-810a-1c7e23c3775d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0c978dda-f1b5-4d33-8115-b72ee73c992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5403ad86-325f-498f-ba44-fc68cf255f49",
        "cursor": {
          "ref": "2594e801-025b-452a-ab23-82e1ed184283",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f18a6e3f-8f02-4237-9930-de306c2534bc"
        },
        "item": {
          "id": "5403ad86-325f-498f-ba44-fc68cf255f49",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "aeafd741-a165-4d75-8260-04c596b007ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea95a29-9e9d-4256-ac30-9852d455ef76",
        "cursor": {
          "ref": "e9e8d73b-6282-4fb7-b386-01bcc81581e4",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e458ce06-bc68-4531-90f3-26a8507e7a91"
        },
        "item": {
          "id": "5ea95a29-9e9d-4256-ac30-9852d455ef76",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cac19a37-b68e-47ef-b260-b2a4d78f15ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3e6559-8798-476d-9b54-c4301dcf1a38",
        "cursor": {
          "ref": "c7d383a0-feaa-43f2-9ae7-f5bc63d958ef",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4bd4586f-f0fa-4691-8dfa-230f48bc96fa"
        },
        "item": {
          "id": "4c3e6559-8798-476d-9b54-c4301dcf1a38",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ebcfd515-cfcb-484a-83d2-e89b35014fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068fd1d0-30d4-4cd9-9e03-7a60c0cac7c2",
        "cursor": {
          "ref": "29fdadaa-5e4a-47ab-8077-7e15fd625d97",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e308f915-40d1-4654-b5af-b5da767a7fcc"
        },
        "item": {
          "id": "068fd1d0-30d4-4cd9-9e03-7a60c0cac7c2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c7127950-bf64-4929-8433-5914ec1bc8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e381e0fa-9137-48f9-9d2c-1b5ed7f2b14e",
        "cursor": {
          "ref": "209fbd6d-8712-40fc-a51c-87a469d805c9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2949fddf-5a89-44e0-a877-cca239f3ffcb"
        },
        "item": {
          "id": "e381e0fa-9137-48f9-9d2c-1b5ed7f2b14e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e7148b0c-c908-4624-bb28-039f1ee60893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5836a282-f739-471c-92d4-60b28e9513e6",
        "cursor": {
          "ref": "b0de7dbf-ec43-4567-9d76-a47ac9aae7b0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "91da8412-03a2-4676-9c28-93cd42be37fc"
        },
        "item": {
          "id": "5836a282-f739-471c-92d4-60b28e9513e6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "64101997-3d59-4799-a3f4-a6435ed30d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8aec9e6-2c39-4856-8b6c-5bf802ee2ac0",
        "cursor": {
          "ref": "c759e671-3e34-4de5-adb3-57a43c8d15ab",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a0929e6a-139f-437a-b0b3-a7b634f5e08d"
        },
        "item": {
          "id": "a8aec9e6-2c39-4856-8b6c-5bf802ee2ac0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "da28f870-0621-42f2-9f60-50e5176f7abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacf1e31-5aaa-4e11-b862-37a4b108d032",
        "cursor": {
          "ref": "d61e4b9a-1eff-40c6-8046-619ff8300a82",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "34fdebdf-8c7d-42c0-a5b1-b24902d05678"
        },
        "item": {
          "id": "aacf1e31-5aaa-4e11-b862-37a4b108d032",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "74ddb008-2059-4285-9cf5-36ebc8a19a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aefe770-714f-4cc5-857c-197ad9230cb2",
        "cursor": {
          "ref": "87fe3a24-2c00-4ff2-a375-1780a2ec5d1e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1e23e42d-f712-4b58-b0f6-881964258ee8"
        },
        "item": {
          "id": "8aefe770-714f-4cc5-857c-197ad9230cb2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8f47e2ff-0c2b-4031-9df9-35ed55c484af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20c49b3-a58c-4198-b40f-5606d302c4e4",
        "cursor": {
          "ref": "97e0e897-73a2-4f75-a685-e10bcee72134",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b852d123-4acc-4185-8669-c944099493a3"
        },
        "item": {
          "id": "c20c49b3-a58c-4198-b40f-5606d302c4e4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cccf07f1-9233-4ba8-8125-f95d6b3b47c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5b2d55-ded5-4bca-aae4-bdc853ad1ed8",
        "cursor": {
          "ref": "6616d95e-ed13-4892-9b6c-3ecaa1f81333",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3a350ed1-1245-4010-adab-66529d3e6be7"
        },
        "item": {
          "id": "ff5b2d55-ded5-4bca-aae4-bdc853ad1ed8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4005c165-400a-42e3-bea8-9cab7ea52be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8b0d90-a95c-41c9-b2e8-18b8f7f48f96",
        "cursor": {
          "ref": "229c9d14-f509-4ffb-8f3f-ae6858f45f0e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "592af13c-23da-4336-b6c2-7cf20eb86681"
        },
        "item": {
          "id": "4a8b0d90-a95c-41c9-b2e8-18b8f7f48f96",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d2d8afb2-7b30-4799-b02c-a228a447b3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14b1939-9d7d-45e0-8527-a025ea207392",
        "cursor": {
          "ref": "bb0a544a-20e1-44e7-9434-309b9887c4cf",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "62581e05-6e7d-444c-9c07-a7c094d02c10"
        },
        "item": {
          "id": "c14b1939-9d7d-45e0-8527-a025ea207392",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b8a9cdb0-fc88-4dd6-88eb-33cdbcb0a821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6758f311-a6c0-4c03-ab7e-4a82ddc47576",
        "cursor": {
          "ref": "2f67c848-c6a4-4bc7-86c2-26974c6cd63d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bfbbe418-b1f8-4781-9aaf-f11a9293c38e"
        },
        "item": {
          "id": "6758f311-a6c0-4c03-ab7e-4a82ddc47576",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0a2ce7ee-3fa4-4711-9ebe-88d78f9f974c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6e4e90b7-c85b-4265-ac2a-87580ab6db12",
        "cursor": {
          "ref": "ab4c14bd-f461-482b-9129-60a387b548bc",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "237742a6-05f6-4fe9-a44a-c0d16afabe63"
        },
        "item": {
          "id": "6e4e90b7-c85b-4265-ac2a-87580ab6db12",
          "name": "credentials_issue"
        },
        "response": {
          "id": "28413363-48f7-4b3b-9605-315a2d94b824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ff8057c7-76a0-4ba1-b33c-9a4e591e6755",
        "cursor": {
          "ref": "4c5112e6-0738-4ec3-ac05-f0a9f372cad3",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c099f1bf-f5a7-4133-aa8a-d299bd616837"
        },
        "item": {
          "id": "ff8057c7-76a0-4ba1-b33c-9a4e591e6755",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "99b769b4-f086-4691-b9da-9cc88a012053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "653af28a-b0ab-4947-b712-a1527a9e272f",
        "cursor": {
          "ref": "18f91ee2-f8d5-4e09-b312-51c94234e22a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d3eda217-f6f9-46c7-ba66-ce3a1d5bd0be"
        },
        "item": {
          "id": "653af28a-b0ab-4947-b712-a1527a9e272f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7744fbec-b76d-40f9-b504-959025262ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "69504c40-caa3-4378-8380-e280d8e3cef7",
        "cursor": {
          "ref": "1c64fce5-523b-4fb5-8688-4b7780e6f7e3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "51ab408d-909d-4e84-860b-05e2c4e1a922"
        },
        "item": {
          "id": "69504c40-caa3-4378-8380-e280d8e3cef7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1e59a739-b3c2-4927-8e0c-87c886af3fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "432e6aaf-5c7e-4af8-b4ae-9063d2692015",
        "cursor": {
          "ref": "0cf607c3-2786-4700-81a1-458247402c0f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "116bc33b-e163-48d6-a05f-fe92a31184c4"
        },
        "item": {
          "id": "432e6aaf-5c7e-4af8-b4ae-9063d2692015",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4f15411c-5254-47a4-a370-d02b41f0e4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4ec5908f-ca6d-4ec0-b591-bb3a9fd67864",
        "cursor": {
          "ref": "f70c17e1-9864-4384-b17d-44ee15ccefec",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "88d20c98-9680-43fc-9622-30a270cb68c1"
        },
        "item": {
          "id": "4ec5908f-ca6d-4ec0-b591-bb3a9fd67864",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cd19af05-0329-4dc0-8d91-7e6307f68dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "38250388-5e8d-4fe4-aaa1-568f33178c8b",
        "cursor": {
          "ref": "5f9489a8-7b37-4e1d-8f8f-13ee5c8e0786",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "19996972-b2ed-4c55-a2b8-ed8c071f6fdf"
        },
        "item": {
          "id": "38250388-5e8d-4fe4-aaa1-568f33178c8b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fd12ab26-c9cb-4f93-8e22-be1fa24c69fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2210502-3262-4bad-93e8-832afbe4a38a",
        "cursor": {
          "ref": "6f8c453d-5628-4f0d-947d-39d4d4c259a9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e227643d-a4b5-4336-ac0d-5cf24c6427b9"
        },
        "item": {
          "id": "d2210502-3262-4bad-93e8-832afbe4a38a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "15fbf023-c77f-4590-b3e3-87cab302fb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3911bac-aee3-44d8-822a-b2f9f50bed25",
        "cursor": {
          "ref": "5347aa49-b873-4298-80fc-b56d0e085280",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "db10ba04-0c4c-4b3e-af94-5db08aa273e6"
        },
        "item": {
          "id": "c3911bac-aee3-44d8-822a-b2f9f50bed25",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c28375bc-5c2e-4be3-a21e-cb7d0fb1bb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e58c70f-37be-40ce-8423-94dd840157ff",
        "cursor": {
          "ref": "a48de90d-9040-4131-8d68-9cf7a128c991",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "89b7a534-891f-4409-878d-e15351b8109e"
        },
        "item": {
          "id": "0e58c70f-37be-40ce-8423-94dd840157ff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "64b69389-803b-4c6d-b849-651a5487d444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be827fc-d223-4ae5-938b-6726e3ca990c",
        "cursor": {
          "ref": "91b0b4e7-0146-4c14-b3f6-06ccab9aa0dc",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d17b7838-76c2-4827-82d9-036f74c8351a"
        },
        "item": {
          "id": "8be827fc-d223-4ae5-938b-6726e3ca990c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bdd4cf69-3d36-4414-ac9e-a2e16f8d2f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45507a10-1c64-4d79-bae7-b414da1ef081",
        "cursor": {
          "ref": "8d32e658-be83-40ef-9cd8-1b4d3e53c692",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2c348bf2-a2a9-42f4-a52b-ff61baa454cb"
        },
        "item": {
          "id": "45507a10-1c64-4d79-bae7-b414da1ef081",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "01f214b9-1dbe-4157-9180-89c3071a874a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10f0755-6244-42d7-a731-8e522bd399d9",
        "cursor": {
          "ref": "1eb5f541-7077-4bb2-9cdd-5757ca55ece2",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f5c1a41d-10c7-438b-9914-d0fe263e2dd9"
        },
        "item": {
          "id": "d10f0755-6244-42d7-a731-8e522bd399d9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "df332507-c3c8-4860-806c-5f9ce7016588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e41ef9f-e2ce-4a5d-89b0-0173f5910edf",
        "cursor": {
          "ref": "062b9afc-61d0-47cf-a2b4-a88095e4a8fe",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "53f1b199-f30a-4ad2-ac37-371c63666e23"
        },
        "item": {
          "id": "8e41ef9f-e2ce-4a5d-89b0-0173f5910edf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a4d93d44-ab10-4497-9837-edf24fa7b36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3b5bb6-9967-4fe9-aaa5-4e31257db9e7",
        "cursor": {
          "ref": "70d557a6-5ff4-4aff-812a-a819a3fc6531",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "05d2cad5-226f-49b1-a2ca-7fa6ca131da7"
        },
        "item": {
          "id": "5a3b5bb6-9967-4fe9-aaa5-4e31257db9e7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b3f5b8a9-cd9a-4e25-a31f-fa991f90c88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24aee8e3-9259-4551-af7d-f2ba792c893c",
        "cursor": {
          "ref": "cf279e77-3834-4538-9555-abad535dd286",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0d60ff11-5928-4f07-8656-11e2c81f3050"
        },
        "item": {
          "id": "24aee8e3-9259-4551-af7d-f2ba792c893c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "84aabe7b-b587-41af-ad2f-d8adf6284c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c12d9b-c116-494d-a8d0-05c04fb16699",
        "cursor": {
          "ref": "e156c22a-66b5-4247-bff7-754efbc4be5c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "93374ba4-b0c4-4591-858a-b002cbe2ae74"
        },
        "item": {
          "id": "44c12d9b-c116-494d-a8d0-05c04fb16699",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b1276de6-1386-49ef-a498-9210b7979e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdf03c5-cf45-4272-82d4-1ff35fb48786",
        "cursor": {
          "ref": "c1db85d4-c28a-4b80-8115-4033b170563f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "73ee0cd7-850e-454a-aad6-756fdfbf981a"
        },
        "item": {
          "id": "4bdf03c5-cf45-4272-82d4-1ff35fb48786",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "efbf61af-ad4f-4b6d-b694-c3d752c20175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf15d4d7-b4fa-482c-bb84-54408a09f319",
        "cursor": {
          "ref": "3d2b0e17-34c2-4d14-a3f5-d8fa71eb7bb6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0925017d-7bf2-460d-a412-fffa2cf7b98d"
        },
        "item": {
          "id": "cf15d4d7-b4fa-482c-bb84-54408a09f319",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c698bf22-88d6-46ad-b475-0ab0aaa321c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaf10f1-6cfd-48a7-9cf6-c91dd364476f",
        "cursor": {
          "ref": "71f8c7d2-962c-4ff5-aad6-5c07d561e418",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2be52ffc-eb8d-42e2-b26d-d9ed9b372422"
        },
        "item": {
          "id": "cbaf10f1-6cfd-48a7-9cf6-c91dd364476f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "54809533-7cd7-426c-baca-2f32c875fd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dea455f-1af8-4847-88cf-c6fc6b3944cb",
        "cursor": {
          "ref": "a0e27c1e-94aa-4128-a83e-188bc337a252",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e6917048-2c31-4f00-9c74-3b3441117635"
        },
        "item": {
          "id": "3dea455f-1af8-4847-88cf-c6fc6b3944cb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "52b7f4dd-5db3-459c-b0cf-1ed825c400db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9eaa666-cf2c-4506-bb08-28b8fe0e3120",
        "cursor": {
          "ref": "c424e824-6285-44ab-bd88-e8db706fcf1f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6e85b70e-db53-403b-bced-559b89feacc8"
        },
        "item": {
          "id": "a9eaa666-cf2c-4506-bb08-28b8fe0e3120",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8f609d4-e530-46f8-8ec6-e3e546bd6e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadf18f6-9911-466a-8818-e028167ffcaa",
        "cursor": {
          "ref": "7512d5a3-80aa-4ba5-8218-cd10ffe1037a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "78a0a14c-a356-45c3-860f-78cd049f9797"
        },
        "item": {
          "id": "aadf18f6-9911-466a-8818-e028167ffcaa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4f97b99b-c95c-48b7-a0b4-d202ee12a9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f0fcf0-74cd-406c-ae01-71d5e9ed4819",
        "cursor": {
          "ref": "0bdf93b4-6986-4afe-92a7-364e14da6ab5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e11bf3cb-13d3-497e-830a-6e62c47e4e0e"
        },
        "item": {
          "id": "f9f0fcf0-74cd-406c-ae01-71d5e9ed4819",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fd7e0f76-d1d0-4d0d-a8cb-f02b120c8dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f11f77-7fef-49b6-8744-f3f7a4c0c8ad",
        "cursor": {
          "ref": "df8eab04-31d5-48ff-ac83-c8d73c29e01d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3dc2f2af-4bf8-4359-a9b8-8e8fb4ce21f3"
        },
        "item": {
          "id": "d9f11f77-7fef-49b6-8744-f3f7a4c0c8ad",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e575fcf2-0188-4c02-bd42-b0a8ee343ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474ce76c-da9c-4c14-8cee-c7e17c7bed03",
        "cursor": {
          "ref": "172ef5f1-05fa-44ec-b5cb-c463a0ff1a27",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c2def12d-398e-493d-96e8-8eb57ff2a330"
        },
        "item": {
          "id": "474ce76c-da9c-4c14-8cee-c7e17c7bed03",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "64d057c0-290d-4897-a7eb-c26cd84bb97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bc1526-0afc-4c8a-a3e5-120beae659aa",
        "cursor": {
          "ref": "3235cd9a-9027-4918-9bf8-5955f7db640a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d884f334-3a27-4a92-92ce-a15a0eb3c31c"
        },
        "item": {
          "id": "a0bc1526-0afc-4c8a-a3e5-120beae659aa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "00707dea-c53a-4c95-8411-e647de8fdf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba21fb9e-deb6-4711-8a59-ddfbf437c2b7",
        "cursor": {
          "ref": "87bc16c6-5753-40f7-86d3-d8c02833a59d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4a73f565-dfe3-491c-8cbd-582c65a3bced"
        },
        "item": {
          "id": "ba21fb9e-deb6-4711-8a59-ddfbf437c2b7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0729eda6-6520-40cb-81e6-a3da1198faea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e955ff53-e3f1-4ef0-a921-fa576ccadbba",
        "cursor": {
          "ref": "03a51aa3-1aa1-4d15-bb6a-3158cd3406cc",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ef81aed2-04d8-421d-a3fa-4b1b9c854f47"
        },
        "item": {
          "id": "e955ff53-e3f1-4ef0-a921-fa576ccadbba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "639bcff0-c274-4a56-982c-1792b307e9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d878a5-4eac-4a1d-9182-5a8afc0d8087",
        "cursor": {
          "ref": "121549bb-8ef2-45e8-8205-01333ec29c26",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3a9d66ff-41db-4a2b-bb46-f821663e3593"
        },
        "item": {
          "id": "d0d878a5-4eac-4a1d-9182-5a8afc0d8087",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1fbbcc05-9cf6-4b6a-9add-ea85f7965b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad99292a-93c3-4ab8-939b-377f25f56064",
        "cursor": {
          "ref": "044eec4a-0e65-4911-91b2-4bb2dbe65fa9",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e5d6a4db-56c6-4819-ad2e-4c108c3afe1a"
        },
        "item": {
          "id": "ad99292a-93c3-4ab8-939b-377f25f56064",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1946ad73-d23f-4abb-96bd-ee8ed2fcc097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9a044c-bb85-4f81-a370-885778086560",
        "cursor": {
          "ref": "47d8de2a-f855-40dd-9c2b-48fad54a9406",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a1c5201f-8300-4ecd-9534-2247e4a8a3dc"
        },
        "item": {
          "id": "bb9a044c-bb85-4f81-a370-885778086560",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "887e2645-a0d1-4ad2-9c04-1cdb36cf9cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503df737-04c4-4ff1-b43b-8584cd75a905",
        "cursor": {
          "ref": "5cd97050-ae92-4ba8-91ac-e3004a47597e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "27ddf5cc-6d14-414e-8518-05fffcabd902"
        },
        "item": {
          "id": "503df737-04c4-4ff1-b43b-8584cd75a905",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed5365ba-e845-4952-bf40-566fd24281c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c5a770-5670-428b-b5fc-d28f32b689d1",
        "cursor": {
          "ref": "fbd2a252-ca3f-4094-8ec0-d1846fa3f37b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ea7d90a0-d8b6-4ccb-a8cf-f3bba8b91056"
        },
        "item": {
          "id": "06c5a770-5670-428b-b5fc-d28f32b689d1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "68e89867-ae59-4bd1-ba5b-64930768cb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42136e8-bdaa-4d40-b214-80753a32952a",
        "cursor": {
          "ref": "5c2c8c37-ab89-46dc-82c0-9d79b275829c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9ca7192e-bc98-4da4-906d-482d54e91101"
        },
        "item": {
          "id": "f42136e8-bdaa-4d40-b214-80753a32952a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "09fbfe79-7117-42a6-a289-a751ffac3af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f96dfe-f33a-464d-8ac5-f19f35d185d2",
        "cursor": {
          "ref": "9e2fc673-06de-4bba-8ebb-08d645a29d70",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b9a446c5-d5c0-4dac-b3b8-5bd2d2d6234a"
        },
        "item": {
          "id": "27f96dfe-f33a-464d-8ac5-f19f35d185d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "216892a9-8244-4adb-aa6e-ed9d277276c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70986cb6-f3c8-4e58-8c1d-87f58ef798bd",
        "cursor": {
          "ref": "f026f442-25ab-4fbf-89a8-5ce0f2a50190",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ccbe60a6-0439-4219-ba17-3db9a8ced4c7"
        },
        "item": {
          "id": "70986cb6-f3c8-4e58-8c1d-87f58ef798bd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ba40c83c-eff5-4e07-8cc8-a7fc4b2fc7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c34b79-7a1c-4690-acf6-6087f85e7205",
        "cursor": {
          "ref": "5722ae19-c140-4c7d-b69d-adb7fc5eecf4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "13135120-5fe2-4235-8224-9a1b5eba1e6b"
        },
        "item": {
          "id": "33c34b79-7a1c-4690-acf6-6087f85e7205",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "54c20e89-cb63-487c-99bc-d1dfe1968ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7883268-2f66-4a07-b8f9-a1d03368375d",
        "cursor": {
          "ref": "55acc98f-53de-4ac5-a2a1-14cc86df005c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "09faa981-2a47-4297-9915-d0a0adc1cd32"
        },
        "item": {
          "id": "b7883268-2f66-4a07-b8f9-a1d03368375d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d112830f-2810-4d33-989f-7dcaecee9db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93474c7d-2dc9-4863-9f85-b7e41cde9fc8",
        "cursor": {
          "ref": "060ff32e-8aa6-4aa3-98cf-9604b29bbecd",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "aa139c44-06e5-4c4b-94fd-9be2abb79678"
        },
        "item": {
          "id": "93474c7d-2dc9-4863-9f85-b7e41cde9fc8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0b29fbf7-a452-4dd0-8ccd-5e53a01e2e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a891a7f-475a-443e-a6e6-3fdb2202fa15",
        "cursor": {
          "ref": "f6d81fc7-a108-464f-bb42-479096d73b21",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bb8727ec-87a7-40f8-9f8a-366211428b0b"
        },
        "item": {
          "id": "6a891a7f-475a-443e-a6e6-3fdb2202fa15",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "649274ac-9cd7-45a0-823e-b32c08810bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363ec3af-3573-4504-9aad-644f260c49f9",
        "cursor": {
          "ref": "af252682-7322-4691-9cca-cb3675bb683f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d95518b6-4231-4e14-af82-37b5ea557861"
        },
        "item": {
          "id": "363ec3af-3573-4504-9aad-644f260c49f9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9b414f36-b443-48c6-b89c-b7dac5248269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccf9b94-a32d-4837-976d-3fbd4936b104",
        "cursor": {
          "ref": "0e36d6c8-2cd6-4d02-acdf-042f6b4e8a98",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fae14b6f-4d3b-4916-9679-9d0065d4a35f"
        },
        "item": {
          "id": "7ccf9b94-a32d-4837-976d-3fbd4936b104",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "35e12011-7a11-49cb-a790-a7c94e68ded3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b4604a-b7ed-48d2-a525-32c35988e265",
        "cursor": {
          "ref": "45dab3e3-6117-4884-969c-345ae1a70c18",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2c448de1-d200-4ea3-9b00-d672f6d2baf0"
        },
        "item": {
          "id": "38b4604a-b7ed-48d2-a525-32c35988e265",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "df477477-8835-423a-9cd5-95f509cde835",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b4c54f-44fd-4e52-ae99-6dea1f37bc5e",
        "cursor": {
          "ref": "8b34de84-64db-4a1d-b407-d6ab07eab520",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "93a5f81b-d913-4119-a552-a548f84159ed"
        },
        "item": {
          "id": "d9b4c54f-44fd-4e52-ae99-6dea1f37bc5e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1167cd7f-f7a0-4a63-a1bb-6470ed2a1cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a34ccee-296a-4877-9026-c4de711856a8",
        "cursor": {
          "ref": "42933dfd-2361-422d-ab29-e29c4f8b59d1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0beddf0c-61cb-4998-80d8-b6d66aa7d5e1"
        },
        "item": {
          "id": "8a34ccee-296a-4877-9026-c4de711856a8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cf5fcdc7-35d6-4992-8e21-5c50a2869bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c5cece-4ba5-448c-933d-3c6d2991ab0f",
        "cursor": {
          "ref": "7ce4acfe-ceb3-4220-9b9b-3e35e97ca5cf",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ba4b0fb9-e80a-45f1-83f9-146c00b80f40"
        },
        "item": {
          "id": "51c5cece-4ba5-448c-933d-3c6d2991ab0f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "672430d9-c868-493c-9c56-ed47ccc6fab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05fe84c-8d30-4f49-94d6-6751f5decdbd",
        "cursor": {
          "ref": "1e2df7fa-16d0-45f0-a486-58aeca3e4401",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "69609e79-06f4-4344-9a88-89d7d1afebf5"
        },
        "item": {
          "id": "e05fe84c-8d30-4f49-94d6-6751f5decdbd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c5da95ee-cc11-4413-8384-15016ea0fc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ab7afe-9622-4b5e-8699-c594e1ac2f28",
        "cursor": {
          "ref": "27c7994a-585b-4ebe-852d-3fc7391a5e80",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d279f2af-56f8-4a64-a14f-01e7606ed2f0"
        },
        "item": {
          "id": "38ab7afe-9622-4b5e-8699-c594e1ac2f28",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6b197037-1108-49e1-b6da-6337d82a5902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b33037-293a-4d0d-bc2f-26748b4a8172",
        "cursor": {
          "ref": "ae43a320-ea58-45af-a1f5-73e8129c2810",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e6694bbc-ebd2-4189-8f68-da228fdd35a8"
        },
        "item": {
          "id": "01b33037-293a-4d0d-bc2f-26748b4a8172",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4a18d951-7d58-4d2a-87f5-1de25ad20a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ff22ff-4333-4d66-866a-cf73e67cd8d7",
        "cursor": {
          "ref": "ce5e10b4-56a5-4dcd-affc-7f9c2dee8201",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8c5f327e-2084-4820-b718-b60d0747d377"
        },
        "item": {
          "id": "e0ff22ff-4333-4d66-866a-cf73e67cd8d7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "14af01f3-b6d0-497e-8cd1-c11ab2917668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1ce8b3-8131-4986-b855-fc34fab83557",
        "cursor": {
          "ref": "1f9ac0f8-914a-4c92-a008-dd733e8dcb08",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "415299d6-cf13-41c1-84e1-0ade8c1ac3b7"
        },
        "item": {
          "id": "7d1ce8b3-8131-4986-b855-fc34fab83557",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bf89ff7c-8542-481d-b2d4-9e87f43042a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b78d58-da82-4190-9158-c940d5d2dc1a",
        "cursor": {
          "ref": "b43c02e0-8560-4e53-a6d3-82e2103d1027",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a60b2e03-7ad0-4a6d-9a9b-1e43434867b7"
        },
        "item": {
          "id": "f1b78d58-da82-4190-9158-c940d5d2dc1a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3732253d-1419-4b59-8546-52de125618d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34941daf-5730-4af3-8066-158ed7dd758f",
        "cursor": {
          "ref": "4a0fcad7-169d-4a61-a447-c80ab49708fe",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ed1b56d8-5193-49fe-9fe6-28953d4020fd"
        },
        "item": {
          "id": "34941daf-5730-4af3-8066-158ed7dd758f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "436d71cb-e8f2-493f-8f17-69054b33e544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe8be76-d88e-4065-9035-b253c1d0341c",
        "cursor": {
          "ref": "f4fb905f-9d63-4e17-8087-4e8cf8ca4cc3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "826189d2-e6bf-417c-a4cf-fcd96741ff74"
        },
        "item": {
          "id": "bfe8be76-d88e-4065-9035-b253c1d0341c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "24a3f3af-fc51-4b24-8920-b0126798eb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f8171b-0f57-4626-ae6d-792b69a20982",
        "cursor": {
          "ref": "34baf922-aa8b-4d8f-92ea-27f06f84cb19",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "78b222c4-2812-42f6-b2fc-0e3f5e15fcaa"
        },
        "item": {
          "id": "64f8171b-0f57-4626-ae6d-792b69a20982",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9927bda5-11a7-4918-b474-83eb029f7a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0c8038-56fd-468f-b774-4b2304844684",
        "cursor": {
          "ref": "569a5a8d-a152-4057-b5bf-187fe45178dd",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "aa2decdd-c3e1-4868-903f-7e3c04a2544c"
        },
        "item": {
          "id": "1d0c8038-56fd-468f-b774-4b2304844684",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1cd0c98a-c3a5-4cdd-9743-994941efe361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475dffcb-a5f9-4549-b84f-1f9442ae09dd",
        "cursor": {
          "ref": "bcf1db73-a2ab-4f88-8041-1970f769e736",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e57f1643-a880-4412-87b1-945872a7a26f"
        },
        "item": {
          "id": "475dffcb-a5f9-4549-b84f-1f9442ae09dd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d1536994-04fb-4206-814b-027aadc00829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe0d125-9410-4cae-9771-597184d50bb8",
        "cursor": {
          "ref": "fc2e46ab-1001-4195-9899-82dcdef493d6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "72bd6c82-1fab-430d-83c6-60f5edf497d4"
        },
        "item": {
          "id": "afe0d125-9410-4cae-9771-597184d50bb8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7b94fe87-af45-43b5-aa2d-fc069d9ec025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3495a339-ba56-4087-a1bf-0305a10cf88e",
        "cursor": {
          "ref": "2d3cbac9-f74e-48d0-a3f4-c6732147b8a3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e00e64d9-ff84-4a7c-bbc6-5a38ed93b6cf"
        },
        "item": {
          "id": "3495a339-ba56-4087-a1bf-0305a10cf88e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fe3d2312-6d7d-45e7-b797-3fb103d13148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c60391-69f1-4d34-a2e1-399c7e756d5b",
        "cursor": {
          "ref": "4b462a1f-24d7-457a-9de6-1da53f7aa963",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9c5ae2a0-4996-493d-9ede-dab904c1a013"
        },
        "item": {
          "id": "66c60391-69f1-4d34-a2e1-399c7e756d5b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ac6c00ca-2fe1-492b-befe-e14db2fb9af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad9abe6-2e01-4f0e-99ef-2421c7ac1e5e",
        "cursor": {
          "ref": "857f63b6-81d1-4d7c-bdbf-7cf51575a692",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ac1527a9-77d3-474e-b1bf-b073b42d3338"
        },
        "item": {
          "id": "0ad9abe6-2e01-4f0e-99ef-2421c7ac1e5e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ee0fa2c2-6c24-443c-8b43-828683ef1004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fedc4d-4fd3-4d66-9235-3e3e49efe1b7",
        "cursor": {
          "ref": "9bb49666-76a0-4baf-ae27-58eaa735ae05",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ec1a4a22-ec4e-414a-ba00-b1bd8feec714"
        },
        "item": {
          "id": "25fedc4d-4fd3-4d66-9235-3e3e49efe1b7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "62e4a7a2-84d7-425f-a1b8-f296c650ad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855874ec-0b93-4401-8b17-c985d164f4cc",
        "cursor": {
          "ref": "d464ce7d-7685-411f-9452-5ab86b9a2867",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7383f1c6-5c6e-4385-b3a1-967e7f480510"
        },
        "item": {
          "id": "855874ec-0b93-4401-8b17-c985d164f4cc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "733a8e48-33f5-4e66-b320-016c9563bb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114663c6-082c-4914-a305-7a4c77c08ffb",
        "cursor": {
          "ref": "30c60285-35fb-489f-abd7-7725bd75b995",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ce118e96-80d0-488d-98df-78c68d72d3dd"
        },
        "item": {
          "id": "114663c6-082c-4914-a305-7a4c77c08ffb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0ffdc025-76b8-4d97-9913-622217aa9bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf02239-74c1-4980-a722-7c9d409129d6",
        "cursor": {
          "ref": "d88882e8-679f-41d9-8581-745935cb47b1",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9fc59407-f8a3-47c4-88d6-1aaf2cc70c18"
        },
        "item": {
          "id": "7bf02239-74c1-4980-a722-7c9d409129d6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4338ca0e-7ff8-4e96-b72d-a95b79f668c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5453dbec-590d-4a12-89c2-26d6c18edd53",
        "cursor": {
          "ref": "5d133041-6d4b-49fc-ab2e-5fe2f4b640a0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "502d4d09-20c9-42f6-99df-2f3b7d880dd3"
        },
        "item": {
          "id": "5453dbec-590d-4a12-89c2-26d6c18edd53",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f7e620c9-7d7f-47b3-a912-a9dd055c97e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec470cd-2693-407c-845a-4ef0168e0bb2",
        "cursor": {
          "ref": "2c2d3bb3-a4f7-44ae-b687-3b00533c14ee",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a6768bdf-5250-4113-a823-1153447efa0f"
        },
        "item": {
          "id": "4ec470cd-2693-407c-845a-4ef0168e0bb2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ce5537f6-f53d-40b9-b40a-2c873e8654a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a38804-b3ca-4f36-a6a9-e8553e6bb1db",
        "cursor": {
          "ref": "95d70992-c20f-4349-8ccb-6896b1fc11cd",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "da4db981-8203-46e7-913d-6cc9fcaa2af5"
        },
        "item": {
          "id": "50a38804-b3ca-4f36-a6a9-e8553e6bb1db",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "345cc5d5-548d-4b79-8fd9-35f7168899fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee22bd82-0059-4b91-84e5-afb16c0136a5",
        "cursor": {
          "ref": "f0519a12-40ca-4cd1-9ff9-3ab066ec931d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d639dd55-0dbd-4793-8a35-9b1a83113cb6"
        },
        "item": {
          "id": "ee22bd82-0059-4b91-84e5-afb16c0136a5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "20e554ef-47d4-4ed6-a1f2-70a4a23c244c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0b25d0-ed6d-4ca8-b41f-d1289a3e78ed",
        "cursor": {
          "ref": "ab2dd48d-7b9f-4035-8eac-d7e7ec42108d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c2e40a72-68d4-4b62-a92f-8cdc98f5b6ef"
        },
        "item": {
          "id": "eb0b25d0-ed6d-4ca8-b41f-d1289a3e78ed",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2443161c-9c64-409d-b174-788e19c4818f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454f35bd-6e06-41f6-aacc-e56d9c678966",
        "cursor": {
          "ref": "d0bc8345-f609-4b6c-b6fe-655a0d73ec80",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b4762d15-f3c5-45b4-a536-90e2f5e5f9dd"
        },
        "item": {
          "id": "454f35bd-6e06-41f6-aacc-e56d9c678966",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a641eac1-e279-410f-a18a-336389848534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2bed0d-6ad7-4225-a120-d228099e53d4",
        "cursor": {
          "ref": "9d32c38f-00f7-4b74-843d-cd0d9ef68578",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "67d73d20-db3e-4f5b-8bcf-169742020cf8"
        },
        "item": {
          "id": "7f2bed0d-6ad7-4225-a120-d228099e53d4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "12a09151-16c7-416a-a3c2-2cce7c00a240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd9c0f4-dfc7-48ec-9c9f-162344c0308e",
        "cursor": {
          "ref": "69c2ffed-2613-4169-989b-3809cefefd0d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e116848d-4632-4334-b87d-c8bbb9adcef1"
        },
        "item": {
          "id": "cdd9c0f4-dfc7-48ec-9c9f-162344c0308e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4e7ea0c7-621d-4d91-b63b-0a1c88c982a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5193e4c-7f94-4670-a660-bcd16a246150",
        "cursor": {
          "ref": "88284491-f8ed-4fae-ba78-065cc49b39e0",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "683047fa-b869-472f-814b-68feffdda9b4"
        },
        "item": {
          "id": "b5193e4c-7f94-4670-a660-bcd16a246150",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f707fdb8-6daa-4168-9506-f53f72b5125c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bcd1ae-4eef-46a7-a928-68d1c26f1256",
        "cursor": {
          "ref": "f389de4a-74d1-4986-817f-b7b407eb6245",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e8be52e4-a042-4720-b5d2-c7df579e98b0"
        },
        "item": {
          "id": "54bcd1ae-4eef-46a7-a928-68d1c26f1256",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9c582254-a961-48bc-be16-d4dd95b434f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecd4037-e7a4-43ea-91ef-2e9e6a55e3f6",
        "cursor": {
          "ref": "1151eb4b-ccd3-406a-94cc-f25599248114",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fb5d74e9-293b-4dc8-a029-32a1640f4a50"
        },
        "item": {
          "id": "4ecd4037-e7a4-43ea-91ef-2e9e6a55e3f6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "18c8f35a-4ab5-42df-9d26-085e5847b328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25926c70-1d3f-485f-a378-6638920aebe8",
        "cursor": {
          "ref": "ebd3d532-5f0d-44da-a1e5-54e642e99ed5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ec85b78a-0881-40d7-bae9-916429df255a"
        },
        "item": {
          "id": "25926c70-1d3f-485f-a378-6638920aebe8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d476826c-c902-4ff9-b487-99eb31a27dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed16af7f-bec6-4e31-950a-28d301b7f8ed",
        "cursor": {
          "ref": "cbd306ea-e782-4094-a7df-513ac5b30851",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8c6c3777-837a-4da7-9db4-de68962995fc"
        },
        "item": {
          "id": "ed16af7f-bec6-4e31-950a-28d301b7f8ed",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "229bc455-25c2-4afe-83ea-e71f1845ebec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f6a32e-4b55-4456-9929-a9ba83e8d2c8",
        "cursor": {
          "ref": "6f07c68b-afab-45e1-92de-9d78c92aa041",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "38dbd7be-c9d8-4750-9f3d-6b357587dd7c"
        },
        "item": {
          "id": "c6f6a32e-4b55-4456-9929-a9ba83e8d2c8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2eaa8436-98f7-442c-9e46-e2ac5bcc3074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b79b85e-311c-495e-87af-cffd0a76605d",
        "cursor": {
          "ref": "23137511-5615-4fd6-9684-5b2bae2c3269",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "af4ee7d2-57e3-47e4-b663-c456dc50fdd6"
        },
        "item": {
          "id": "6b79b85e-311c-495e-87af-cffd0a76605d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ef62a0cb-34b4-400c-b5a6-ff2f9a3a9fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be2ad53-b8ff-43ab-ac4a-c21dd8c77520",
        "cursor": {
          "ref": "a339129d-bf27-4363-aef9-c250e720ac98",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f4796b2e-fda6-43af-a8ea-df467384e4ac"
        },
        "item": {
          "id": "7be2ad53-b8ff-43ab-ac4a-c21dd8c77520",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b441268d-fde3-4650-9221-883fea534759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461f8c83-f0f5-4dac-93d4-e1c28c7f68d4",
        "cursor": {
          "ref": "27f16aa1-b6cf-4424-a40c-c2de4fd8ee9e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ce018be0-12b4-48e0-887a-92f48d935be3"
        },
        "item": {
          "id": "461f8c83-f0f5-4dac-93d4-e1c28c7f68d4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "52f58faa-b064-4597-b9c7-4cf1ceee9514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7de102-7d6e-4bb8-968f-234d3ea554e8",
        "cursor": {
          "ref": "4bbf6e78-7ad2-40e5-a0db-77913892d70d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "82035924-bb1f-4386-be23-55c7889ea3ed"
        },
        "item": {
          "id": "fb7de102-7d6e-4bb8-968f-234d3ea554e8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f129af1f-6fbd-48b7-b20a-868d7814e86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e2b297-7c98-40b7-9138-a0993a0e5555",
        "cursor": {
          "ref": "bc15d7a4-a8fa-43fc-b993-6ae45eb1e03d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f135e641-46df-4a26-8850-70d870e4c694"
        },
        "item": {
          "id": "c3e2b297-7c98-40b7-9138-a0993a0e5555",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6ec281ac-beb7-4d58-b718-c0f333174151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da8399a-8775-4824-91b2-ddfeede7e278",
        "cursor": {
          "ref": "b99f48e6-3162-4730-93b7-4246f346582c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dd13bceb-82a4-4f59-a6cb-bfc6a83dbe1b"
        },
        "item": {
          "id": "5da8399a-8775-4824-91b2-ddfeede7e278",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "10a7c0b7-83ff-4e69-9c15-4c1c478402aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8200e78e-7989-4e05-b87b-abeb09884dfd",
        "cursor": {
          "ref": "0d8c82e4-322e-4e6d-bf25-d02c8069f4d5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e5330b38-e985-4f39-910f-e036d070d819"
        },
        "item": {
          "id": "8200e78e-7989-4e05-b87b-abeb09884dfd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "405a2e32-173e-485b-b76c-3d64503c8f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c8544c-b24d-4720-b1e7-9a87cfb4af3d",
        "cursor": {
          "ref": "98a13a76-58e5-4953-9bf1-e77dc755108c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "41db0e6c-59e0-4b30-9d8c-9714b304b1dd"
        },
        "item": {
          "id": "d7c8544c-b24d-4720-b1e7-9a87cfb4af3d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "56b491ca-656e-49ff-ac57-791e763df1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5687a9ab-21a0-44b4-a217-0cf4d9b7bcfa",
        "cursor": {
          "ref": "cb069ef4-fb59-410a-8a93-44a89dabe7f2",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "59667a38-505c-47de-ad3a-38efcf2a693c"
        },
        "item": {
          "id": "5687a9ab-21a0-44b4-a217-0cf4d9b7bcfa",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e4b7f90d-5812-4295-9cd0-20b34880bd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26c7c22-38e0-42f5-adb1-8f4ce93ea23e",
        "cursor": {
          "ref": "593e7696-dfd6-4c59-bf38-7e028c3b29ef",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "523fb83b-6c24-4727-ac63-fbf4c02c3714"
        },
        "item": {
          "id": "d26c7c22-38e0-42f5-adb1-8f4ce93ea23e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b0786c57-7bcd-434e-b3ac-38f320514968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdda2fa-4430-4e7d-968e-1c6b04ec5447",
        "cursor": {
          "ref": "f2469ea3-daa3-4803-a811-7df5378c3940",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1c99b2cd-2b44-4371-92ca-26de4772ab81"
        },
        "item": {
          "id": "9fdda2fa-4430-4e7d-968e-1c6b04ec5447",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "aa67e6bb-47ca-4349-9894-dbe3d9113ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a8677e-f459-4f51-922b-8b9f1e1a13c4",
        "cursor": {
          "ref": "b7e6016d-65bb-47a6-9993-a290991ce171",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "430ca1f4-5117-4739-a95d-bd766cc95f13"
        },
        "item": {
          "id": "62a8677e-f459-4f51-922b-8b9f1e1a13c4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b64c7917-3aa7-4982-aafe-5986bee2317a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252eff18-a49a-4e8a-858b-b82b3f03111b",
        "cursor": {
          "ref": "663d771d-4e65-4ae5-81c1-2feb5b773619",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4e71f3a2-bda1-4617-acde-f0c5d0c922b3"
        },
        "item": {
          "id": "252eff18-a49a-4e8a-858b-b82b3f03111b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8fae6a59-6947-4219-8447-c9235e5b5d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f282158-5664-47bf-82cf-9cc600f11a4d",
        "cursor": {
          "ref": "09a209c2-3bad-4218-b672-e63d9e4ccb80",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7faefe4b-dfc6-49b3-9884-b492994c131c"
        },
        "item": {
          "id": "1f282158-5664-47bf-82cf-9cc600f11a4d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "67ffac7f-35aa-409a-9587-475e0952fcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29d38e3-59c6-493c-bdbf-531c35b43790",
        "cursor": {
          "ref": "26f8d8e8-d73e-4b8f-a0c3-aa4f135a021f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6b6cc7ee-b22d-4a31-8ea3-9fd6fb1e362f"
        },
        "item": {
          "id": "c29d38e3-59c6-493c-bdbf-531c35b43790",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "af2ec1e4-2b93-4123-81c0-21f768607e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e9a9d7-8eab-45f9-8c61-07471e83a34e",
        "cursor": {
          "ref": "53c64238-a0d4-4b3b-b031-c563a011ef0b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "36cbe240-ae4d-416b-8e4d-e646bb6205a8"
        },
        "item": {
          "id": "a7e9a9d7-8eab-45f9-8c61-07471e83a34e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0d44e0c8-a108-40f1-a60a-7fb6e963e634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd1a4d8-cd05-40ce-b218-d5beb897fe38",
        "cursor": {
          "ref": "716e3990-b492-4352-a5d1-c7b2f544490a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "51854e36-c07c-4319-b6df-b3de4029a7a9"
        },
        "item": {
          "id": "fdd1a4d8-cd05-40ce-b218-d5beb897fe38",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2e470628-7356-4cbc-9631-9c9ff7d61c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec62c947-89a0-47bd-a783-9cf4c207f975",
        "cursor": {
          "ref": "cefb0357-be7c-4896-9aa4-35480a857013",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d3651b41-7eec-434d-a7c4-78e655bff10f"
        },
        "item": {
          "id": "ec62c947-89a0-47bd-a783-9cf4c207f975",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4c052a9d-a8e4-4ccd-a010-38e2d759bc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67eb6242-4fb4-4a12-b11f-b839bc940a92",
        "cursor": {
          "ref": "0816ecf7-ffaf-4b23-a5e4-39e0692d816b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cf54b8e9-fb88-4b2f-b356-5230c7af225e"
        },
        "item": {
          "id": "67eb6242-4fb4-4a12-b11f-b839bc940a92",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "81842090-295d-41a7-a375-56d431b76a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67eea1cc-a7c3-42c9-80be-bb118a3e55d3",
        "cursor": {
          "ref": "2c2d97dc-d52f-4634-abc4-a4ceeef1b993",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "090e509d-6158-4b1b-ae3e-c1fa5cc19135"
        },
        "item": {
          "id": "67eea1cc-a7c3-42c9-80be-bb118a3e55d3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8dd869a3-c1e4-453f-a12b-d78469d479f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec57e8c1-635a-4e3c-9597-ab2436184e98",
        "cursor": {
          "ref": "f8820847-6c21-419a-850c-af0fa6503567",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "363724ec-cc9d-4113-ae3b-46618f8b2e05"
        },
        "item": {
          "id": "ec57e8c1-635a-4e3c-9597-ab2436184e98",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8818175b-b851-415f-b7f5-afcb8012b5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502ce1d2-8371-414f-9be6-43f69939a85e",
        "cursor": {
          "ref": "b3be485b-d290-4e26-aa2b-48fb9bb10416",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e36562c2-ac5f-4c50-8b54-d30befa379bd"
        },
        "item": {
          "id": "502ce1d2-8371-414f-9be6-43f69939a85e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0b8dd017-f1e0-408a-94ed-5f013a1dbfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ac86e8-5e9a-4f12-ab4e-be3e58a294e6",
        "cursor": {
          "ref": "d40a811e-e82c-46cb-86f6-0ae7a1d5df31",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eace5da4-963f-4c36-a436-d9f5da2f900c"
        },
        "item": {
          "id": "e0ac86e8-5e9a-4f12-ab4e-be3e58a294e6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "83528846-778b-4b22-bbc1-447278778fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f9154c-de97-4d50-934e-7c2e44a320cf",
        "cursor": {
          "ref": "4e138fc2-96f5-4c9b-bb89-9f552b34b5f0",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0b5e0dc9-8a96-4d55-b0a1-bb7fd907758a"
        },
        "item": {
          "id": "f0f9154c-de97-4d50-934e-7c2e44a320cf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6b3a9743-6930-4fb1-9b1e-e3695cb5eccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3134ebfe-fbc2-4d71-89e3-9f83cc90ca18",
        "cursor": {
          "ref": "70fbf854-0881-4806-bbcb-5ddbd573553d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f3f238c7-462d-438e-8acc-a31220c53806"
        },
        "item": {
          "id": "3134ebfe-fbc2-4d71-89e3-9f83cc90ca18",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "656e4e91-4dfb-4c7c-9616-9d2644e4a1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229820db-50eb-4bcc-9a68-ed5c702cd9b3",
        "cursor": {
          "ref": "f6862517-39bd-420e-a78d-cb9a78dd8c0b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a2af0005-56e4-4489-9f22-260ff01f3195"
        },
        "item": {
          "id": "229820db-50eb-4bcc-9a68-ed5c702cd9b3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9c8597ed-799c-4abb-bd2c-ae76add7a59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36dd673-fee0-444c-9ed7-52ac4486f822",
        "cursor": {
          "ref": "e359c034-633d-4d3d-a23e-f17bf27eaa29",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7758772b-14c4-4db6-9070-5c4f2c246169"
        },
        "item": {
          "id": "d36dd673-fee0-444c-9ed7-52ac4486f822",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "de984962-f69b-411c-b907-5cdbb78f0a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a79e47-3338-4510-8f94-02b7477ba4fb",
        "cursor": {
          "ref": "339aeae5-9763-4862-95c3-b089bfb2295f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f9507fdb-dfd7-4f6d-ae9d-37182e823638"
        },
        "item": {
          "id": "b2a79e47-3338-4510-8f94-02b7477ba4fb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3aca3504-357d-4139-a764-f8fd54357c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d4e0d5-38d0-445e-b3a7-2587075ce8b8",
        "cursor": {
          "ref": "56447f36-1f40-4d21-95e3-6d9341ca9c9c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8dd14df5-87c3-4f6c-801c-24ed00d154c3"
        },
        "item": {
          "id": "c6d4e0d5-38d0-445e-b3a7-2587075ce8b8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a652dae0-a67a-4e2c-853c-7fcf151dcd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6117cf9f-d45a-496d-b15b-9e378f3c173d",
        "cursor": {
          "ref": "462a744a-b668-47c3-950e-20955418de30",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e7d45b23-6c0e-4f0d-abf0-cb6e8998c6c5"
        },
        "item": {
          "id": "6117cf9f-d45a-496d-b15b-9e378f3c173d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9fdbca60-b333-42b4-add9-e6bdac4f3457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195e136a-12a8-4be3-9a56-194a8a5772de",
        "cursor": {
          "ref": "ef5c9e31-0c88-4737-8681-6e0ff2c62478",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "866dda7e-2a68-4f96-86fe-306ad60a6e2c"
        },
        "item": {
          "id": "195e136a-12a8-4be3-9a56-194a8a5772de",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ee8939c0-3aab-4273-aa42-a30a8bb5a2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63143035-bf02-473d-a3c7-c56cd1239eb6",
        "cursor": {
          "ref": "69f59427-c867-46ad-864d-f17b29ffb7ef",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6b6bd309-39ec-4c31-ab11-101f9ef6dd06"
        },
        "item": {
          "id": "63143035-bf02-473d-a3c7-c56cd1239eb6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f84fc683-7f87-4578-94bc-df8949d95235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0930e5a0-7d5c-4bec-a1e4-a0c9942d58ce",
        "cursor": {
          "ref": "40bb9c74-89d8-43e7-a26b-12272f2c2896",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "687a98be-c61d-462c-8973-8f88743f1f14"
        },
        "item": {
          "id": "0930e5a0-7d5c-4bec-a1e4-a0c9942d58ce",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2ec5f84c-85f2-4c4b-8e3e-dae878f99a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c355768-22aa-42d3-afe0-ca5257b08284",
        "cursor": {
          "ref": "877a4e60-0e9f-4477-81f8-85000afc9482",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8bc3fb64-1200-48d2-943b-43ae33e03d57"
        },
        "item": {
          "id": "0c355768-22aa-42d3-afe0-ca5257b08284",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9d2519dd-9ae6-46d6-86ef-dfaf9a579ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcaa006-07eb-4321-9cb7-65ef6ba91d6f",
        "cursor": {
          "ref": "5e1f1de7-a0db-41dc-a6b1-f8b8f425c6d7",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "912725ee-c927-4825-8cb0-51a3a12bb420"
        },
        "item": {
          "id": "9dcaa006-07eb-4321-9cb7-65ef6ba91d6f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dfaad256-df6b-4ddc-a161-95903ef03f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21403fd-b8aa-4d56-b2d9-315a8a057358",
        "cursor": {
          "ref": "323ae0b9-eca9-48ab-933d-2540642ca492",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "86ce5d5c-64f5-4906-a94b-6b7db70686f1"
        },
        "item": {
          "id": "f21403fd-b8aa-4d56-b2d9-315a8a057358",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b8ff9c4a-ae27-49d2-a671-93d44e0827e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4964ce-8562-47fe-8d0e-853690185c0d",
        "cursor": {
          "ref": "53968fc1-7e5d-45ee-82a9-c6f1c788d704",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f281a788-3ea9-412a-9b82-a8e317b3fd8c"
        },
        "item": {
          "id": "4c4964ce-8562-47fe-8d0e-853690185c0d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a0f6da20-a38e-4371-9e3f-d3d98710f4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e61377-0087-431e-aa6f-76d7aa3ee0b3",
        "cursor": {
          "ref": "bfe7793d-19c6-44d1-9e25-9dca7b5372db",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b2a8b3f7-3a32-4882-942e-3bfe5f08a91c"
        },
        "item": {
          "id": "92e61377-0087-431e-aa6f-76d7aa3ee0b3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d7df9afe-84b6-4a25-8c96-e8e051e2e60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0ab0c7-8994-4824-8b93-79b2bf83b4ae",
        "cursor": {
          "ref": "7d91a5b0-443c-4951-ada7-fcf4e21896ee",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "96ef5f31-0db2-46c8-b579-915fb5fbd005"
        },
        "item": {
          "id": "3f0ab0c7-8994-4824-8b93-79b2bf83b4ae",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e9daaee2-e903-4570-92ae-7d34448b7c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150f6b0a-375d-428f-b2ca-c0ffb4cc0098",
        "cursor": {
          "ref": "0b83a7b9-72c0-4ff2-96b1-7984fda0a66a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ac14efbe-d639-4c6d-8a59-5190c0988921"
        },
        "item": {
          "id": "150f6b0a-375d-428f-b2ca-c0ffb4cc0098",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "66ce2882-00fc-45cb-9d16-9c0207e3990c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cfc579-512b-4987-8bfc-0c09ee8d3c89",
        "cursor": {
          "ref": "d76c99f9-b6d1-43b8-8005-0661775dc18d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c14626e0-6e8e-48ae-9ce0-333ffa2555a0"
        },
        "item": {
          "id": "29cfc579-512b-4987-8bfc-0c09ee8d3c89",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0c3d9232-8993-4c45-8d8c-2bcd8a6f4ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26147cb5-a2d4-4459-8ab6-a505a953975f",
        "cursor": {
          "ref": "1718dc99-7458-4870-abe7-37acbacf4159",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fa6b17a7-d4cc-4b55-ac7e-2f06e5656ba6"
        },
        "item": {
          "id": "26147cb5-a2d4-4459-8ab6-a505a953975f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "348c8800-7090-4214-9af4-730b74977165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03366f2-7977-41e4-a32d-853426c84d56",
        "cursor": {
          "ref": "729ba7ce-2d4b-406b-94ad-9d3368308f9d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3886258f-f1a3-4867-a887-2ad103f6ab8e"
        },
        "item": {
          "id": "f03366f2-7977-41e4-a32d-853426c84d56",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2e7d9306-fc93-4fb6-bdbf-fd7eb79678a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54691820-070c-4611-8d6c-35ddc14cc93b",
        "cursor": {
          "ref": "9d2035fb-77ff-4292-b8c5-9f2383beeac4",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "71a8d2bb-73ac-4587-8208-79610abc6be4"
        },
        "item": {
          "id": "54691820-070c-4611-8d6c-35ddc14cc93b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b5ca50ac-aec5-4d3d-a182-d9e8f94786ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e30d1b8-3bfe-4b9b-8a9d-5919ce9e3731",
        "cursor": {
          "ref": "3f98a0a0-63b8-40aa-9939-98a8b079311c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e650aee1-9e93-4193-ac80-c852fd9e9b68"
        },
        "item": {
          "id": "6e30d1b8-3bfe-4b9b-8a9d-5919ce9e3731",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c89787e1-6636-4509-a1a1-fa9eddd0d3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac94a19-b148-4293-86e8-313c2efaeee6",
        "cursor": {
          "ref": "662dd6b1-8760-469e-9bb2-bffac95b8389",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ca1cd20a-6e7c-468d-abd4-b3fa6e500615"
        },
        "item": {
          "id": "fac94a19-b148-4293-86e8-313c2efaeee6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b1954013-63cc-4dc1-9f94-1729f6f170a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dd9818-9aa7-4267-a334-67cf8a51b148",
        "cursor": {
          "ref": "73a0b072-d333-4139-b7c9-d5a5d75d629f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "99182e28-fdf8-4eb4-8e2e-36105676d7b5"
        },
        "item": {
          "id": "44dd9818-9aa7-4267-a334-67cf8a51b148",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b9beac54-66a8-4c92-b00c-f1aa9d695ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07e431e-1551-46bd-989e-f27ad6557f33",
        "cursor": {
          "ref": "964779b2-b2cf-4225-ad80-d4c0268c5cee",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b36009cc-ed45-4b7c-9858-0309b62edd53"
        },
        "item": {
          "id": "e07e431e-1551-46bd-989e-f27ad6557f33",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e44ba4ef-3402-40a1-9e62-1c42b5c906cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f837d2f1-0e23-4aa4-8277-093df1312b9e",
        "cursor": {
          "ref": "916128dc-57f4-40ec-805b-ad213a0da34e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b0370940-336f-4fc1-8fc2-544d5844c8de"
        },
        "item": {
          "id": "f837d2f1-0e23-4aa4-8277-093df1312b9e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eeb55fb8-c056-4440-80a7-e3f0177be86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e9bb2f-ad83-47d8-984c-21e0bbda1bfc",
        "cursor": {
          "ref": "29cb70e4-72ac-4314-9687-70ce1d7a406d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "caf0efe8-fe6a-4086-8b0c-119e729f9e59"
        },
        "item": {
          "id": "c3e9bb2f-ad83-47d8-984c-21e0bbda1bfc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1ecdae02-eb2b-4518-b350-c11221de69e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc76a16-0d98-4cce-9abd-0c6935fa0def",
        "cursor": {
          "ref": "52b26785-3483-482a-b217-90cab3d5a986",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "89b25074-0ca6-4603-8532-29a7243af0f4"
        },
        "item": {
          "id": "ebc76a16-0d98-4cce-9abd-0c6935fa0def",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bc62ea8d-5fb8-4d52-975e-ad28add6077e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e1be42-1692-4e64-8650-b62eb5f8b9d2",
        "cursor": {
          "ref": "78158194-073e-452b-85d7-724871b2f73e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0ea05f42-9df9-4c80-8d40-08f2248b8fa2"
        },
        "item": {
          "id": "05e1be42-1692-4e64-8650-b62eb5f8b9d2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c38e70cb-2dd3-4d2a-965b-9d0e76486da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6435509-5654-4be8-9905-5601faa73751",
        "cursor": {
          "ref": "8e8359a0-f181-450c-b0fe-5f1e49a64ddd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "178c5288-4392-40a9-a9b5-6d89019116e8"
        },
        "item": {
          "id": "d6435509-5654-4be8-9905-5601faa73751",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5ce8fb83-c888-46a4-a0cf-1b4567e68b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76743502-9f56-452c-86e5-c687eccf11d6",
        "cursor": {
          "ref": "205398ab-e8c0-48fd-b780-deeefb150beb",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9e21912a-ae52-4f9c-aa8c-0f167b32a96a"
        },
        "item": {
          "id": "76743502-9f56-452c-86e5-c687eccf11d6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b24fe28b-0536-4370-96a5-456e58e8f679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8a95b3-f262-4254-85fd-cfd626137274",
        "cursor": {
          "ref": "2f1a8118-1027-4d3e-bd12-94930cbb8fe1",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "76048cab-331a-4dc4-a9ed-3cfe345bdd90"
        },
        "item": {
          "id": "0f8a95b3-f262-4254-85fd-cfd626137274",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6253bc36-9aa6-4223-a5bd-40165a28eea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e98dab-3dc1-4733-b56e-ee8a5ecef859",
        "cursor": {
          "ref": "b423b305-6eeb-4b15-9e28-fba46bd5d8d9",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ef3a20b0-a635-4758-a16f-93c143cf6213"
        },
        "item": {
          "id": "68e98dab-3dc1-4733-b56e-ee8a5ecef859",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9da8a10b-1316-4410-9409-a5c87b6252ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f44edfb-acc4-4331-92ec-43964676aecc",
        "cursor": {
          "ref": "feb753ed-7658-46fd-9826-623dca2c7efc",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1b2ff7b9-3678-4966-b575-51cd3a827a6a"
        },
        "item": {
          "id": "4f44edfb-acc4-4331-92ec-43964676aecc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1378cc78-b767-4586-b6b2-03da8c0f7154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55e899c-8cef-4b70-98d3-1ce12832b6cc",
        "cursor": {
          "ref": "a07c2963-b402-4c1a-9260-2454eae8b87e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2051a199-4806-4ed3-9431-e453b7bcb38d"
        },
        "item": {
          "id": "a55e899c-8cef-4b70-98d3-1ce12832b6cc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "742afa34-b4dd-4c85-8ed4-6c62a1b6236d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956476f9-14be-4c3e-b003-409348e6b011",
        "cursor": {
          "ref": "a858d1d9-068f-4342-bbe5-8dca26302234",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "441fed87-c27a-4439-91fb-05e72ba8a205"
        },
        "item": {
          "id": "956476f9-14be-4c3e-b003-409348e6b011",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ac93c343-edd8-46b6-84a2-405b388cabd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1273f18-11d6-47b1-90f3-ca543d5b6170",
        "cursor": {
          "ref": "1c76f1fd-0105-44c1-a56f-40f3aa3b8f08",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0ded6193-96b8-41ec-9bc5-c601d6236229"
        },
        "item": {
          "id": "d1273f18-11d6-47b1-90f3-ca543d5b6170",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7a5aae66-943f-48b6-8b4a-435ed2ef7cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa33208b-0cbd-4794-82ad-21518e9f3a62",
        "cursor": {
          "ref": "0982877a-eaab-428b-b37f-c60a51fa4732",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3e7cdc62-7ab8-4f9c-927e-589fe8b919e5"
        },
        "item": {
          "id": "fa33208b-0cbd-4794-82ad-21518e9f3a62",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "faf0e0c9-eec8-46cb-87fd-ca865a0ee89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50250ef-f728-496f-afbb-258a66e2ab3a",
        "cursor": {
          "ref": "f723d313-2150-4bbe-8eb4-378d140cd973",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4d1d4eda-1dce-4d59-a399-a226fbb94ec1"
        },
        "item": {
          "id": "f50250ef-f728-496f-afbb-258a66e2ab3a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "099fb082-b2bf-41e8-9d8d-861e8a35c1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f3d4da-d1f9-430e-8966-ee91400e090e",
        "cursor": {
          "ref": "9a2d7bcf-2eed-424f-aa2c-3d49aa901dd5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fd7a258b-81ee-4d62-88d7-47ec860b39c4"
        },
        "item": {
          "id": "b4f3d4da-d1f9-430e-8966-ee91400e090e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "94d3c76b-69e2-4b0c-9a39-8407ea3fa70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "abcd2a3e-9f60-4aa3-894f-225e97cc232b",
        "cursor": {
          "ref": "43aa0e8a-0fbe-4f3d-8fcf-fd49cc0d61e2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a1fa091d-0a74-4371-8ead-98e240556a65"
        },
        "item": {
          "id": "abcd2a3e-9f60-4aa3-894f-225e97cc232b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cdf561c3-1e27-43f4-9261-7ae0ad6d6fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "0dce8136-ca11-4e95-b7a2-50014428c195",
        "cursor": {
          "ref": "4d1ce9c2-6fc9-436a-a856-baa2bb59bbd0",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "95344539-4f80-4987-9d33-d2bf267e413f"
        },
        "item": {
          "id": "0dce8136-ca11-4e95-b7a2-50014428c195",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5e5e236c-a804-41bc-abc3-ce0a3baf82df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "cb47320e-a76d-4a4b-a6a5-0752a36cdb2a",
        "cursor": {
          "ref": "565ff035-d3dc-493b-852b-e3ad93927406",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7d479da5-a868-4266-9a6e-31b51a574825"
        },
        "item": {
          "id": "cb47320e-a76d-4a4b-a6a5-0752a36cdb2a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b30dddde-30e2-4206-831d-f5009d7591b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb47320e-a76d-4a4b-a6a5-0752a36cdb2a",
        "cursor": {
          "ref": "565ff035-d3dc-493b-852b-e3ad93927406",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7d479da5-a868-4266-9a6e-31b51a574825"
        },
        "item": {
          "id": "cb47320e-a76d-4a4b-a6a5-0752a36cdb2a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b30dddde-30e2-4206-831d-f5009d7591b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f296bfd8-eb51-4927-b7bd-eeecd73243f0",
        "cursor": {
          "ref": "00a37e13-ec3b-499d-847c-74a681b2db06",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fc549d32-20a5-405c-bc02-03b555c921c2"
        },
        "item": {
          "id": "f296bfd8-eb51-4927-b7bd-eeecd73243f0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f19abc85-bf55-4138-b6df-caa8b61ade26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60511f0-2340-4f69-8b07-2665b66d6b88",
        "cursor": {
          "ref": "47598ec0-86d0-4d9b-9032-f9a877114d40",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e8abf55d-cadc-4135-81da-08b3b116283f"
        },
        "item": {
          "id": "b60511f0-2340-4f69-8b07-2665b66d6b88",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e7290f0e-96fb-4713-9bce-de4631380d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}