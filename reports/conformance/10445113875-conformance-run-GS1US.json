{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "47651a66-3a4e-434d-8ba4-47a5c253e0d2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c7072b7a-5f06-4a71-9e5c-1dbea05710d4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c9098df-cbf2-4ab7-9171-fee5149bfa82",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "78c2d518-f012-44bb-b3b3-b87675e17b57"
                }
              }
            ]
          },
          {
            "id": "ac14c4c7-7464-4736-82df-67f1e635b62a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "492b0c96-aa93-4a7d-bf5d-2bce9d58185e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28645730-d814-445e-949c-2ca17b6864e6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "483e561c-110c-4c58-aa65-dc589c710654",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b8d6cca2-c24c-48b8-ad01-05db15b80249",
            "name": "Positive Testing",
            "item": [
              {
                "id": "278180d0-8f22-4e72-8d72-542658ed6504",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "873819dd-b9ae-4f9a-82e2-bba19e3fc3f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73497c56-95e4-4b78-a83c-34781657cac5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "881876ce-78ed-4e5d-a82d-79d4edc6d6dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca0dcd35-7f45-44b0-a39c-c12baee6394f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ffdc6a5f-1cdf-4730-8668-32f77ce2f75e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc59fbb5-8ef4-4ad3-b731-3a2601db2e9a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87181924-6162-46c8-b725-bc7054fb24c4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9c80e1c2-02b3-482f-b561-88cd523bf19c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43dc285b-0e5f-4be8-9603-afedd92d45eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe46f8d5-7bd2-4680-949a-4af150bfdd19"
            }
          }
        ]
      },
      {
        "id": "3cffdcc4-3b97-4eec-9ba7-ecde5b15f9d9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0e671262-ce6f-4c06-9c95-d35199d5775f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcf2268e-7140-4a96-9b25-1f99eee20c4e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "97e07b6f-fb53-4135-ad53-df2c0e80c7ac",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658a681c-4289-4f1d-b499-ec72904c3c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0adf983-4dab-4b2e-9049-88abcd0fadfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f15824-a887-4095-a84b-7b827349e064",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9806f94a-fdeb-4179-b74f-54829dfd6a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07e7750d-6f31-42da-98ba-02a9186aabcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c19c31f-b37d-4190-88b2-7ae9578a38fe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9489c8-79a4-4da9-bf0c-62056ba042e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f6a35d4-7b3b-4126-9b2b-f5f380fb6160"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "973e31c2-60aa-479c-92fe-e602337e182d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4f11b1a-5216-4978-907a-cd705295885d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cc1434-cdad-483d-aa73-5abb0254d77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf3aea19-bbff-4512-bfdd-1c4626840448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216e6c3e-33b7-41cd-ad2e-044a781c67c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb0fd13-da52-4283-b2ba-1a99d5c101b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f50fb00b-9c03-4115-ac69-07796b8d5cdc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d0af60b-fffd-4726-95f6-29b7e0aa1dc4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa7c7ea4-e283-4581-89cd-399923fdabeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5ee98140-d655-4675-9b97-529ad745e9cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfdcbead-d0a8-4209-ac3f-0f278278e68d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "943dc5ef-ca42-4528-a176-fb5e62495199"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8e67eae-4f02-429d-875d-aa295166c8d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc6fe963-d082-4452-a013-6e2caeae0f99"
            }
          }
        ]
      },
      {
        "id": "a3f43a7e-00b8-44ae-8823-5073297cc4ce",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "97025e42-122c-4c34-adc3-1fd33b6e13ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac2b03db-300c-45bd-b85e-b4ad0b8314f0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3b692978-5f4e-4bfd-b3dd-fae93462770a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372e1dac-c07a-487a-98cf-cfbf50f985a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d536fb-d265-40fe-acb8-7740dd58ebda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be82cc17-1de1-449b-84cf-716f1d8f8ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bba45a43-5292-430f-9e1d-19406eba41ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61156afd-cb27-4719-beac-7f9b7b7ccc6f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9354f3bb-d4b5-454e-a667-b181ade3ce4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269c5935-24cf-4637-82dc-0c12f1bbec64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c2c61b-9c4b-468d-bb3a-1e8d7a3b00a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7acad421-3349-4007-838e-bdf28066ff29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b85519-c293-4666-b661-e69cf7def25b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eb3365-ed38-4ef3-9f5b-9c14bc7b6ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af5a234-f469-4998-ab14-43c1c8cd6ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e020240b-9934-4913-baac-d9c469149f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d01dc863-b5d3-476b-8332-75fc2ed74df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afcb45f-76ca-47f8-90d1-e82fe7359639",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d9461e-6c5d-4218-9d19-b46650e1f494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d93afd-b998-4c11-ab4d-348cccfa7737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf9cb6c-afa8-40d9-8ad1-2f67556de833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c18c22f7-e18d-4641-aff3-40783f99a258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d55a065-a370-4117-950c-61ac621ccd65",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41321f6e-31d6-4a2d-9c18-0dde9798f08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53203855-d636-4eda-8d0b-6648fb1c8423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fc68bc-5d19-47d0-93f8-bfd4349bd2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e260e411-8b2a-40d7-a29a-f6ba22adc612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48a617c-b321-49ea-94e2-45e2109a24ed",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1cb54b-828c-44c1-a39d-87e9e6a4718e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0692d866-f12d-497b-934e-4961509e5700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c90955a-9f31-4a78-9876-c65b9525074a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a7a81db-040d-45b4-830c-23e04ff5b59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60283656-5966-44e9-b187-a1990b216c9e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26299f77-3809-48c4-9124-10b01197ca0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3525639-389d-41ca-ac3c-3e21dd7d4b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c80ab6-ff87-4a83-bf55-18413c6214ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51c0648b-d4d9-4ad1-a953-247e142474ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211bd7b3-48d1-47ae-b0d4-9159cfd455aa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1173ff-9436-4e2e-b87c-2af3ebba667e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cd311f-802e-40c9-8cb1-9646fbc83f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cfc19f-773e-4c32-aaf7-29c5779a770e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eaa5e12-9d30-4431-a8f8-d35a9aed1a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ec7dd3-536d-4245-848c-2b90902bb079",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c587cce-2d52-4137-9e44-ad728b77f20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272d56c0-96d6-4d7c-9dce-398089e6054a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54e7eb2-8ae2-487a-b918-2f3b5feab969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6113d8d1-85ad-4381-9dea-94830f82e1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8898eef3-1143-4552-9259-88c7073f969f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf15533-00bf-4340-bc5d-5d61ffed32bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d91ce8-1c44-4725-8de0-2b2d8e96377f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ce839f-e4a2-4414-8304-16d545f3bf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2e0237a-8238-4bc2-b8ba-81a06926d781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4bd577-36f4-4389-8a8b-b9e964a8f72b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7569bbd1-d006-4370-9621-d8a96b3f9dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9ac96d-0af3-4472-a470-9bc1d3e6ae4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb9697e-567c-43b0-a251-f8ec77a707ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4e4342b-7bc8-408b-8310-050b0bea4002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9bc6e1-4d2f-4caa-abb4-2c8ffeca2200",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df5efeb-5f5e-4502-9ae8-476551564152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fad62b5-6c4a-4846-9913-7942c1aebfae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d2317f-db6f-4787-b285-4575a233affd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d633d3a-7945-477f-9d07-f0d71fb30117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ccd918-1aae-4e33-81b4-15d18c663ec4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d922427-c586-49c4-8312-47284307580e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aced4ffc-0e08-45bb-9d07-e8781c18bb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e70f42-459d-4b2f-86b5-30472fb2fd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "174a5892-c30f-4523-902d-624f49ad1753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840c764f-1be6-4570-859b-dae6141c2b97",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e76d4e9-944c-4ce2-b3e1-2c2b74f45882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2883770d-023e-4bce-8b4b-cc933c050f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c115e885-4a75-4e62-93f4-3346caaa171f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83b1d775-6a20-48b6-bc5e-c0aea7b9ef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b772fa96-fdae-4eef-b029-bf9595d1b9aa",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03189aec-5dd5-4aa2-9cda-add8c028cc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebc046d-d9ab-4e7c-ae15-2896112238c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db82de3a-1326-4363-8de5-3b567c1dca48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "629afa42-7749-47c6-ad5e-d70b89453a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747c9a0e-27df-46d2-afd0-205b2d95c899",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1e6e2e-07a1-4b9c-b729-34365ec6b6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3930cf2d-bfbd-4565-9fcc-2d5824283816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c56764f-865f-418a-aac0-31c32cc5f81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d0703ee-4055-42be-92d0-02481c985ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57a9cd9-4205-4c50-bd19-c81f08befa6d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f5437b-5894-4a41-8e15-9878e07e4540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadeae82-4f21-433f-a9cc-bb08422e520c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e537e7d0-fffe-4267-9e77-3952853cd93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5579cac2-1df4-4b70-ae9d-399e878f3641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d37cd28-1278-4a68-9642-f0ff19860927",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca6c589-b090-43cc-b9ad-ba484b871b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96025b8d-d316-486c-bc3b-c5f6ff043489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcdc95f-a6c2-4bd5-9ee7-4e8a730315c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "51fc276f-433f-4188-8338-3f960ac1493b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc49247-ee8d-4caa-8dbd-c173dbbf569a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddb8a40-f0a6-4fc0-9761-882c3e52e023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c47096a-b938-484d-b02b-1f4fc336a3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812e1f92-1b67-43e7-a507-7372a3418632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcdc011-431f-4ba8-8a8a-8e7f627b4e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ee986c-e3da-4a23-b54c-ec22972b8f5f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0964b346-1891-4714-a88c-9799f6c83cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e417559f-baf0-40bf-af10-c4c1a4bc8376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7222a141-ec4c-4338-9bdc-b84dfa6eb552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d38fb539-a9e2-4aac-8f07-611356dc17d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fbb3f0-0519-4869-844d-9b0f9ebb8d67",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7213d64-5f2d-41aa-a8a6-a10dd53ad98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb775ad3-2f42-473a-9b83-b900fbd28e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804a7e4a-959c-4a5a-8fbe-9ecaba834702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0158bbbb-7e3f-47a5-ae4a-ec2c65ed0c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f081e51-f8b7-45a5-be7f-2b3b20798e79",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a82719-1574-4054-ac29-9ab3c346533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92032cf-fa00-4b30-acde-a223ca1995dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2bbc83-32fb-45a1-94aa-7a686008c7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f87a20dc-2c25-40cc-9c8d-65777ef6c959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e04fe5-6c68-469e-8992-1050bf7cbbbe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d6a21c-5c18-497f-8e40-aeac7fffbed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3da20d5-3dd4-4a75-847a-fe7918b8a0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa499660-0c04-4b7d-aef7-e9ef94713c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c80095e8-a922-4c62-91fd-eae093723f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f05e21-8f93-4fd7-9036-f91be9fb62ad",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277e9705-b8fd-498b-b912-fa8d52e8b7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fbed6b-db9b-45ab-a72d-dda25d07bf71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73d59a4-b1aa-4fda-aecb-27fe287aec4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "771ba79c-3110-4790-84e0-8e687215e117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a07f598-d231-4c65-9ede-a022ffce439f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2964229e-1ee8-40b5-b8e2-00f26fe4842a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5d50dd-f57a-4313-95d4-73516001d9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b48ee9-87da-480e-bdb4-dd5405728ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36636448-d955-4d4a-bef0-302c2ec608c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adee9652-8560-4a6e-acce-f3aa6049f88a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573fb385-6549-4e33-97af-d67add954f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2f4d5d-169a-482c-84a5-c54f0ec7b624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6c7d61-458d-4698-ac15-47104bf47a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e057c0cc-2123-4c6d-a011-28726e234535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae690020-ca9f-4af9-ad56-731009c6cf59",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c1cb43-d69a-4049-be13-469794e1a082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e149b41-c361-4b0b-8c03-f4cc6b7df015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4afcb4c-fb9d-4c8f-82ba-306825c8c991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b551fdb9-9278-435b-a261-10b5ec79a6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0e67fb-c9e4-4532-94dd-936671d45f3b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9b7dc3-d84d-4409-8766-13baaf843d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f0ab79-d86b-4b85-8592-9777b1d5cc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc04b1f-e28b-452c-be93-9bca7a75a3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "533501b5-0f8b-4091-a73c-597c13e12653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d89703-00c9-4fdc-955a-1ced1b6d18df",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2b160d-0771-4b54-8612-3634a0bb6edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff4104c-cce8-4840-a0ab-77f3062f93f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f4f742-7453-41d2-9d6f-eda30034ff55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1004ea2-aee1-40b5-92ae-09646dc9aef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a67b272-5777-462c-935b-135818d94951",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04735e3-cb76-41b2-81c1-e9e591aff042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413fc6c7-8323-4727-8f9d-8452ce1425e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6822ddad-8070-42bd-9fc3-5684e354a5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0a69ec-c761-4574-ae18-4e37be740799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c6129f-e3ae-4953-9bde-afa071193299",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0433e2-615c-4894-88ec-e7d07339cfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16188a36-0401-46a5-a24d-6168669bd91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1a5935-0ad7-48e6-aa7f-94084b34f9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff809bbd-71c6-43e0-95e4-969e353fb837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5554a1c-6ddf-43c8-bcc8-db558457ecdc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b16cfc-551c-432a-89df-63d428da0ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113965b3-1216-4c12-a4cb-2c90653f3667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50f4854-479c-4623-a804-9bfd915f4a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d01e8f-282c-43db-9bba-86470202a140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2de6e00-c977-4a08-a6a3-3206072edae0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bd0f2e-f15b-46ee-80de-834434885cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b9b969-602a-4693-80f7-67f4df561249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740a0320-8920-4b6d-a124-06d827cf23d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af37040c-7c76-4767-ab46-b804378bd188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76626cb-e8b1-4e89-bfb4-27cf8c8b7393",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4713bfe1-43d4-4fb3-bd13-cfc12be423ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97eef5f-e85e-4ea7-9a7e-a6514b1a618e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefcc64c-7134-4543-84e1-0bb6605cf006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7b926a-82c6-4b9b-9efa-7764a6e39338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662a943d-4d95-4314-9a65-d0cf4ce62a54",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb276bdd-121e-4cc6-9517-4c6fd1e5ea26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fa0a35-bdf1-4fae-abdf-42d319d62c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1615698-7729-45a6-8058-2fa4c41a818f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "34172e9c-3711-43db-9115-6bb95176d4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cc5351-d737-4b84-b7fb-a41c226f6d23",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8963a2f-6215-4e74-b552-a35ee78a3e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb5c2398-8d83-4b9b-ad94-8489b6f95c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cd2297-20b5-463c-a4e6-9097dd754f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa022d0-28eb-48e2-bec0-2dabf764f697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ad03ac-3b7f-4b6d-99de-e5a7ff6ff6bf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed59d786-294a-466b-92b5-0db2f328df23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b39205-a63a-4c8e-aad9-9fc4bfc47848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afe6ebe-a55b-46cb-8102-244fcd9b7382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a48553c-3c4e-4ee8-888f-34a561b5e5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1d3481-96ca-4696-b95b-e57558342193",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fef0cdc-a914-4fdf-926d-ea5069483ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3523bd-03ac-428b-a26c-5dcd5dd42ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eec8c9-1de6-41db-bffa-5a2ce53193e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1feb844e-4ed5-4373-b5fc-5bede5008b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3110b7d1-7479-43e8-b511-0dcb59466af9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57b82a7-103f-41e0-8d3b-ae05ab16914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5856b00-fec2-49af-aada-4c68b642bd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6238bf-e7ee-4494-b8c8-d14e101fc374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "01a1adf4-dcdb-409b-8607-9ca3a8cfe8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dba62c-ce43-4abe-998f-5d5d1d0c3097",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2948a7-1bc5-439c-954b-aa96b7664ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734e5377-b215-48fd-9b3a-0381bb8974e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97de32d6-7ab6-4f3f-87d6-ea77addd5430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f823af-f1f9-4ef9-9915-e0e51ef9391b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb92b3e-7117-4e12-bba2-95ce564113ee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d6608c-9654-4633-a674-fee4e0188add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45105f7-5cc4-434c-a2fe-51ef333997d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1c74eb-a7c9-438a-ae52-ec8ff565c0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ace06147-6599-4d12-ae5f-85a084652092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bb0424-4b50-4681-a7b6-6ae205a6c3a5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca05846-71a9-400b-84c9-18d1d3a46a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92fc53a-506e-46ea-b218-be8f9ce580c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d00e4fa-eaa7-4acc-aa70-5506730df8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "18233431-a356-43e8-8e57-60ca938ea9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee25025-ae61-45d6-a588-d079cfe112e9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681a6eff-0861-4a97-984d-ef11d8924ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2cd6c1-86f5-46f9-8432-dbeb237ef182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccd1ba7-a16a-4118-8fbf-e5cb3b8b6b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6d2698-17b2-42f7-83df-448cade7b6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737120c1-dde2-44df-92c4-44012c09258e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c41a8d1-41fe-42d3-8b3b-d55f2d456ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38e5c99-0318-48f3-9c7f-fde2921ce7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8177248b-8488-47a5-87d7-32253d4265d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e46e02c4-a0bb-49bf-b1dc-d85562702219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bd8f1f-240b-4d81-801c-0d6291d0bab4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff6200e-5ca2-401c-9502-590a39012d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b92552-8115-458f-af9e-8a18d9b30242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b012f234-9048-4a6d-bbd9-3acfe37047cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "788e3cd1-7bbc-49fc-ab53-d3a0a3622ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b976dd-97f5-4232-b427-1d37a33f716e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1155933-1d38-4979-9c47-9e799238b4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6185e282-3c4b-4935-8139-6ffbd67faa57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42a7fa1-b634-473d-8106-5cbd2e02bc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "458046a6-0ce8-4be6-bb52-854ed97f4384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b506c8fc-ed48-4a5a-bc58-779f4e3d90fe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb729afa-2eb6-409d-b44f-6cea4e108892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d817b445-45db-47b6-a578-5d971f613eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ed4b43-2a46-4946-a9e5-e3e615e98547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09202a8f-dc65-4177-bc2d-3406b96b2ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a92f901-6b4f-4d67-8df0-e6ffec1c11b4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58d4977-434e-4931-afdb-f17b38a0e86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad71467-a8a7-4e5a-a44b-b7f32c156b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a02df76-3e44-4485-b88c-e10deea2e797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35daa4a7-3726-445f-a799-b9ef3b8bbfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e691d4b-b046-4476-9957-052603b1e683",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaabfe8-75a2-40fe-99f9-557178ff0f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95aa38d-e3df-4cb0-b8fa-4cdca7f231d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a05e9d-f569-4360-8244-6e1dd3c7220f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "510b9ce1-667e-425a-955b-03f310b3072a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8628459-beb3-487e-9daf-c7397cc83497",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daec3fa1-6468-4063-a149-4c0a59bf0440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525c8197-9d37-43d4-8f0a-6a574a439f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b66413-e40c-4364-91b3-43a603a264e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "521d704f-ddd7-4909-9d94-021e54f2fa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773e6ed0-f196-4512-87c7-f626a2fd763a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a222b7e1-024a-4b3d-ab8f-fb14d7231924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7039f483-57ba-4cb1-854b-de1277d94d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601035da-bc08-4be0-938b-96a0bcb6af17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b07a1b1f-f61f-467a-9f87-196ef3614919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e929aff-d070-4630-b186-cbc045ef15e6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b133c732-e5d4-41f2-9f2c-c63de1f22678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02027807-4195-4722-9fc4-ac350104949c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185d4e8f-b32a-44fa-8b10-ac4942a40cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75931812-ec40-4ce3-817b-72d2b9dc7052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9585439-e825-4e11-9484-230e1fe69215",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e14ce2-e097-4831-baf6-0d1606faa225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da54023b-e440-492f-a5a8-5f2ba9c74231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953880c5-312b-4200-a4ac-2b3e196af7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07ce2554-ea84-41ad-b17b-bc3a988a5e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5556c5-1a76-4ccc-bf06-c99a6646a826",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64fd132-e7f1-4f2e-90a1-9a5bbf14638e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014c79a1-addd-4a13-9517-de46481c7571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6042ceae-510f-42f4-96c9-3321cfc19263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc73b768-2d9e-4786-ae2c-7818091a27d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7627659-7f1e-4ab7-811b-69c22b728328",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104054ba-ad59-4873-aac6-695782091c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb152945-7fb5-4aa0-971c-cdd505e2fc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8708db8a-7872-467a-8ad7-cc5687ef396c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc1dfee-8d59-4b17-b5f1-1b9d9c28f1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33091b43-2dac-4c9e-9487-29b5c886011b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016c07c3-f58a-414b-8973-0bb68f68286b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b04ba7-e7b5-45f6-aa60-9a89a6a5dee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5877cd-4e09-4bf5-884a-bde27c33eac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "533d8d49-53e6-46a0-9bee-a4d90bb84240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89794a07-66df-4f46-9e0d-1a0576c54240",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e22935-9e9c-40a9-9085-79d3d42be093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf700d03-4313-4d39-b9ef-979020dc85df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddc9422-b37e-4b19-b306-eaee571f4e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "64c30f3b-9d84-4af8-9524-c239dfd3decc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e3f36f-ef56-4e19-b2db-160c10dc19da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe06e052-6dd2-493f-a32f-00dc7bd10e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5d7098-db81-450a-9502-412be5f4925e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d830a7-ebad-4e55-a297-472e0832b4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84b14563-0574-4ac2-9b41-bb30a2cc48af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75023e54-7306-41e5-8cff-95d915bca135",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f67aefd-3649-4bfe-b724-44fe099d11b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1d8696-9da9-4af2-bf61-1ae3ce16935b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd47e20b-121e-462f-8a00-1de73602abd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0aee79e-4801-4342-8833-6f5e41d4caaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abb073e-6858-4747-8aa6-3754f1c2648b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e3a720-0a92-4797-8a88-9905c3022779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392637eb-f366-4d28-b0fc-4f3eb6de2710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb997679-b83f-4780-bfca-21fc8c3932ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9c31f2-c63d-4c23-a70d-1ec10c26d5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861d8060-68d4-4895-b61c-91de5362bbbc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883d7fbb-27df-4df3-8518-ce6bc1952437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958be8a1-7319-4cb1-b2ae-83dfd9d67cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a888ce77-5fd3-42e0-8706-c190b06153d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f24b18ce-06c6-4f85-af87-41af4612a920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52260ac-0e5f-47b1-b4c0-ebdc1f470d2c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002e6325-0123-4882-88fb-8e5e534cc745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c266e7c-852f-476f-8313-90bfd0e094b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a47578-179d-4457-9e9d-43fbe2dbac53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "533ee6b4-b717-45a1-8924-c24e4b7bbbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620a7ff4-225d-4c06-8569-d65558bf25dd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871a058f-f615-45f3-ab64-a7ca6dc795cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16558446-2e5b-49bc-8ec7-8f03df58f136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7751d0c2-b6ad-4790-94ad-d252d4248f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c921b62b-f3bc-4858-9415-a309a07a6146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614af102-73cd-4d5b-89ba-3a90c23d9e09",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e848df9-1013-4363-99ee-a6461ba07b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f11849-50fb-4869-82c8-c024f2e010bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e674d5d1-dce4-497d-9c66-fc8ac0aa49b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ef8096-7372-4097-89e6-7cceb2d1c05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d8b01e-3a67-4b1d-ac0d-ab720657b7ba",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301ac8c5-0d36-49b5-aaa2-dc00c5fd539f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cec607-882f-44d3-9901-714c69fc6982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e48df1-2f9e-47df-bf71-3a24cb6abefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86802903-c902-46dc-9130-6d4ea7001895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595f6b37-70a6-4aaf-9896-ae963131849f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f407b4-8fe7-4cd8-8375-9f60ca820e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcf2801-f317-44db-bac0-2bef420031ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933e2f4e-efa0-4956-b210-45e2f4287de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5340a7-2135-4e8d-a2a4-9b4b788bc7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df94487-2164-4bf6-99aa-c6b35b551240",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbbfa91-09c2-488d-9675-005d1126bba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c9273d-84f6-44e6-ad7b-da0e340a7091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4870bbc-5c84-480e-addd-3118d9a6a074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b16da662-c54e-4939-9d91-de31a93049c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816d5519-0c1b-46d0-a97d-26d8c29eb864",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465e0ff4-ab75-44aa-aefb-80d0ef20bfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbf8c4c-1e72-4778-bb7d-e6a246483df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e6cf71-2326-4a27-83e7-fb4cc9ab56d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4938592a-d816-4220-94bf-ccea9bd7cf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c067768-3546-48a6-b393-57f51da776e7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b50a85e-b030-4696-8104-ee8d26134479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925801b2-33e0-45bd-a291-445fd14037d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721a1cc9-b34c-40ce-b95d-2c402000cf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "84013e02-6c09-4b74-8be7-ba7c9f4fb49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a274d28-8ad2-47fa-94ea-48ad92ff18f5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dc1e31-02b3-4886-92bf-ca0637193fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98084c02-6c18-49e6-b948-7743403651bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dfb665-c2c2-4deb-8ce8-d112870afbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68cdea6e-6391-4783-a408-5fdbbd6a1722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42f5667-cae4-4391-be0f-d64dae30719e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3b4efd-1425-4310-a78e-6b2649a02eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef24d95-67d0-40b7-970c-5c2022fbcb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb6d99e-59d6-43e9-a4b3-a425017d9c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b647609-9b60-4357-ae71-31ecb9b14c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f653c4ed-81cd-4a7c-b0b0-84cb9ea8efa8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ffca5b-f6a0-43d1-a767-a31bf894e6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b28084-81f7-42ac-9aac-d458b3291304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f270e14-1a53-482e-88f0-921881e75289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c408e52-5cbc-4a21-9cf8-a37f0d9cdb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094832e9-d499-4db3-a601-e9f0dcfd7888",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abd134f-80c3-4d6a-bded-ca6a2c800e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9208a25d-c42c-407e-b30f-a91678192d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0d982f-ab03-4014-9c89-d357deb9d493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4993d3-1572-4f14-9f95-056a3e18a8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240c6671-fcdb-46fd-9748-e4d4840523d3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e31a66-29dd-475f-96f3-d6d15002d1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3955f9-a2bf-49a9-a9d3-04d4f5dc6640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1212675-9318-4ee9-9017-e85f4e30de80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "127b7ad9-08b6-4a81-8ae4-4b9fd266e67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c5fec2-5580-4313-83d0-3fba25ff405b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d541277-08cc-47c1-817b-9bb1ecbdbab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad6e998-5f4b-4158-a7c2-f7b5b1780d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305210f4-f1d7-4103-9fac-83e2a867db17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3ddfed-9080-418e-a405-7a6bb8516631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23911540-062d-4c6d-98df-bdf8b8c43f77",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae13c54-a753-4a14-84af-1f0c4b7ebef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca8f478-2cb8-46ec-bcdf-04e76cc29d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39329cfe-58cb-4304-b962-14c159eff6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec30b46-6371-460b-a97e-3e0eb1ea4dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7fdc70-dd78-4cc1-88cf-4a4b5da0f158",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ba98ef-1bf6-419c-9509-a0de50cd6df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895b432f-25ac-4983-9e04-f7ebdabbeb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0894d04c-c990-4682-83e5-baee17b5221c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a728f9e-552f-400d-abf6-5c9814c59c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b8e4c3-de03-4dc8-ac2c-992bd366ad68",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9b24dd-d593-46c5-8636-4afc978749d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f65643-1244-48e4-b382-11a4f546767a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab9ed65-129b-4ffb-978d-6229b6fa0e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01fa5583-28b9-4a63-9b3d-ee6180458ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480980d4-b0e3-4745-851c-6684e15d4fc8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa869f64-ba79-4ebc-8954-98a097b1bc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31192f24-3b54-40b9-9d8b-68ec8ddfa75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826da3fc-e143-400b-8c8d-9073075c8aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51ed0521-f0f7-4f77-944a-50dce989df2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b417592f-a28e-498a-b262-5d889aa2726f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30818e32-c37b-47c6-9116-c28352758cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8255a2c9-bd6b-46a6-822a-ad9929c32a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01392dc8-2975-4f0e-b987-7153edd6b2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f956860d-a09c-4855-910b-1f3fa29096ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b0e485-ee39-4c96-8af5-d65732b30899",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2e4748-34b1-489f-b593-98e05942d486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c633b77-1ea8-4b0e-8f8d-1384b68dab18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadbe036-95df-4857-beb7-a97545001935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "79792471-f3d0-4e19-91da-cfdbb110fd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb62487-a17a-4c19-bd21-c3d11f4afc07",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a823667c-d56c-44cb-908d-b794e51864cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7519f4-9b0a-4c5d-b3cc-9c8ee720990d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca3f5e6-9afd-4959-80d8-2db106c8efb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5213e73-1562-4bcd-b309-6004b4ed56a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6892d8-9daf-4c4e-9c18-f72a77480c00",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a92c18-355f-4a3e-b38d-d3a19fccdbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e3e5ee-6020-4053-9556-59bd3719a4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8259c437-4131-42dd-8013-b4df8cc3a5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63e7b322-d89e-4fcb-9a94-c542294695b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78731b05-f624-45b4-82bb-78c958aaf2fd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b5ed58-382b-4366-9944-28951137379b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59e38f7-a5b5-4b8b-b36a-59b58d94a085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7352ebc-876f-4603-b1f9-c4d2066d5e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c0c7a7-34d4-428a-8d7e-c635d0e9d89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e05ea3-bb6b-4ef1-96f6-55c02cde51f1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee08eae4-5f2f-4c7e-bedb-c6aff11cc640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ac6a03-d794-4778-becc-e412a494fd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dd05a3-5fbf-4e04-9cfc-cc4cab2da62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b3764e-0c6c-46ea-9c5e-c8d018e82a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b46289-8db7-4d97-93e7-2acc9765b4c5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250865f0-3dbe-4086-8987-5ee34387cee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee99fb04-db33-4208-9e13-06f3f1630e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38970c6f-ebe5-4b72-a2ce-0dbf29d0332a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46b3e8ee-f931-463a-be0d-80e2515bd1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b42692-f2e7-401a-997c-c1d44f174096",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa43bdc8-3609-4b16-b509-7767038718f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5230f366-18e5-4c00-a423-4e1e3d706cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d65567-0fe0-49ee-b1f1-bd88478a813d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0796adfb-f3d9-4d7d-9c83-b51af317896a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678b0e52-a463-4c5a-861b-e5b46b242b72",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f54dcd5-1064-4e56-aa08-b658274f4d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdcad60-a5d6-4bb7-8832-07a6eab0260e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0be1d66-17f5-488d-92f0-c1be58d80aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1d6dbd-4809-4494-b14b-e4e6e8883fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b216a1dd-4bed-4b59-93f5-5cd3d7e2f781",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65c55ad-99d1-48bd-8681-3dd0fa675a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0a3071-72f9-4a5e-9622-b5485dc1a50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2868c50-6442-4c90-83e7-719de32734fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3607a695-d866-4ee8-90bc-226e3e78967a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b9b53b-d2d7-4a5a-9421-bd9a3fad18dc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360db049-a2fb-4b91-9fdd-f1a018a8d3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51236514-d6c9-4c30-a264-99c9be481064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fde7d5b-ecdb-45d7-a687-144280c527f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd89429-bd27-4c3f-92f5-7fde895eae8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b071f17e-75e0-4b02-89e7-cb250cbae03d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551c644f-8315-4dd7-a968-21246cd0d090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a930f229-f584-4a9b-97cc-da386b4c7acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfedd24d-6aba-48a7-9702-fa46b4114622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e845ad8-bac9-4cdb-913a-3b4c3a0c4837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04aa5231-8b4a-4703-bba5-572b21810198",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea84a0d3-6439-42cf-9836-c7259baf9ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "409a7a72-0c4c-4315-8752-315e18bc57e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45d1a98-198f-41a9-9db7-2aa771830ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fed1f0-f38c-4d75-8e77-3d511411f9f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18379637-9ba6-4c77-b1ac-4bb23b5550b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a8ea740-260e-4407-9958-2c2deb4aae21",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce72f063-b89f-461e-bae6-3822af887d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ad88b11-f5bf-4b83-bfe0-ecdf663be267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348fe025-28dd-4eee-85cb-98b5e12ac55f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5de8fb7-25f7-4d1d-895d-665a39268e3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35f5eb33-7c66-4fc8-8632-9ac94d4dc0fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29d05f53-e26f-47b8-9806-3437c3fcb141"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfe099f7-c7f5-442d-a220-f2f167a5db26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "839c0258-62b1-4a88-9b86-e63d947779fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "438e6e71-07a0-4754-8e2d-80aa87fce16f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e83a025-06a6-4125-a887-d32fda40d74b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a78380df-25f4-4f49-a226-4492cc2d3e40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94b24ca2-c33a-456d-b9d8-b502ffdf0127"
                }
              }
            ]
          },
          {
            "id": "1e8e0cbc-2e99-4986-beb3-c4e7780b95f4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "012dee15-ac9c-4839-b166-904aa15bf732",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "48684801-520a-4e17-bf7c-82de4684b30d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af618962-e67c-4bce-87ee-627ca24d62a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f1861eff-ce7d-46f2-9f42-4c73fee555d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2d04d2-858f-4c68-8de1-95c816f1eea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4c35f9-f043-4e99-b89c-f8a975d2afd0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67ce9587-4869-446c-8eb0-4dadd0b380ec",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c09bec8a-8715-414b-b7a5-1e243ac4abb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "882ba98e-5083-426b-84f3-ed091c7bd683"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c31f7323-ef79-48f7-b298-d2a652297932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9eb1c33d-5e07-401a-af85-4ffc6bf10e8a"
                    }
                  }
                ]
              },
              {
                "id": "e378c37d-fc5e-4823-a289-2ee3fd497559",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "570078be-4d38-497d-b4f5-78fff13ea205",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59cafc03-ee47-42d3-b43e-10dde3549205"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab87e8d4-d87b-4a69-bfe7-4a8d135a349a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "187590ce-3619-43ef-8742-8cd43ccc817a"
                    }
                  }
                ]
              },
              {
                "id": "36a65f6f-40a8-45da-bf8c-18f00962d96b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14acb593-77cb-46fd-abcf-73a2643d02fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e38bc473-ed67-40f8-a383-5f559977478d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a30d6873-1cf7-41dc-b954-7cbf613f6e92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52d51f06-aa9d-42d3-a4d9-f7338c13c075"
                    }
                  }
                ]
              },
              {
                "id": "ec7636b9-fe12-48df-8d96-bd4c0b76a6dd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "885747b4-31ba-4814-8041-f3b6984f8129",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2422643f-2186-4d3a-867c-2bfe958230cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6baf0081-1471-4118-a075-cd30e40844bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5ee50c4b-507f-45d3-aeac-2a6b78aee715"
                    }
                  }
                ]
              },
              {
                "id": "bae47baf-db87-4af1-9fcb-afa25f51b0a4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cc1f712-e5ff-4f91-be66-7419519ce7a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d18ac199-7ec4-4ef8-bb4c-f470d73d90e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddf48da6-9dbe-4abc-affb-08fb69e702b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "18c2d92d-7aa4-4aa7-b777-e7e882faa548"
                    }
                  }
                ]
              },
              {
                "id": "d27fdf7c-af87-4a77-8769-c84011d43f35",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "566be89b-f230-4d8a-b7bb-9f02d9c3cbcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aed65828-356b-4cd0-88e2-22b2824a2496"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16bbb854-9ef0-4169-b55c-89dad65c4acc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5665822-ed56-4d17-aae9-3e81cab51ef3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ef4599d-8fc2-4cb2-ae51-9f05fe246260",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fea5ace0-d129-43a7-8a86-0b6fab60ec4e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a074642d-7981-42ff-a7ff-d944fb09a16e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de48e2fa-f661-43e8-b750-b7b7a82653d8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3f820e2-bdb0-44a2-bfab-d126600f33a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f773af71-465f-44e8-b1ea-4b8c761ab231"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6004f694-6e9b-4a08-ac1e-a5c05f253ced",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10fea3c9-fb19-43db-b093-56114b885c80"
            }
          }
        ]
      },
      {
        "id": "23acd98c-6275-48fb-96ee-46376dfb9b67",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2333a3f9-e876-487d-9907-50c2520ca8ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "feb55525-f93a-4cef-a450-e30852ba7ff4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ef08f8d-fccc-4ce7-bfb5-01bf68a27bfc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75265cd6-0bf2-4113-863f-45da50533de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea18fe9b-2d98-4b6a-9ce3-b64456e3a32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1f433f-98f9-4f35-8d91-e67a53e8eaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9858e7-6860-4fb2-a95b-f2ddcf3f8fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e39275-5bff-4d39-8b8c-552028f08dfd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15802e8-f29f-4cee-bc0f-49c528383abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131d1cea-3720-44bf-93f0-746446c511d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75531591-e066-41d9-bb0b-1ff74249d3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb09fdd1-6a7d-4719-9d43-8167df415aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9cc041-9b97-4fde-b731-1a33c5576b5a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e041f03-8f33-4fac-a242-d0a3beaf256f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d754b2-4019-4df0-aab4-cc315cbc8da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d2ee50-bdac-4237-bfaf-ddbc04ece6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f48067-06e4-4c2f-8aee-cbb032dfd89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b46429-e4cd-437d-a7e1-1cbb2cc62106",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42cf7b0-2969-402c-9123-65384eed4672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c56767-8c44-4a15-9d59-8c5918dc45ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8ac233-b7ec-431b-98a3-6e1e83b5c950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33eec643-58b2-4804-b0d4-0372fce04d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffa223b-5a67-4e8a-8168-bf77c1b7f42b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed0951e-1c80-479c-8753-9dd84c6610ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a33a2f-f9f4-43a5-9015-8a8325128d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b823ad0-3a48-469f-ac79-a18c7ca840fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcddeed-cc6e-4b89-84e3-e699fabd3f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7d2cec-60d9-4e62-a2ea-c994e4183b80",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe4a9d1-b098-42fe-812b-7303c55589ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d4132b-eb96-4967-ab53-e3dd46e64bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f186f32-e5bc-462f-b87e-03b4ac2bdd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e720f897-8705-4b10-bc66-90b6c9ad4c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4fbca6-0b5a-4374-ad8a-47edb3f14205",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3002dd4a-c38d-410b-885a-f80d29c2181d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b1efa1-674f-49af-bde4-99609c0e7d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86be1af6-d4a8-46d3-a851-99f41fb73554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bab2eef-3dea-4c8d-a36d-797464fc799e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2b2bc5-52f0-44d0-b6b8-72311da37db5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd78c0c0-30a0-461c-af0d-89e5e89780e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdf9356-35ec-498b-97b5-7cf830520b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc5e1e9-7d1e-4ac2-aa40-bda51d934cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e430ded-ecc8-4d7d-8895-6ee2d3b40795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c89921-6da3-4763-9382-9e8f2e99ad4e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d047d479-9c97-44c6-9409-a8f2668a2e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf39b62b-aa29-4fab-8607-3d2394ec3fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3933e0-8a40-4390-8f50-b87e9ceced36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24fb9258-2bd2-40ff-b7e3-2b53ff3e8dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec14504-4fed-419c-92bd-e5e43704813e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1af0fd-f6c5-4490-8dfe-9f590f3cdf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b539bd36-495b-4176-a4e6-4a6242a8eff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936ff6aa-1a2f-4c28-8cec-1fecdde90137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16acad3e-5b2f-498c-9123-d9761d0e236b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df2780c-c689-45cc-be53-bef986f9361f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbaba12-a908-4d48-a825-b1b7f8e0cdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8932e7de-a091-4176-b558-e1b541075892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf1a4ea-4ace-4649-9619-589496afd880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "735494e2-21f5-43c2-b6b2-db151aa90feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29df664d-67fb-4f2e-9946-9f4ff24424ae",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db47a3cf-9878-4c58-a509-466fc9adcfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21dabb8-8fb0-4385-83d6-ddedaa378cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da753fc8-e975-4807-8555-f3ab1f90bb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f835dae7-da03-499e-94ea-b0be813fabfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c508798c-3cb2-4582-8948-1f951eada1e4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0abfbe-f21d-4568-af83-97966a7ae831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5e6188-daf6-4a32-9ad2-4c5fe2bc5926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e613b2-e22e-4992-866e-6aa09c7c61c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c68898cf-613d-40f9-bb73-c3d10a48be2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0bfc2b-fe48-4322-b025-5cfe4816447c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51546e6-44e7-446d-a548-36cc78da931c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a18a9a1-cde3-4ebf-955d-2a9284a95d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a85080-28d6-4aa9-afd8-c3ef00b4ab10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "890467ee-4926-44de-9c54-276b28ccd6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4798370-e036-47a0-8aff-c978644fa3c6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ee48be-67d3-4211-8f19-861d1921906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deba31e6-a09c-453f-9e64-a86ad3dd6bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b58486-4fd4-4411-bfb0-186c13d176ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b64902f-3be7-4f88-a87d-bb33b823c835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1804036-eca2-498e-986e-287ccad7ba68",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c471baaf-781c-481c-bd2f-8cd108dd0e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f52169-9865-4f99-a387-a5e4eef19c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6e3a8f-85e4-4867-a112-ccd508c6bebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "77b89925-fadf-44d3-9241-cdcf0fe7f701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a963c5a9-8a26-4047-affb-ca9b2b78f359",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b1da3f-8c12-4950-8c3d-358f0b601b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6686a73a-0b0b-430d-bb76-83836867d6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64532fb3-666f-4511-9bae-23ae1061a483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd50c67-7e83-44d1-96cf-cab5bdc65618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05a3e40-ccab-45fe-8928-efdda4ac85eb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30eec1b4-04f1-4d3a-9b63-9a795dd4e0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691731fb-479c-40e4-be60-111e62007d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5179cd9b-f90f-41f0-bbcd-99922dcc33ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3c935e-f227-49ae-8d6f-40be28cc0dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c188021b-b92c-414f-ba3a-26b2bf45f2da",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77846983-913d-4dc7-90a5-4c3e597e1d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f872e6-2a31-4942-9060-4d06688cc2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9aca73-148f-4e5a-9bd7-2050a6ee1e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b6685c-76f4-44a9-9908-823753787b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2161e95f-9374-4553-98c6-a64671b1198f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50faecb0-83dc-45b0-b749-7209ab17c164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada6d685-ba2b-4b86-b736-d0aec3e40e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3ab7dd-813f-408b-8294-02897ecb2693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f65ecc5-12e6-4859-ae2d-056aee954aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697ce8d3-25f2-4622-ab11-c6c3cc207560",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b5bace-09dc-435e-a08f-5006662d2b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea73562-ac5f-4096-a31c-d9a12a0a9910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64af9e4e-3b70-4431-868d-be5b5e415092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ff6d9b-a8d5-4954-af91-5fe2ffba006a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adec77b-75e6-4490-8364-9f55c2575271",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e5b8e2-04b6-4154-bca0-895e2a389ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b30e8d-db08-47de-bc20-c144c23b9ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931afdad-a9b5-45c8-a3f7-b39abd299b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a4ea2b-6a4a-4357-b780-cd886ef79a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe02e56-a243-43d3-9b29-1356fb981d62",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d714b95-7af0-4942-98b6-68a6c91673a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e8b677-6696-4f53-960e-faef1c53132e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc67ea5-a87d-4a9e-8d60-399d78aece22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c6843a-6f6b-43f1-9dad-7ddd33f4bf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a06efcf-04c5-4fd9-ab7a-cf724d71487e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277d1047-178f-42d0-8636-867f0e1c4868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c79e81-167f-4efd-ae7b-4bd42301456b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbab77e-e0c2-4910-8b3e-11d26f02a9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7807ea68-8e8e-48b6-8c69-dd9ac0d8a174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8b618d-4bc8-4ff6-aaa1-13e0d765f400",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aeb674-2b8f-411b-9f2f-9ec655e1b7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601738a7-e573-485e-9943-2339d85ebaa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc87b2c2-f65d-43d6-aefe-1c79cdcbbfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "777f1253-9b7f-4c45-80da-36e32a958ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef4282a-fbfb-4ea1-9128-21421f2e003f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34591219-528c-4cdd-bbb1-99177d1ce789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b285906-e6a6-416a-b4f7-9601b903e223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566a625e-b461-46b3-bf4d-6f4b0a530233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8f45cf-2115-48f4-b9ae-4a7c64b3a4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ac71ba-13fe-45aa-9071-ea8137b0d00c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a572cb-7916-4277-9805-3328fbc1883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5812512-62a1-400e-9335-1ae09828a986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00935896-ccff-4b6c-8909-ed4a3fefd98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75600ebe-bc24-4eea-8616-4de8468dd671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d76d086-6629-488e-8bf1-1c884d2aa560",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f42d10-0d54-47f0-8b24-bc76654a918a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b89da20-3555-48ba-8be4-0ea4f5cf9f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6f6dd5-85e3-49c8-a8dd-bdedd923e9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d21582a-fcc6-4624-904a-c85e5c20fadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ff15de-574e-4545-87cc-62666c6fb036",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d13152-456c-429d-9f48-d4c49b8668cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8181f30-d67e-4090-9a6c-4b65dcd7968e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc608a99-dac1-44f2-86d8-82f257742a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f6ad17-0892-45d9-8fd5-4c445fd83554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67e6209-3c85-4ffd-9313-67f240c8e953",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558d25ac-a825-40ba-9043-66c767bd2afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4470d183-40a0-446d-97aa-fdbf55d4fa0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60fa481-2bf5-461f-b538-e1b111eda90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98bdfcdc-7ac0-43c5-808e-79f8a2d055c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c45268e-3fef-4df3-bc5a-74ecec11a4af",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb05565-31eb-40d2-82e5-99bd79ed8a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8646badc-cb1a-4d91-bbd3-d8f077ca054b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12d9a8b-69aa-4d00-91bd-e9782c7b94ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "488d3ca8-456e-46ed-ae1e-787a1b539087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af85a51-dacf-42a9-b1dd-83b60785d7ef",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313a2fcb-9c61-4108-a152-a29fda83fcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff902509-6b09-4927-b0b3-5436d8c18155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b0b9ae-4867-4a2b-b7f9-ea9aee87c78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a25684ee-9cc7-41b1-8fb0-c973ba47e502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49130ff-b7ee-4e3d-8910-49bbe9c504bd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd5cfb8-6000-47c2-96ee-cd2454c18661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2983be-4ac3-4cc5-bbb1-2be39f5d235a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960c81f7-22a3-4754-98c2-627965d1beca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8216ee53-71d0-4b2f-99ad-9f499867d50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5d7945-c3e1-414b-899c-a9f72e498a0d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d4462f-985b-401f-9670-33a55ac4a979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e663cb2-2b87-4e88-956d-74c59a765932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75479b0d-e0b0-4daf-b0b9-58cd69015eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7d81a3-91bb-4a86-8d31-4c45771a3577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b1aeda-8b1c-4020-9f16-99165c15ae13",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b85c24c-a677-408c-b612-77239a6ed9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc79b66b-daec-4166-827d-60780cb500d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d2209d-ee19-4d0a-b423-a406f236ed04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09c41d2-4b8a-498f-aa82-38caeb630e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffab26a-f490-43e0-88dd-83524e277280",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10afb088-e2b1-42ce-94d2-28c581246ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3590b31-a27d-4710-9226-bcd5a7e6958e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb64553-cf87-47f1-9b3b-45f1923614aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e74c57-b7f3-406c-8716-016462eb206d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ff1889-1117-4d24-823b-424b00049d68",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2176f19a-d901-49d6-a41d-5282b40ea80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca773bc8-831a-435a-baf1-1be3a7dd8fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db8eb5c-708a-4421-8ed4-0fb7ae921386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7838f537-96ab-4a42-9c7b-b32e69d6f72d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5444f412-30c3-4521-b013-f6cde4205b8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99998944-fc12-4b26-bee5-4cdb838e022b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a256cd2-e780-427f-92b2-5886d366829b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eab68d53-6528-48fb-b904-cfbad734a9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9624916f-2912-4029-ac0d-386f53b49f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "deac4f3a-2fea-4a42-a0ec-9518e4ae9359"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f69e0ac-e6af-4160-9bcb-cb8dd0de367e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbd46871-6a0e-4d20-a25f-e94a0d8e70e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea02ca54-544f-4b60-9b85-350abae758c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b41dd49-3efc-457a-bc18-1231ba59afe7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1d7c409-6432-4b86-b1bd-7a539e5e7c4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ccad6fa-0682-4a40-8812-30d4e0940e56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "793ea8c6-92aa-4dfd-87c1-dc0691d7f236",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58aee0e8-3b4c-41f3-a881-95fc43abf51c"
            }
          }
        ]
      },
      {
        "id": "099d4064-f299-4e1f-b5eb-0723f4123930",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d813ac71-7f9f-42a8-85b7-f7ab6421955d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa30c044-c338-40bb-b03f-ccfe95e8eb21",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1932dd2b-3212-4f50-a6b2-f3bf81b4758d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb6115d-4cf2-4afb-a288-849ac5296990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9029fce-706e-431d-b5b6-19c150f64821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31e344d-bdef-4952-8cca-c58d833a1212",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d427e473-7bf8-420d-9965-3e654cca1b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0424e7-be9b-4418-b93b-895785d3ed18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a7eb82-5e18-438c-a29f-3b7d82d91081",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58eef36-152a-4294-bd26-564b84270fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93741c8-f85b-44d1-88ca-70d58b66a763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad671a7b-259c-4a11-9775-4895ddc75202",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48e2ba5-d93b-407d-a1b9-7d489cbfd0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24397af-35f3-4477-b0e4-1aae10a8f82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a508d42-b6c0-49e1-94b9-be4be8420c4d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b530609d-31aa-43da-a926-9fdb12e02d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffafbd0-019f-4649-b4ea-8ee1383d9be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d7fbc8-6a2d-413c-aa94-0b6fd6c4c30d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518aea72-9bc3-4163-b797-04350047716c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2bbd42f-dd3e-4c7e-ba15-6dbfc0d5011f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151b52c6-e088-49d4-a021-335056638ab4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd75863-ac96-46d2-955f-82c9007e21b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ec6716-caa8-4d81-a360-0e4c4b251027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0d2e5b-8f17-4c44-b4d4-3c11f0959990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa1a62f-a3a4-486a-b6f4-78cd5beec6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aca0ffc-65bf-4653-951b-b65140185f5b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b15739-2381-444c-9672-af801c0ecd58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b535e11-e55b-422b-8189-23308884ce3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba15abe9-e42a-4ee1-ad12-ab350f6b05e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcec926-8822-4faa-bcad-051e50348c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eeacd7e-36d8-4dfc-84c2-1bd01b07f59a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b68f53-44f8-4bdf-bfb5-d62bc237af12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f240357f-18dd-440c-98ed-2d15940e78ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbe4843-8d49-40dc-af4e-75137b9c8ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10e4fe6-abf1-4099-9414-998e6fd9a8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3fcfc9-07a2-4a2e-ac8d-a7bc3839018b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc8968c-f0c6-4df9-9ed1-3ddd0fa4c362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e8b90dc-929f-438c-be68-3d9abcf41eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a068a6c2-12c9-4d2e-a40b-16ae772fc5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee8ab17-4d25-4cf3-9433-677040a19961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06cec74-4630-4c04-b5bc-d0ea4d7460da",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3749c1c-e73b-4de9-991a-f29a3f06dc00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea41977c-d9d9-4bee-b7ba-d1e629022bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68c850a-0ce3-4a9a-9169-9062cbcc6d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d326b79-0e41-444a-a55b-5f5f1186dfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8193038-f33b-4674-b776-daafab59a632",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a985ef-e621-40b0-81d9-ecc304e6aa70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d846bead-14e9-47b1-9d87-0a270a166af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16e2907-64cf-406c-8407-55fdfbfd1ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd8977e-5899-48a6-a211-ec8a308021c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfb6568-edba-4af7-9f30-a0c50701460a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936fd4e5-a8e0-47ea-baa3-f2360f61a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17cc7e29-4cd7-43fe-9161-8188f9aa057a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4fc6f8-d7fc-4a46-854b-372aff0ffdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc11a0dd-2109-4136-b0e1-562ff917f1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63336940-4110-465a-baaf-540f3145afc8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000da93e-5b2e-4e37-9bbf-091800f066e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec135d88-c303-4ea5-90b3-fc834503db4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98a99df-d880-41e0-bd48-361a8692a2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4735b4af-dd4e-422b-ae1e-d6a371ee6fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5df669d-371d-4160-ae0d-2bc9e361721f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1a147e-84b4-4ffc-9650-04ec4a79aa32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b6cd49-d6a0-45b6-b49b-2145ae736b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16e46d7-67f1-4552-bfd8-dfc6602f27d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03269cd1-16b6-4bc6-aa0c-1d83a300d64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8dbc32-c0e6-407c-b790-b93ec8cbf16a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25216cec-65fc-48d3-80e0-2b0e406a2a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2d0230-5429-4219-ab37-3662746a9d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcb7b92-746d-4dfa-bd4e-e50798edf347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869b5114-df56-4589-8595-3174eabb43b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7702894e-60f5-4278-9040-bf254cdc2454",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1fb107-3a0c-418f-81e4-e77dae31a701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3eb2b9-d709-4599-ae70-451ee06c95d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2252d65e-2840-43c4-83e8-e8723e1a6017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8d887d-0015-42bc-abf2-671f2b1d753e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a0bca6-63d7-4b83-a2d1-caca80c1da14",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8f8565-f304-45de-a7d3-92ec9eb1214a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad8415c-554a-47e6-b64a-26942a7d7807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b393be0-b17c-473c-a69d-70f443b40c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1945962-6f02-433c-b234-67e0a1eca243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3313372-020b-4ab9-bdd9-ab77b8dbf296",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae671aa-39fc-4658-b2df-9fe9026f293a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989eb5eb-3071-45a1-a1d7-883691fd086d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b0b524-a1a5-4480-844d-46e7b01ea490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45cf8551-76e0-4fe2-8382-ee5f05513da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca12b8e-6500-48e1-83d1-b98e2a47746b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77311b9-f4db-4000-b5a5-443de13f5b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46aa7757-7fe9-44e9-958c-ef537e380813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858eda0c-205b-4d53-b642-18944c442569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4487bf-0bf1-4f3d-96bd-c77705fd83ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8da2ea6-84c8-4d37-ba37-ddc1f82fb8ba",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbbde4f-7a6b-4425-9491-01c826b4d6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03203b62-b11d-4fdf-94cb-8284458b9657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f114952-d203-4ca8-9727-fb7e508c4dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a25305-d598-49d9-b287-5ba7339474d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c493b1a-6da2-4c95-b847-61696dea55af",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1833081c-2024-48e7-bb18-eb1ea83c2ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41bee886-ec0c-4f9a-8f42-0c0ef5fbc1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab56d6b-a3df-4680-b9d2-3e6e72f4ce45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3876a01f-7129-4a33-9cae-8caead40f650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c4d96d-cfcc-4915-a1e8-6c37a52637c5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8300df3a-f91f-4d11-92f8-3ac5b357e08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a118b0-34c2-439e-88b8-a3d3071319f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849c983b-1009-471d-a215-12ae55eb5535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ba6b45-0e4c-428d-8f35-1f2d5ee2211a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caae3c09-32f3-40ca-a511-ff81569ee9c2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a099984-a8a1-4211-9afb-2a686b77e90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8053c90-89db-4eca-8065-bbf5e9954e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c05105b-9087-443d-95c6-fe1ad8421e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cec8c6d-c2fd-4820-b003-102192678363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2280994-d4c9-480c-a789-3988e98e53b0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5f3ef8-cd7e-4f9b-b126-a85a82525f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad9e0fec-fd5f-44f8-baf0-0ec9d07f085b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21d3899-b204-46ab-aca7-34ea6cfca662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35775172-0a9a-451d-8b5f-f56437517e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbed3f7b-8887-4d81-aa66-e48110a61d34",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e62e7e-0f43-427c-a716-1114da1519d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70991603-6a8e-452f-b340-aa227a8a7fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff995eb-aecd-436b-9f62-e55bf73cb2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f180b3-39e0-4a69-b0b4-76487aa8fc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788ddb0b-42ab-42d6-830b-e5e7cd153d47",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfed228f-ec7a-412f-86bc-b184bf4affa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8acdec7-e94f-4f78-8c4d-b809d35439df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad2b14b-f862-432f-82f9-1ea0b6cef4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fbd91e-e97c-4089-80dc-78db016b1e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b34800-d231-4b17-9f6b-7747214c09fc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b6ec25-87b6-4cd1-9a92-57b94a5e9deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23275ab9-c905-4bd0-afa8-d03f22fd045f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b363a8a0-cdad-4a8c-8810-5f4017156314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5bf7fb-a5d2-4507-a216-93af7d1616fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05791946-cd57-452c-a7a9-25a3269e3ec0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3235f220-6e4c-4134-9605-98e65b0b6ea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf839d4-97b0-4590-832d-56388225dc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ce94cf-0f8d-4bcc-a7ef-6808ac0b5e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4daed5f-2a59-4a67-a47d-7e43fcf373bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5bc582-49e1-4270-8518-2f57ff560068",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d60f50-89d4-4e64-a827-060042b27b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af463eef-5475-4178-b9fc-3df6739bf874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f643eea-8ca5-4879-9316-05e187fc6fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ee7fd9-fef7-493d-a953-507cde03125f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4274996f-f226-4db0-a5d7-1c21951936be",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f691b3-d306-4912-a766-bcfc83374d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc37afb-c59c-4117-a70d-5e2ac8c3ba4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc563e3-8ac1-42d2-8bb8-ab0937d7a745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd479b6-9961-40e1-88fb-cdaada53ceac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e644217-9962-4aaf-bacc-713fed13bf14",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdeb41e-4872-4eeb-8797-3c08bdafa0a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e99588ab-7b63-40f4-9135-1f58508558b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7af706e-b60c-461c-a2cf-15f0e26c65f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac02c5e-3c6e-499d-b10a-fb2a0ee73c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab18129-9027-4efc-99b9-987e3dc38c1e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66a8d93-1171-40ee-a6c9-a4e05773d79b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df73c93-a115-4b00-a100-9b85c771a145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba32d430-3788-497c-9a79-e2c5466e12d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81524107-fffe-48be-af1b-eb9321b4c133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a902a9ed-8e2f-4b18-a823-4b8421b33ab4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e468a2d2-1d38-44c9-9d45-5e7ec7c39ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b00f6e-b1f0-4dfd-9ba9-88de50e4b8f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88265567-ec5f-4bbc-9dc7-d19e3055d7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0469e69-9969-4d23-b5c9-b2d7029098d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87b81a2-abe6-41a2-99e3-c76542248ac1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52acd42-dc87-46ca-90c9-2230eab9e872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac86439-51f0-4f16-9bab-b407b8be110a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20add9d2-db9d-4470-8e26-90443f2d5e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7101bf-e13c-472d-9ead-45abd2c98fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be64ab1-45a2-4d7d-bbac-6a80aecc48d2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3b0efb-959a-48f7-b69e-71ff4d037330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9312adc4-6d5b-4328-9ed5-e6b403ff4e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93eadc9c-81bd-4ded-9bb2-8f576f73804f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9cf693-7c94-4af6-a4db-29af6bfcb39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02b557d-85d2-4c16-a7be-eaeb657fa638",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1705daf0-f804-4371-b22e-d961666513d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e827ff8-108c-4129-b950-aecd9ee30c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d8ace6-a1e9-4a8b-8ea4-1fd6f02c5791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99007e72-738b-4438-b639-3274bd15bb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26048fd6-fd9c-425e-9950-afcfae8bd84a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc0fe41-cb0b-4812-b50b-2319ebd104fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc1fbbb-c99e-40f2-8d5c-76c60bac6551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b552de-2ff1-4333-8955-2597ad1f6a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea8c4ac-23e5-4cc3-9139-8e10cd151a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf7d21d-d577-4afd-bb19-4b330bea93dd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8853942-13e5-4db6-a4df-d918803e8c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2578957-2ebe-44ed-8114-2bfef7d5710c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444310af-5ed7-43de-9c87-72e8e418b496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d42f80-d1b5-4b17-bbbf-aaf8b6119baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c44ea2-848d-402f-b13a-c77e142b6cf6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dacb70-d8c4-43b3-af7a-d63ea34bcc71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88f33d9-cf9e-4ec3-a45c-117f3962b18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2608fa94-0541-4cae-990a-0287c8185c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e74d265-e7c2-47d0-9f37-f875aba89122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81156f5e-8e97-48dc-afb1-3abe0dd3e3ea",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67696b17-7fdf-4ad6-88dc-cf51672456af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b476c005-29c5-4a71-ad31-88f3a4b1a688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f19040-84bc-42b6-a2b3-00e24ce4004a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c26d5cf-1ba3-4372-9cca-9afb763bc813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76282d74-1132-418a-8cfa-05a1bebc92b6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5585fd13-2092-4668-a480-b6135e3f0d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845ea9b4-80b2-4c96-a686-33ac7142c6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92154006-e193-4a56-a6e7-971d0f194cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770c370b-d2c2-488a-be42-661719f052b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d9ad65-8806-4fff-bfc2-63bee39eea89",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af85fb49-a8aa-4cbf-b833-2fb288de4b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c04c58d-28ce-4e92-83c1-0a1694bcc8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181ebbbc-7df1-4a8c-8a11-817ebcca228d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca364f2-8724-4806-93bf-66f911ea1eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed0e7fb-c00a-45a8-8f6f-4883dd93e29c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d4472a-7764-41b1-845d-c9ef508325c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718ffbcf-6b26-4ac8-b557-f211da9c3a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe72d8ce-8589-479b-a23e-d5f80a019580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492a5322-1069-44c8-b9e1-52ebfa313e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12bd72d-59c2-47da-a7bd-b167dec5aecb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb707fa-0a16-47e2-9f9c-20990c40db95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242db028-ae80-4064-b537-c25ee8b11bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb518f87-1880-4836-b965-06741378c548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fbb6d5-b6ae-4697-9a2c-fc5838d97b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37f901b-a2a2-4121-b5a4-5d8be55825d3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52fc50a-e5aa-472d-bf92-8369da9eb82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d2ab80-18cc-4d76-819b-6d9eba356edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e11b5c3-706e-43eb-94a3-1e8ba1d9f708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c629f39-8e3f-4b03-b0e5-5f0eb8e9ed10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ced4eb-e864-4864-bb7f-a84698b14948",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966fe0ee-6d5a-4254-b306-7f543d728d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be04c4f4-382a-4489-adef-d7e9468095df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937e8aa8-5795-4004-bc6c-e545d6cbe048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f15def-28af-4d54-bb07-20d08d85c268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8efc6ac-a7ba-43dc-9915-09381cfd2e90",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d30940-b164-43cf-b3ef-4590065cb132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acca030b-756f-49ce-af40-dcb62ec87131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7874b2-0da3-4815-a443-40f27dcc6be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e049cd53-fd42-4002-b316-32bfbdc0b799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505b1d87-9e17-4b85-b741-46407472d76a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bb4b5b-723e-4acc-8c27-69df009e9cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78283a86-07e6-46b0-9271-71300625b6ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938d0898-d7b3-422c-a680-3145ba3b4f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ad6a02-b705-4066-baf2-b3c37722fac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326ca7bc-dd15-4d39-931c-75c60b310c5f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7aac89-005c-453c-b865-d46fa5c8ee58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373ca46c-3ff8-4417-902b-c6fba53de96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccfc6ae-1a3e-4aee-bee8-eea98a90f8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e1f881-fb69-4619-b944-3be1723b4fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abdc55c-8878-4137-8107-eec4bc8c2d2c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1266067-babe-4076-98c5-4d75fd4a8808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb913c0f-6aa7-496b-aee6-7a11486bfb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59527bb-a830-4345-99ac-809c4a1683b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076bf7d0-0530-4c96-a719-2af1d32bcebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc9ed05-f47c-438e-b93b-c2ed6ba82143",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b11c788-4504-4cc7-b81e-6ab8de087454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886dcae9-0c20-4b53-85ba-0554dae336d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7225aae1-a57e-4912-9cf7-a46214f3693f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc472ecc-f27f-41cd-93dc-42e4564495c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d533d6-95bc-4a95-9c8d-84d853475719",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34869bd5-18ab-4c4c-877b-e92349588d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afd82a7-09ba-42b6-8a7e-0d72e145ef2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bf151e-2481-4eb0-8e74-cd1fa8e61e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5589d96-d9de-416a-9166-bd519be88112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd731299-b10b-460a-a13a-e5678187e0cc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac8458a-460a-46b9-bb64-08ff1cf9eabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c662921c-bc3d-4c77-ba95-a340f87d8461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cdf9cc-631d-4374-bef6-448dbbc475f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c94abc0-c9cf-4c9b-bfbd-30975330c47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e52d705-5136-43bf-93bd-da6a35d865a1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3579ae60-0d7c-45c2-b0d0-420967cc0b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa22c46c-af6f-44a4-bc7c-344157138fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c92ed5-2e1e-43a3-96f4-e99d219e3138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e3c028-43bb-4287-a4db-510cdfa9d8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad0512f-c401-4024-b0bb-dd43e36cfce3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2ae050-fa63-4f25-905b-f921e22cacc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20fd2b7-36d1-44a8-af95-fb162df2d334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df9991d-8732-4dcb-aaca-1a2d0639d664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808508e8-8f10-434b-b9a8-2a45f4902ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794c1e6c-0e46-4b09-a1c6-867889ac05df",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd89f5e-a403-48fc-ae6f-66eb5f2078f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facd5019-25dd-4fe2-bc52-a1a5d8c06485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa3ad07-6f92-4e0c-acb5-d365ede55d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934c4a4d-55f7-4559-8195-eb441ea72845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cea6efe-b9cb-4c0b-a4b8-fc5387e68585",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3c76d9-c461-425e-bbc5-e9c37151c700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be4ee11-3801-4a8f-8699-20b3ac1c4522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594a2ac7-4f3a-4c81-be15-36a97b904035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3606af2-bd15-4533-b8c6-26ad813aa9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a116f50-a4ac-4ec4-96d2-179f9433c98c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d243a98a-8d09-4887-ae41-cb68027993cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80db82ca-f0fc-46a4-bb6a-508500bee8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487d06f4-fd24-4a6c-ada0-0f9dee771d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e3e87a-3308-4dea-a556-07045f7585b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0864568-9b87-434a-a078-6e4a606f1e5b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f090980d-85e0-4851-a199-ba33ce5fd4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475ec285-850e-4aba-8145-fa1356697332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0572c3-bf2e-49cc-a1ec-fa0c5604b9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05360603-3c35-4e54-9971-7ad26b1027ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a931b06d-93cf-4ee5-a888-d6cf50cc89b8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ac48b5-b155-49ac-8af1-1272d5a56cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0da8b0-39a0-4b50-8371-c40be31bc7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b83843-cd70-49ff-a41b-c4578ae4a3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155ceb56-3b7d-4d5f-81b5-e1c9a341e3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02f52ff-8965-4c12-97c0-c20f04577130",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb8df54-698d-432d-84f4-0dfa66b7b6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3813ee-56d9-4e63-950d-5eb715fc4ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6868e16-f583-458c-8076-eb50fdafe312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f717c95-c188-4ab7-8754-f18b51d91e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c2b030-244c-4a7b-80c1-89f1a00a3268",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697c9f58-e098-48e2-9bf2-a817c440c0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3f7228-ceb6-4ea4-8e8b-3f32b72d802a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4feaff-350f-4232-96f2-a3fcfdcaba55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2b1c59-a331-47de-bdf2-a1aa95ec25dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9e807b-8393-4d86-83c3-f70a4f897c99",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f30c237-589a-4672-bf0e-2f10493404d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93a00f04-8ad3-4ef1-bc85-882cfc8e9d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cf8863-3a67-41d0-a665-c5200ea8be5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac78c8b-eee3-4fa9-9fd5-f0f02f215eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a78c740-6ce8-483d-84b6-353d49e5725a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a85df06-e99b-4240-a0fb-6e2f5ccf2fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0c9498-2990-4a1b-822f-bbf73dd6cb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6e61f9-95e5-42cc-9fd3-cefa3e78c47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc1c647-57e3-4562-803c-24f78a3c710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744aa668-7f66-46db-a32b-46df60a805b8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc9e9eb-c248-4755-a40c-39438d6c93d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "febe9286-5706-4b3c-9ab9-7ff6636e08bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e7c6cf-b892-405b-beed-c078e1ab5225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bae952-11b2-4bff-9965-f81a15fc2aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bcb1e7-eb43-4869-900b-c0da25ec2a66",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c2659f-6d0a-4c0d-9bf5-765b3b9e2334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51052628-033d-4bf2-afce-da8738dcff7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a9f73c-6134-4869-906a-82690d460714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1d4b02-d4b2-4e71-996c-a26f64cd2fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c785efa-b061-4504-b464-bd06d2c66057",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c04cf3-8f9e-4607-96bf-a9b69c284c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f197bb6b-9618-43ef-84db-ce29a064b260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed9f701-13fc-438f-8607-a69908728e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbc32e1-8351-49ba-a650-182bea620396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ff5859-3e15-48aa-9f42-c6cc1d30c984",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fb64d6-8e36-46f3-b2d3-3892a9696788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299d77f9-d443-4d57-bb1d-b9aa4bb6e771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164af9c3-2bc7-48e5-81ff-75fcdfb5464f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9aff50d-55e8-4c57-9803-2de08ccb5a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a9bdea-2776-4fcc-92b3-c19e887d3bb3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1800a4d7-3a41-46ef-a3fa-7269a3cfc64f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbddf2cf-4ed0-4b88-aa17-7a4412de891f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf41350-ddf0-4d4a-9fcb-6238a19b8eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50eb656b-aa3c-42c7-99c3-c30cb3b48ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123693d1-e34a-4a14-a5da-64dac1ce7a59",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8269639d-b828-4243-b0c3-9024b4445b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4999ad-a4cd-4860-bfde-4a2497948807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f7de5c-9b8d-49a4-81e6-34df9649dc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0fc3be-397e-447e-9d10-18c9b8cb86d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7741f6c1-aa30-4c68-b7ca-16e6609b80dd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950307af-936f-489d-a87b-5810765f108c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb4bc41e-3621-4745-9fee-cc3aee11096e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550e69f5-ef92-418f-9be9-865c6eeecda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a38abb-f92b-4153-ab7a-2465fafc8728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ac4e6c-c1d6-4aa6-b201-ad70ca75b813",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4726da-53d2-4f42-9933-843b68dfdf9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8567d836-6784-4323-987e-998c40c06c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa7a67b-40d5-49ee-a2a7-c04bde08de2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e9e123-3d41-48c5-92b6-881ac5e04513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e708867-e33e-49a0-beb6-1ad7ff22f290",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ab8432-b4dd-4ba6-a742-dd8e71ac91c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57f8bd5-8e77-476c-87d9-0b37908dc27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932aae41-73a2-43b3-a4cd-1ac87f6acd08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8aa8fe-e2ce-43af-ab01-40ee09ebaa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdf4aad-9ea3-446c-9453-ee5ed33df914",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba72a48b-bbc0-47b6-9800-5677cc5e0947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0d94df-373b-4441-851e-55caeed0d23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280e212f-ee73-4d32-96a5-54fd1131ab18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7717aab8-d56a-4562-b780-84d646fec80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3021a2-70da-4335-97c2-d0c8dae4faf8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1777f63-834e-4aea-ba2f-3f1731275968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a474577-be00-4d11-a3eb-1ba3e71a2e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee755711-59e4-49bf-980c-bd2ff98df756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe6ac58-3af7-4c8d-abe2-5d5fe1f0a3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d19d28d-2859-4961-b1d4-07462ccf5c49",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43a33e3-a182-4188-bb41-2ea7c207b166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd4c393a-cf51-47dc-9824-141f6c081b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb13de0-db12-48c9-a9ec-18e48bf98920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1f008c-0e96-4aa4-9796-4296bf0291cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2dcb6f-f90d-4a91-b7e7-61582aac0cda",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71083c18-6943-4f6a-b5f8-b103c61bc7c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0acf4fee-b92c-48d8-92a6-76d39a20a59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2bcc58-7465-42cf-8ef6-bc4f5ace3cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7166b78e-53ae-46d3-9f72-609eefdb339f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0731b50-b6d3-4f7f-8792-76f10212169e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23718f1e-9196-4626-8411-f23b8d6a6393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e48d35b2-afec-432f-b582-96d6fa4c7b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94372705-af80-4658-9e0a-a78a4c0a22c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf73d66-8b20-4ddd-acf7-89798e0e2e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb00157-7600-4f4c-90aa-adc7b9169fbd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e40ff0-9074-4b07-b22d-703ac2f88d2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a22a0fd-ebb5-4dc3-999a-c1f545d7026d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca0dd0b-06e7-4c7f-89cf-4ce800165bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563bfa20-bd3f-4c8a-a96d-7711efd6a838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1114c88e-1e3f-4295-afd7-d8b809393352",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62197ced-d596-4d31-a4d9-36288b9cc13b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "788d17d3-0d71-410a-9185-398fd62ad4c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1ea230-4023-4031-bf06-c5c56b6ad4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f312c4f9-3676-43a0-b541-0d76f815aed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d48a2b-2c63-4ece-bbe3-2d4194910e90",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29af1549-67ec-4e0c-b583-ee99abbe32c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78163f6c-3fdf-4d3f-b402-a7cdff145109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cff987c-106c-47ad-bf13-2b335f542bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d160b7-67dd-413e-b144-41ea028d9775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172eadde-b8bc-4e86-b064-14365ee1180e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12a2048-03f4-49ea-9ef6-31bd1a891859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc91cd83-3b1f-4dde-96b0-f0349501acb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eef9d0-ddd9-41b0-8d0a-f9016962090a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ae9cfc-854c-4c4b-bf2d-ef7b81552980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efff8f8c-7346-44d8-8378-e6bd2294a457",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d620b5-2d0c-4e4b-a233-4db7b4d91f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a145050-a770-4ab1-a1c8-02a90e30fe27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b27427-cc6d-43cb-a8f4-89185da8f046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebcbfd9-56aa-4833-ae33-e9df7256516f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd45bd7b-e016-4c46-a438-4a86bc0f0c41",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8135963f-3ce5-4b8c-a50c-9ffc41300a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e344f4e-8215-4285-9c3b-9f5c6b579472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d647415f-65d8-4290-9fc6-572cf4209274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45b04ad-32fd-4621-b9dc-89a0f4c0b103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1958432d-3ceb-49c1-9a51-e1f6365ffae5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6969a21b-e3b7-4e25-9c32-e918ebdc24fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a01599-b989-4b6c-8b80-8b843628f8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fac73d-da54-4d9a-a27c-f6576355d39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c537124-ba67-4aeb-872e-5b5ccf7d64a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbe299b-67d8-4143-930b-27cf63f33724",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c9db2a-5db4-4a35-b7d5-0ae61608b712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c810f4-f9e9-4cb1-8830-88c750b1ac86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535c74ad-f9cc-4860-9bb1-cee79aa2385e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71454f01-d930-464d-ad53-6dd125232bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d7cb9d-6b04-4547-afb5-6d9baf97c496",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e0f69d-79eb-4fe5-a2f9-015327a8c8fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e97c7f92-0400-4a53-86b8-e2c0ce2838f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff3384a-f31a-4873-be22-98dea85a62d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48960bfc-9c7b-4885-bc7e-1450489aaca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8bb8bd-20a4-46c3-b246-1e8bc9430fc7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f400998-3d8a-4a30-9cb2-36ac6057b479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a15f93a-b465-40bd-a7f9-31d2fb66adae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3a12e8-b5f5-4a4a-a2d7-40d41888bfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f96f7e7-6bfe-4976-a352-a85b4c04fcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfb017e-eb87-4f7a-aad6-4e84d2f3fda0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d542f8c7-c25f-461d-9826-5dbb186a2716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7c7a9c-c004-486d-a57c-6f7ff5d44dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91aa6045-1db9-415f-9a64-d88a63c18da8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58aadea9-a423-4118-a228-0e0ab7e38859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bf4a0d-c783-483f-b425-210bef531a50",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be318c1-31d7-4298-9980-240874abc989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc97399-0e8f-489d-a92e-f89502b99a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02b7ca9-1462-4de7-a4e5-9a1a07bf7c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0a4677-7423-4170-9679-cef14af9e653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba701bb-3375-44ec-85da-45947e3648a1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ab97e1-6713-4d1d-b116-4d011a122130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7b49fa-9fa5-4a24-a2ee-61a0bd48dafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024c3cf1-6016-4d1b-b161-9db571019e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb99bcc-fc44-4b53-8427-acece226fd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead79b73-b833-4e21-ac72-85e644fe3435",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa742d8-ce09-4010-bb51-428527d66af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf49b60-5784-4c4d-aef2-2cb79afb3446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735deef6-9216-4384-9349-58e49e20edfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee008158-5539-4f70-a599-99a830d4e546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3c592f-bddf-4521-9658-b238adfcfdea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448ade72-a4a9-4bd9-8019-d63b365dcce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84f9538-b863-4c72-8251-1b38b7096258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2429ba-79b9-4bee-b754-0c5149199926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3dcc84-3223-416e-8f55-97aa6876ceaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429cd78d-e1a6-4608-9dbf-72e5d7dac407",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1700cc40-fdff-4905-8da5-b1f6db381b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9689bb81-824a-4a43-8d7c-fc749ba9ac24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e6b3a5-a6ae-4c4e-9d10-422bd51c4aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e0cdcc-e3ca-4478-96cb-1fad1d403d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a19aabe-fff5-43c0-8059-12952cc58d66",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708c11fa-09e6-45d3-88f3-60e8c4dbbe79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98b38335-4ded-4e9b-a807-31d9087e4a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544fa5ec-970b-40b4-ad72-31dcfb5548da",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a4c7fe-bbc8-4584-a44d-42d39d6587f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2c62c0-8858-4470-bf2e-0f06fba84446",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7fdd1e-5f85-4b38-bda1-5f7924cf08d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522be8f9-49cb-4feb-8af7-199220e57981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094e5289-585e-4bce-982c-68741288aa77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43787d7-b0e2-41dc-9e88-ba253420fade"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ae29f2f-1a05-466d-afa3-c02d808326dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1c07353-3542-4cf0-85e9-a4d99db41324"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bf9c601-6452-4d38-a119-bf236df69009",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6171500b-f296-4604-a05a-4f782ac334b3"
                    }
                  }
                ]
              },
              {
                "id": "ba01d020-c532-4324-8145-b1f2951d58cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dc6f2bb-ece9-4736-998c-c8f3518801f7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c536641-8d76-4ed8-8bd6-179df6e55301",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "afde9e6a-6024-4a16-8bee-c85d7ec8f2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618c2636-0953-4ad7-87a2-1be0a385c6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ce0374b-d713-47cd-b1cc-eacefe75e325"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3377cbe9-8a6a-4ddb-990d-324554a24de6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14f9b2bb-26a6-43de-8651-7281de448b12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1af1be65-c90d-459d-9df1-657c4161e106",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5be18c8e-d2f8-4ac2-896d-6b220ec1b95c"
                    }
                  }
                ]
              },
              {
                "id": "6355dc5e-7023-4fca-853b-8472fb93581e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1c32cb6c-05f0-4c41-bca6-f3b2842d4538",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2329010-82aa-48eb-817a-a3ecad837aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f360442b-a51d-48a6-9a5b-afbbe9c61832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17509d3-13be-4695-bdf4-4c1ff14e3b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6d368f-2a61-40f2-92ea-28db829516a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "28697f53-d2cc-4c1b-8a8d-2878b1fd2de4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3ec7b8f8-a44a-4093-90cc-1dc983f11fb9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ed1a65e-63af-4e2b-8c6e-f409d39061f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b234fd5f-9d8e-4d88-af31-6f769c44a05e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cf807a9-4cf6-40a6-b204-6bae54b27db2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e98a7c9f-e065-4d88-be01-e1e8a4d36eff"
                    }
                  }
                ]
              },
              {
                "id": "82f5af31-9889-4de2-9d07-9ef6ca49acb4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3187bdb-f16c-4161-9ee4-dcf4c837c52d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "80631f69-99a3-4228-b24f-6ad773d91633"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3cf423a-53ab-4684-b311-04c4bd9b4bc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58a7ac8a-0f01-4aa3-b7b6-d904033c2add"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7c81d5c-8427-4f7b-9744-1b31b1325cbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "04514aba-25a3-4034-afa2-4dc09eef3659"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fcd5eb3-e961-4523-a8a7-77977a748cd7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1149e0d2-6497-4f7b-92c6-12db9c8a3a56"
            }
          }
        ]
      },
      {
        "id": "c4de8505-497e-4260-a5e2-c53c63a20c47",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3d521cfa-b45e-4403-9ef3-276fdde2d6e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be767f9e-f727-4528-b12f-3bcf27020a5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27724949-db4a-4241-a798-da40c8b384df",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be003cfe-264e-4aab-aa2f-65af9e7b345a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6aff05e0-dac9-41c4-8055-96c0f7302b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338c2e8c-3456-4e17-9c19-bd6cf1df5808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63d636db-af27-444e-9d42-97020862ff99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13e649cf-1027-48a4-a435-88289a2ee05c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e7b2ce6-4e02-4979-a54c-098c367c04e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "036fa798-3f41-4fc5-bbd4-acf6b538cd7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52b7fd39-e36c-4087-8d41-6ec8db7685b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2946b2f4-7651-4bf7-a229-f3f84e48d147",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8ffc377d-e1d4-41e0-b76b-f43d98d994dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bc25736-a0a7-4dcc-b7ea-185fd5255d64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe941def-ad50-45e9-b2ac-e35440704f97"
            }
          }
        ]
      },
      {
        "id": "1b1f8e9e-8c68-4a49-9781-77babe06a13c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "81d9c664-fb03-4a0c-8d76-4ee5bec067db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b8b345a-6cd0-4adf-98f1-bcdb494aef69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b3ddb03-aef6-4465-950c-3eba129dd6ed",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71e8492-867f-43b6-bfb9-e89b35d18278",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "872fec57-365b-4228-927a-3f50134cf60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7449144-a717-4dab-8f65-3c575a2a8810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "621b5f2f-87cc-46e6-a02f-921ecf4dddfc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "287f14b9-2730-42ea-8b9c-fca3fc31f2f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1f3f6c1-5898-469f-b992-187bc9114773"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8ce77e0-f81e-4851-83d0-5d9aace8abd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c30016c-60a4-4c46-88a9-c7cfdfe119c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e548c18b-4e4d-4742-a805-d9d4db814b24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40f171a1-a06e-44da-9147-f01c62f2d5f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80bf1341-8105-4755-826e-b7ec514a881b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab4a945a-a101-4b83-963c-410e7eb21e65"
            }
          }
        ]
      },
      {
        "id": "9688b62c-5155-40f5-9bf6-6c7c44c44cef",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e3602a73-a0bf-4b83-a3e2-4007bc022bf3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b170e235-9f60-4592-9b40-3f9f69c78139",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5e54c48-bad8-4a75-bd99-6b592ace97bd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988f0f47-deb2-4f35-8fbd-42c1701003f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1700940-4b61-45db-ad5f-f13693d410b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b69d1a-8cb6-403d-abde-f39f1a3c23fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2795cd4f-58d9-44b9-96af-b8035e407661"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "861befb2-1a71-4215-86ae-e738c59dd311",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d51963f-3b16-4727-8b3d-67e4d6b1207c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d42091-f791-4122-8809-c1bbf28ce66f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d401ea0a-e394-4be4-a654-ef5c7aaa6808"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b17c6bf-6f81-406e-815f-7d134ae335d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e7115e5-f0d5-4b0e-84c1-9aee84c03b19"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c394a155-e4bc-4d0a-a910-018e73014f87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cede08b-e968-42be-a250-4845121b4ec0"
            }
          }
        ]
      },
      {
        "id": "a47e9f79-b1b5-4c1b-b60b-f8c1ec3d20fd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b820fc4-2c3e-43ba-bfb0-4791787d20d1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5231f605-7814-4acb-a6b0-db3ca190f2f2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dc2bf9c2-6a56-49f7-a0cd-f90f56f25830",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28722443-6273-4ccf-b9f3-ee1568b2b6c0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd1e8395-069e-4b37-bf09-88da63bd0f43",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 121.02380952380952,
      "responseMin": 9,
      "responseMax": 9748,
      "responseSd": 723.2066211625995,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724028086329,
      "completed": 1724028125058
    },
    "executions": [
      {
        "id": "c7072b7a-5f06-4a71-9e5c-1dbea05710d4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "53aed358-0ef3-41d3-91dd-dac8f44f2be3",
          "httpRequestId": "bb8abc60-b4fa-4bfc-81f6-53a3d761da60"
        },
        "item": {
          "id": "c7072b7a-5f06-4a71-9e5c-1dbea05710d4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cefbcd1c-6243-4403-90d4-1a4855c95a9a",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "ac14c4c7-7464-4736-82df-67f1e635b62a",
        "cursor": {
          "ref": "d6f74883-efb2-4259-819d-9f49aa116ed1",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a94dab4d-8619-4e05-890e-68b9092b1229"
        },
        "item": {
          "id": "ac14c4c7-7464-4736-82df-67f1e635b62a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c25ac9f2-6753-44c4-b5f0-c0c77aa0c670",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "278180d0-8f22-4e72-8d72-542658ed6504",
        "cursor": {
          "ref": "76d34935-4b6e-48eb-8b8f-96c8a2aef560",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "79905e02-cfa9-4aa5-828d-2cc8b8ecd8e7"
        },
        "item": {
          "id": "278180d0-8f22-4e72-8d72-542658ed6504",
          "name": "did_json"
        },
        "response": {
          "id": "d093116d-7b55-4b19-9862-c4799f3ea62d",
          "status": "OK",
          "code": 200,
          "responseTime": 344,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e07b6f-fb53-4135-ad53-df2c0e80c7ac",
        "cursor": {
          "ref": "aac980dc-ba57-4c1c-88b4-ca8ec4bf3ff6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "576c44bf-bd6b-4c4f-aae6-d38abb8dcccb"
        },
        "item": {
          "id": "97e07b6f-fb53-4135-ad53-df2c0e80c7ac",
          "name": "did:invalid"
        },
        "response": {
          "id": "b072a8e6-54f2-4421-ae4c-56558fff2433",
          "status": "Not Found",
          "code": 404,
          "responseTime": 328,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e07b6f-fb53-4135-ad53-df2c0e80c7ac",
        "cursor": {
          "ref": "aac980dc-ba57-4c1c-88b4-ca8ec4bf3ff6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "576c44bf-bd6b-4c4f-aae6-d38abb8dcccb"
        },
        "item": {
          "id": "97e07b6f-fb53-4135-ad53-df2c0e80c7ac",
          "name": "did:invalid"
        },
        "response": {
          "id": "b072a8e6-54f2-4421-ae4c-56558fff2433",
          "status": "Not Found",
          "code": 404,
          "responseTime": 328,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f15824-a887-4095-a84b-7b827349e064",
        "cursor": {
          "ref": "fea62658-7149-48ba-919c-ca0dfe5ededb",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e25f4813-ab7c-4c4c-ab0d-be143be7d893"
        },
        "item": {
          "id": "44f15824-a887-4095-a84b-7b827349e064",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1d40223e-2cda-4f70-9c8a-90cf45b8d67b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c19c31f-b37d-4190-88b2-7ae9578a38fe",
        "cursor": {
          "ref": "d340f37d-5ec6-4c12-b3f7-32b76c4bae40",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "abe40afa-80fe-4014-87ff-cf291f77ec57"
        },
        "item": {
          "id": "5c19c31f-b37d-4190-88b2-7ae9578a38fe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c41f3478-51d8-4d3c-a743-cee2b3defd6c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f11b1a-5216-4978-907a-cd705295885d",
        "cursor": {
          "ref": "1a106985-31cd-4a88-8dcd-6b3cf393afa4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "719255ac-c9ad-4d99-8310-271a86ff1dc1"
        },
        "item": {
          "id": "f4f11b1a-5216-4978-907a-cd705295885d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d17cc9ad-25c3-4d8b-848c-84f72f68d5db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0af60b-fffd-4726-95f6-29b7e0aa1dc4",
        "cursor": {
          "ref": "af5bc976-188f-4d79-a73b-c8622b22a6d4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f71f26a1-4901-43d5-9011-5df32dba5a2d"
        },
        "item": {
          "id": "2d0af60b-fffd-4726-95f6-29b7e0aa1dc4",
          "name": "identifiers"
        },
        "response": {
          "id": "b4a03e50-acd5-4dd0-ae1d-4d927111e855",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b692978-5f4e-4bfd-b3dd-fae93462770a",
        "cursor": {
          "ref": "0faeb58b-b7c2-41bc-beb4-8b115774f6b2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "230eb052-275a-4c21-a5a6-1d07af4981bb"
        },
        "item": {
          "id": "3b692978-5f4e-4bfd-b3dd-fae93462770a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cd6b647c-ceed-409e-b852-f4e7d3baea4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61156afd-cb27-4719-beac-7f9b7b7ccc6f",
        "cursor": {
          "ref": "99a1500c-1581-4725-b254-821c8be35749",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "50c031e8-f648-48e3-94f0-50418324ea37"
        },
        "item": {
          "id": "61156afd-cb27-4719-beac-7f9b7b7ccc6f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d297e331-e9df-4e26-96c7-691f07184666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b85519-c293-4666-b661-e69cf7def25b",
        "cursor": {
          "ref": "29e758b7-d5b9-4966-b8ec-6a6fdb0b6e94",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "87ddf407-8d8b-4e91-8872-7ee7f14c9536"
        },
        "item": {
          "id": "67b85519-c293-4666-b661-e69cf7def25b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bd72b42d-2113-4cd7-8b31-8fc6d7dc718c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afcb45f-76ca-47f8-90d1-e82fe7359639",
        "cursor": {
          "ref": "b52e90dd-4cdd-4b0e-9d32-19e9324c58b2",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a7095709-5dc4-4487-98dd-2e0a39434a4d"
        },
        "item": {
          "id": "4afcb45f-76ca-47f8-90d1-e82fe7359639",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3b14b092-d80b-4edb-8652-5c569593c0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d55a065-a370-4117-950c-61ac621ccd65",
        "cursor": {
          "ref": "afba066c-b7c9-4e73-80aa-496a03149a58",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "49aa6a2d-0c38-414d-829d-2906b21388f3"
        },
        "item": {
          "id": "4d55a065-a370-4117-950c-61ac621ccd65",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "78d64a78-d466-47d1-aa71-bd0497954648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48a617c-b321-49ea-94e2-45e2109a24ed",
        "cursor": {
          "ref": "6148a223-2244-421d-a40a-5c4f208c8e9d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "08495d5e-5b8f-480d-baa6-ea3496b0ff48"
        },
        "item": {
          "id": "e48a617c-b321-49ea-94e2-45e2109a24ed",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "23633e8f-5310-430f-be48-e4cc8efb1eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60283656-5966-44e9-b187-a1990b216c9e",
        "cursor": {
          "ref": "9632f139-d9e3-4bc9-a1a5-7fcba6264815",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4aec90b9-b3bf-4d9b-8fee-e8e11858625e"
        },
        "item": {
          "id": "60283656-5966-44e9-b187-a1990b216c9e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c7a97283-fd8b-44fd-a7e0-b37f4d0357b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211bd7b3-48d1-47ae-b0d4-9159cfd455aa",
        "cursor": {
          "ref": "1f85e7a4-bbb2-486c-b770-f1f947624da2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0bc6e272-e405-4c50-95f5-2f3a09901ac7"
        },
        "item": {
          "id": "211bd7b3-48d1-47ae-b0d4-9159cfd455aa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b8f9d7ac-7ec8-46ce-8589-1fbfbdaafbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ec7dd3-536d-4245-848c-2b90902bb079",
        "cursor": {
          "ref": "f2c91bfa-bfcd-4215-9570-fa1370be2984",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "28e9b69e-893c-4f1e-9ec1-f4197e3a63cb"
        },
        "item": {
          "id": "c2ec7dd3-536d-4245-848c-2b90902bb079",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e77485a5-96e0-40fc-b3f8-3e877f0fed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8898eef3-1143-4552-9259-88c7073f969f",
        "cursor": {
          "ref": "d93b64ab-bdd5-4eeb-997a-64ae66d0017a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0f601ba4-dfab-4238-b488-0dd4303ba15d"
        },
        "item": {
          "id": "8898eef3-1143-4552-9259-88c7073f969f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4052e742-f657-4bc4-a357-d2cf6b9e3438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4bd577-36f4-4389-8a8b-b9e964a8f72b",
        "cursor": {
          "ref": "f00bda83-f547-48c7-8407-364f79f6762b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bec0cf2f-cc17-4b5e-a4fd-2f0894c35231"
        },
        "item": {
          "id": "ac4bd577-36f4-4389-8a8b-b9e964a8f72b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e0b2d8bd-d49b-47e3-bbdf-4faf4e9933eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9bc6e1-4d2f-4caa-abb4-2c8ffeca2200",
        "cursor": {
          "ref": "d5b3bc4a-caee-4bc9-9a93-a4e1c58638dc",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8e93dc74-8eb8-40f1-aa6d-d05a41b3fbde"
        },
        "item": {
          "id": "5b9bc6e1-4d2f-4caa-abb4-2c8ffeca2200",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b67f3dd7-612a-493f-b94e-36e2ce8befb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ccd918-1aae-4e33-81b4-15d18c663ec4",
        "cursor": {
          "ref": "82b92ad0-9418-4723-a679-b346c893f79f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6bec7601-a3f8-4427-b220-9c38ede3a88d"
        },
        "item": {
          "id": "37ccd918-1aae-4e33-81b4-15d18c663ec4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ee0442d1-3346-4b3a-bd5e-cbaeef1c821a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840c764f-1be6-4570-859b-dae6141c2b97",
        "cursor": {
          "ref": "2de31646-4ab3-4916-9062-2b884761388f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "16580f1f-3ec9-4279-8822-3e7255bec266"
        },
        "item": {
          "id": "840c764f-1be6-4570-859b-dae6141c2b97",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1a70a382-09de-4160-8552-6516e32b255e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b772fa96-fdae-4eef-b029-bf9595d1b9aa",
        "cursor": {
          "ref": "6a2164ff-48b4-4cc0-abf2-044626f75ea3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "76f9ef5c-a4a5-40a9-9cb6-80ff52960192"
        },
        "item": {
          "id": "b772fa96-fdae-4eef-b029-bf9595d1b9aa",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "78b1c738-e47a-4a0b-a8c4-82f7b7a41d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747c9a0e-27df-46d2-afd0-205b2d95c899",
        "cursor": {
          "ref": "f848c0f2-ac03-4cde-b1d7-8b80caf710ca",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5eb87ddc-975c-4089-911b-6b4dcf709c2c"
        },
        "item": {
          "id": "747c9a0e-27df-46d2-afd0-205b2d95c899",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "72aeb411-b144-4774-a91a-3342385c1b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57a9cd9-4205-4c50-bd19-c81f08befa6d",
        "cursor": {
          "ref": "d628df76-fe40-4ae0-a549-b5a26e84a280",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "24cecbcf-2bab-42e5-8446-108ca7a55793"
        },
        "item": {
          "id": "a57a9cd9-4205-4c50-bd19-c81f08befa6d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "48350479-dba3-4fde-af07-3d6e9eba264b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d37cd28-1278-4a68-9642-f0ff19860927",
        "cursor": {
          "ref": "d393f654-4788-4251-856b-4d0d62889ddd",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "85d89d8f-e6c1-4a5f-b184-4204759008b4"
        },
        "item": {
          "id": "9d37cd28-1278-4a68-9642-f0ff19860927",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1673ae2b-c2c8-4b8b-9938-9fb36e03e8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc49247-ee8d-4caa-8dbd-c173dbbf569a",
        "cursor": {
          "ref": "a55f88ce-9790-4e78-bb8d-3c3d4ca571ae",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "40544aad-6275-4d6a-920a-3d0095764adf"
        },
        "item": {
          "id": "bbc49247-ee8d-4caa-8dbd-c173dbbf569a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "65c705d6-bc09-4a2a-a410-16bbf68d23fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ee986c-e3da-4a23-b54c-ec22972b8f5f",
        "cursor": {
          "ref": "e5f04613-d4a5-4fef-9d7c-1c83eba95c77",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "68c22d5c-23dc-4e85-bde1-6b22c84e0209"
        },
        "item": {
          "id": "65ee986c-e3da-4a23-b54c-ec22972b8f5f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7e9c6a7f-0a73-4f5b-896b-43ac25986ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fbb3f0-0519-4869-844d-9b0f9ebb8d67",
        "cursor": {
          "ref": "3e23ae7c-e67f-48a5-b5a9-0c92bb34e236",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2bbfa2e1-fa21-4698-abdc-03362b9d5f24"
        },
        "item": {
          "id": "95fbb3f0-0519-4869-844d-9b0f9ebb8d67",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c5e14d89-a8fa-4545-891c-aeb7d45cc5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f081e51-f8b7-45a5-be7f-2b3b20798e79",
        "cursor": {
          "ref": "af7b1d0e-e10b-4a15-9706-4207710988c4",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1eadf5b5-0312-4b04-96ca-1d8ebc9d08e4"
        },
        "item": {
          "id": "8f081e51-f8b7-45a5-be7f-2b3b20798e79",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "88a037e1-9a80-4e0b-a376-d8e03d5ba466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e04fe5-6c68-469e-8992-1050bf7cbbbe",
        "cursor": {
          "ref": "342bc781-48b1-4e61-a0ba-26ddd053bc0f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7c0c17f6-e4eb-4482-8792-cecf61eef422"
        },
        "item": {
          "id": "69e04fe5-6c68-469e-8992-1050bf7cbbbe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0b5b441c-7ae2-48ac-9c7c-481bc9a04561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f05e21-8f93-4fd7-9036-f91be9fb62ad",
        "cursor": {
          "ref": "76b66eb7-1cf9-4093-9339-324f33f66632",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2b6064e2-284e-401e-a3e9-4a5b7fa29aae"
        },
        "item": {
          "id": "b7f05e21-8f93-4fd7-9036-f91be9fb62ad",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fbaf430a-2995-45eb-9b9e-193e81150a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a07f598-d231-4c65-9ede-a022ffce439f",
        "cursor": {
          "ref": "85bc0ae0-1bf2-4a1c-8d63-e4413ae5eed3",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "87d436b3-34de-45e5-a23a-de295e92ab6f"
        },
        "item": {
          "id": "0a07f598-d231-4c65-9ede-a022ffce439f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7e8fb901-83db-4ddb-904f-e9019d59e8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adee9652-8560-4a6e-acce-f3aa6049f88a",
        "cursor": {
          "ref": "2097a5ae-5f4b-4ae3-9b59-3f5f586adc02",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "59681dac-db8e-42fd-985a-24b119b900f7"
        },
        "item": {
          "id": "adee9652-8560-4a6e-acce-f3aa6049f88a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cc503d99-0b3e-4b5c-a17e-033ccb7fa011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae690020-ca9f-4af9-ad56-731009c6cf59",
        "cursor": {
          "ref": "037543d1-b862-4bc7-bb78-a20152365717",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "efb8b37c-35f4-4308-a2af-2ddbf5e25114"
        },
        "item": {
          "id": "ae690020-ca9f-4af9-ad56-731009c6cf59",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f06737bf-b91a-4d50-b785-9bfe392c9634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0e67fb-c9e4-4532-94dd-936671d45f3b",
        "cursor": {
          "ref": "de85c105-9f8e-409b-b568-2f517f3b2ab1",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "be861290-584d-43c7-b998-dc7edc1ef3e9"
        },
        "item": {
          "id": "8b0e67fb-c9e4-4532-94dd-936671d45f3b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dff8f9f0-0b86-45de-9f40-bc5b9ba4b3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d89703-00c9-4fdc-955a-1ced1b6d18df",
        "cursor": {
          "ref": "0fc2b5f2-d848-49c7-ad89-42779bf8d228",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8b3d046b-5629-4406-93e8-c466a27c8e88"
        },
        "item": {
          "id": "44d89703-00c9-4fdc-955a-1ced1b6d18df",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7355652e-994c-4274-b829-1665099d4cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a67b272-5777-462c-935b-135818d94951",
        "cursor": {
          "ref": "6ac74f12-423b-44e1-aa2c-21d611f09f41",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3e622221-6622-4d59-b931-0147e3d23b76"
        },
        "item": {
          "id": "3a67b272-5777-462c-935b-135818d94951",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d9eddba4-253d-435b-946b-b8b159d5cf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c6129f-e3ae-4953-9bde-afa071193299",
        "cursor": {
          "ref": "ecbf4b6a-3e3a-4c97-a7bf-47cf33a173ec",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "03a387ab-b9c1-42c4-941a-afa970b89999"
        },
        "item": {
          "id": "32c6129f-e3ae-4953-9bde-afa071193299",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ffc4d91d-08a4-40db-a5a8-ea98370d33d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5554a1c-6ddf-43c8-bcc8-db558457ecdc",
        "cursor": {
          "ref": "96862ba2-f31d-408f-8f71-81f95eae6c05",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4d35af49-62a4-466c-83b1-6b6d870919e9"
        },
        "item": {
          "id": "d5554a1c-6ddf-43c8-bcc8-db558457ecdc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9c3b99e6-fe38-4cdb-8d97-7591be5da4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2de6e00-c977-4a08-a6a3-3206072edae0",
        "cursor": {
          "ref": "3495e20e-d706-4c54-978a-7c9214b41bc4",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "167742c9-e2ae-46fa-9ca0-45d36aee7cb6"
        },
        "item": {
          "id": "c2de6e00-c977-4a08-a6a3-3206072edae0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cce63e65-da36-4cfe-ab70-682ae8abc5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76626cb-e8b1-4e89-bfb4-27cf8c8b7393",
        "cursor": {
          "ref": "9e247567-7081-40af-8f4a-f21d206a927e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0ec4173b-5e8b-4d7d-99e2-98649d88206e"
        },
        "item": {
          "id": "b76626cb-e8b1-4e89-bfb4-27cf8c8b7393",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fc0fb548-6850-4def-98a4-115918b59c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662a943d-4d95-4314-9a65-d0cf4ce62a54",
        "cursor": {
          "ref": "88ff04e0-b7a9-4189-b0de-931120b26728",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "085a57ac-0b4c-44ad-bb25-ec6b38187022"
        },
        "item": {
          "id": "662a943d-4d95-4314-9a65-d0cf4ce62a54",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f5b921f4-340f-40b9-8a10-96bf1b837291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 961,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cc5351-d737-4b84-b7fb-a41c226f6d23",
        "cursor": {
          "ref": "233a5fc4-cb94-4f26-bb28-536fce6cf45b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "30b74969-d74f-4427-aa0f-66587411ff4e"
        },
        "item": {
          "id": "32cc5351-d737-4b84-b7fb-a41c226f6d23",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cd18f13b-603d-4b2b-b51f-7ff9bde5820d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ad03ac-3b7f-4b6d-99de-e5a7ff6ff6bf",
        "cursor": {
          "ref": "1cfa3f8b-a002-48f4-94e7-3db0978a89b7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4cd301b8-6c8a-459a-baec-b3d2ba21a4b0"
        },
        "item": {
          "id": "34ad03ac-3b7f-4b6d-99de-e5a7ff6ff6bf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "438e383f-128e-457b-aadc-b83b1f68f24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1d3481-96ca-4696-b95b-e57558342193",
        "cursor": {
          "ref": "1c74956a-6035-441f-aca1-c404f2af1249",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "169e6bea-6e66-42af-bcc0-2f9806caac6e"
        },
        "item": {
          "id": "8c1d3481-96ca-4696-b95b-e57558342193",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "79a3a987-05a0-4961-8952-96d693476800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3110b7d1-7479-43e8-b511-0dcb59466af9",
        "cursor": {
          "ref": "47943527-9a33-489e-aea6-188e96d9d13c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5d002568-2fe1-441d-b611-7aacdddf1714"
        },
        "item": {
          "id": "3110b7d1-7479-43e8-b511-0dcb59466af9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "29fb6f25-8281-4532-a250-be4a14401ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dba62c-ce43-4abe-998f-5d5d1d0c3097",
        "cursor": {
          "ref": "56d78ac3-6819-44ff-a74f-33ceeb740d6a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "25b1be2b-b354-41c2-956d-563d590b3bf6"
        },
        "item": {
          "id": "65dba62c-ce43-4abe-998f-5d5d1d0c3097",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9059ae9c-6350-49b7-a101-5446456be2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb92b3e-7117-4e12-bba2-95ce564113ee",
        "cursor": {
          "ref": "3f76ae4c-f5be-43d0-b4d1-cddb78e29657",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dbf7c65b-d402-4f37-b281-6736c295c46f"
        },
        "item": {
          "id": "6cb92b3e-7117-4e12-bba2-95ce564113ee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e87ca05f-4e13-4b71-9ac0-9c5fa96f7742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bb0424-4b50-4681-a7b6-6ae205a6c3a5",
        "cursor": {
          "ref": "4d2a94c6-0359-4896-87d6-26f9f86a4716",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "91fbc635-8d95-4bc4-8edb-b4ed316d7779"
        },
        "item": {
          "id": "32bb0424-4b50-4681-a7b6-6ae205a6c3a5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f1f5557a-c1c0-47dd-a838-c75335d651ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee25025-ae61-45d6-a588-d079cfe112e9",
        "cursor": {
          "ref": "5e125579-2947-4b41-9dc1-f7d32b0706f9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5b82bbea-fa8f-4aea-9420-dd15ae69554c"
        },
        "item": {
          "id": "7ee25025-ae61-45d6-a588-d079cfe112e9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "537a7a00-c31b-4590-bc2a-9d28b83ba933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737120c1-dde2-44df-92c4-44012c09258e",
        "cursor": {
          "ref": "53684516-1520-48c5-a77d-4d7045a34da5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0349c788-4a93-48e0-8dd5-bc3ba71a1fd8"
        },
        "item": {
          "id": "737120c1-dde2-44df-92c4-44012c09258e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b31f8481-3a70-47dd-8a6e-a344db9e31d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bd8f1f-240b-4d81-801c-0d6291d0bab4",
        "cursor": {
          "ref": "b193a3a3-7dd8-4b4c-a010-a1ebe3ed3a85",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3124c6d8-b3ee-477d-b52f-7ab1e80a7833"
        },
        "item": {
          "id": "a2bd8f1f-240b-4d81-801c-0d6291d0bab4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7b09b6f0-22cd-4084-9a29-502d91ddc5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b976dd-97f5-4232-b427-1d37a33f716e",
        "cursor": {
          "ref": "eb954aee-e089-4e69-9032-a029a542f1ef",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f1bfe9af-7a84-49ca-bfbe-569fdc0945f7"
        },
        "item": {
          "id": "89b976dd-97f5-4232-b427-1d37a33f716e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cba9fc78-0fd5-4f29-9dee-31bb8a0ca69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b506c8fc-ed48-4a5a-bc58-779f4e3d90fe",
        "cursor": {
          "ref": "cac130ca-e875-4105-a739-0be1a3d7597d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6d550cb0-3c96-4465-8671-f5c3a43862d9"
        },
        "item": {
          "id": "b506c8fc-ed48-4a5a-bc58-779f4e3d90fe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "96d663d4-afff-42a2-8287-d50ae5aa7dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a92f901-6b4f-4d67-8df0-e6ffec1c11b4",
        "cursor": {
          "ref": "4d3d6863-2603-4f31-a40e-a1cf6db5be59",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "80a570d5-058b-4e3f-a7cf-fd73dbd55fc9"
        },
        "item": {
          "id": "8a92f901-6b4f-4d67-8df0-e6ffec1c11b4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4f345a36-e3a3-4837-8629-580c5d3b4e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e691d4b-b046-4476-9957-052603b1e683",
        "cursor": {
          "ref": "170e9e36-54b7-42a9-b54e-b2059f4e28d6",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6d72d01f-99d0-4dbd-bc41-6079c734020d"
        },
        "item": {
          "id": "1e691d4b-b046-4476-9957-052603b1e683",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "df3384d8-d979-41cc-b3fe-a7dd7e35a8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8628459-beb3-487e-9daf-c7397cc83497",
        "cursor": {
          "ref": "e8e9ab60-ade5-4d54-a1f8-87c910efb7f3",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c33ff034-faba-4d7f-b155-4f7fe05ce55f"
        },
        "item": {
          "id": "a8628459-beb3-487e-9daf-c7397cc83497",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "81c065be-d8ca-4f9b-8915-2cdcaa8fb5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773e6ed0-f196-4512-87c7-f626a2fd763a",
        "cursor": {
          "ref": "909df334-ef29-42b8-a04d-3b2bb61d325e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "192c9b57-ab63-4607-93e3-2f0fb21895fc"
        },
        "item": {
          "id": "773e6ed0-f196-4512-87c7-f626a2fd763a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0153fb3b-7a30-45d5-a0ee-b506ec3a0b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e929aff-d070-4630-b186-cbc045ef15e6",
        "cursor": {
          "ref": "df1b6ed2-d5d6-464e-a87b-3a8b0a65395f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "27d80d53-9ecc-4faa-90e4-567ff69dab39"
        },
        "item": {
          "id": "7e929aff-d070-4630-b186-cbc045ef15e6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "325acc28-9615-4841-908f-a1112ff7eed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9585439-e825-4e11-9484-230e1fe69215",
        "cursor": {
          "ref": "ab9e2af2-fd39-414b-8e2f-92a04fc519da",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "361cfd59-acf9-4726-a912-5d63cc385dcf"
        },
        "item": {
          "id": "d9585439-e825-4e11-9484-230e1fe69215",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "224a2dec-84b2-409e-bdfc-7b50747cbb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5556c5-1a76-4ccc-bf06-c99a6646a826",
        "cursor": {
          "ref": "bf660322-a971-43c5-80cb-d13d61042821",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cc4f63c7-213f-4b01-ae64-945df5335f81"
        },
        "item": {
          "id": "8c5556c5-1a76-4ccc-bf06-c99a6646a826",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4f71905e-2d4d-45e8-be30-e8cfb16d0e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7627659-7f1e-4ab7-811b-69c22b728328",
        "cursor": {
          "ref": "b1ac3ab7-55f8-42c0-a2dc-c88ac826da52",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "81c6e1be-118c-4747-8111-53853cd3ddce"
        },
        "item": {
          "id": "c7627659-7f1e-4ab7-811b-69c22b728328",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "13ca395b-f30e-4b33-9914-62b5f12b5fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33091b43-2dac-4c9e-9487-29b5c886011b",
        "cursor": {
          "ref": "e80eca70-0528-4297-bfc3-aeca43da44b6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9fc601ae-bdc1-4edd-b8b7-41b3919e1cbe"
        },
        "item": {
          "id": "33091b43-2dac-4c9e-9487-29b5c886011b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "128d8463-0e8c-42dd-a260-e56db34f0050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89794a07-66df-4f46-9e0d-1a0576c54240",
        "cursor": {
          "ref": "dd2aad16-8b83-4bb7-af84-0bf5c63c19f1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2e0962df-15b5-41f6-bb5b-a4f6157719a6"
        },
        "item": {
          "id": "89794a07-66df-4f46-9e0d-1a0576c54240",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3e5fe460-8bc4-4e54-bbf0-0ff19298bb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e3f36f-ef56-4e19-b2db-160c10dc19da",
        "cursor": {
          "ref": "b4ae4428-ab7e-4c6a-b46e-38ee1e3f050e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "680491b0-ce3d-4f02-8890-15b6f019e33c"
        },
        "item": {
          "id": "07e3f36f-ef56-4e19-b2db-160c10dc19da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e7d82537-a684-418f-be47-a83ed4da4672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75023e54-7306-41e5-8cff-95d915bca135",
        "cursor": {
          "ref": "202ec838-92dd-4a0d-bdee-72b0d569e262",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "aac83a5a-b641-486d-82f4-31645a1e90b7"
        },
        "item": {
          "id": "75023e54-7306-41e5-8cff-95d915bca135",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e783181d-22c5-45cd-a7a7-152a0a00eae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abb073e-6858-4747-8aa6-3754f1c2648b",
        "cursor": {
          "ref": "328430aa-b8d7-4bf7-8215-9357399a8c3e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9d68679d-7a80-43df-9a04-c6beb1c98b18"
        },
        "item": {
          "id": "7abb073e-6858-4747-8aa6-3754f1c2648b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "22c7d769-2d17-45d9-af7c-d99e352d4b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861d8060-68d4-4895-b61c-91de5362bbbc",
        "cursor": {
          "ref": "865c5137-6b95-4050-a325-389839f57cf9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dfb9c2aa-fbce-4f02-b15d-4cb99dfa4754"
        },
        "item": {
          "id": "861d8060-68d4-4895-b61c-91de5362bbbc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "15fd4c46-c245-4edc-bd76-4cc9887918b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52260ac-0e5f-47b1-b4c0-ebdc1f470d2c",
        "cursor": {
          "ref": "2533ff0a-ed2c-4d83-bd12-b9e655d5aec1",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7d038cc2-4913-4638-8cb2-9836ae07f6bd"
        },
        "item": {
          "id": "f52260ac-0e5f-47b1-b4c0-ebdc1f470d2c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2fbcb9e4-b1e7-497b-8049-19558dbdb55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620a7ff4-225d-4c06-8569-d65558bf25dd",
        "cursor": {
          "ref": "d062c5a1-e5a1-493f-993d-823543c8d205",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d4101aa9-1480-4edf-a7c2-9482cf29342e"
        },
        "item": {
          "id": "620a7ff4-225d-4c06-8569-d65558bf25dd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b063036b-2ffb-4ca6-a612-b9675ad78168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614af102-73cd-4d5b-89ba-3a90c23d9e09",
        "cursor": {
          "ref": "e54eaef4-efdd-4394-b105-184368384834",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "87e85c57-186e-4131-b259-b35a2d37dbc2"
        },
        "item": {
          "id": "614af102-73cd-4d5b-89ba-3a90c23d9e09",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7cb655b1-5fdf-4440-9154-5692d026fa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d8b01e-3a67-4b1d-ac0d-ab720657b7ba",
        "cursor": {
          "ref": "580c4afd-25b9-48e9-a797-429384634035",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cbd01287-ed67-46be-b025-ee102fa16b16"
        },
        "item": {
          "id": "71d8b01e-3a67-4b1d-ac0d-ab720657b7ba",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5453cd1c-0030-493e-98aa-e749a19e722d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595f6b37-70a6-4aaf-9896-ae963131849f",
        "cursor": {
          "ref": "ae46af9e-c95f-45e4-84b9-8af5ad7c6ea0",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a37fc46e-caf5-4ff4-8713-94edbf06e5af"
        },
        "item": {
          "id": "595f6b37-70a6-4aaf-9896-ae963131849f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "10a87f38-2439-40ab-87af-19dde114b10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df94487-2164-4bf6-99aa-c6b35b551240",
        "cursor": {
          "ref": "d80e52f9-5720-47af-ae67-04ab6322a76d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "92b0df57-e3b9-46a7-9cc6-6a24c0d3078a"
        },
        "item": {
          "id": "2df94487-2164-4bf6-99aa-c6b35b551240",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "433e4eb9-1545-4f67-923f-ef7c7166352a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816d5519-0c1b-46d0-a97d-26d8c29eb864",
        "cursor": {
          "ref": "a5e7df68-e6fb-4dfc-9e28-ae420ba81d99",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "642b4205-f9cc-46b0-9183-a0220c5cdfe8"
        },
        "item": {
          "id": "816d5519-0c1b-46d0-a97d-26d8c29eb864",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0d3ba82a-4c74-49bf-bab5-fc3519255b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c067768-3546-48a6-b393-57f51da776e7",
        "cursor": {
          "ref": "c706b065-af97-488f-8a4b-7e925508235a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "410e9ad5-aa3a-410b-93ca-bceb604623d9"
        },
        "item": {
          "id": "3c067768-3546-48a6-b393-57f51da776e7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "afdb9422-1d7d-4093-afb2-775a25454ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a274d28-8ad2-47fa-94ea-48ad92ff18f5",
        "cursor": {
          "ref": "125445b9-f4c7-4253-935d-6dc804f64231",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7a3bd9f1-e5dc-4a57-b4c4-8dbaaa071060"
        },
        "item": {
          "id": "3a274d28-8ad2-47fa-94ea-48ad92ff18f5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f85dfb0d-070d-4fa3-9129-5d62276f101c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42f5667-cae4-4391-be0f-d64dae30719e",
        "cursor": {
          "ref": "6c600335-2e25-4142-9e4a-bb9c80411728",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3130af5c-37b2-4478-a5bd-2031ce2fc1a6"
        },
        "item": {
          "id": "f42f5667-cae4-4391-be0f-d64dae30719e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0cdbde6d-9369-42ec-ab1d-7ebe37d564cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f653c4ed-81cd-4a7c-b0b0-84cb9ea8efa8",
        "cursor": {
          "ref": "e15ae005-7473-4a42-ae02-30b21c86ff46",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "164121ab-203f-4aed-b583-8d960786770a"
        },
        "item": {
          "id": "f653c4ed-81cd-4a7c-b0b0-84cb9ea8efa8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b344a075-b84e-4e36-84c9-dec57ee88bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094832e9-d499-4db3-a601-e9f0dcfd7888",
        "cursor": {
          "ref": "2c8abc70-e88f-4d3e-8e62-4c09b1da5d5a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "67a31058-af72-4d60-bbc1-88bfdba30f29"
        },
        "item": {
          "id": "094832e9-d499-4db3-a601-e9f0dcfd7888",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "56707f8e-a7d1-4bb6-a857-12ab5c5474a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240c6671-fcdb-46fd-9748-e4d4840523d3",
        "cursor": {
          "ref": "f3a5c0f1-defc-4c21-b90e-9b0f6edfe625",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "28b2ba13-d7cb-4e55-abe8-a36b23933044"
        },
        "item": {
          "id": "240c6671-fcdb-46fd-9748-e4d4840523d3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5c41405d-b45f-4a23-8a18-530297e78c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c5fec2-5580-4313-83d0-3fba25ff405b",
        "cursor": {
          "ref": "b250dfc0-a3b3-45e4-8191-85ea1719f39c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "03f8ffab-57bc-411a-b1f5-6ba604dd2ddd"
        },
        "item": {
          "id": "31c5fec2-5580-4313-83d0-3fba25ff405b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8297a3ad-5ecf-423e-aa0e-52f2f9be9e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23911540-062d-4c6d-98df-bdf8b8c43f77",
        "cursor": {
          "ref": "21e5d8e0-2264-4869-bd79-7aba00d7153b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "004e1f4b-17c2-4a00-ada8-27967e2ebd42"
        },
        "item": {
          "id": "23911540-062d-4c6d-98df-bdf8b8c43f77",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "14139381-4519-425d-8be4-b115ee26c5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7fdc70-dd78-4cc1-88cf-4a4b5da0f158",
        "cursor": {
          "ref": "06e22a1b-1044-4f02-ad85-bbf29f84d22c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d1cb6b24-cdf2-4eb9-a3c6-de2d74f4b5c8"
        },
        "item": {
          "id": "9d7fdc70-dd78-4cc1-88cf-4a4b5da0f158",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "01baf460-1b52-493b-94ea-b1ac41930f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b8e4c3-de03-4dc8-ac2c-992bd366ad68",
        "cursor": {
          "ref": "9c52cb21-0509-4213-92e2-cfff41146a18",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6c9a37be-6481-4e9a-86bd-84f020c7902d"
        },
        "item": {
          "id": "a5b8e4c3-de03-4dc8-ac2c-992bd366ad68",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4634d773-cdc8-4235-b0bc-7d34f11ec5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480980d4-b0e3-4745-851c-6684e15d4fc8",
        "cursor": {
          "ref": "e9334bbc-14ac-4e9a-87e1-d2d3b6be5e93",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0cbc7752-03f3-46c6-8182-7e468f74dc3a"
        },
        "item": {
          "id": "480980d4-b0e3-4745-851c-6684e15d4fc8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fda5673e-08c2-4c16-921e-1ec1d8ef78d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b417592f-a28e-498a-b262-5d889aa2726f",
        "cursor": {
          "ref": "06d45667-e5af-43ed-95e3-50283c84ab5e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a7be6b96-5f97-4cde-bb52-bdc8e4381d86"
        },
        "item": {
          "id": "b417592f-a28e-498a-b262-5d889aa2726f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b07c1629-91ea-409c-b4b7-37a2ea56cac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b0e485-ee39-4c96-8af5-d65732b30899",
        "cursor": {
          "ref": "a9be34ab-4c1c-4881-bc35-acbe950b0e55",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e7e97617-d024-45b3-9135-83f87b6c96e0"
        },
        "item": {
          "id": "14b0e485-ee39-4c96-8af5-d65732b30899",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f571ddc9-3100-4bdb-954e-934f575d9c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb62487-a17a-4c19-bd21-c3d11f4afc07",
        "cursor": {
          "ref": "ed6be9ad-7b1a-418a-b04d-5b1a58361454",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dfb4eb74-8a6d-49cf-971a-fc3bafcdc991"
        },
        "item": {
          "id": "0cb62487-a17a-4c19-bd21-c3d11f4afc07",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f318aa69-a0d7-43b6-9581-a341e2237459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6892d8-9daf-4c4e-9c18-f72a77480c00",
        "cursor": {
          "ref": "ab655bf1-5913-4e75-9ecc-0bd7dadf87d2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "54393e24-36dc-446e-ad29-9ed39d9a8a5b"
        },
        "item": {
          "id": "4f6892d8-9daf-4c4e-9c18-f72a77480c00",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "81d5f9bd-54ea-484e-9fa6-f5961c9ede95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78731b05-f624-45b4-82bb-78c958aaf2fd",
        "cursor": {
          "ref": "3a507e53-55de-4f65-9180-aab7a4d8e0a9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6eb69d45-1a1e-428d-be84-072901a6424b"
        },
        "item": {
          "id": "78731b05-f624-45b4-82bb-78c958aaf2fd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7edcbdd7-b319-4d86-9c53-b9d0d79f15b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e05ea3-bb6b-4ef1-96f6-55c02cde51f1",
        "cursor": {
          "ref": "22706536-4481-4b08-af1f-69bda269b936",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e70f9eba-7d60-4b61-b97f-71d099ffbb5a"
        },
        "item": {
          "id": "d9e05ea3-bb6b-4ef1-96f6-55c02cde51f1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2b243fbc-94e0-4e69-9d51-19fc3d95f31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b46289-8db7-4d97-93e7-2acc9765b4c5",
        "cursor": {
          "ref": "98d205f0-c683-4d89-a7a1-d28d3fc01f7c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a028e053-313b-4ed9-a78a-6bbb7309efdd"
        },
        "item": {
          "id": "42b46289-8db7-4d97-93e7-2acc9765b4c5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aeb4ccb8-f677-4949-b7c4-1b78168cd204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b42692-f2e7-401a-997c-c1d44f174096",
        "cursor": {
          "ref": "f28e7cf6-8d1d-457d-a660-d28e665fbee1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1cab409d-93b6-47a9-8878-9cbc99e89d27"
        },
        "item": {
          "id": "64b42692-f2e7-401a-997c-c1d44f174096",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "503106f4-c650-4ec8-90cf-e353531088c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678b0e52-a463-4c5a-861b-e5b46b242b72",
        "cursor": {
          "ref": "23b4b6bb-e01a-400c-8cd7-d0a0f75662fc",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "acdd3b67-fa0f-4bac-aee3-3d1d4b94e7db"
        },
        "item": {
          "id": "678b0e52-a463-4c5a-861b-e5b46b242b72",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "04b838f1-8c18-485b-abc3-64df30129f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b216a1dd-4bed-4b59-93f5-5cd3d7e2f781",
        "cursor": {
          "ref": "2e46ca36-5138-4aba-80b7-9cd374a3944c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "15acf5a2-405a-4a40-afb7-b5cc998abed4"
        },
        "item": {
          "id": "b216a1dd-4bed-4b59-93f5-5cd3d7e2f781",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fc094d3e-6f9c-4955-a8c4-cf9ce1d9fd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b9b53b-d2d7-4a5a-9421-bd9a3fad18dc",
        "cursor": {
          "ref": "17d4258c-7955-492c-bf1c-0188c669663f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "591fbd99-73a7-4502-b8e2-af7bd5368531"
        },
        "item": {
          "id": "56b9b53b-d2d7-4a5a-9421-bd9a3fad18dc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "12b5d0f4-2f7a-4ba3-9567-da3a9bdc8af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b071f17e-75e0-4b02-89e7-cb250cbae03d",
        "cursor": {
          "ref": "2c0fad60-e930-4786-a65d-46a14633d249",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "10e0dbee-5ab5-4771-850e-5734ce9465d4"
        },
        "item": {
          "id": "b071f17e-75e0-4b02-89e7-cb250cbae03d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a245c1c3-a8ea-4d31-8367-35483aa31bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04aa5231-8b4a-4703-bba5-572b21810198",
        "cursor": {
          "ref": "d7ac4a21-f0f8-4044-ab69-d33340d7f4db",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7a5b672e-5426-4f51-8892-9671e0fd163d"
        },
        "item": {
          "id": "04aa5231-8b4a-4703-bba5-572b21810198",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f5625601-8d2d-40e1-964e-0437692dc1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8ea740-260e-4407-9958-2c2deb4aae21",
        "cursor": {
          "ref": "a345a5e2-b623-4964-a787-fa310262ada0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cc462547-21ee-4d66-9bba-c745c2920a3d"
        },
        "item": {
          "id": "5a8ea740-260e-4407-9958-2c2deb4aae21",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "df26b888-68fc-443e-bfd8-b43015dcef52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48684801-520a-4e17-bf7c-82de4684b30d",
        "cursor": {
          "ref": "901c8886-8b97-4ddc-8fce-7a08f4eeb74f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0bd5e33e-4254-45ca-8e77-37e22145a291"
        },
        "item": {
          "id": "48684801-520a-4e17-bf7c-82de4684b30d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4f299858-cd13-449d-ba35-6d1aba7978b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "67ce9587-4869-446c-8eb0-4dadd0b380ec",
        "cursor": {
          "ref": "914c8e43-a7ba-4e74-8b0c-e513be92183c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4f68a355-ba0e-45d8-8753-ae5ba076f0b9"
        },
        "item": {
          "id": "67ce9587-4869-446c-8eb0-4dadd0b380ec",
          "name": "credentials_issue"
        },
        "response": {
          "id": "de137fe7-d3d4-4c57-b787-dc99947a8c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e378c37d-fc5e-4823-a289-2ee3fd497559",
        "cursor": {
          "ref": "bae7038e-3df5-4bb0-9269-20678a40dc3a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "20920f46-2081-4f26-93ff-bb4ed784290b"
        },
        "item": {
          "id": "e378c37d-fc5e-4823-a289-2ee3fd497559",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3a9253c2-0646-4f9f-a82c-598b694a5684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "36a65f6f-40a8-45da-bf8c-18f00962d96b",
        "cursor": {
          "ref": "54e2c8f2-8902-4236-b1c6-1b0f8178e320",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "311c3e5c-1b5d-4dd9-9eee-9a11193895d4"
        },
        "item": {
          "id": "36a65f6f-40a8-45da-bf8c-18f00962d96b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "adb0d2e6-3dc1-4481-9e58-5c9687ff8115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ec7636b9-fe12-48df-8d96-bd4c0b76a6dd",
        "cursor": {
          "ref": "83a027b9-89d6-41a7-8804-852138a5f1d0",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "22456980-5fc3-464c-9306-01ac77a1d223"
        },
        "item": {
          "id": "ec7636b9-fe12-48df-8d96-bd4c0b76a6dd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b2062e52-e573-4823-8827-a0709cfb65f2",
          "status": "Created",
          "code": 201,
          "responseTime": 9748,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae47baf-db87-4af1-9fcb-afa25f51b0a4",
        "cursor": {
          "ref": "e83e32a9-7d8b-45a6-92e0-0760ca5770c7",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "285a1574-020b-429f-bd40-6f61347e8fcc"
        },
        "item": {
          "id": "bae47baf-db87-4af1-9fcb-afa25f51b0a4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8e84c03c-c5b7-447e-9b9b-83034e05bd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d27fdf7c-af87-4a77-8769-c84011d43f35",
        "cursor": {
          "ref": "2784a682-19ab-4606-87f5-cf36aa9900fd",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7e125a7b-45fe-4fbe-bae8-660fac57056a"
        },
        "item": {
          "id": "d27fdf7c-af87-4a77-8769-c84011d43f35",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7ae8f35e-2857-4d1b-9413-65019af6ef48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6ef08f8d-fccc-4ce7-bfb5-01bf68a27bfc",
        "cursor": {
          "ref": "bc12c961-aa9f-45df-bdea-09b36edbe2d8",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "802408ac-943c-401e-bb11-1bae4fc6f155"
        },
        "item": {
          "id": "6ef08f8d-fccc-4ce7-bfb5-01bf68a27bfc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "63957baa-0155-4f7f-9e82-efa81ef4158d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e39275-5bff-4d39-8b8c-552028f08dfd",
        "cursor": {
          "ref": "8ed36bbe-b1f2-483d-8be9-f3ea0ab1f23e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9e6be2eb-4ffc-42c2-89d5-957cf4bd270f"
        },
        "item": {
          "id": "e2e39275-5bff-4d39-8b8c-552028f08dfd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "07addaa1-0fa9-41d8-aaa9-838db8d355ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9cc041-9b97-4fde-b731-1a33c5576b5a",
        "cursor": {
          "ref": "99f442ec-2fa6-46bf-a9cb-805d0a0f53f9",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "955e1384-3a4b-4aa7-93c3-3dce0c72005b"
        },
        "item": {
          "id": "fb9cc041-9b97-4fde-b731-1a33c5576b5a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d7dbee4b-a141-4239-a945-8798b7d73375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b46429-e4cd-437d-a7e1-1cbb2cc62106",
        "cursor": {
          "ref": "4d45fb69-fb71-4112-8610-6bc0e47a045c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e4cdca2f-0e95-4150-84b8-3a685d727f21"
        },
        "item": {
          "id": "65b46429-e4cd-437d-a7e1-1cbb2cc62106",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ecea006b-6ac4-42fb-bb0f-f8b5d30703cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffa223b-5a67-4e8a-8168-bf77c1b7f42b",
        "cursor": {
          "ref": "0d896294-a980-40b6-b556-fe9874092aa5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c19c9d70-5364-4ff2-a498-642daef9b28d"
        },
        "item": {
          "id": "2ffa223b-5a67-4e8a-8168-bf77c1b7f42b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a409c04f-5568-49a0-805c-3e6e8a61e89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7d2cec-60d9-4e62-a2ea-c994e4183b80",
        "cursor": {
          "ref": "d68b3947-a157-4992-8406-a9fe240e648a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "05e2b058-252f-404c-845b-d5027f471700"
        },
        "item": {
          "id": "4e7d2cec-60d9-4e62-a2ea-c994e4183b80",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "94f43acd-826f-4727-a33b-827ac966b506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4fbca6-0b5a-4374-ad8a-47edb3f14205",
        "cursor": {
          "ref": "15ce2c15-0af9-4a67-aed0-ba134e256d12",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c22f905c-8f6e-482e-9814-a59f9ae3c41a"
        },
        "item": {
          "id": "1a4fbca6-0b5a-4374-ad8a-47edb3f14205",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "30bbbb2d-7fad-43b8-96d4-6dd35c59ff8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2b2bc5-52f0-44d0-b6b8-72311da37db5",
        "cursor": {
          "ref": "6471fdae-a229-41a3-b64a-12ba60b8c395",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bb2444e2-8155-4001-9d1b-07b7549156be"
        },
        "item": {
          "id": "1f2b2bc5-52f0-44d0-b6b8-72311da37db5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9c00ed36-e30e-4a80-b3e6-d007f249a2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c89921-6da3-4763-9382-9e8f2e99ad4e",
        "cursor": {
          "ref": "74e94429-af0c-4add-ae23-0a85e83903d6",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b5e8d0e4-2585-43cb-85af-04bfb297fde4"
        },
        "item": {
          "id": "a1c89921-6da3-4763-9382-9e8f2e99ad4e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6d53b333-dbd5-43e3-a876-bdd453a48647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec14504-4fed-419c-92bd-e5e43704813e",
        "cursor": {
          "ref": "c97dd248-f100-41c0-8ac7-c4c02b44d862",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c9ce6043-a1ea-4272-b974-1da54d764c6b"
        },
        "item": {
          "id": "5ec14504-4fed-419c-92bd-e5e43704813e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "250b7a34-370e-4000-b462-7b28b2b39a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df2780c-c689-45cc-be53-bef986f9361f",
        "cursor": {
          "ref": "845a7e3d-fc99-4b81-992c-680d0facd4d1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "052a9cdb-177c-46e2-a0aa-196d635d692c"
        },
        "item": {
          "id": "9df2780c-c689-45cc-be53-bef986f9361f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7df362c4-5a87-420d-b36d-e327bfc04ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29df664d-67fb-4f2e-9946-9f4ff24424ae",
        "cursor": {
          "ref": "52db8fff-2eba-423c-81ef-272f887f7d73",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ae308c78-f4b6-4b58-922c-eab702eb502b"
        },
        "item": {
          "id": "29df664d-67fb-4f2e-9946-9f4ff24424ae",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7c9696d2-624f-471a-b41e-8748812e2c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c508798c-3cb2-4582-8948-1f951eada1e4",
        "cursor": {
          "ref": "4028c624-97d3-4a72-b608-96089b8a4687",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "04e97371-e328-4e21-a213-69eb12a07c9e"
        },
        "item": {
          "id": "c508798c-3cb2-4582-8948-1f951eada1e4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "31d50d10-95e6-40b5-b133-10a2b2eb66e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0bfc2b-fe48-4322-b025-5cfe4816447c",
        "cursor": {
          "ref": "825e5e18-c456-47d4-86d2-35b8c4930f8c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4aebc552-2656-40f0-8e89-ff5257e10702"
        },
        "item": {
          "id": "ff0bfc2b-fe48-4322-b025-5cfe4816447c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e8764ad3-89e1-48e9-b08b-a462393d8ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4798370-e036-47a0-8aff-c978644fa3c6",
        "cursor": {
          "ref": "43331837-dfff-497d-bf4c-ad96c4a58cc7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8c51d38d-ea1b-49ae-aee9-c86ecf6129f6"
        },
        "item": {
          "id": "f4798370-e036-47a0-8aff-c978644fa3c6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "80812a95-67fa-4f48-abd6-d3e39cfc6ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1804036-eca2-498e-986e-287ccad7ba68",
        "cursor": {
          "ref": "2627a862-0bbf-47b8-97e6-8f3f2e16877f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0874b242-f78d-43f2-a3be-937730bad7b3"
        },
        "item": {
          "id": "a1804036-eca2-498e-986e-287ccad7ba68",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "75e4be00-9e14-4e84-98bd-06871f78f4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a963c5a9-8a26-4047-affb-ca9b2b78f359",
        "cursor": {
          "ref": "d6eaa29b-65ff-430b-b56b-d7d2ebf89142",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e6a21ad8-8004-4534-841c-78bd6f73dbb0"
        },
        "item": {
          "id": "a963c5a9-8a26-4047-affb-ca9b2b78f359",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2afa1092-8341-469d-a0cc-80ce57a1879a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a05a3e40-ccab-45fe-8928-efdda4ac85eb",
        "cursor": {
          "ref": "464944cb-f969-49a6-a045-dbe3bbbe6631",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a4c1fe2a-c94b-413b-bce4-6f0aee5f6d8d"
        },
        "item": {
          "id": "a05a3e40-ccab-45fe-8928-efdda4ac85eb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f615ee7-0450-475b-82a8-85b4c316efe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c188021b-b92c-414f-ba3a-26b2bf45f2da",
        "cursor": {
          "ref": "b81ca9ce-2979-48ed-b539-050fdf734465",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "20db76b5-4176-4546-8e68-1cd8b3a19961"
        },
        "item": {
          "id": "c188021b-b92c-414f-ba3a-26b2bf45f2da",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07a06e95-e00f-4984-9c88-b16f670a33e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2161e95f-9374-4553-98c6-a64671b1198f",
        "cursor": {
          "ref": "19a501ec-ae66-418c-a197-9c7e5fac7156",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "64da0695-9475-4ad1-b7d5-2f91ba2c098b"
        },
        "item": {
          "id": "2161e95f-9374-4553-98c6-a64671b1198f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "abfa523b-aa93-4bbb-93bb-cb7fdf72eeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697ce8d3-25f2-4622-ab11-c6c3cc207560",
        "cursor": {
          "ref": "c600b9ce-1dfc-497a-984c-73bd80b3fd7e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f297dd74-b77a-4a55-aa14-3213c5f33b9b"
        },
        "item": {
          "id": "697ce8d3-25f2-4622-ab11-c6c3cc207560",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2f17d87a-7a3f-44d0-9ca5-cb0b3f081ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adec77b-75e6-4490-8364-9f55c2575271",
        "cursor": {
          "ref": "d25ea54f-3aa5-4725-9c49-01e019c39935",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "afea35e3-762f-46c9-a068-21c279767414"
        },
        "item": {
          "id": "0adec77b-75e6-4490-8364-9f55c2575271",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eb69f2a3-86c1-4de0-98d7-5ecc28547053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe02e56-a243-43d3-9b29-1356fb981d62",
        "cursor": {
          "ref": "0a5b4a60-a106-4bb0-8c3b-1b61ef78d5d0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6fdf2f24-d8b1-47ef-b487-5e9b322b7910"
        },
        "item": {
          "id": "cbe02e56-a243-43d3-9b29-1356fb981d62",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bf8949cf-a41a-4e4e-a537-753d179e6634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a06efcf-04c5-4fd9-ab7a-cf724d71487e",
        "cursor": {
          "ref": "5346fbb4-ac08-4906-9502-8663b7a0eaa1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e9aef974-3f60-4822-adb8-58fa7b2ae034"
        },
        "item": {
          "id": "2a06efcf-04c5-4fd9-ab7a-cf724d71487e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6a1d9567-a56d-48e6-8539-633b71c8deb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8b618d-4bc8-4ff6-aaa1-13e0d765f400",
        "cursor": {
          "ref": "0cb407e6-c87d-4fcd-a6dd-b4c2b16362b1",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ebde1cb2-fdb8-4426-895d-7736ecd76744"
        },
        "item": {
          "id": "3b8b618d-4bc8-4ff6-aaa1-13e0d765f400",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "16490e5f-ffbe-4d48-b8cb-a09d61eb04bb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "eef4282a-fbfb-4ea1-9128-21421f2e003f",
        "cursor": {
          "ref": "5aeed40c-2844-4254-804c-86e290714665",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "798b216f-b381-4144-8337-33c01ba497a7"
        },
        "item": {
          "id": "eef4282a-fbfb-4ea1-9128-21421f2e003f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5b9b717c-399e-4f4d-98bc-b76069a144ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ac71ba-13fe-45aa-9071-ea8137b0d00c",
        "cursor": {
          "ref": "97503305-4bdb-47f0-bb90-6cfdc4b3b18a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "291eb937-66ad-4467-8a84-7d0a335176a6"
        },
        "item": {
          "id": "63ac71ba-13fe-45aa-9071-ea8137b0d00c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9b2537dc-0dda-49eb-9514-63eed660b089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d76d086-6629-488e-8bf1-1c884d2aa560",
        "cursor": {
          "ref": "ac378595-5908-49f6-823c-5c9b97867dda",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1c563b03-c5f9-44ab-88b9-06b4792afb9b"
        },
        "item": {
          "id": "3d76d086-6629-488e-8bf1-1c884d2aa560",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "76a408a0-d960-40bb-867e-b124dfa87612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ff15de-574e-4545-87cc-62666c6fb036",
        "cursor": {
          "ref": "531795af-200d-41af-9863-e91261b94a9d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "430a765e-fe21-4743-b3f5-9320e408b81e"
        },
        "item": {
          "id": "c6ff15de-574e-4545-87cc-62666c6fb036",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "daae1649-17d0-4a33-aeaf-43a99f456548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67e6209-3c85-4ffd-9313-67f240c8e953",
        "cursor": {
          "ref": "765574ee-e16a-4707-8c47-f1b779ab6337",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0dda9786-b1cc-4f06-9395-9d53a7b7a177"
        },
        "item": {
          "id": "d67e6209-3c85-4ffd-9313-67f240c8e953",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3ae989c9-a124-4404-bfd3-0fa04279937e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c45268e-3fef-4df3-bc5a-74ecec11a4af",
        "cursor": {
          "ref": "b92959af-5a67-4e7c-814e-15bf3acb7e4b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "769f763a-522f-4680-a01b-01bf000cab89"
        },
        "item": {
          "id": "1c45268e-3fef-4df3-bc5a-74ecec11a4af",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d3a29b20-5763-431f-b043-613646cd6655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af85a51-dacf-42a9-b1dd-83b60785d7ef",
        "cursor": {
          "ref": "6ff8826d-3894-413c-857a-532180f32dad",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9c1a9f51-47cc-4077-be88-04753b2f238d"
        },
        "item": {
          "id": "9af85a51-dacf-42a9-b1dd-83b60785d7ef",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7fb14da7-0d22-47e8-a41d-99931f0c151f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a49130ff-b7ee-4e3d-8910-49bbe9c504bd",
        "cursor": {
          "ref": "0eeb5688-4736-4b4c-9a7d-49bbb711815d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c261388c-3315-4233-8160-004fb49556ec"
        },
        "item": {
          "id": "a49130ff-b7ee-4e3d-8910-49bbe9c504bd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "170d6a22-36f5-4ac5-8934-e053d5677020",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "dc5d7945-c3e1-414b-899c-a9f72e498a0d",
        "cursor": {
          "ref": "4cc74805-fab0-4b3f-b871-a9c1e55b2734",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2e839dcb-6af9-4e8e-bf92-0e1a6ddd0748"
        },
        "item": {
          "id": "dc5d7945-c3e1-414b-899c-a9f72e498a0d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "eaf6998f-26e2-4476-a5d7-d2567e691982",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "66b1aeda-8b1c-4020-9f16-99165c15ae13",
        "cursor": {
          "ref": "3d451c96-d582-4fb9-bd17-46a2f32c48a7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b069305d-c45d-49fc-aa0e-9cdeec29ac8a"
        },
        "item": {
          "id": "66b1aeda-8b1c-4020-9f16-99165c15ae13",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "687f8ee6-fe64-4bbf-a001-287917255e48",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "4ffab26a-f490-43e0-88dd-83524e277280",
        "cursor": {
          "ref": "404025c7-1f87-4b9c-9e0d-cff1110dfa5c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2ce6000a-9260-47ba-ae16-2fa7e7d6198f"
        },
        "item": {
          "id": "4ffab26a-f490-43e0-88dd-83524e277280",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5c9d7029-28b5-4fc1-8e3e-db78ea23c4b6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "86ff1889-1117-4d24-823b-424b00049d68",
        "cursor": {
          "ref": "8c7fa35c-db64-439e-b86a-7d0e020311ba",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "01f2703d-12be-4d89-9fb4-de97424848f7"
        },
        "item": {
          "id": "86ff1889-1117-4d24-823b-424b00049d68",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "764b87af-7535-48de-bb6a-8645f00b6a82",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 137,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "99998944-fc12-4b26-bee5-4cdb838e022b",
        "cursor": {
          "ref": "f9a3a9db-71bd-4dab-b0ab-db9569784237",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ea2eda7b-3241-4dbc-b91b-73320d4d21d7"
        },
        "item": {
          "id": "99998944-fc12-4b26-bee5-4cdb838e022b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f725b32a-1c7c-45bc-8469-67e02e0b339e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1932dd2b-3212-4f50-a6b2-f3bf81b4758d",
        "cursor": {
          "ref": "151de47f-8825-4c01-aa0d-19d91e37e4c3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "666cdfed-6a9c-4da7-ae95-83606dc69d3a"
        },
        "item": {
          "id": "1932dd2b-3212-4f50-a6b2-f3bf81b4758d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3df1d986-728a-4e6f-9e93-848e7c1a7aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31e344d-bdef-4952-8cca-c58d833a1212",
        "cursor": {
          "ref": "adbc14da-e6cb-42c0-840d-fdc7f557f8fc",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "314e358e-1a61-411d-bfc6-7ad7f4f98f05"
        },
        "item": {
          "id": "c31e344d-bdef-4952-8cca-c58d833a1212",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e01f0c8d-e2b0-4f3b-9636-bc9445059ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a7eb82-5e18-438c-a29f-3b7d82d91081",
        "cursor": {
          "ref": "f770067b-72e3-4396-b8c5-3f9a301b2f82",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4273af3e-228d-472f-ace1-fc5a18dea87f"
        },
        "item": {
          "id": "c0a7eb82-5e18-438c-a29f-3b7d82d91081",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "61d1b090-f7eb-45ab-85ac-e55f4fe890c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad671a7b-259c-4a11-9775-4895ddc75202",
        "cursor": {
          "ref": "b118b26a-a1f3-4fd2-81bd-11769311cebf",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "61d4ab4c-8e8b-4a3a-a6a4-5510dd949177"
        },
        "item": {
          "id": "ad671a7b-259c-4a11-9775-4895ddc75202",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2ee97dfd-6da4-41c5-ad57-3f7e0f4ba84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a508d42-b6c0-49e1-94b9-be4be8420c4d",
        "cursor": {
          "ref": "55572191-4a48-44fb-811e-d331f382e45b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d7b1f79e-d673-41c7-908f-7108029e2c10"
        },
        "item": {
          "id": "6a508d42-b6c0-49e1-94b9-be4be8420c4d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "367a403a-eb81-401e-a93b-1c25485a5b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d7fbc8-6a2d-413c-aa94-0b6fd6c4c30d",
        "cursor": {
          "ref": "8b934f6f-5a74-40da-a0a6-8bab99ba730c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8746159d-c190-41d2-93a0-767c5f0ca891"
        },
        "item": {
          "id": "f0d7fbc8-6a2d-413c-aa94-0b6fd6c4c30d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "58f64460-0e36-427f-9287-dee1a63b8a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151b52c6-e088-49d4-a021-335056638ab4",
        "cursor": {
          "ref": "62e7887a-1979-4c56-8d65-55a7b89c07a1",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a178568c-290c-4bb3-8ef0-7e0ea1a1c7f3"
        },
        "item": {
          "id": "151b52c6-e088-49d4-a021-335056638ab4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "db959a70-9954-4684-9ada-53edf2689d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aca0ffc-65bf-4653-951b-b65140185f5b",
        "cursor": {
          "ref": "a1b8069d-747f-4f8b-ae13-abc82cd18130",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3b677ae0-63db-4641-b2c2-2c8ef45ee64b"
        },
        "item": {
          "id": "4aca0ffc-65bf-4653-951b-b65140185f5b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "768752e3-e90b-4187-a729-e2c5970b217a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eeacd7e-36d8-4dfc-84c2-1bd01b07f59a",
        "cursor": {
          "ref": "3b8a4509-9717-4f80-9594-894a529a6b22",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "78dcd384-6531-40b9-b012-f67d6f2a9a7f"
        },
        "item": {
          "id": "8eeacd7e-36d8-4dfc-84c2-1bd01b07f59a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0bb6cbde-95b4-4407-b558-668159ce3ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3fcfc9-07a2-4a2e-ac8d-a7bc3839018b",
        "cursor": {
          "ref": "89e3eab7-ee93-4721-8c69-eb42366a9693",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "44ed0d33-e2b3-4776-8bde-f77ba72d3cbf"
        },
        "item": {
          "id": "6d3fcfc9-07a2-4a2e-ac8d-a7bc3839018b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b664f1c7-059b-4797-a49b-b4bb41c6f125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06cec74-4630-4c04-b5bc-d0ea4d7460da",
        "cursor": {
          "ref": "49a91a60-fcd3-4f50-a3b4-0f1004aa6a27",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6c18deef-144f-4158-89f6-cf1ab89da3f5"
        },
        "item": {
          "id": "a06cec74-4630-4c04-b5bc-d0ea4d7460da",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3229cfe9-f10e-4d1f-9803-172d67006495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8193038-f33b-4674-b776-daafab59a632",
        "cursor": {
          "ref": "c51c1190-200b-4d31-9e39-af14b7ee6263",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2041627a-18d0-4e28-84b4-5cb699ff1b81"
        },
        "item": {
          "id": "b8193038-f33b-4674-b776-daafab59a632",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9c2267f9-4913-4008-89de-04290eba77b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfb6568-edba-4af7-9f30-a0c50701460a",
        "cursor": {
          "ref": "fa484c09-e4e1-44ec-a24d-08489bb4f151",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4d47cf3d-0c1e-4aa8-9e86-4802e6462839"
        },
        "item": {
          "id": "dbfb6568-edba-4af7-9f30-a0c50701460a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f314e8f0-0852-4eed-b769-593d1d3f6d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63336940-4110-465a-baaf-540f3145afc8",
        "cursor": {
          "ref": "adb1c114-adc9-4091-9466-1eeaa18fff51",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e0014ba8-b82e-4332-ac3a-1425aff6ad82"
        },
        "item": {
          "id": "63336940-4110-465a-baaf-540f3145afc8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "93543ed3-c492-4405-b43a-776aaa9629d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5df669d-371d-4160-ae0d-2bc9e361721f",
        "cursor": {
          "ref": "cd47bdda-ec1d-4e8c-b0f1-13ba3c101357",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "18f5ddd4-75ed-4b81-830a-fd3ce1c829ac"
        },
        "item": {
          "id": "a5df669d-371d-4160-ae0d-2bc9e361721f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4d817d36-74af-4e5f-a174-6aaf1a4f93d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8dbc32-c0e6-407c-b790-b93ec8cbf16a",
        "cursor": {
          "ref": "0f1f7b93-9573-4d69-8f58-c9543a1b392f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "20a48068-668a-4e30-8841-5d24761020d9"
        },
        "item": {
          "id": "8f8dbc32-c0e6-407c-b790-b93ec8cbf16a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1797ffe8-9ee8-48c5-a458-22b4fdc8072a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7702894e-60f5-4278-9040-bf254cdc2454",
        "cursor": {
          "ref": "d18aab6f-2517-48f6-b4fc-26de3ef15b64",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "142f2e1f-bc5f-4b29-89db-7d34333e30db"
        },
        "item": {
          "id": "7702894e-60f5-4278-9040-bf254cdc2454",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f1d28790-6897-44f1-9ffd-477af7f04b30",
          "status": "OK",
          "code": 200,
          "responseTime": 139,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "a8a0bca6-63d7-4b83-a2d1-caca80c1da14",
        "cursor": {
          "ref": "aa705a57-2453-43d4-aa4d-61fe8f72adbe",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d390467c-4e4f-4a79-ba53-ce16ea4c1c88"
        },
        "item": {
          "id": "a8a0bca6-63d7-4b83-a2d1-caca80c1da14",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "668c23c2-3893-4c04-ad95-db16d26a6092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3313372-020b-4ab9-bdd9-ab77b8dbf296",
        "cursor": {
          "ref": "c9b060dd-351c-4b5a-acfa-a7e0393e86bf",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6155986f-fda9-40df-8fda-ecd02c7d7f92"
        },
        "item": {
          "id": "e3313372-020b-4ab9-bdd9-ab77b8dbf296",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "12b08542-c551-434e-8b17-8adfa975528f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca12b8e-6500-48e1-83d1-b98e2a47746b",
        "cursor": {
          "ref": "eb267058-a260-4d95-9160-c8204acdfdb8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9f899800-8e60-4c64-8ae9-959470a42284"
        },
        "item": {
          "id": "aca12b8e-6500-48e1-83d1-b98e2a47746b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7a57cf62-48d5-4564-aac6-68a59867ae9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8da2ea6-84c8-4d37-ba37-ddc1f82fb8ba",
        "cursor": {
          "ref": "e6b94c04-7d9d-4003-934c-aed04fbe1fce",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "608b0702-7c9b-48cf-ad5d-8e53a6f8d4b0"
        },
        "item": {
          "id": "c8da2ea6-84c8-4d37-ba37-ddc1f82fb8ba",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "186e34eb-2764-4aad-aab5-99f27e0865ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c493b1a-6da2-4c95-b847-61696dea55af",
        "cursor": {
          "ref": "41485e12-5735-47da-92e3-85da69729eca",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c1d859b8-0f6c-4cfc-8ed0-7686476d9dee"
        },
        "item": {
          "id": "7c493b1a-6da2-4c95-b847-61696dea55af",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "39728c68-1652-4caf-a966-1a424b27089e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c4d96d-cfcc-4915-a1e8-6c37a52637c5",
        "cursor": {
          "ref": "f16c8559-2ad9-4d94-acbe-78fe5c64afc0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7ac06113-9dd9-45f1-815c-dff55b1d387e"
        },
        "item": {
          "id": "b7c4d96d-cfcc-4915-a1e8-6c37a52637c5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb6f7a4c-f2ea-4065-bd44-de3e6114d513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caae3c09-32f3-40ca-a511-ff81569ee9c2",
        "cursor": {
          "ref": "afca5e9a-b559-4cf9-b1d6-68fb2914a5e6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "63027e50-1059-4a4c-88ca-45ac59dc2550"
        },
        "item": {
          "id": "caae3c09-32f3-40ca-a511-ff81569ee9c2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c54974ea-40d6-4ade-854f-58e73fe5b855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2280994-d4c9-480c-a789-3988e98e53b0",
        "cursor": {
          "ref": "1ff220ee-d81a-4556-9db1-223a7e229001",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cbd42d27-264b-43ed-abb7-2dd1139d1c49"
        },
        "item": {
          "id": "c2280994-d4c9-480c-a789-3988e98e53b0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2375519c-b303-492a-979c-b95404143048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbed3f7b-8887-4d81-aa66-e48110a61d34",
        "cursor": {
          "ref": "637af071-1c3d-4edc-b531-313d1eebe664",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "dc6c054c-5b89-4d8e-a1c1-ce4c955d049f"
        },
        "item": {
          "id": "cbed3f7b-8887-4d81-aa66-e48110a61d34",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b86d4baf-1247-4b60-9d6e-a31ba397c122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788ddb0b-42ab-42d6-830b-e5e7cd153d47",
        "cursor": {
          "ref": "ed45b46a-71a4-4ecf-9400-e05ff29f4f01",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3c92e619-528b-4d76-a98c-31e4e94cd7e7"
        },
        "item": {
          "id": "788ddb0b-42ab-42d6-830b-e5e7cd153d47",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8b90b59f-b0af-47e8-b0d8-145200913672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b34800-d231-4b17-9f6b-7747214c09fc",
        "cursor": {
          "ref": "c7669250-0087-4591-868f-1492b24d27ea",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d8ed5931-534f-4c6a-ba45-f04a4e44d32c"
        },
        "item": {
          "id": "83b34800-d231-4b17-9f6b-7747214c09fc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3e2f382b-e53a-421d-88cb-24301feb418c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05791946-cd57-452c-a7a9-25a3269e3ec0",
        "cursor": {
          "ref": "824352f1-5e74-4706-8487-ec65ba22007e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4bc3d9c0-3611-426f-97f8-cab17a15f998"
        },
        "item": {
          "id": "05791946-cd57-452c-a7a9-25a3269e3ec0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "415d1d32-6406-4902-958a-ff7197b4a56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5bc582-49e1-4270-8518-2f57ff560068",
        "cursor": {
          "ref": "d2b5b4fd-dca3-4bae-a058-bdbf6954f799",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9d8dede7-6e3b-4201-a79d-b4e5cfb97854"
        },
        "item": {
          "id": "6c5bc582-49e1-4270-8518-2f57ff560068",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b9a15b00-a141-40ba-a301-9ed2534a86ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4274996f-f226-4db0-a5d7-1c21951936be",
        "cursor": {
          "ref": "451ac466-15cb-4841-a75c-78075e728597",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "afcf90ad-c9fb-4373-938f-26d361e78dd7"
        },
        "item": {
          "id": "4274996f-f226-4db0-a5d7-1c21951936be",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2e9eea50-62b4-4ead-bd58-08dde25b4e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e644217-9962-4aaf-bacc-713fed13bf14",
        "cursor": {
          "ref": "bcbf7fbe-c0e8-4f6a-a2b6-6d5cdb0d3cb4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ae40de00-27c1-4ab6-b498-eed8fba660c7"
        },
        "item": {
          "id": "3e644217-9962-4aaf-bacc-713fed13bf14",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f933cb18-c353-4c75-a922-f2c57c55a753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab18129-9027-4efc-99b9-987e3dc38c1e",
        "cursor": {
          "ref": "5e819f35-2378-4913-befa-136d804d95c3",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "80f01d62-e147-4eab-bb4e-4d903012983e"
        },
        "item": {
          "id": "7ab18129-9027-4efc-99b9-987e3dc38c1e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "33eee284-b60b-42ba-8edc-d515d4ae0a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a902a9ed-8e2f-4b18-a823-4b8421b33ab4",
        "cursor": {
          "ref": "2febb8be-3834-4667-bf00-66ca10c226d1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c31bf954-60bc-4b80-9ec0-b41178dde62e"
        },
        "item": {
          "id": "a902a9ed-8e2f-4b18-a823-4b8421b33ab4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "41577694-8349-4b52-93f2-7e56e79c2210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87b81a2-abe6-41a2-99e3-c76542248ac1",
        "cursor": {
          "ref": "5e8626ce-255f-4a0c-b644-753215db0892",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "87f2f918-26d2-4cc5-b49a-bc3384f7398c"
        },
        "item": {
          "id": "e87b81a2-abe6-41a2-99e3-c76542248ac1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "164650a0-87e7-4a16-b2a3-52df05652c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be64ab1-45a2-4d7d-bbac-6a80aecc48d2",
        "cursor": {
          "ref": "aba80ac8-a1a3-4f18-857f-699110e195f0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "264a5888-5342-40b7-b43c-40dc359deab6"
        },
        "item": {
          "id": "3be64ab1-45a2-4d7d-bbac-6a80aecc48d2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0c1f43ed-5609-4288-b230-a5f294e71e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02b557d-85d2-4c16-a7be-eaeb657fa638",
        "cursor": {
          "ref": "459f6be2-c17f-481a-87e1-3a416297044e",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "aa4dbfd5-c740-4f74-ba66-dc4d7d33995a"
        },
        "item": {
          "id": "c02b557d-85d2-4c16-a7be-eaeb657fa638",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "455de924-057a-4d5b-aa00-80bd23058580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26048fd6-fd9c-425e-9950-afcfae8bd84a",
        "cursor": {
          "ref": "c767c7d3-be01-4b8e-8b02-d9e75e5c8c09",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9729cb42-518a-470a-a2d6-9028ab3ce6e2"
        },
        "item": {
          "id": "26048fd6-fd9c-425e-9950-afcfae8bd84a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "73c25531-1c99-4c0c-815d-32e5774ce552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf7d21d-d577-4afd-bb19-4b330bea93dd",
        "cursor": {
          "ref": "e83ad11d-322e-4e8c-8e35-e03a122b1719",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5473adc8-1511-42e3-9410-4208cdb60542"
        },
        "item": {
          "id": "9bf7d21d-d577-4afd-bb19-4b330bea93dd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6aada0bf-4dd1-4108-accf-05a8782bb5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c44ea2-848d-402f-b13a-c77e142b6cf6",
        "cursor": {
          "ref": "880a89b7-d33a-4a47-b5a2-50a4860c5586",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d905e658-2495-4e84-9775-33b4e6bfdd74"
        },
        "item": {
          "id": "e1c44ea2-848d-402f-b13a-c77e142b6cf6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e89fa1dc-e9cc-4e77-9d12-d16b79daf5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81156f5e-8e97-48dc-afb1-3abe0dd3e3ea",
        "cursor": {
          "ref": "a8ea9a7f-486a-4855-8afa-26341286ff8d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c416aff7-0408-4599-bc74-519770831cfb"
        },
        "item": {
          "id": "81156f5e-8e97-48dc-afb1-3abe0dd3e3ea",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1f9364be-45f5-4a1c-bc2a-941cd23b7337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76282d74-1132-418a-8cfa-05a1bebc92b6",
        "cursor": {
          "ref": "725b8bf3-42ca-456c-a4c1-16aa535278d5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b5fff0c5-f043-49de-a582-403a5cf9af65"
        },
        "item": {
          "id": "76282d74-1132-418a-8cfa-05a1bebc92b6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "090fa651-3198-4574-9ad0-e781e549ba06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d9ad65-8806-4fff-bfc2-63bee39eea89",
        "cursor": {
          "ref": "f3efb9bd-a354-46ce-84d7-de526ccd0ba6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "209dec7b-44e6-47e0-ac23-dc6bc40bdb2a"
        },
        "item": {
          "id": "e3d9ad65-8806-4fff-bfc2-63bee39eea89",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0cc7f2aa-0199-42a7-85dc-018e06c5e256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed0e7fb-c00a-45a8-8f6f-4883dd93e29c",
        "cursor": {
          "ref": "6e09871c-50c1-447c-90ff-7a72e90f4af2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "256fd5c2-3a97-4ef1-a5f0-07c5e25a394a"
        },
        "item": {
          "id": "1ed0e7fb-c00a-45a8-8f6f-4883dd93e29c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4a741181-51da-4168-a488-3f5082a386df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12bd72d-59c2-47da-a7bd-b167dec5aecb",
        "cursor": {
          "ref": "59e3e345-3669-4811-9e72-71bc9f186a40",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "87774284-377a-4b97-a20b-d7829b42f21e"
        },
        "item": {
          "id": "e12bd72d-59c2-47da-a7bd-b167dec5aecb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9db83cc0-c910-43c2-b94e-23511b4d592c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37f901b-a2a2-4121-b5a4-5d8be55825d3",
        "cursor": {
          "ref": "5e3ef875-6089-4e06-a08c-429d70ba93b7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "07c7ab58-2102-4d1c-9d1d-b860e2baa765"
        },
        "item": {
          "id": "d37f901b-a2a2-4121-b5a4-5d8be55825d3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4692f6e0-b87e-41c7-a2b6-722960ec223b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ced4eb-e864-4864-bb7f-a84698b14948",
        "cursor": {
          "ref": "051c0aec-f3e3-48bf-a078-081c8c89bda1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ba1e18ba-3b66-4d52-a998-43e05e671a4e"
        },
        "item": {
          "id": "b2ced4eb-e864-4864-bb7f-a84698b14948",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "93b1c845-7bbb-49f3-9fc2-5e4f5c7131b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8efc6ac-a7ba-43dc-9915-09381cfd2e90",
        "cursor": {
          "ref": "b2d298ed-f7bc-4ee2-a2f7-e105f786bb18",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1cadb2ae-26f0-4314-9433-513d54121098"
        },
        "item": {
          "id": "f8efc6ac-a7ba-43dc-9915-09381cfd2e90",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8c6f735f-a16a-4fca-883e-6f2276eb15ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505b1d87-9e17-4b85-b741-46407472d76a",
        "cursor": {
          "ref": "82b02e7b-7f00-4bac-9fd6-cd52e59336b8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "267a96cf-2dae-4585-ba29-7a8f24f7b878"
        },
        "item": {
          "id": "505b1d87-9e17-4b85-b741-46407472d76a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fa800ac1-3e30-4e77-aaf0-29aae55f2c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326ca7bc-dd15-4d39-931c-75c60b310c5f",
        "cursor": {
          "ref": "49fc605d-73ce-4c50-af22-be763478c364",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bc22a0c8-991c-4ff7-ae43-c5fa3d5567e8"
        },
        "item": {
          "id": "326ca7bc-dd15-4d39-931c-75c60b310c5f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9d5008d4-2616-42e6-9e83-1ffe0d0531b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abdc55c-8878-4137-8107-eec4bc8c2d2c",
        "cursor": {
          "ref": "360f05af-711e-4dfb-a435-ad7f3d4cf225",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7d5428ba-410e-49bf-ad14-ee6efe9480a8"
        },
        "item": {
          "id": "3abdc55c-8878-4137-8107-eec4bc8c2d2c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3644b03f-bbcf-4a53-8316-8f707e7a0c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc9ed05-f47c-438e-b93b-c2ed6ba82143",
        "cursor": {
          "ref": "3aac7791-a6bf-4cf8-bc36-23cb60f21da9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d214b749-db5e-4d04-9c63-b226cb24bf37"
        },
        "item": {
          "id": "ccc9ed05-f47c-438e-b93b-c2ed6ba82143",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "82c4d8ad-d54f-43ae-a660-289615e9caa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d533d6-95bc-4a95-9c8d-84d853475719",
        "cursor": {
          "ref": "23f3fab0-cac9-4137-b2c2-ab9a21539a9c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2f632064-4282-4a75-b54b-8b583abe2ba6"
        },
        "item": {
          "id": "86d533d6-95bc-4a95-9c8d-84d853475719",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "443bc7df-6998-45b1-a911-d891231e84eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd731299-b10b-460a-a13a-e5678187e0cc",
        "cursor": {
          "ref": "8f516255-cfbb-4c9f-9f82-0b54648eb256",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1e2c9650-d83d-4f61-902a-11502c863188"
        },
        "item": {
          "id": "bd731299-b10b-460a-a13a-e5678187e0cc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f6f01927-ec15-4293-ac36-febec1f1df47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e52d705-5136-43bf-93bd-da6a35d865a1",
        "cursor": {
          "ref": "5256aa16-91b7-4aaa-ae97-4de8179d9ce1",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3bfda83b-306e-4ff1-9df4-c7ec684c5f6e"
        },
        "item": {
          "id": "3e52d705-5136-43bf-93bd-da6a35d865a1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ef0f9cd6-7f9e-4370-9fc5-a446b0c39271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad0512f-c401-4024-b0bb-dd43e36cfce3",
        "cursor": {
          "ref": "4485c0ad-313a-4a1f-986b-0965287b7c3a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a7ebb5fe-d76e-4b80-a79b-7f2cbdcf2e16"
        },
        "item": {
          "id": "8ad0512f-c401-4024-b0bb-dd43e36cfce3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f5f20066-8253-4f7b-9c40-a525c0028053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794c1e6c-0e46-4b09-a1c6-867889ac05df",
        "cursor": {
          "ref": "655cc222-835c-4f6a-bdfb-3b5c1407360b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "238639bd-1cea-440c-a163-1d06c912beae"
        },
        "item": {
          "id": "794c1e6c-0e46-4b09-a1c6-867889ac05df",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d8ae7d9c-1aed-463a-9caa-da9abde57f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cea6efe-b9cb-4c0b-a4b8-fc5387e68585",
        "cursor": {
          "ref": "8ce82656-30fe-4d1a-9113-87d1cd810004",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "af7e65f5-f78d-4113-9a7e-5955086d7d34"
        },
        "item": {
          "id": "9cea6efe-b9cb-4c0b-a4b8-fc5387e68585",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bdb96612-a9ce-4745-ac11-aec67052a168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a116f50-a4ac-4ec4-96d2-179f9433c98c",
        "cursor": {
          "ref": "1140b653-cb86-4d04-bd70-e878a1f336ad",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2b771186-3b44-4db0-a117-aa198aa81e43"
        },
        "item": {
          "id": "2a116f50-a4ac-4ec4-96d2-179f9433c98c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "71cffe8d-d3ec-4406-bb18-e3e653202b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0864568-9b87-434a-a078-6e4a606f1e5b",
        "cursor": {
          "ref": "f1f8aa1b-ec82-4ff1-b2e0-a198065ad456",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ecd295a1-4a62-4ab1-87d8-8d55dc765334"
        },
        "item": {
          "id": "c0864568-9b87-434a-a078-6e4a606f1e5b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "15cad827-8f0b-488f-9d08-2f4cc6182ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a931b06d-93cf-4ee5-a888-d6cf50cc89b8",
        "cursor": {
          "ref": "e1c0a3d7-97d7-4aa2-854c-a5c6a514b493",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5024c667-091a-49a7-a015-3d61a87017fd"
        },
        "item": {
          "id": "a931b06d-93cf-4ee5-a888-d6cf50cc89b8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "35141fe0-1dcb-45a2-afc6-2efff5756b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02f52ff-8965-4c12-97c0-c20f04577130",
        "cursor": {
          "ref": "8295b88f-ea71-4804-bf35-83984989f7e6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "42922ec2-9042-4799-a577-84e9351911fa"
        },
        "item": {
          "id": "e02f52ff-8965-4c12-97c0-c20f04577130",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "69e54f11-eee2-4e92-a294-0e2dd0789fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c2b030-244c-4a7b-80c1-89f1a00a3268",
        "cursor": {
          "ref": "87b34bb4-fbfe-4858-9c3d-40681585b5a3",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "12087fb0-0655-4c30-b0a4-774217f38636"
        },
        "item": {
          "id": "00c2b030-244c-4a7b-80c1-89f1a00a3268",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c8906770-6ccb-496f-81c0-662fc9c42620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9e807b-8393-4d86-83c3-f70a4f897c99",
        "cursor": {
          "ref": "bfa3d3ef-1895-4a03-8b3f-f01698029240",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "de6585a4-95fe-4450-a2a3-fb246030eb7e"
        },
        "item": {
          "id": "1f9e807b-8393-4d86-83c3-f70a4f897c99",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c03134dc-1fa2-40f5-a5c5-7a3773771255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a78c740-6ce8-483d-84b6-353d49e5725a",
        "cursor": {
          "ref": "d97a428e-17cf-4a03-b631-248a1233f727",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6c2414fb-59c8-4c97-90ae-72f162b3d7a2"
        },
        "item": {
          "id": "6a78c740-6ce8-483d-84b6-353d49e5725a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "47b8d631-0480-4c00-b882-03af4d2e9e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744aa668-7f66-46db-a32b-46df60a805b8",
        "cursor": {
          "ref": "ad5716aa-aecb-4bc2-8a90-caa34dec6f9b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0e55cef6-de33-4028-b75c-becaf4c686a9"
        },
        "item": {
          "id": "744aa668-7f66-46db-a32b-46df60a805b8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bd91053c-fa47-4ed6-ac8a-e6ad1470c40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bcb1e7-eb43-4869-900b-c0da25ec2a66",
        "cursor": {
          "ref": "42ffbd9b-89d0-4e3e-b0aa-c589265c976a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b57005e2-c87a-46db-941f-0ab6698e30f2"
        },
        "item": {
          "id": "53bcb1e7-eb43-4869-900b-c0da25ec2a66",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "063a5726-6267-4c9b-ac76-268f855d73b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c785efa-b061-4504-b464-bd06d2c66057",
        "cursor": {
          "ref": "162434ed-382e-42cf-b963-9479376fe857",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "51746c96-068c-402c-bf86-01d3597308ed"
        },
        "item": {
          "id": "6c785efa-b061-4504-b464-bd06d2c66057",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "49402ad1-91a3-4c02-a98b-90afaead5177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ff5859-3e15-48aa-9f42-c6cc1d30c984",
        "cursor": {
          "ref": "54b09660-c470-4d2b-90aa-0ee3d378c836",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "68c83f94-f587-4a59-80a8-117d051e6801"
        },
        "item": {
          "id": "f2ff5859-3e15-48aa-9f42-c6cc1d30c984",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "84ffe7cd-31a4-4455-a76a-df8c1100207a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a9bdea-2776-4fcc-92b3-c19e887d3bb3",
        "cursor": {
          "ref": "dfcdfe55-d85d-4e71-8bb3-c278ad8384b0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fc6fad78-6bab-4dbd-9188-f3e3852ded57"
        },
        "item": {
          "id": "49a9bdea-2776-4fcc-92b3-c19e887d3bb3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "af2a82c0-5263-41f2-ab73-17dff42e55bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123693d1-e34a-4a14-a5da-64dac1ce7a59",
        "cursor": {
          "ref": "976bb9b6-9d24-4a0a-9ac2-70c43498ae0a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ae8c9d3c-5060-463a-89ab-e57708b6ebae"
        },
        "item": {
          "id": "123693d1-e34a-4a14-a5da-64dac1ce7a59",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "846890c7-6a97-4fb2-95af-2d7b0bc918c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7741f6c1-aa30-4c68-b7ca-16e6609b80dd",
        "cursor": {
          "ref": "98528534-504b-4813-90cb-c496a733c9e4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d772fba9-c366-4a82-8b4a-8174708d3ae6"
        },
        "item": {
          "id": "7741f6c1-aa30-4c68-b7ca-16e6609b80dd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bff764f2-286b-41d1-8ff9-14f4be424e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ac4e6c-c1d6-4aa6-b201-ad70ca75b813",
        "cursor": {
          "ref": "724c48b2-c3f5-4feb-80db-6cb0e53a45ea",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a16738c8-1653-48a9-8915-ed2f2974534b"
        },
        "item": {
          "id": "11ac4e6c-c1d6-4aa6-b201-ad70ca75b813",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "62171f54-5a5a-4009-8b3b-01aa05b4ec86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e708867-e33e-49a0-beb6-1ad7ff22f290",
        "cursor": {
          "ref": "b14082e6-7a78-43d8-9336-a2b73ee4f6d7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e8abf96d-662a-468d-b285-9f7982b5401e"
        },
        "item": {
          "id": "4e708867-e33e-49a0-beb6-1ad7ff22f290",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a2b33e6a-03a3-4c78-b4fb-d21085ff5547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdf4aad-9ea3-446c-9453-ee5ed33df914",
        "cursor": {
          "ref": "d733ac5a-05bb-410d-b00f-9e1039e5f986",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b5ff8e51-489a-4ab9-996b-df873c7d413e"
        },
        "item": {
          "id": "3cdf4aad-9ea3-446c-9453-ee5ed33df914",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e0f147f9-0be0-49df-977e-74e41d2c762f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3021a2-70da-4335-97c2-d0c8dae4faf8",
        "cursor": {
          "ref": "a934cc7e-02d4-4d22-9b33-2919c9dd1617",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "519affae-f5ce-434d-b954-6aee67abc51f"
        },
        "item": {
          "id": "6b3021a2-70da-4335-97c2-d0c8dae4faf8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b6d36f07-ee93-4390-8a13-9e02b3ff7285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d19d28d-2859-4961-b1d4-07462ccf5c49",
        "cursor": {
          "ref": "94f347db-b61a-4ff6-8b49-ac7bee614a76",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d20f4e86-793d-4742-80c7-c7b98f7f3668"
        },
        "item": {
          "id": "9d19d28d-2859-4961-b1d4-07462ccf5c49",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "745f8deb-9973-440e-8b55-508b4fd1d2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2dcb6f-f90d-4a91-b7e7-61582aac0cda",
        "cursor": {
          "ref": "64b9cc26-5530-42ee-b694-639d996460f8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "029f531e-6a8c-4a80-bba2-284c0641a13d"
        },
        "item": {
          "id": "5e2dcb6f-f90d-4a91-b7e7-61582aac0cda",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6c17f11f-44fc-4b47-b771-c6927d2e5dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0731b50-b6d3-4f7f-8792-76f10212169e",
        "cursor": {
          "ref": "356d7560-8c60-411c-898f-540b24d02e91",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "73e32c3b-61f2-4b01-a14d-eeb92a47a8c5"
        },
        "item": {
          "id": "a0731b50-b6d3-4f7f-8792-76f10212169e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2bcf5749-28cb-4539-90ac-9dd5d874e5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb00157-7600-4f4c-90aa-adc7b9169fbd",
        "cursor": {
          "ref": "38c939d6-6e4b-4240-86b7-29bc7134cf5d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "56ab3b73-9c0b-4b37-bb4e-92719495cd1f"
        },
        "item": {
          "id": "3eb00157-7600-4f4c-90aa-adc7b9169fbd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d411df18-9304-4ed7-b292-7ba2783f5520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1114c88e-1e3f-4295-afd7-d8b809393352",
        "cursor": {
          "ref": "56771340-1a64-4943-9d72-5a2cdda559eb",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b9d0bddf-d301-48af-baa4-eb7e30fc717d"
        },
        "item": {
          "id": "1114c88e-1e3f-4295-afd7-d8b809393352",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5e4f2ed8-dbcd-48c8-8990-88d5effe141f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d48a2b-2c63-4ece-bbe3-2d4194910e90",
        "cursor": {
          "ref": "ff3a0666-ca45-4c5f-a196-fe42af7adbfe",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d59ca76a-64b2-4fb9-a18f-acab5c66a359"
        },
        "item": {
          "id": "07d48a2b-2c63-4ece-bbe3-2d4194910e90",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a83a9f23-edcd-473d-a4ba-c0af546e3559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172eadde-b8bc-4e86-b064-14365ee1180e",
        "cursor": {
          "ref": "0845e3fc-0731-4f88-a8f3-ffab7c01554e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4b382024-5d8a-446b-8689-51029b0d5ff1"
        },
        "item": {
          "id": "172eadde-b8bc-4e86-b064-14365ee1180e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dac031db-f02d-4501-b968-20d15e09f1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efff8f8c-7346-44d8-8378-e6bd2294a457",
        "cursor": {
          "ref": "892ffc3b-9d4e-463a-9bda-fd0308a230ff",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "053f2078-7f03-412f-a066-953b714539d6"
        },
        "item": {
          "id": "efff8f8c-7346-44d8-8378-e6bd2294a457",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "033e9d72-854a-4a23-b4bd-083ce63fba39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd45bd7b-e016-4c46-a438-4a86bc0f0c41",
        "cursor": {
          "ref": "f91e37eb-aee0-4d8a-b18e-47e552150fe8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "21648626-78fc-4c4f-8cea-9f470b302971"
        },
        "item": {
          "id": "fd45bd7b-e016-4c46-a438-4a86bc0f0c41",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d81beb1c-bfdc-412a-9127-b5e663644986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1958432d-3ceb-49c1-9a51-e1f6365ffae5",
        "cursor": {
          "ref": "bf1584ad-0f9e-49ad-ac89-9c98c9707491",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f74d4680-8696-4186-a513-b404fe8bd6df"
        },
        "item": {
          "id": "1958432d-3ceb-49c1-9a51-e1f6365ffae5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "36d5a233-0046-43e0-8f9b-8cb1c6942476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbe299b-67d8-4143-930b-27cf63f33724",
        "cursor": {
          "ref": "d4817e71-354d-44dd-bf8f-0e5ea0e96ef4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7cc9de18-3c34-4ec7-a32e-919cef13a52d"
        },
        "item": {
          "id": "bfbe299b-67d8-4143-930b-27cf63f33724",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6d805002-e377-4735-8515-e93c8be97154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d7cb9d-6b04-4547-afb5-6d9baf97c496",
        "cursor": {
          "ref": "1e81bb07-b69f-40a6-9c76-cbb167617e3f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "567215fc-ea81-42c4-9448-723857fa8a5b"
        },
        "item": {
          "id": "95d7cb9d-6b04-4547-afb5-6d9baf97c496",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3d70ca50-5c68-403b-8c08-bbe11ccb12db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8bb8bd-20a4-46c3-b246-1e8bc9430fc7",
        "cursor": {
          "ref": "e8f72d21-aff1-4c3d-98e2-6765ac5e158f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "29b3fbf5-8fa5-409f-89d8-5ab3035daff6"
        },
        "item": {
          "id": "0d8bb8bd-20a4-46c3-b246-1e8bc9430fc7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1e3e5b2a-4e79-4c8c-bd9d-9de7a1e5c934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfb017e-eb87-4f7a-aad6-4e84d2f3fda0",
        "cursor": {
          "ref": "eb56a75f-13e6-482f-8195-6e6665371175",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "882ed2cb-f6ae-47ae-b22e-87bde4ac6aa2"
        },
        "item": {
          "id": "8dfb017e-eb87-4f7a-aad6-4e84d2f3fda0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c2000ea1-282c-4242-bfd4-2d7a2621e11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bf4a0d-c783-483f-b425-210bef531a50",
        "cursor": {
          "ref": "be191f87-5201-4a14-9706-1446dc7ac2a4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3e5b9379-32a8-4a24-8d29-3a60c1b54d5c"
        },
        "item": {
          "id": "34bf4a0d-c783-483f-b425-210bef531a50",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b8f6594a-dc1f-4c0c-9562-ffa19989fc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba701bb-3375-44ec-85da-45947e3648a1",
        "cursor": {
          "ref": "9f6aa8dc-2ca2-4cb6-bc67-a433d66de001",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d5f30fd2-8e8f-4475-8122-831808bd5d71"
        },
        "item": {
          "id": "8ba701bb-3375-44ec-85da-45947e3648a1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4db3c54e-d725-4b0b-9ca8-9a2e6d1a1429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead79b73-b833-4e21-ac72-85e644fe3435",
        "cursor": {
          "ref": "4d390d4e-bbf8-4064-9676-0a94863fa8b0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9f97f601-46f8-4ee7-811c-b2a8155f34dc"
        },
        "item": {
          "id": "ead79b73-b833-4e21-ac72-85e644fe3435",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "567177c5-574f-479c-8e85-81f4e5fa1893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3c592f-bddf-4521-9658-b238adfcfdea",
        "cursor": {
          "ref": "ed2d0251-63a4-46be-a5df-433b67191933",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6d3196ee-9edb-42cd-8fc8-73798a9ea5ad"
        },
        "item": {
          "id": "6b3c592f-bddf-4521-9658-b238adfcfdea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ad9c8d3c-462b-4b18-9bc7-ce7beb48375c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429cd78d-e1a6-4608-9dbf-72e5d7dac407",
        "cursor": {
          "ref": "27255cfe-269d-4cf2-81ca-f8cb37ac5eeb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e49847ff-d6e4-4bd6-ae3e-801b9850a6ec"
        },
        "item": {
          "id": "429cd78d-e1a6-4608-9dbf-72e5d7dac407",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "59486b6e-4fee-4af6-85b5-c3f85673b435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a19aabe-fff5-43c0-8059-12952cc58d66",
        "cursor": {
          "ref": "ac6c968b-9957-41ec-a606-a0193cb9cc3c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "db2f766b-0369-4804-a025-4708d45889eb"
        },
        "item": {
          "id": "1a19aabe-fff5-43c0-8059-12952cc58d66",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8c0562cd-f92e-491b-a0c9-30af7846d3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2c62c0-8858-4470-bf2e-0f06fba84446",
        "cursor": {
          "ref": "a66a098f-7122-4fcd-88e6-c5e0714e7b61",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "52537979-087b-4872-b344-6913e1f7924f"
        },
        "item": {
          "id": "9a2c62c0-8858-4470-bf2e-0f06fba84446",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "111285c4-42e5-4142-941f-5e364eaa09d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc6f2bb-ece9-4736-998c-c8f3518801f7",
        "cursor": {
          "ref": "e7626b41-d992-4317-94da-f79439496c04",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43a9a290-314d-464e-b9a0-f6d93e7a542d"
        },
        "item": {
          "id": "9dc6f2bb-ece9-4736-998c-c8f3518801f7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "df3ec8c3-2d63-47a1-a814-07c412aa5857",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c32cb6c-05f0-4c41-bca6-f3b2842d4538",
        "cursor": {
          "ref": "13bad22b-bf7f-430d-a370-fcc714fac534",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c4d9ce9a-840b-470b-996b-c244d43946b2"
        },
        "item": {
          "id": "1c32cb6c-05f0-4c41-bca6-f3b2842d4538",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8f1b9432-db4a-467b-8da0-078e93088907",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec7b8f8-a44a-4093-90cc-1dc983f11fb9",
        "cursor": {
          "ref": "d2898f92-8b2c-4df4-9aee-d42d3f54dff1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4f9d0c77-c0be-44de-8c42-1ec0a6eecfdb"
        },
        "item": {
          "id": "3ec7b8f8-a44a-4093-90cc-1dc983f11fb9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ec3d87b2-a8ae-4538-91f1-80dcbf8d9514",
          "status": "OK",
          "code": 200,
          "responseTime": 2408,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f5af31-9889-4de2-9d07-9ef6ca49acb4",
        "cursor": {
          "ref": "10a38e0a-faff-45a4-8f97-057885915565",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e2b6c6d2-ff4e-4844-bc17-82d2e8be0cd2"
        },
        "item": {
          "id": "82f5af31-9889-4de2-9d07-9ef6ca49acb4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6a012336-4062-4b51-98e5-016650813cd0",
          "status": "OK",
          "code": 200,
          "responseTime": 5424,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "27724949-db4a-4241-a798-da40c8b384df",
        "cursor": {
          "ref": "8aa8d5bf-666b-455e-9c37-77913ed8f6d2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bcbf44bf-3a01-4425-bcb4-358db9b070a5"
        },
        "item": {
          "id": "27724949-db4a-4241-a798-da40c8b384df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "883a6ebf-4111-4a58-8d64-32cf20c2b46c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27724949-db4a-4241-a798-da40c8b384df",
        "cursor": {
          "ref": "8aa8d5bf-666b-455e-9c37-77913ed8f6d2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bcbf44bf-3a01-4425-bcb4-358db9b070a5"
        },
        "item": {
          "id": "27724949-db4a-4241-a798-da40c8b384df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "883a6ebf-4111-4a58-8d64-32cf20c2b46c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3ddb03-aef6-4465-950c-3eba129dd6ed",
        "cursor": {
          "ref": "fc53380b-aa69-4815-a14f-2fc78ec8095d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "89080dc0-a83b-403f-ac83-7594b5d7dc4e"
        },
        "item": {
          "id": "4b3ddb03-aef6-4465-950c-3eba129dd6ed",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9443dcb7-6649-4fcf-93a3-7a8c0daca408",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e54c48-bad8-4a75-bd99-6b592ace97bd",
        "cursor": {
          "ref": "97ae7d6c-5907-4d48-b278-8e8ff6db3565",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d12756b7-7c6b-49d6-82a2-b79211aa5fe8"
        },
        "item": {
          "id": "b5e54c48-bad8-4a75-bd99-6b592ace97bd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "621cf408-95ab-49ec-9684-85f6ab876390",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}